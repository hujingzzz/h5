[{"__type__":"cc.EffectAsset","_name":"LightLine","techniques":[{"passes":[{"blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"program":"LightLine|LightLine-vs|LightLine-fs","properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"value":[0.2],"type":13},"speed":{"value":[0.5],"type":13},"amp":{"value":[1.2],"type":13},"resolution":{"value":[360,100.5],"type":14},"phase":{"value":[10],"type":13},"time":{"value":[0.5],"type":13}}}]}],"shaders":[{"hash":3197382159,"glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n\n  vec4 cc_screenSize;\n\n  vec4 cc_screenScale;\n\n  vec4 cc_nativeSize;\n\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n\n  vec4 cc_exposure;\n\n  vec4 cc_mainLitDir;\n\n  vec4 cc_mainLitColor;\n\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\n\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n\n","frag":"\nprecision highp float;\n\n#if USE_ALPHA_TEST\n  \n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  }\n#endif\n\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\n\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\n\nin vec4 v_color;\n\nuniform ARGS{\n  float speed;\n  float amp;\n  float phase;\n  float time;\n};\n\nuniform ARGS1{\n  vec2 resolution; \n};\n\nuniform sampler2D texture;\n\nvoid main () {\n  float x = -0.2 * 6.;\n  float y = -0.2 * 3.;\n\n  vec2 p = ( gl_FragCoord.yx / resolution.yx ) - 0.2;\n\n  float sx = (y)*0.8 * sin( 10.0 * (x) * (p.x-phase) - 5. * (speed)*time );\n  \n  float dy = 4. / ( 30. * abs(3.9*p.y - sx - 1.2));\n  \n  vec4 c = vec4( (p.x  + 0.4) * dy, 0.3 * dy, dy, 3.0 );\n  float a = 1.0;\n  if(c.r < 0.95 || c.g < 0.95 || c.b < 0.95) {\n    a = 0.;\n  }\n\n  gl_FragColor = vec4( (p.x +  0.4) * dy, 0.3 * dy, dy, a );\n}\n\n"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\n\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n\n","frag":"\nprecision highp float;\n\n#if USE_ALPHA_TEST\n  \n  uniform float alphaThreshold;\n#endif\n\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\n\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\n\nvarying vec4 v_color;\n\nuniform float speed;\nuniform float phase;\nuniform float time;\n\nuniform vec2 resolution;\n\nuniform sampler2D texture;\n\nvoid main () {\n  float x = -0.2 * 6.;\n  float y = -0.2 * 3.;\n\n  vec2 p = ( gl_FragCoord.yx / resolution.yx ) - 0.2;\n\n  float sx = (y)*0.8 * sin( 10.0 * (x) * (p.x-phase) - 5. * (speed)*time );\n  \n  float dy = 4. / ( 30. * abs(3.9*p.y - sx - 1.2));\n  \n  vec4 c = vec4( (p.x  + 0.4) * dy, 0.3 * dy, dy, 3.0 );\n  float a = 1.0;\n  if(c.r < 0.95 || c.g < 0.95 || c.b < 0.95) {\n    a = 0.;\n  }\n\n  gl_FragColor = vec4( (p.x +  0.4) * dy, 0.3 * dy, dy, a );\n}\n\n"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"],"binding":0},{"name":"ARGS","members":[{"name":"speed","type":13,"count":1},{"name":"amp","type":13,"count":1},{"name":"phase","type":13,"count":1},{"name":"time","type":13,"count":1}],"defines":[],"binding":1},{"name":"ARGS1","members":[{"name":"resolution","type":14,"count":1}],"defines":[],"binding":2}],"samplers":[{"name":"texture","type":29,"count":1,"defines":[],"binding":30}],"dependencies":{},"name":"LightLine|LightLine-vs|LightLine-fs"}]},{"__type__":"cc.Material","_name":"LightLine","_effectAsset":{"__uuid__":"49LtKSbfBDEJDjCgLUr64K"},"_defines":{"USE_TEXTURE":true,"USE_ALPHA_TEST":false},"_props":{}}]