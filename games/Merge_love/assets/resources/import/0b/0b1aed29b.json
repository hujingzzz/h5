[1,["a6G25+7MhMaZbFnnO9VO5E","f54XhulSxMLI72FAcf+3gp","6fgBCSDDdPMInvyNlggls2","36PIjZDQFHiZWjwRGOBr4h","50Xr8fAzpEHKarzlHME5d0","9dGaUtSYFKJrbnpMLukdJf","d1XSxyZwVEKqbG8JddS81S","55JkjkNqdA96LcckzfRioO","0dGnVM6TlDiLm1CP9ya4hZ"],["node","_parent","_effectAsset","root","temp_mask","imgNode","img","data","_defaultClip","mater_light","mater_unShadow"],[["cc.Node",["_name","_groupIndex","_active","_prefab","_children","_components","_trs","_parent","_contentSize","_anchorPoint"],0,4,2,9,7,1,5,5],["cc.PrefabInfo",["fileId","root"],2,1],["cc.AnimationClip",["_name","_duration","curveData","events"],-1],["cc.Material",["_name","_techniqueData"],1],["cc.Prefab",["_name"],2],["158adH/co1MSpdOXLvFVbey",["node","img","imgNode","temp_mask","mater_light","mater_unShadow"],3,1,1,1,1,6,6],["cc.Sprite",["node","_materials"],3,1,3],["cc.Animation",["node","_clips","_defaultClip"],3,1,3,6],["38dd37exNtFYoVo4f8yzlre",["node"],3,1],["b0b46KSp1pK6KPdEVc5dGME",["node"],3,1],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[1,0,1,2],[6,0,1,1],[3,0,1,3],[4,0,2],[0,0,1,4,5,3,6,3],[0,0,5,3,2],[0,0,7,4,3,6,2],[0,0,4,3,8,9,6,2],[0,0,7,5,3,8,9,2],[0,0,2,7,4,3,3],[5,0,1,2,3,4,5,1],[1,1,1],[7,0,1,2,1],[8,0,1],[9,0,1],[2,0,1,2,4],[2,0,1,3,2,5],[10,0,1,2,4]],[[[[2,"Unshadow",{"0":{"props":{"u_float_6":0.8},"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[2],[1]],[[[3,"temp_furniture"],[4,"temp_furniture",1,[-6,-7],[[10,-5,-4,-3,-2,7,8]],[11,-1],[0,0,476.3139720814413,0,0,0,1,1,1,1]],[5,"img",[[1,-8,[0]],[12,-9,[2,3,4,5],1],[13,-10]],[0,"e18yb+f3NFQp7klWb3EbjC",1]],[6,"imgNode",1,[2],[0,"46U1Ms0QRMaa7cVsVRZA4S",1],[0,0,476.3139720814413,0,0,0,1,2,2,1]],[7,"mask",[-11],[0,"deS44sgzpFrLcB94iTm7fh",1],[5,1734,915],[0,1,0.5],[866,0,0,0,0,0,1,1,1,1]],[8,"img",4,[[1,-12,[6]],[14,-13]],[0,"b8e5nRPrBG7JBZIBi0hP3G",1],[5,1732,915],[0,1,0.5]],[9,"temp",false,1,[4],[0,"aeV2O/Md9KkqOSb8xeQn5s",1]]],0,[0,3,1,0,4,4,0,5,3,0,6,2,0,0,1,0,-1,3,0,-2,6,0,0,2,0,0,2,0,0,2,0,-1,5,0,0,5,0,0,5,0,7,1,2,1,3,4,1,6,13],[0,0,0,0,0,0,0,0,0],[-1,8,-1,-2,-3,-4,-1,9,10],[2,0,3,0,4,5,6,7,8]],[[[15,"furniture_jump",0.6,{"paths":{},"comps":{},"props":{"active":[{"frame":0,"value":true},{"frame":0.15,"value":true}],"scaleY":[{"frame":0.15,"value":0},{"frame":0.45,"value":1.22},{"frame":0.5166666666666667,"value":1.1},{"frame":0.5666666666666667,"value":0.95},{"frame":0.6,"value":1}],"scaleX":[{"frame":0.15,"value":0},{"frame":0.3333333333333333,"value":0.1},{"frame":0.45,"value":0.3},{"frame":0.5166666666666667,"value":1.1},{"frame":0.5666666666666667,"value":0.95},{"frame":0.6,"value":1}]}}]],0,0,[],[],[]],[[[16,"furniture_jump_up",0.9166666666666666,[{"frame":0.6666666666666666,"func":"downEnd","params":[]}],{"paths":{},"comps":{},"props":{"active":[{"frame":0,"value":true},{"frame":0.05,"value":true}],"scaleY":[{"frame":0.05,"value":0},{"frame":0.35,"value":1.22},{"frame":0.4166666666666667,"value":1.12},{"frame":0.45,"value":0.95},{"frame":0.48333333333333334,"value":1},{"frame":0.6666666666666666,"value":1},{"frame":0.75,"value":0.9},{"frame":0.8166666666666667,"value":1.1},{"frame":0.8666666666666667,"value":1.05},{"frame":0.9166666666666666,"value":1}],"scaleX":[{"frame":0.05,"value":0},{"frame":0.23333333333333334,"value":0.1},{"frame":0.35,"value":0.3},{"frame":0.4166666666666667,"value":1.12},{"frame":0.45,"value":0.95},{"frame":0.48333333333333334,"value":1},{"frame":0.6666666666666666,"value":1},{"frame":0.75,"value":1.1},{"frame":0.8166666666666667,"value":0.9},{"frame":0.8666666666666667,"value":0.95},{"frame":0.9166666666666666,"value":1}],"y":[{"frame":0,"value":0},{"frame":0.11666666666666667,"value":-4.857},{"frame":0.35,"value":50},{"frame":0.5833333333333334,"value":50},{"frame":0.6666666666666666,"value":0},{"frame":0.75,"value":-9.071},{"frame":0.8166666666666667,"value":2.986},{"frame":0.8666666666666667,"value":0.058},{"frame":0.9166666666666666,"value":0}]}}]],0,0,[],[],[]],[[[17,"UnShadow",[{"hash":2588128839,"record":null,"name":"UnShadow|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\n#if USE_TEXTURE\n    in vec2 a_uv0;\n    out vec2 v_uv0;\n#endif\nin vec4 a_color;\nout vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}","frag":"\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  #if USE_TEXTURE\n      in vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  in vec4 v_color;\n  uniform Constant {\n  float u_float_6;\n};\n  vec4 c_TextureToRGBA_main_3(vec2 UV, sampler2D Texture) {\n    return texture2D(Texture, UV);\n}\nbool c_GreaterEqual1_main_8(float InputA, float InputB) {\n    return (InputA >= InputB);\n}\nfloat c_Discard1_main_5(float Input, bool Predicate) {\n    if (Predicate) {\n        return Input;\n    }\n    else {\n        discard;\n    }\n}\nvec4 c_4To4_main_7(float InputA, float InputB, float InputC, float InputD) {\n    return vec4(InputA, InputB, InputC, InputD);\n}\nvec4 c_Output_main_1(vec4 Color) {\n    return Color;\n}\nvoid main()\n{\n    vec4 out_Color_TextureToRGBA_3 = c_TextureToRGBA_main_3(v_uv0, texture);\n    float out_r_TextureToRGBA_3 = out_Color_TextureToRGBA_3.r;\n    float out_g_TextureToRGBA_3 = out_Color_TextureToRGBA_3.g;\n    float out_b_TextureToRGBA_3 = out_Color_TextureToRGBA_3.b;\n    float out_a_TextureToRGBA_3 = out_Color_TextureToRGBA_3.a;\n    bool out_Output_GreaterEqual1_8 = c_GreaterEqual1_main_8(out_a_TextureToRGBA_3, 0.8);\n    float out_Output_Discard1_5 = c_Discard1_main_5(out_a_TextureToRGBA_3, bool(out_Output_GreaterEqual1_8));\n    vec4 out_Output_4To4_7 = c_4To4_main_7(out_r_TextureToRGBA_3, out_g_TextureToRGBA_3, out_b_TextureToRGBA_3, out_Output_Discard1_5);\n    gl_FragColor = c_Output_main_1(vec4(out_Output_4To4_7));\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\n#if USE_TEXTURE\n    attribute vec2 a_uv0;\n    varying vec2 v_uv0;\n#endif\nattribute vec4 a_color;\nvarying vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}","frag":"\n  precision highp float;\n  #if USE_TEXTURE\n      varying vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  varying vec4 v_color;\n  vec4 c_TextureToRGBA_main_3(vec2 UV, sampler2D Texture) {\n    return texture2D(Texture, UV);\n}\nbool c_GreaterEqual1_main_8(float InputA, float InputB) {\n    return (InputA >= InputB);\n}\nfloat c_Discard1_main_5(float Input, bool Predicate) {\n    if (Predicate) {\n        return Input;\n    }\n    else {\n        discard;\n    }\n}\nvec4 c_4To4_main_7(float InputA, float InputB, float InputC, float InputD) {\n    return vec4(InputA, InputB, InputC, InputD);\n}\nvec4 c_Output_main_1(vec4 Color) {\n    return Color;\n}\nvoid main()\n{\n    vec4 out_Color_TextureToRGBA_3 = c_TextureToRGBA_main_3(v_uv0, texture);\n    float out_r_TextureToRGBA_3 = out_Color_TextureToRGBA_3.r;\n    float out_g_TextureToRGBA_3 = out_Color_TextureToRGBA_3.g;\n    float out_b_TextureToRGBA_3 = out_Color_TextureToRGBA_3.b;\n    float out_a_TextureToRGBA_3 = out_Color_TextureToRGBA_3.a;\n    bool out_Output_GreaterEqual1_8 = c_GreaterEqual1_main_8(out_a_TextureToRGBA_3, 0.8);\n    float out_Output_Discard1_5 = c_Discard1_main_5(out_a_TextureToRGBA_3, bool(out_Output_GreaterEqual1_8));\n    vec4 out_Output_4To4_7 = c_4To4_main_7(out_r_TextureToRGBA_3, out_g_TextureToRGBA_3, out_b_TextureToRGBA_3, out_Output_Discard1_5);\n    gl_FragColor = c_Output_main_1(vec4(out_Output_4To4_7));\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_TINT","type":"boolean","defines":[]}],"blocks":[{"name":"Constant","binding":0,"members":[{"name":"u_float_6","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"UnShadow|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"u_float_6":{"type":13,"value":[0.8]}}}]}]]],0,0,[],[],[]]]]