function _0x284e() {
    var e = ["formatTime", "xt.png", "QLanguage", "mData", "iconName", "taItems: ", "MultiPath", "stamina.pn", "middle", "lotteryWei", "curJcdlLis", "SetCheckSt", "linearOut", "_reviveSuc", "idthRatio", "elUp", "closeRecor", "ui_com.atl", "loadSubpac", "Single", "null", "mInfoBg.pn", "dle", "AUTO_START", "lblResidue", "开启宝箱获得奖励", "CountBeOff", "laya.displ", "../data/QG", "QInvitePla", "Label,lblR", "ureLibrary", "kefu", "Msg", " curTime :", "UI_GongZho", "deSteps", "请连接网络后再试", "pty", "T_CONNECTE", "操作 +15%", "ventTypeUs", "src/framew", "convertScr", "point4", "createGame", "getFreeHin", "LIST_BOX_W", "curRollInd", "bine/1_000", "playBgm", "setSoundSt", "freshShowP", "reLibraryS", "showOrigin", "official2.", "shareSucce", "eToMiniPro", "MOUSE_MOVE", "r.cn", "Error11111", "ssHandle", "linearNone", "ameTime", "Callback", "TipUp", "onfigDone ", "gainLabel.", "ReceiveBtn", "flash2", "needLevelG", "ult_img_ti", "loadCfgTyp", "controlSta", "initGameCo", "ank", " 免费获取 !", "UI_Loading", "shdkfj", "Cfg", "flash3", "isShowJcdl", "txtConfirm", "btnReturn", "freshGuide", "me_img_gem", "Arrow_down", "Lattery", "reakCfg", "om_bg.png", "查看失败", "vec3ToStr", "hLevel", "Prefix", "windowWidt", "gameResult", "tipRedPoin", "godain", "pivot", "ycleNum", "removeAllU", "已经是最后一人了!", "freshBoxSt", "Name", "ionList", "GainTopLin", "IN_NEWBIE_", "tamina", "addTipBtn", "60,80,51,8", "ticket_get", "UserInfoBt", "levelUpInt", "addTimeBtn", "16,7,17,9", "listShowBa", "leGet.png", "lottery_tx", "CarInfoCfg", " isTodayFi", "Multiple", "mond", "DataError", "rewardBox1", "StaImage", "eShareOrVi", "energyCoun", "forEach", "createUI", "isOK", "res/config", "fix", "configPath", "GAME_SIGN", "宝箱开启 invit", "ategy", "erService:", "orbidBtn.p", "cdnFailove", "constructo", "dia_img_co", "awardType", "imgCarIcon", "nst", "ssage", "mouseDownY", "item_attr", "_img_stami", "ework/QSeq", "mit", "ssStage", "tlebg.png", "GetTimes", "titial", "reakStage", "diffPicInf", "btnChoiceC", "urTrackId", "e/InviteBg", "addChild", "lightani", "Resume: ", "rder", "eToJson", "leAniTwo", "57,132,52,", "getChildBy", "AnchorTop", "hasUpdate", "adUnitID_B", "/jcdl_chul", "x100", "stateNum", "elResCfg", "authorCode", "uiView", "poolSequen", "banner已显示时", "signbox.pn", "n: ", "Label,lblP", "GiftGetTim", "stringify", "ataByInvit", "Prize", "ogUI", "rewardList", "checkPoint", "Restart", "/rewardx2.", "bannerChan", "showall", "quartInOut", "mitY : ", "showAniLis", "Rotation", "shift", "line", "wRes", "ssCallback", "Sprite,yun", "tBtn", "realHeight", "30,30,30,3", "shareOrVid", "endBoxDial", "gzhSchemeT", "rogress2.p", "SHARE_FAIL", "leCoinAwar", "setBeOffli", "imgHand2", "genFreeBox", "Ani", "imgOriCarI", "evel", "ata", "updateShar", "edTime", "tamTime,lb", "InviteByBo", "uence", "“浮窗”", "InviteTota", "text", "LevelFresh", "onStartVib", "refreshWel", "/btn_bg.pn", "utton", "正在加载资源，请稍候", "gameBoxAni", "isCurLevel", "extraInfo=", "addStamina", "QGameBoxVi", "TryLoadMap", "SOUND", "lotty_btn_", "msg", "lastLotter", "TuyooSDK", "DataByRank", "titlebg", "scaleX", "compress/c", "Animation", "getIsNeedS", "jcdlX", "refreshHan", "Image,btnR", "isAndroid", "ergy.ani", "UI_CommonP", "QEveryGift", "Dot", "xReward", "imgLottery", "banner_url", "successCom", "ed: ", "[E] ", "etStamina,", "UserGuideT", "lblStamiCo", "achievelbl", "scrollBar", "dataView", "tryToGetSu", "eOrVideoCf", "JudeIsShow", "onfigDone", " ------gam", "动态加载完成", "Level ", "diamondIma", "Anim", "QCfgType", "art", "12:12", "UI_AddReve", "awardPoint", "#fdfdfd", "doDestroy", "../view/QB", "../view/QE", "ScoreType", "ltInCantCo", "everyDayCo", "reFreshCar", "playChoice", "removeUI", "imgHand1", "16,28,12,2", "rVideoQuic", "Receive", "boxNewbie", "e/InvitePu", "ner", "regClass", "UI_XiaoChe", "enable", "aminaAward", "revMsgHand", "cessHandle", "filters", " setWxEncr", "InviteFrie", "TCP断开连接", "tiple", "guideConta", "shareValue", "Result", "autoGuideI", "random_wei", "onClickOpe", "1.png", "leLotteryC", "GameGuideD", "isOldPlaye", "imgHelpGet", "modelViewI", "load Confi", "W_DATA", "&sign=", "e.png", "cirShowLis", "ers?count=", "transform", "isOpenDoub", "clickOpenS", "NO_VIDEO_A", "this.scene", "./QEventTy", "minaGift", "compress/d", "jcdlCfg", "headBg.png", "merge", "updateLeve", "PlayerList", "initRankVi", "eviveView", "pop", "yun1", "onClickPic", "cn/ty3d/wx", "rdHintNum", "getNum", "income", "IsShowJcdl", "essTimes", "cdlName", "leAni", "activitySh", "suffix_wav", "compress.a", "lastTime", "UPDATE_VIE", "eckGetTime", "/achieve_1", "instance.c", "successHan", "imesList", "deltaY", "ToShareWay", "bannerBg.p", "tempLength", "once", "sendDiamon", "game_stop", "changeBtnS", "回主页", "setShowXia", "ugh", "放弃领取", "LengthenTi", "QCfgMgr", "showGun", "probabilit", "nGift", "/loading_t", "eption: ", "分享策略2：", "zlk__-领取赠送", "onversatio", "rIndex", "Json", "tion", "UI_BoxDial", "ClearData", "serverIsSk", "X : ", "eData", "enterFourL", "carCfg", "saveAllDat", "_DATA", "oAd", "imgmultipl", "framework", "INISHED", "openSupply", "ceil", "anner", "isFinishSh", "finishFour", "tempListEv", "lblLottery", "listGarage", "tGetTimes", "lblAddTime", "propIconTy", "anchorY", "shed", "delta", "acyToShare", "coseDiamon", "boxCarAni", "removePart", "etTimes", "listItem", "staticBox", "coseStamin", "SoundManag", "RightBox", "addRevenue", "getCurReco", "rewardShow", " executed!", "Center,Anc", "clickRankL", "saveSignIn", "particle", "ddRevenueD", "align", "ount", "ime.png", "loginMessa", "dlName0", "dLbLObj", "07.png", "push", "isVideoPla", "UIRes", "ataDown", "getAwardDo", "imgVideo", "离线奖励上限为2小时", "chorTopLef", "ShowArray", "isWin", "InfoButton", "ClassUtils", "uditVersio", "onClickTha", "com_getCoi", "hideCollec", "Image,imgV", "calLightCi", "creenTime", "showAchiev", "UI_GainCar", "areBtn", "xt_six_des", "IN_EVERY_G", "white.png", "activeShar", "boxNieBie1", "getEveryGi", "getCurGara", "_icon_bg.p", "initParam", "ntAward.pn", "rTrackId", "peedtime.p", "completeRe", "ive", "OnlineTime", "btnGetUser", "tartGame", "得更多金币!", "_img_bg.pn", "layerAY", "&template_", "Stamina ou", " this.resu", "https://3d", "taItems", "right", "ByType", "ntSharetim", "supplyDes", "setSupplyG", "GameBoxDia", " data to l", "erry", "dBoxDialog", "UI_MainPag", " cost: ", "int1.png", "Button,btn", "otteryCoun", "搜索进入：", "showSupply", "setOnePoin", "ui_game/Gu", "tter", "/gain_lbl.", "handler", "refreshUIP", "tamiCount,", "lighter", "show", "lUI", "saveUserDa", "eeeeeeeee", "fxScenePat", "38,74,37,7", "搭木板搭", "D_TRY_SHAR", "_text_free", "me_img_ran", "ServicePow", "ShopPropSh", "getGarageC", "/lbl_bg.pn", "isPlaying", "Collection", "share", "FRESH_SUCC", "imgVideo0", "ceBtn", "nventional", "boxDouble", "LevelTime ", "onClickAdd", "retmsg", "dia_img_nu", "taServer", "shAddTimes", "checkIsCan", "WelfareDia", "refreshLot", "layerAX", "ess", "已完成", "49,54,56,4", "levelTestS", "示次数道具", "listImgBox", "kuang.png", "hare", "ShowTime", "getSetting", "httpReques", "ent1", "mg_god2.pn", "lblAddGold", "row.png", "lt_s10", "lblTime", "lotteryTur", "isLotteryS", "UI_Result", "playAni", "MaxRegainS", "免费金币", "QLoadingVi", "release", "onGameOver", "QSharePara", "BigGlass", "tishitishi", "leAwardSuc", "DoTween", "oMiniGameS", "passTrack", "deltaTime", "lblbg", "RightJcdlS", "successTur", "SupplyMgr", "GiftRankDi", "reward", "abs", "onVersionL", "PassNum", "ui_achieve", "oChengXuDi", "updateGame", "lblGoldNum", ", will set", "loadTime", "irAniByA", "ui_game/ga", "max", "[31m[E] ", "ui_shop/im", "LeaveGameT", "recorderDi", "eCarIsFull", "carId", "_img_datab", "kage", "dMinCoe", "lblSpeedUp", "l share===", "BoxLightAn", "ataUp", "doubleClai", "JSON", "resume", "labelNumAn", "tipsTitle", "clearLoadi", "LOADING_RE", "stJcdl", "ui_home/ho", "wx883fe880", "cNodeArr", "addNormalT", "onGameHide", "logPage", "setGameJcd", "showInvite", "eFreeSuppl", "RankConfig", "carConfig", "en.png", "onChangeGa", "./QUtil", "eventId", "openServic", "FreeGet", "ndex", "showGuideT", "Recorder", "com_icon_v", "DialogUI", "onAwake", "jcdl1", "getErrorTi", "naRegainCo", "ing_small1", "judgeGarag", "CarTimes", "Initiative", "Top", "three", "imgSingleJ", ": 增加游戏内免费提", "econdEarni", "wordWrap", "showBeOffl", "ventType", "nArea", "upplyBox", "INTERACTVE", "replace", "tinuedInde", "ndler", "showJcdlVi", "QXiaoCheng", "clearOnlin", "enterMainP", "CLICK", "refreshEve", "openGainSt", "img3", "imgBuyCarI", "QConst", "47,82,64,6", "none", "dGift", "getAIWxUse", "itleName", "输入要修改的key", "setplayerS", "openCustom", "pullViewJC", "saveMainIt", "reInfo: ", "_btn_yello", "ndBoxDialo", "getErrorNo", "lt13", "upplyTipDi", "exports", "doUIPopAni", "lblOriCarN", "LastTime", "initSlideL", "hideBanner", "isRankView", "game_confi", "asaveStami", "GameViewUI", "ndle", "eBox_3.png", "每邀请", "GainStamin", "onTween1", "getMoreBox", "lt_s4", "eOfflineDi", "adUnitID_V", "refreshAwa", "diamondIco", "reecoin.pn", "5,5,5,5", "taSuccess ", "?gameId=", "garageEarn", "curSelectC", "setMaxLeve", "../view/QX", "setOpenBox", "removeSelf", "iAlign", "indexOf", "kPointUI", "Arrow1", "../data/QB", "aoDialogUI", "123456", "点体力!", "NewCar.png", "GARAGE_FUL", "btnGainDia", "06.png", "grewBg.png", "dia_img_si", "coreMD5", "successGai", "deg2Rad", "ReduceType", "dia_img_bo", "gray", "ZHAwardDia", "DiaLabel", "stage", "setResultD", "availableL", "QUIAnchor(", "TreasureDi", "getLottryT", "VideoShare", "torage", "setAvailab", "btnGongZho", "skiddycar", "lt11", "LV.8", "imes:", "totalTime", "/common/ge", "e/QTcpMgr", "showBanner", "reTitle", "Get", "startScene", "btnInviteF", "ype:", "enterSixLe", "isFinsihGu", "/jcdl_main", "CloneImage", "UI_RankDia", "UI_FloatWi", "ui_game/ti", "market.tuy", "gameOver", "restoreCol", "CarIndex", "lottery_te", "stGame", "curLevel", "load", "lLabel,lev", "splice", "arData", "levelCount", "viteBox.pn", "../view/QS", "QCollectDi", "Box_single", "btnClose", "opHandle", "aniPrizeCo", "getResourc", "ickAni", "FreeLevelU", "setSamePoi", "Get 60s", "imgShare", "rcleRadius", "startTime", "toggle", "BeOfflineD", "翻倍领取", "neGetTimes", "ADD_MONEY", "successMor", "changeLaye", ",1.00) //", "HttpReques", "closeNewUs", "y_Bbottom", "velRes", "render", "NoneTimeCu", "哈哈哈哈哈", "进入客服 成功", "20,20,20,2", "shopBuyCar", "linearInOu", "curTimesDi", "dGiftType ", "UI_BeOffli", "TipsViewUI", "curOneType", "Light", "StandardSc", "ui_effexts", "api/sxlzc/", "PropagateI", "clearTween", "Leave", "k/QUIAncho", "ss : ", "destroy", "rAX : ", "checkDropB", "lastProgre", "nSuccessHa", "oadLight", "setInterac", "pplyTitle.", "doPlayNewB", "eView", "innerLight", "#2d89f0", "me_btn_gre", "istJcdl", "scheduleFu", "E_JCDL_SHO", "share: ", "setLoginBo", "loadSound", " width : ", "apply", "ftFromFrie", "resultDoub", "oCfg", "getIsActiv", "_VIDEO", "TreasureCo", "iple", "QTrackType", "eSharePoin", "yDiamondGi", "ideo1.png", "Label,lblT", "dia_img_op", "rstGame", "ainCount", "QTweenPosi", "isConformV", "_RETURN", "onAuthoriz", "share_pred", "resumeBgm", "title_lbl", "stopMusic", "BoxDirectl", "fRanking", "showInters", " -- dragLi", "listBg", "continueGa", "4723464VKtBFV", "icon", "showClickC", "FilePath", "successDou", "lblImage", "ffLineAwar", "initBuyFlo", "eoShareTim", "_rollingTe", "StartAcc", "cdlHandle", "curGetGift", "blendMode", "OnlineZip", "peOf", "alValue", "cdlList", "mask1.png", "secondLeve", "ShareOrVid", "eRewardDia", "touchScrol", "./QBIEvent", "memeberCou", "meShow", "加载中", "STORAGE_RE", "CONNECT_ST", "DiamondPan", "freshAward", "rtX", "pupX", "cn/diffima", "doEasyBuy", "InvitePoin", "GoldIcon", "aDialogUI", "active", "clearCanva", "title: ", "eMultipe", "executeEnd", "systemType", "owSupplyBo", "stScroll", "Notificati", "slideTime", "sCar", "getFileSys", "containsSh", "step", "carCellBg", "eDialog", "Jcdl", "pageJcdl", "nvitePlaye", "erFail", "ERROR", "InitInvite", "isWinAniFi", "mainLevelS", "enterGameS", "Double", "#f90400", "uan.part", "setCurReco", "content1", "tIndex", "lyStamina", "levelResul", "getWelfare", "UI_OnlineG", "open.png", "nings", "onClickFre", "lblCarName", "#007ACC", "Arrow_Offi", "getMaxLeve", "onClickSli", "lblTimes", "mouseDownX", "yerScoreTy", "bine/light", "ureHint", "#FFCF6B", "CLOSE", "gatherWate", "  shareTyp", "_GAME", "sharePoint", "onClickNex", "dQuicken", "delData", "addLabel", "奖励弹出", "ode", "create", "sultIndex", "headTitle", "视频解锁", "curJcdlInd", "MANUAL_CLO", "tle.png", "program3.p", "ent2", "UI_Welfare", "dTimes", "ieGuide", "isStopReco", "skin", "amondGiftF", "Colse", "lblLevel", "#00ff0000", "wPowerSucc", "箱领取次数：", "guideStep", "meState", "ose", "ideoCfg", "39,32,25,2", "videoAd.on", "lblHintNum", "receiveDia", "#ffdb59", "Script,QUI", "lbltitle", "isOpenNewB", "“右上角三个点”", "StaminaPan", "MODULE_NOT", "istBtn", "mCarLevelC", "reviveShar", "imgNext", "00:00", "leAward", "Local", "zcScene/Co", "curGainDia", "hasLoadedF", "linearIn", "再点击左下角的", "ani3", "cdlIcon1", "isShowBann", "DesignHeig", "onClickDif", "listComDia", "UI_GZHAwar", "ScoreType:", "Url", "b64MD5", "oxInGarage", "baodian_l", "Close", "wel检测登录场景值", "nextLevelB", "ayerUserIn", "ptionsSync", "ndGiftFrom", "visible", "lv: ", "levelResPa", "gzhStamina", "coreVideoS", "ipNodeAni", "annerJcdlI", "showWxToas", "mergeCarAn", "day", "tBgY", "mg_god3.pn", "freshLight", "networkTyp", "listAddGol", "yOutsideGa", "QFreeLevel", "reStartBtn", "todayDiamo", "windowHeig", "sendUserDa", "pixelOffse", "stopSound", "bannerAd", "webpage_id", "w.png", "0,16,0,35", "stop", "GuidePoint", "lootboxOpe", "isGetPlaye", "lbl_return", "  playerSc", "freeCoinSh", "reviveAddT", "lblPassNum", "ftSuccessH", "gainUserIn", "updateChec", "01.png", "imgInviteB", "floatTitle", "point1", "caller", "CHOICE_NEW", "erty", "dia_img_bi", "Set2UIElem", "clientWidt", "../core/QW", "getNextTar", "off", "mes", "src/laya.e", "resultInde", "loatWindow", "../core/QR", "gdata", "pivotX", "setIsGetPl", "Hanle", "ameTimes", "AddType", "imgListJcd", "设置key成功", "---  ", "lblGetText", "rage", "setTimerSc", "data", "REFRESH_WE", "DiaImage", "curCarSpri", "btnLengthe", "ScopeCfg", "int0.png", "object", "hideRecord", "eakCount", "open", "获得成就", "等级：", "StarAni", "lue.", "QUIAnchor", "oxType", "finishSeco", "URL", "isConnecte", "ing_small6", "curRecomCa", "lt3", "IsLevelUpT", "onConfigLo", "&extraInfo", "Update", "jcdlConfig", "doCfgLoadF", "IN_BTN_STA", "Track", "dTrackId", "currentTab", "ity", "defaultLis", "listPageJc", "onGameRest", "&inviteNam", "StateBox", "pushAdVide", "ck.png", "nCollect", "getUIPos", "成功领取", "setBannerS", "QNewResult", "nNum", "_Sound,btn", "attentionG", "Award", "getLaunchO", "costType", "addMsgPara", "eTime", "stopSfx", "tipbg", "RECEIVE_MS", "aminas", "ui_com/com", "supplyBoxI", "arageUnloc", "loop", "lblCoinCou", "wel弹出体力奖励领", "drawBackGr", "getAniInde", "mCarLevelI", "sound_onn.", "kCarLevel", "initRightJ", "setTodayDi", "ZHFailTime", "resultWinA", "NewResultV", " getUserIn", "showCoin", ", url: ", "resultManB", "Label,cont", "onMiniGame", "BoxInGarag", "RankEffect", "updateInvi", "fxPath", "ree.png", "gy.ani", "Vector3", "label", "LightShow", "GiftRankSt", "y_Atop", "GAME_REVIV", "imgShopFre", "setLottery", "tweener_ma", "showModal", "dragRegion", "CollectDia", "clickPoint", "wxAppId", "startGameR", "ementDialo", "#929292", "ui_shop.at", "dia_show_t", "ogInResult", "fakeShareR", "QMD5Util", "Home", "ndow", "imgTop", "waitTime", "rShowTime", "source", "checkAchie", "../data/QE", "lt_s8", "loadFont", "eToVec3", "updateLabe", "showWelfar", "SUB_CAR_ST", "recover", "stamina", "Countdown", "5589970bpCJNM", "btnShare", "tcp 心跳", "eenCoordTo", "eAwardShar", "内输入", "owGoodFini", "Day5", "SER_GUIDE", "UI_Revive", "singleRedD", "邀请界面点击 x:", "NumRollTyp", "oGetThreeA", "../view/QT", "setIsClick", "bgShow", "finishThir", "#3b2f2e", "../core/QG", "staminaNum", "Video", "LOAD_RES_F", "schemeId", "imgHand", "lyDialog", "files", "ChooseLeve", "Level 16", "Image,BtnS", "ESS", "red_point", "dDialog", "GetBeOffli", "ite", "wHintData", "coinMultip", "hasCalcOff", "mask", "reedia.png", "AtlasInfoM", "/icon_ligh", "inputKey", "llectAward", "yCount", "MiniProgra", "showPopUpT", "autoRecove", "pcir.png", "DiamondCfg", "%c[P] ", "Helvetica", "btnMaskBg", "DoubleBtn", "game/view/", "undefined", "[34m[I] ", "resetWelfa", " shareOrVi", "boxTitle", "onCloseSta", "QMainPageS", "检查宝箱状态 Inv", "request", "21.5M", "loadedResT", "resetBtnIc", "textType", "showLoadin", "prototype", "rollValue", "RESULT", "Viewer", "mondNum", "levelUpLea", "w/QGameVie", "l.default.", "getLocalCo", "lblTitle", "addAddSpee", "removeSave", "loadSingle", "signInDays", "floor", "stageX", "UseStamina", "isOpenSupp", "floatPoint", "t: ", "anchorX", "lt8", "UI_Tip", "duration", "ou.png", "iew", "下一关", "神秘奖励", "请前往关注公众号!", "Zero", "checkShare", "once_show", "xiaochengx", "Config", "LayerAMidd", "setGainSta", "dexText", "hitArea", "alShare", "rdState", "请输入有效值", "HaoDialog", "AUTHORIZE_", "ankList", "Btn", "mg_title.p", "boxOpenGai", "isLocal", "Check!", "binl2b64", "getCfgPath", "IconBg", "COMPLETE", "executeOn", "guideOuter", "搭木板大幕", "hareState", "owModelVie", "remove", "success", "rm-urlenco", "pauseGameR", "_completeR", "completeHa", "returnReso", "getResultA", "Failed: ", "esList[e].", "#605F5F", "总共获得：", "gnawardbg.", "spaceX", "/BigGlass.", "charAt", "changeInte", "ideo", "slice", "judgeCompa", "layer", "imgTips1", "copyDataFr", "add", "finishTuto", "alpha", "terLight.p", "countType", "hideLoadin", "generateRe", "program2.p", "rLevel", "LayaScene_", "titletip", "BeOffline", "default", "Show", "IFT_STATE", "serviceTit", "yun2", "JcdTypelVi", "t_bg.png", "WebGL", "imgJcdlIco", "curPass", "QNewLottyD", "sendSceneP", "StartBtn", "Anchor(los", "BelleModel", "com_getDia", "state：", "showAutoJc", "R_PARTICLE", "UI_InviteF", "onClickFly", "addMoney", "ported", "lblTipsTex", "playTime", "esIsEnough", "GiftType", "ytedData s", "State", "tempKey", "lblStamina", "line1.png", "setMessage", "hor.ts", "_score'] :", "Button,nex", "47,68,70,5", "font_", "BeginNumRo", "mentReward", "op_img_lis", "ani1", "Box,Anchor", "loadFx", "laya.effec", "cfg", "checkPosLi", "reeLevelUp", "blackLabel", "initBanner", "https://op", "Sprite,bg", "costNum", "hexMD5w", "../core/QU", "ui_main/gi", "ft_text_hi", "xinliang.p", "-同步数据：", "caleLoadin", "wInfo", "onGameCont", "CoinAwardM", "core", "jiang.png", "nkList", "dia_img_re", "thLevel", "tLevelPass", "btnChoiceL", "Level", "ption: ", "getShareTi", "getSubpack", "color: #00", "las", "stageY", "needLoadAl", "RegisterBt", "GAIN_BY_SH", "#525151", "setKongtou", "creenAdapt", "itleName,l", "curTwoType", "backGround", "先点这里", "_current", "icationCen", "edPointSho", "isShowDial", "flashAni", "showUserIn", "Game", "guideHandU", "GAME_RESTA", "confirm", "InviteBoxS", "先点击", "resultDial", "mouseIsLea", "eckcir.png", "RankGiftAw", "AnchorCent", "jcdlType", "nim", "15,24,27,1", "REV_SERVER", "isLifeFirs", "curEasyBuy", "deoShareTy", "ftRedPoint", "onCenter", "inShopBuyC", "home.png", "邀请有礼", "tiptiptipt", "loader", "boxPic", "extTime", "GameRecord", "getNetwork", "isGetSuppl", "inue", "lt12", "tDialogStr", "clearFakeS", "onClickGet", "parse", "QDailyChec", "./QJcdlTyp", "Num2", "x_left", "您取消了分享，请分享", "owner", "JCDL", "QShopDialo", "needAddIte", "mouseEnabl", "update", "去修仙", "aded", "open/v4/us", "ference", "coinIconSt", "ework/QHtt", "UI_Supply", "dailyDate", "arrCantCon", "dex", "QWelfareRe", "“浮窗图标”", "axTime", "sound_offf", "tate", "ayaMaxUI", "newUserGui", "age", "下次奖励两倍", "wType", "nRedPoint", "Sprite", "usCarThree", "ThreeAward", "QCfgName", "alogUI", "listJcdl", "curGatherP", "unlock_dia", "ateData", "ok.png", "game_conti", "setAttenti", "./QCfgMgr", "#ff0400", "nviteFrien", "playBoxAni", "readHeight", "明天再来吧！", "lRevive", "间隔：", "onGameWin", "gBSG", "garage_gua", "ccessHandl", "setCurNeed", "neCoin", "eSuc", "jcdl4", "IsLastResu", "doUICloseA", "loginUrl", "timeCount", "ndDialog", "mLootbox", "urLeaveTim", "REFRESH_RE", "erRewardDi", "dddddddddd", "SHOW_SUPPL", "/images/le", "dServerDat", "dReducePro", "HidePointN", "eMutipleAw", "clone", "ShowInvite", "getEveryDa", "setSupplyB", "umRange", "inviteBoxT", "graphics", "freeBoxFlu", "CCESS_REFR", "me.png", "bannerBg0.", "UI_BoxRewa", "start", "level", "edCount：", "owmp compl", "ShowGameGu", "flash.png", "! deviceId", "wDialog", "playFxAni", "nTimesFail", "getFinishL", "riend2", "oubleAward", "bgLight.pn", "MAX_LEVEL_", "getVector3", "amina", "guideEnter", "abcdef", "recommendD", "nue", "changeJcdl", "freeVideoS", "isFrameSup", "engji", "icCoord", "defaultSta", "BoxAward", "opy online", "ameData", "rCount", "26.5M", "erNewPlaye", "yNode", "UI_Game", "dicSharePo", "QResType", "erJcdl", "getScreenP", "ing_small3", "icAward", "n.png", "getChildAt", "binl2hex", "onGameShow", "font_2", "onError", "FRESH_INVI", "g.png", "GetStamina", "arnings", "imgRightJc", "openLootbo", "dragWidthL", "oint", "substring", "第00关", "op_img_bg.", "audio", "onMouseUp", "kongtou", "fakeShareW", "onGZHFailT", "finishFift", "finishOneU", "LoadTimeIn", "2.8.0", "horBottom", "yCar", "ctAward", "extraAward", "iteFriend", "minaDialog", "a_show_txt", "car_id", "HINT", "41,22,23,1", "pageListJc", "成功领取奖励!", "curShareBt", "equence", "btnRestart", "delay", "setCurDiam", "openGZHDia", "SpeedUp", "setCurSoun", "tipbtn", "http excep", "coin0.png", "posX", "ext0.png", "QEventType", "vementRewa", "Error0000:", "uiName", "teryIndex", "Panel", "Res", "Start", "QShareType", "459896sCfdCK", "rInfo Fail", "cial.png", "niu.andla.", "listBtn", "res/atlas/", "DailyInfo", "getPlayerI", "RewardEner", "udStorage", "Rank", "todayStami", "noCarData", "=====cance", "setLevelPa", "_STATE", "isOpenGZHD", "frameOnce", "staminaReg", "showSipply", "./GameConf", "ventTypeCl", "zhezhaoA", "getResultM", "ngs", "KLMNOPQRST", "dlIcon0", "/give_up.p", "InStack", "ialogType", "judgeReset", "income_add", "enterServi", "backLight", "imgPro", "gameId", "cells", "[33m[W] ", "cdlIcon2", "FinishLeve", "concat", "ework/QUti", "aminaDialo", "/baokuan.p", "AwardShowB", "Friends", "biReport", "garageCarF", "fixedTimeR", "boxtype", "EveryGiftD", "LOG_TO_HOM", "isStartRep", "curLoadMax", "roll", "UI_Stamina", "getGarageA", "u.default.", "#7e379f", "Share", "QBeOffline", "waitStartT", "cdlIcon", "onSprOpenD", "Car", "isNetworkC", "loadOnline", "lblVersion", "playHandAn", "UVWXYZabcd", "isCfgLoadF", "Scene", "ating", "boxMoreAwa", "ddToken.pn", "rDiamond", "tipLabel", " 路线 2: ", "setGetMore", "localRotat", "doPerMinut", "nkReward", "dlCfg", "freeHintLa", "Event", "ne.ani", "clickGiftR", "mBg.png", "createRewa", "imgRollJcd", "isTimerIni", "CreateLigh", "lblReceive", "freeBoxNum", "imgHintRed", "isEnded", "ght_d", "Lottery", "mina", "hasOwnProp", "lize", "isSearch", "cancelShar", "garageCarD", "emDatas", "AdManager", "uaWei", "uPowerSucc", "onClickBtn", "fillAllSlo", "cdlName2", "Square", "allShareTi", "hasRevServ", "SetMultiUI", "RANK_CHANG", "buyflowsJc", "tnTime", "SHOW_NEWBI", "ConfigAwar", "curChoiceC", "imgGet", "lost)", "aViewByInv", "wXiaoCheng", "eteService", "welfareLis", "this.leveR", "curSoundSt", "e,boxLose", "FlaotWindo", "tip", "ui_game/re", "StarFlash2", "getGZHAwar", "RedPointSh", "evelNum", "aViewByRan", "lt9", "userArea", "emitter", "ption devi", "TopLeft,An", "途游斗地主", " gdata['bi", "hareWay", "ngxiao1.pn", "inasaveSta", "setShareTi", "Add Stamin", "getGuidePo", "wardTimes", "irAni", "saveCoin", "+8.1k/s", "achieveTyp", "olor(", "imeLeave", "shopVideoS", "ented Exce", "ndLevel", "eoCfg", "EventType", "ui_car/", "Duration", "+60s", "dAddCoin", "lv_", "Label,lblA", "bg.png", "lt6", "GongZhongH", "nTicket", "haveGotRew", "friend", "diamond", "bannerRefr", "texture", "Not Implem", "nfigDone", "DrawGuideA", "tutorialSh", "nGarageInd", "jcdlView", "Gun", ", value: ", "isBSG", "onClickBac", "oin", "tNum", "getRandomM", "QMouseType", "UI_EveryGi", "rdedVideoA", "eft", "listHandle", "mesIsEnoug", "showHandCl", "89+/", "RewardCoin", "策略：", "dClickPos", "efection", "Lose", "speedUpCos", "cdlLeftAni", "hScrollBar", "Finished", "ssRate", "dlData", "onClickLot", "shopCarBuy", " shareType", "stShareSta", "elCount", "rdUI", "lastRegist", "recomStrat", "nfo", "er()", "gotSupply", "TopLeft", "showJcdl", "分享失败", "lAwardNum", "ersion", "KongtouSco", "tnFly", "&time=", "MAX_CONFIG", "aniPrizeDi", "aTimes", "ui_com/res", "inviteFrie", "autoJcdlLi", "cloudId", "sqrt", "checkCirLi", "gotLifeTim", "imgProgres", "addtWinnin", "ay.Text", "maskBg", "Sign", "freeLevelU", "../core/QC", "createFree", "ption", "cdl", "break", "buyFlowsjc", "ework/QTwe", "baodian_l3", "annerShowT", "playMusic", "initiative", "/title_bg.", "0,18,0,20", "roomLimit", "dia_text_g", "Microsoft ", "curListMax", "0 -- dragH", "ReviveDial", "ion", "?from=adcr", "clearRes", "beOfflineG", "tAwardShar", "RefreshUI", "secondType", "_AD_FAIL", "D_TRY_LATE", "ininin", "a957", "lotteryGet", "checkMainV", "reconnet", "ui_real_un", "playRecycl", "light", "rankStartX", "blackFilte", "gotoAndSto", "rstLottery", "发送客服登录场景进入", "boxInitPos", "ishedHandl", "frameCalc", "Enabled", "saveAddSpe", "loadServer", "radius", "lblcount", "rRewardDia", " !!!!!!!", "getOnlineC", "gridSel", "LOTTERY_BY", "layerInfo", "e! Please ", "onClickSuc", "#2a3344", "loadingddd", "onWinAniFi", "./QTween", "ngRes", "dicAudioCo", "imgStami", "fakeShareP", "tttttttttt", "eoTurnLott", "game1", "AddInterac", "cessGetDia", "hareOrVide", "layerRewar", "availWidth", "recovery", "Handler", "showJiesua", "strw2binl", "QFlyRes", "imgHint", "nline", "info : ", "0,39,0,43", "random_lev", "clickStat", "Hint", "revive", "ogPageUI", "ward", "NextTime", "rmdir", "eckPointBo", "adNodeObj", "firstWin", "banner err", "../view/QL", "tReward", "scaleY", "game_id=", "efghijklmn", "Param", "51,50,50,5", "isLastestO", "index:", "geGod", "times", "miss", "/get_img.p", "tedCount", "../logic/Q", "46,56,50,7", "ard:", "btnShowJcd", "RedPoint", "alignH", "veTime", "riendBoxDi", "gameBox", "oadUrlForH", "解锁额外奖励", "btnSpeedUp", " icon Url ", "comp/image", "gatherLott", "QDebug", "lt7", "img5", "state", "erson", "oError", "ondGiftAwa", "shareFailS", "sendStamin", "setTipNode", "t.ColorFil", "imgEveryGi", "getFullYea", "964522fLMxRv", "isResLoadF", "gameCfg", "loadAllCfg", "max_time", "checkGameS", "IEvent", "GiftLater", "toPos", "bleDailyCh", "Image,Stam", "lblget", "GainDiamon", "[32m[P] ", "save_data_", "slideBoxIn", "ClickUpPoi", "text_singl", "二维码", "ale", "../../fram", "iledConten", "ui_shop/sh", "#1CA51C", "AddShop", "isterTime", "qn.nalrer.", "u.png", "curThreeTy", "andle", "gameHintTi", "curAwardTy", "马上将你刚买的角色升", "getFreeSha", "showTipNod", "refreshDat", "检测客服弹窗弹出逻辑", "加载中 , 请稍后.", "enBoxText.", "Diamond", "nTimes", "时间：", "unlockNewC", "floatPopAw", "hopDialog", "ina", "tnSwitch", "getLottryS", "compress/b", "clickCarIn", "addCoin", "dSuccessHa", "blue.png", "wmp", "yDialog.sc", "layerScale", "PopCarInMa", "TCPClient", "setRecordG", "btnModel", "ataDrag", "UI_GameGui", "longScreen", "HideFlyBox", "ecorderDia", "gnchoosebg", "addToStage", "isGetColle", "assignValu", "labelSize", "Mask.png", "default.en", "OutsideGar", "api.getUse", ",1.00) = n", "hide", "setCurShar", "UI_GainDia", "eturn,btnR", "lotteryAdd", "elasticOut", "lastPlayer", "_DIS", "useReviveI", "Font", "ThanksBtn", "&user_id=", "jcdl2", "#131325", "elLabel", "isAllCfgLo", "GetDataSuc", "lblRoleLev", "请添加到我的小程序!", "propIconPa", "getCommonB", "erGuide", "50,50,50,5", "signedNum", "eaveGameTi", "backBtn", "ataByIndex", "dropBoxLev", "48,59,56,6", "moneyType", "WidthRatio", "levelLabel", "reviveSucc", "--------- ", "dia_img_ti", "startGame", "videoAd", "  type:", "listShopPr", "oxRedPoint", "VIDEO", "aiUserInfo", "QCommonVie", "inviteCode", "JcdlIconBy", "isStartGam", "post", "Text", "setWelfare", "ework/QEve", "getCoinNum", "将您本局的操作以视", "Tips", "IMgr", "updateNewU", "ameMgr", "ui_car.atl", "_gold_leve", "setIsFirst", "gram succe", "coseCoin", "eVideoShar", "nBanner", "检测宝箱状态 :", "sk,imgProg", "lootboxSho", "修改玩家互动数据 ：", "deoShareIn", "ing_small7", "22,46,0,53", "invitedCou", "handPosY", "playerScor", "ull", "UI_KeFuDia", "getDataFro", "lt2", "rProType=", "jcdl6", "升级等级：", "20,30,25,2", "xt_three.p", "time=", "ownloadDat", "tThreeAwar", "_img_diamo", "circOut", "检测宝箱状态 2 :", "listActive", "hasInitVid", "refreshTop", "ipUp", "createFilt", "Continue", "JcdlSlideB", "imgCar2", "SetInterac", "imgDes", "lIcon6", "dLevel", "judgeListB", "witch", "hall", "TCP_RECEIV", "resh", "speedUpSuc", "particleSt", "m ==== com", "sendTimerH", "加钱：", "QGameMgr", "logShieldC", "onClickFas", "staminaCou", "eeeeeeeeee", "TimesShare", "txtClose", "lastMultip", "addSpeedTi", "每秒金币：", "3dhw.nalre", "destinatio", "successSel", "gainStamin", "lblGetFree", "lTotalNum", "tus", "gStreakSta", "LuckyOrigi", "ate", "ips", "ColorFilte", "are", "amondAward", "ataKeys", "e/com_btn_", "erData", "name", "value:", " this.laye", "9700327OAsxtR", "antSaveKey", "_text_chou", "gPage", "doPlayVide", "RoleInfo", "QGamePlay", "btnGain", "webpages", "jcdlSingle", "ontCount", "tryGetUser", "uncheckPos", "yHandle", "blAni", "showModalc", "Height", "ondLevel", "JcdlPageBo", "QInviteFri", "TERY", "https://an", "color: #f0", "isonPreLoa", "AddRevenue", "noVideoToS", "ITED_BOX", "img2", "renderHand", "rank_text_", "rewardPara", "PopSupplyG", "Free", "ge/kefu/ti", "Scroll", "onFinishSt", "wxgame_ope", "ui_car_com", "winGameLev", "InitGiftRa", "addAwardNu", "PUSH_VIDEO", "uInResult", "fgMgr", "ideGameHan", "url", "playSfx", "Image,stam", "boxClick", "plyBoxBtn", "Merge", "changeTips", "checkAndSh", "ononononon", "stopTime", "arrWeight", "e.AddReven", "HIDE", "eshTime", "downloadFi", "open/v6/us", "eshIndex", "showGameRe", "Buy", "/remen.png", "今日领取已达上限，请", "ByLevelId", "QGameData", "indowDialo", "nerLight.p", "rewardAni", "ist", "gift_text_", "ui_compres", "ImgBottom", "mg_yun1.pn", "eeeeee", "imgCommonB", "JudgeIsCan", "textInput", "免费转盘次数: ", "wel弹出客服奖励", "boxMiddleR", "y_Abottom", "clearLevel", "xState：", "addBoxRewa", "dicEvent", "pivotY", "fxScene", "videoInequ", "jcdl3", "h energy", "service1.p", "jcdlY", "showSingle", "autoReleas", "listCarDat", "supplyGuid", "saveLocalD", "eMenu", "ToFriendQu", "y_Btop", "orthograph", "coseMoney", "isNeedPerS", "erButton", "loadFontRe", "onUpdateFa", "COMMON_DIA", "ddlevel.pn", "setFreeCoi", "btnRightJc", "getRes", "supplyClic", "SimHei", "imgCar3", "R_Y_TO_TOP", "countdown", "YValue:", "d skip typ", "PlayRecycl", "supply", "anager", "getSystemI", "rge", "cellBg", "nueGetTime", "curIndex", "LeftLabel", "EveryGift", "camera", "GameBox.an", "(lost)", "ence", "getJSON", "checkList", "OpenDataVi", "sult", "Reward", "isCancelSh", "eInfo", "autoCheckD", " this.need", "setLastPla", "lottery_ne", "nt.png", "dDialogUI", "areButton", "HitArea", "ckHandler", "createBann", "hao/test2.", "resPath", "mentDialog", "refreshCou", "meBtnStart", "topFiveLev", "ery", "不同的群", "\blblget", "lblReward", "is_show", "Bottom", "readdir: ", "bine.atlas", "oadUrl", "dia_text_o", "E_SUC", "suffix_mp3", "recordGain", "lCount", "LoadOk", "viteBoxOpe", "eMain", "eUp", "createReco", "nline Exce", "imeConstan", "eOnlyOneEm", "eSound", "15,15,15,1", "e,btnLengt", "getCarInfo", "MOUSE_OUT", "15,14,22,1", "ntrol", "safe_add", "isStartPla", "con", "Image,btnC", "title.png", "showRankLi", "ui_home/in", "Button,bac", "lose", "DialTimes", "ewLottyDia", "dState", "./QUIMgr", "DataByPane", "freeCoinGe", "GetType", "god", "addShopTyp", "el_m", "addItem", "setCurSele", "maxReviveT", "QAddRevenu", "AnchorBott", "Browser", "ui_game/ch", "expoInOut", "isVideoGai", "saveSubIte", "体力不足!", "isStopAwar", "doPlayTime", "scaleMode", " 网络不稳定,\b请检", "rderShareB", "tionData", "me_img_quz", "isClickBtn", "env", "ogInfo", "res/font/f", "Click", "/zcScene.l", "uccessHand", "Script3D", "lblimage", "timeLine", "setdiamond", "ui_loading", "initLotter", "RecomCarPl", "drawRect", "dia_img_ar", "isCirculat", "this.delta", "intervalTi", "是否要刷新：", "doDisabled", "imgTitle", "Bie", "SUPPLY_CAR", "HIDE_SUPPL", "已邀请好友数:", "enterThird", "MOUSE_UP", "sliderSpee", "xAward", "Des", "receivedGi", "sendEnterG", "tTimes : ", "gameTime", "Center", "window", "#ca781f", "IVE", "clearOpenD", "fakeShareH", "UI_DailyCh", "tipNode", "times:", "check", "定重新连接,按取消返", "7.png", "pow", "lyOutsideG", "6iBavcG", "AwardCfg", "backHomeCl", "logUI", "tGame", "opqrstuvwx", "tipbg.png", "getResultD", "ininininin", "params", "menuStartX", "领取成功!", "dicConfig", "cdlIcon0", "返回首页", "listFakeSh", "refreshMia", "Tip", "own", "reUrl", "stage_bg.p", "icon_id", "serGuide", "ameWin----", "AddTime", "onononono1", "deShow", "inDiamon", "top", "MainPageUI", "achieveCou", "achievemen", "DataByResu", "ftOnce", "eGame", "rewardInfo", "user5", "supplyCarL", "canStart", "terval", "InviteBoxR", "SystemInfo", "showFreeBo", "Botbg.png", "XiaoChengX", "rer.cn", "interactio", "doPerSecon", "onChangeWe", "eCloud,ima", "assBox", "eLineInput", "beOfflineS", "ResetSuppl", "g cost: ", "s_bg.png", "Confirm", "Ease", "bot.png", "lblProgres", "GlassCircl", "ideo,imgVi", "how", "showTipBtn", "setShopVid", "sendSaveDa", "DoubleAwar", "ainDiamond", "uiComponen", "diamondCou", "lt1", "_Sound", "getCurGath", "iteBoxStat", "ialog", "font", "dia_icon_g", "nected", "rAni", "line3.png", "HintLabel", "QResMgr", "collectTim", "listAward", "imgRankBg", "ted", "lUp", "WXOpenData", "ntMgr", "getMiddleP", "Info", "#4C5566", "JcdlRightT", "ClickManTo", "lRes", "../view/QI", "addFreeTyp", "doubleDail", "en3d.nalre", "\blblcount", "repeatTime", "dlyLevel", "dddd", "NewLottyDi", "ignoreScop", "shieldCity", "0,28,0,20", "testFinish", "SaveKey", "dicAllData", "ShareVideo", "onTap", "StartIcon", "Width", "dia_text_d", "programTit", "isSigned", "胜利动画结束", "rtGame", "playDustbi", "UI_InviteP", "loadingSuc", "now", "OnClickSup", "rmShieldCi", "backHandle", "mouseState", "btnBuy", "int", "resultAuto", "op.png", "Return", "lifeFirstS", "alog", "lotteryTip", "firstType", "freshUserS", "ipPop", "ui_game/er", "listPool", "timestampT", "Script", "defaultCoi", "turn.png", "printParam", "lblx", "ntinuedArr", "kGround", "mLocal", "cheliangsh", "sendWxFeat", "dailylimit", "/loading_P", "ui_game/po", "eightLimit", "amp", "Coin", "lblSingleJ", "eGet", "bi_score", "/res/", "isOpen", "Fail : ", "btnHelp", "circle", "supplyGunC", " : 1800 --", "sendAllUns", "collecTime", "Time", "args", "imgIcon", "lblCount", "listAllUI", "reenClient", "TextInput", "oMiniGameF", "dia_text_a", "playVideoA", "iconUrl", "lblTitleNa", "tipv.png", "amina.ani", "attr", "gdia.png", "Cost", "==========", "tart,BtnSt", "round", "isDebug", "localToGlo", "/loading_i", "./game/vie", "ZERO", "etFinish.p", "finishFirs", "Tween", "----------", "#FFE8E2", "uide", "stopBgm", "showRedDot", "point3", "loadLoadin", "lt15", "listShield", "AIL", "VideoTimes", "dia_text_f", "imeSec", "esNode", "16,13,13,1", "readUTFByt", "BieGudie", "lblMaxDes", "#817c7c", "LevelDiff", "Iconbg", "/res/sound", "peIndex", "118", "tempVec3", "onGameFini", "genRandomR", "applicatio", "flock", "rdDialog", "rea", "sion", "GiftRankLi", "emData: ke", "../view/QM", "sCfg", "energy", "  this.sho", "trategy", "onUpdate", "showNewUse", "TreasureSt", "#000000", "useLocalRe", "_img_coin.", "Get × 1", "curUnlockL", "omLocalToO", "./QSoundMg", "钻石不足!", "bannerShow", "uccess:", "FriendBox", "Label", "ainStamina", "是否为老用户：", "gainCarMod", " parent.", "boxWin", "erval", "mg_cloud.p", "Data", "baodian_r3", "NETWORK_NO", "弹出等级成就：", "isHintAwar", "Success : ", "flashBg", "gram fail", "离线显示要求时间：", "inAni", "重新开始游戏!", "ing_small2", "QCommonDia", "DoUIAnim_D", "/jcdl_bg_5", "heartBeatM", "求助好友", "“添加到我的程序”", "flash1", "finishTenL", "ctor4(", "123", "ABCDEFGHIJ", "userId", "res/ui_par", "nkPlayerLi", "registerEv", "IsVideoGai", "再点击", "预览的图片 失败", "setVector3", "eck", "eHint", "needShowBa", '  "this.re', "wel小程序stat", "dia_img_bg", "当日获得次数达到上限", "tState", "hideSupply", "showJcdlCf", "ESH", "value", "needPlayPa", "ame_id=", "listSameCa", "genSupplyC", "GAME_CONTI", "eDown", "wx.navigat", "rollCounte", "protectGet", "fuchuang", "erSuccess", "jcdl5", "debug", "aView", "bannerJcdl", "rDataSucce", "resumeGame", "hareType", "addMoney2D", "imgNextDes", "LotteryCou", "t.png", "lFail", "userShareO", "checkfollo", "hareTime", "Day6", "jcdl7", "AnchorTopL", "shopInterv", "createChil", "rInfo", "gTime", "isCreate", "imgRedDiot", "setWinning", "Find-A-Dif", "deoCfg", "openBoxTim", "point2", "defaultStr", "center", "Sound", "neTime", "finishTrac", "btnRollJcd", "getFormatT", "60,0,0,0", "imgShare0", "li.png", "Switch", "loading.at", "t1,point1", "setCameraF", "mTips.png", "RES_LOAD_F", "lblHintInf", "fakeShareS", "left", "stami", "tWinningSt", "register", "oDate", "oreAwardTi", "startLoadi", "./framewor", "ndexArr", "SHOW_GAME_", "titleLabel", "timeLabel", "shopPropCf", "inputValue", "mIndex", "lblRightJc", "getAchieve", "授权成功回调", "getPassBox", "oreVideoSh", "BuyCarInfo", "aram", "onCheckFor", "HAward", "curShareTy", "tbg.png", "images", "0,0,0,0", "getCurRevi", "Guide", "isLoadReco", "clearTipBt", "setIsLotte", "hBanner", "pos", "serverData", "getOpenDat", "isOpenTest", "lEnable", "ontrol", "guideClick", "resultNoGe", "entsPosHor", "mondGift", "play", "InviteBox", "ataClick", "curShareFa", "registerSh", "startDrag", "PosHori", "hreeAward", "heartbeat", "ckage err ", "Common", "QAcquireWa", "tween", "../core/QS", "DayBox", "supplyHitP", "labelThree", "commonBg", "ShareParam", "setTodaySt", "dReduceLev", "resultGetM", "onClickMan", "QRankView", "ultiple", "上次的时间：", "reConfig", "e/bg.jpg", "lblStamTim", "rdBtnState", "skins", "eCarAni", "eoError : ", "supplyId", "aGift", "[0m", "clearTextu", "addLottery", "t_robot_us", "nTime", "/common_re", "ataByRankU", "ticle/gain", "isMainEnte", "#3B3B3B", "aseUI", "guideTip", "test.nalre", "array", "addShareTi", "nyAnyCar", "triggerClo", "car", "imgSpeedUp", "ngXuDialog", "nxyxfz.nal", "ail : ", "10,20,10,2", "residueTim", "plyTime", "clear", "?v=", "foSuccess", "essages", "arParticle", "closeVideo", "setBuyCarD", "_hideSuppl", "_text_doub", "bel", "nfoSync", "lCloseSupp", "clickDrawB", "loadFxScen", "Button,reS", "saveCoinFr", "gzhDiamond", "HandAni", "\blblx", "showPageJc", "Box,checkP", "_open.png", "init", "slideListJ", "labelOne", "QCoinUnitC", "getMenuBut", "QSequence", "showShareB", "ndAni", "member_cou", "Days", "checkKeFuD", "image03.pn", "unlock_buy", "me_sound_b", "ReduceLeve", "corder", "useDefault", "officialBg", "ADUnitID_B", "HomeInvite", "#978370", "onHttpRequ", "quare", "OpenBox", "eoCallback", "flyCoin", "tDialogUI", "essPop", "Gift", "initServer", "unregister", "num", "InviteBoxC", "FINISH_STA", "nAni", "../../ui/l", "cdlRightAn", "dlIcon", "tami,imgSt", "47,77,51,8", "zlk——--红点显", "setSupplyD", "ui_car/100", "rtY", "View", "getUpdateM", "op_text_sh", "LeftImage", "deviceId", "QGongZhong", "arage", "互动数据清除成功", "2.png", "QGameView.", "itle", "rial", "drawCircle", "Open", "teractiveS", "ScrollInfo", "setInviteB", "nlineTime", "AwardDiamo", "urnLottry", "QEventMgr", "shareConfi", "QTipsHintT", "hexMD5", "exportScen", "DETECTION_", "wardBase", "QGameConst", "Win", "btnGetRewa", "closeBtn", "COVER_COUN", "btnMask", "tScript(lo", "sceneRoot", "isClickDel", "SE_VIDEO_A", "curAllCarC", "lottrySucc", "rewardGold", "progressLi", "paihangban", "i,stami", "再试哦~", "onGameRevi", "QGameGuide", "t3,point3", "InvitePlay", "dailyCheck", "onStart", "CarIndex:", "QHttp", "lblListJcd", "listen", "add_gold", "songtili", "progressBa", "ogBannerSh", "onClickSec", "laya.ui.WX", "imgRecycle", "Revive", "ntTips", "ngStreakCo", "reCount", "lt_s14", "costAddSpe", "SafeMode", "diamondNum", "particleAn", "ataByRankD", "isNullOrEm", "t of range", "AnchorLeft", "totalWeigh", "LENGTH", "hasCompare", "POST", "errorTime", "derDialog", "ProgressMa", "line2.png", "viewType", "ecorder", "Get ", "eAwardType", "showLightA", "GainBtn", "icon_url", "预览图片成功！", "fareList", "beOfflineC", "bitmap", "e_continue", "kTimes", "Image,imag", "supplyCarN", "follow", "fxStar", "resetShopC", "getRecordG", "listUnsent", "_NUM", "Image,poin", "doPlayCarl", "Dailycheck", "cdlName0", "lblCarLeve", "wxActivity", "shareAssig", "BUFFER", "setFreeHin", "log", "awardText", "ClearInter", "setClickCa", "shareType", "btnDouble", "iconTimest", "setNodePos", "userName", "jcdlRightI", "adFinished", "ui_common2", "plus_level", "core : ", "../view/QC", "rewardAniL", "Tab1", "taskDown.p", "恭喜获得", "resultMore", "nviteScore", "Image,btnG", "or at ", "ameBoxView", " : ", "QGainWay", "Skin", "tttt", "Button", "sendMsg", "needReplac", "gameBanner", "ewUI", "lIcon4", "rticleArra", "GZH_LEVEL_", "arrayLengt", "unlockDiam", "sendMsgToS", "Dialog", "estError", "kage succe", "CurLoadTim", "playBtnSca", ".json", "elfareRewa", ".png", "客服对话框", "getItem", "authSettin", "setAchieve", "ppid", "framework/", "ameConst", "QGameData.", "Day7", "freeCoin", "circle.png", "garageInit", "ddsfsfhsjf", "BannerJcdl", "ialogPop", "RightLabel", "bal", "tionDataSu", "erAd", "JcdlBanner", "45,73,49,7", "node", "49,63,55,7", "16,11,14,1", "layerImgB", "ckage cost", "ialogUI", "x_right", "mg_yun2.pn", "InviteList", "金币不足,完成关卡获", "diamondAni", "curMaxLeve", "QSoundMgr", "ctiveInfo", "hideFx", "split", "Particle2D", "reSchemeId", "QWxSDK", "ongZhongHa", "(c.default", "Script,los", "shareAppMe", "nextTarget", "s.ani", "refreshRot", "noBSGComDi", "OriginList", "curShareIn", "baodian_r1", "curDiamond", "QGainDiamo", "igt", "isDiamondA", "NUE", "UI_WaitLoa", "esMgr", "image", "isLotteryE", "ddTime,lbl", "dlType", "erScene", " coin !", "tLevel", "ticle/hand", "dlName", "boxRewardI", "g1.png", "inaAdd", "topPoint.p", "freshBackG", "isStart", "kongtouVid", "iceId", "eCarData", "进入,即可领取", "eryCount", "imgRankRed", "imgCost", "tLevelBtn,", "secondMain", "min_time", "0,29,0,29", "_children", "instance.g", "lt10", "yTwo", "initData()", "lt_s1", "GET_RESULT", "curChoiceI", "ddsppedhin", "backOut", "poolItem", "lblCost", "doEnabled", "DesignWidt", "createUser", "dia_img_pe", "Vec3Multip", "34,32,51,4", "key", "refreshGol", "supplyGunL", "geCount", "sameVideoS", "xSDK", "Ground,bac", "frameLoop", "listCar", "tem", "lblCarCont", "getDoubleO", "OpenBoxAni", "freeHintTi", "ointNum", "curTime", "排行榜界面点击 x:", "rogress1.p", "slots", "Orthograph", "JcdlRightB", "ard", "meNode", "并发送", "BtnAddCoun", " fakeShare", "readdir", "getCoinTim", "getRandomI", "openBoxSha", "addDiamond", "aoyouxi.qi", "56acbb43", "serviceDia", "ailyCheckD", "return.png", "aitTime", "setNoVideo", "mg_yun0.pn", "nterval", "blueLabel", "OrVideoCfg", "NONE", "nnerJcdlIn", "closeUI", "layer.jpg", "AddBox", "lotty_text", "/jcdl_righ", "UI_SupplyD", "oToShare", "#00ffffff", "le.png", "autoFreshJ", "ror.png", "getPlayerS", "checkClick", "QSupplyMgr", "timeDiffer", "bgColor", "14865416zfrLhk", "setLastReg", "40,15,33,1", "dlTime", "btnContinu", "Point", "找茬萌新", "shopCurLea", "tryBindUse", "isAlreadyD", "user_id=", "minAwardCo", "Image,back", "playAniSca", "Arrow2", "ameGuideVi", "doProgress", "usCarFiveR", "nid", "shareSchem", "textInputT", "staminaSha", "isControl", "打开宝箱", "setIsGetCo", "ultipleRes", "VideoStami", "是否添加授权按钮：", "#645d5c", "Subpackage", "layerGapHe", "areOrVideo", "perBoxflus", "0,30,0,30", "iconIndex ", "lotty_img_", "bonusCar_l", "LFARE_STAT", "UI_Collect", "agePath", "./QDebug", "gridSpecia", "ui_car/101", "rePointId", "elfareDial", "destroyGet", "ght", "BoxSuccess", "ene", "52,26,48,2", "test", "/gongzhong", "0123456789", "iaogUI", "oadingView", "City", "loadAnimat", "revServerD", "onClickSta", "LoadingVie", "bine/zhong", "ler gdata:", "感谢好友", "eLimit", "iaoChengXu", "QBoxReward", "tipBtn", "24,53,30,5", "请完成当前新手引导!", "st)", "pause", "refreshFre", "BUY_CAR_SU", "isTodayFir", "color", "setLastLot", "owJcdlCfg", "beOfflineM", "ShowByRank", "hand", "entsPosMid", "ime", "checkNextD", "everyTimes", "isShowSupp", "+50", "floatWindo", " y:", "Day2", "tJcdlY", "erShare", "bindUser", " isGetGZHA", "defaultSha", "QTcpMgr", "QReviveVie", "cdlName1", "btnLblBox", "ing_small5", "03.png", "leAndUnzip", "rstGame: ", "NKING", "ardDiamond", "sDes", "program4.p", "official1.", "GuidePosDa", "rImg", "estartGame", "sharePicUr", "zOrder", "getFiveDia", "ankBg", "StateInfo", "lblDiamond", "btn_Sound", "ime : ", "eCarFull", "Label,lblS", "guideHandT", "Index", "initPageLi", "Icon", "nter", "videoShare", "drawRectIn", "isOpenHint", "addCompone", "lblTextHin", "BtnStart", "mmonVideoS", "load Subpa", "gainDiamon", "buy_diamon", "panel", "llValue", "numChildre", "INA_DIALOG", "esList[t].", "showReward", "partSp", "mmonNode", "op_img_hea", "newBieGuid", "GAME_HIDE", "resuleThre", "frame", "eMenu fail", "/btn_close", "supplyInde", "foBtn", "reTimesIsE", "fromPos", "textInputO", "HED", "boxSingle", "upLevelAwa", "gameHintSh", "888", "lError", "RightImage", "QBaseUI", "rol", "04.png", "addFinishL", "clickAdIco", "Invite", "sendEvent", "romFriends", "nContinue", "nueDialog", "erTime", "ewResultVi", "./QResMgr", "unt", "gainCoinTi", "RecomCar", "proAstrict", "gameName", "lt_s7", "00.png", "isPullBann", "isPlayingA", "noEnoughSt", "showToast", "/images/", "screen", "lyBox", "secondPlan", "engXuDialo", "Stamina", "isFreeHint", "charCodeAt", "sArr", ",lblx", "createView", "rFeature&g", "scrollRank", "lSel", "dia_text_t", "refreshUI", "scene", "“1”", "FlyBox", "dlerEvent", "setFinishL", "eTimes", "dlHandle", "eItem", "needLevelT", "localNorma", "Image,imgS", "ClearServe", "setResultG", "LIST_BOX_H", "mCarLevel", "Unsupporte", "Byte", "/jcdl_img_", "finishLeve", "rawLight", "scale", "MoreAwardT", "BoxOutGara", "addWinning", "reflushSup", "SUCCESS", "haocha.png", "listImport", "GAME", "estart,lbl", "boxTop", "TimeBtn,ad", "closeGainS", "doCallback", "ter", "Shop", "getUIShowS", "unshift", "#ffffff", "ui_dialog/", "QSupplyTip", "_btn_close", "重新开始", "tweenTo", "ceId", "checkIsUpd", "tutorialSt", "rFilterSet", "QGainCarDi", "示 InviteBo", "GainCarDia", "onFinished", "[W] ", "nextTime", "Image,bg", "winningStr", "6ff5", "freeStartT", "Day1", "postMessag", "isTestUser", "togame", "imgUpCarIc", "ssBox", "engthenTim", "btnGetStam", "nished", "LevelTotal", "setAddReve", "freelevelu", "DEFAULT", "ady", "offLineEar", "lIcon2", "successGet", "resultAwar", "02.png", "assNum,lbl", "_icon_vide", "achieveIma", "CLOSE_NEWU", "Not enough", "clearGuide", "iewDialog", "getShopSha", "disabled", "reOrVideoH", "24,16,22,1", "MOUSE_DOWN", "lightDown", "onTimeHand", "showGuide", "shareFailM", "uccess", "moreMultip", "close", "beginGameR", "scope.user", "naGiftFrom", "QResultMor", "isDailyFir", "str2binl", "GZHAwardDi", "etShareTim", "esult", "abortGameR", "yCheck", "leAwardTim", "NUM", "showWxLoad", "erUI", "AddLevel", "JcdlSingle", "getFirstCa", "[35m[D] ", "number", "saveStamin", "BoxAwardSu", "g_btn_clos", "nfig", "amond.ani", "ui_home.at", "InviteBoxT", "ADUnitID_V", "layerImgA", "UI_Lottery", "Return1", "hintTimes.", "todayFirst", "localPosit", "getGameJcd", "isNewPlaye", "ent", "jiesuan_fx", "lotteryMor", "nFx", "PosList", "Handle", " stamina !", "nner: ", "serverSynD", "pply", "ui_game.at", "onClickInv", "hintAni2", "setLevelUp", "aminaGiftF", "onTween2", "dByName", "Image,imgP", "reOrVideoC", "dia_img_th", "checkBoxSt", "ui_game/in", "fullCarTip", "UserInfo", "Count", "aSuccess", "Box_Double", "reenHeight", "eCfg", "riend", "btnGet", "networkCon", "toFixed", "dren", "加载资源失败，请检查", "lineCoin", "na.png", "yoo-api", "reRes", "   endPoin", "_RESULT", "imgOpenTxt", "buyFlowsJc", "game_win", "ype", "LevelRes", "newLottery", "coin1.png", "_instance", "kBtn,backB", "isLoginBox", "Size", "_btn_green", "dReduceCoe", "lblJcdlNam", "checkIsSho", "nel", "cene", "showLevelW", "Mask02.png", "Stage", "FiveAward", "isInGame", "imgTips4", "ame", "uccess : ", "isComDialo", "_text_Get.", "Top,Anchor", "initFreeBo", "lIcon5", "toString", "aSuccessHa", "imgGetShar", "checkCommo", "checkBanne", "isFirstNew", "dia_icon_s", "UPDATE_LOT", "30,30,50,3", "nClickWith", "clickStatE", "__esModule", "ShareNextP", "添加到小程序", "getHeightW", "udStorage:", "call", "KongtouVid", "RankGiftPa", "reeLevel.p", "OPEN", "playNewBie", "dData", "lIcon1", "oaded", "param", "ondGiftTyp", "Num", "point0", "%c[I] ", "boxState", "dia_img_st", "sprOpenDat", "isSync", "onGameStar", "../view/QR", "progress", "进入客服 失败", "lCar", "isFirstPla", "subpackage", "doFreeLeve", "eeee", "QGZHAwardD", "CLOSE_STAM", "加钻石：", "isInArray", "Achievemen", "anguage", "horCenter", "do not hav", "reState", "isAuditVer", "noBannerSh", "estComplet", "multiple", "现在没有广告，试试求", "erService", "step:", "everySecRe", "oreAwardTy", "parent", "title", "comDialogB", "successLev", "回到游戏，点击", "tar.png", "owTimes", "clickInvit", "calcMD5", "GameJcdlFr", "noShowJcdl", "lt_s16", "AddSupplyM", "loginScene", "Showoff", "alogBanner", "rpleBtn.pn", "GameTime", "imgHand3", "5378484iBbATv", "gClientRec", "AddCount", "./QWxSDK", "ail", "speedupbg", "_return.pn", "ceSuccess", "pDialogUI", "../core/QB", "_AWARD", "needRefres", "lt_s13", "instance", "ngHao", "KeFuDialog", "boxTopLeft", "oss", "QTipsView", "d.png", "game_state", "timer", "testChoose", "refreshVie", ".wav", "#4c5566", "clearAll", "uDialogUI", "showSlideL", "sdkVersion", "BtnGongZho", "ardViewUI", "achieveLab", "addTime", "OriginJcdl", "_text_adds", "iner", "ound", "签到奖励", "image.png", "getOneDiam", "rderDialog", "tonBoundin", "output_gol", "room_limit", ",recorderD", "openXiaoCh", "lNum", "SupplyDial", "#5f5c5c", "xList", "UI_JCDL", "showIndex", "navigateTo", "/jdcl_jinq", "lt14", "taminaDial", "deltaYValu", "setItem", "预览的图片 成功", "金币不足", "updateLott", "NextTarget", "interval", "dia_unlock", "StaminaReg", "abort", "songzuansh", "tipContain", "saveDiamon", "newUnlocke", "Arial", "ghtList", "onStarDrag", "riendRewar", "getGun", "purl", "mouseThrou", " diamond !", "lblRestart", "AwardNum", "cmn", "curReviveT", "SHOW", "AddLottery", "tipNodeUp", "physicsDeb", "ework/QMD5", "onClickTip", "lblUpCarCo", "yRecycleCa", "wxgame_ses", "USER_DATA_", "ew Laya.Ve", "lblUpCarNa", "tywx.Notif", "当前视频已达到上限!", "奖励:", "ctCarLevel", "???", "../view/QF", "diamondGif", "ayBox", "46,55,56,8", "applyUpdat", "listLotter", "type", "zlk-----合成", "getDate", "YaHei", "supply_box", "SHOW_AWARD", "ainCarDial", "执行交换!", "ndler: ", "listChoice", "bgm.mp3", "../view/QN", "setParam", "minasaveSt", "tTimes", "ARRAY_MAX_", "Path", "checkResul", "ntDownTime", "essHandle", "getScreenR", "olorFromHe", "QUIMgr", "AwardDoubl", "Label,Tips", "result", "fflinehint", "leveResLis", "onClickDia", "ffect.Colo", "shareFailT", "two", "_CAR", "bottom", "alignV", "金币!", "ward_type_", "fxWater", "ickDirectT", "dFinish", "Image", "tempValue", "gUI", "userData", "refreshTip", "eAni", "UserIntera", "levelFresh", "imgCar1", "setTodayFi", "_preloadLe", "ing_small8", "lblResiduc", "content2", "reposition", "lfareState", "imes", "errorTimeN", "function", "ignInGift", "videoSucce", "ui_home/su", "Type: ", "lIcon3", "onSuccessG", "game_start", "curTimes ", "LIST_CENTE", "getWxLocal", "achieveRew", "updateWinG", "PATH", "showIndexL", "sprite3D", "分享策略1：", "eFuDialog", "btnConfirm", "nner", "UI_FreeLev", "stopGameRe", "saveDataTo", "StreakStag", "onGameStop", "imgAwardIc", " ------onG", "img4", "nSupplyBox", "bgmChannel", "../view/QW", "yerRewardD", "boxNieBie3", "receiveSta", "toappid", "QTween", ".mp3", "imgTips3", "ytedData c", "weight", "GAME_SHOW", "erServiceC", "UI_Achieve", "当前是否分享:", "JCDLShow", "ework/QDeb", "veScreen", "WelfareRew", "IN_GZH_BTN", "GetEnergy", "pUI", "setGarageE", "IDTH", "加速时间累计成功", "预览图片失败！", "loadData c", "ing", "StarFlash3", "List", "/zhezhao.p", "getWxFeatu", "QUIAnchor.", "setActive", "saveInvite", "eAwardTime", "lblgot", "vityShare&", "奖励  2 toda", "获得免费体力", "PreloadLev", "lastInterv", "inaTime", "tDialogsLi", "gView", "bounceOut", "Image,prog", "whiteFilte", "&cloud_id=", "n-out", "god.png", "recorderSh", "cessHanle", "ying", "ChooseGuid", "inished", "../view/QA", "res/Textur", "http://xyx", "ointBox,ch", "xt_three_d", "initGameJc", "JcdlList", "GAME_FINIS", "RankArrow", ".ani", "fontSize", "oundMgr", "Tab2", "coin", "irAniByB", "LuckyJcdlN", "showPassBo", "QJcdlTypeV", "05.png", "state:", "levelGameT", "DailyCheck", "tWinBox", "btnSingleJ", "showGiftRa", " 下次显示刷新ban", "b64MD5w", "doShare", "CommonDial", "Times", "tery", "naDialog", "speedup_it", "Success", "regainStam", "style", "getInviteF", "_icon_shar", "LightUp", "add_diamon", "#f1bc38", "ork/QUIAnc", "getLastMul", "get", "curGunCost", "ings", "JCDLClick", "count", ".atlas", "TE_RED_STA", "esLoaded", "resLoadFin", "setCarData", "Recive", "executeTim", "unlock_mod", "eFailTimes", "levelInfo", "DownloadUr", "getCommonO", "resultJcdl", "24,25,26,2", "curTrackId", "onClickRes", "setShowKeF", "Down", "SineleJcdl", "instance.P", "nd.png", "ui_game/ou", "pageJcdlPo", "./game/cor", "mark", "32,30,38,2", "distance", "onGameFail", "yStaminaGi", "inNum", "ubleSucces", "BitmapFont", "intClientI", "resetAutoD", " Lv.", "saveIsGetS", "ai.png", "ollectDial", "ded", "curAddCoin", " Not enoug", "getUserInf", "er/setWxEn", "gridNormal", "guideHand", "ler", "QCurServer", "每日登录礼包", "onClose", "isShowPage", "icon_skip_", "tipBtnAni", "teBoxTimes", "click", "showXiaoCh", "IsDirectGa", " saveAllDa", "zhezhaoB", "game2", "rankStartY", "pplyBox.pn", "NEXT_three", "supplycfg", "postInit", "ataView", "time", "triggerGC", "controlEnd", "hTime", "p_chance", "e the same", "QBIEvent", "endChooseB", "jcdlBox", "IMES", "setDragLim", "boxCar", "buy_gold", "rCut", "successAdd", "Fun", "查网络稍后再试,按确", "labelTwo", "random", "ue)", "ntDialog", "d exceptio", "yBuy", "TCP_OPENED", "dTrack", "47,64,66,7", "enterSecon", "loadRes", "initTipGui", "_bg3.png", "zeroToNowT", "sendSceneS", "mond1", "UPDATE_INV", ":11", "lblAwardCo", "getTrackCo", "ainTime", "xInGarage", "iewUI", "WaitLoadMa", "doShopShar", "selfShare", "everyGiftS", "oinNum", "gunMode", "staminaIma", "d_point.pn", "NodePosLis", "Label,lblx", "TurningEnd", "tmpCheckpo", "&sourceCod", "#AAA299", "getReward", "run", "initGameRe", "sHandler", "ina,Stamin", "mg_god1.pn", "_btn_orang", "font_1", "from", "REFRESH_MA", "JCDLGameBI", "defineProp", "showLoginB", "看完视频才可获得奖励", "mondGiftAw", "Box", "setResultN", "QPlayFxTyp", "refreshSig", "tShareTime", "rPopLottry", "Miss", "owmp succe", "userDiamon", "setGarageC", "1663", "refresh", "ize", "game_over", "curPlayerS", "分享策略3：", "/jcdlBotto", "errorNode", "omplete : ", "eDrag", "奖励  1 key:", "ownloadUrl", "order", "isNoVideoA", "logWarning", "setAllShar", "启用浮窗", "ewer", "eturnHandl", "deo", "curNeedBuy", "vScrollBar", "XuDialog", "ui_game/ba", "sHanle", "minaTimes", "Kongtou", "SwitchDown", "atlas", "yType", "DataByLott", "LocalStora", "nksBtn", "createLaye", "logError", "showRecord", "getPointVi", "inish", "ing_small4", "ticle/aniO", "urcesNode", "宝箱内含有大量金币和", "uccessCall", "关注公众号", "ight", "btnPrize", "rGuide", "ay.png", "rewardBox2", "ayer", "dTimeBtn", "onclickBtn", "eNoCarToMe", "fakeShareL", "x.png", "iconType", "游戏加载----资源", "wUI", " loadSubpa", "开启宝箱领取奖励", "getGameRec", "直接领取", "webpage_ur", "baodain_l2", "lblAwardNu", "this.showL", "dTime", "eFinished", "clickShowR", "amond", "rogress,lb", "allResLoad", "./QConst", "clickServi", "editable", "Day4", "ia_img_bg2", "Pool", "LeaveTime", "game_reviv", "owmp fail ", "47,43,59,7", "https://xi", "/dialog_bg", "isOpenVide", "imgReward", "lIcon", "btnEasyBuy", "multipleTi", "enterGameL", "initData", "send", "62,45,52,4", "eId", "ui_main/di", "AddStamina", "errMsg", "30,30,40,3", "BiLog", "Bottom,Anc", "findUnComN", "tmapFont", "maxLoadFon", "One", "erProIsEno", "setReviveT", "screenMode", "areWaitTim", "showJcdlBa", "taminaNum,", "henTime", "yBox", "ui_dialog.", "handPosX", "rotation", "JcdlRightI", "UI_Supply_", "QUtil", "hasEnterGa", "namepath", "TreasureEn", "wsJcdl", "nough", "updateFree", "unHit", "GainBtnAni", "in.ani", "Quaternion", "sendTimerE", "Retry", "Event0", "clientHeig", "checkTime", "initSinele", "分享失败，请确认分享", "isNeedPlay", "bannerClos", "JcdlNum", "QKeFuDialo", "AwardType", "IsShopTime", "../view/QG", "checkIsLoa", "ayTime", "lblGo", "upLevel", "localScale", "gunConfig", "path", "view/Suppl", "当前间隔时间：", "height", "o.png", "entMsg", "r: ", "tsShow", "moreShareS", "getCoinSuc", "ARE", "shareFrien", "lyConst", "JcdlIcon", "repeatTipB", "callback", "Loader", "openFloatW", "eTxt", "alertGloba", "kBtn", "vel", "_proba", "startBtn0", "NewBie", "light2.png", "aveData", "setFreeVid", "light1.png", "lotteryCfg", "ont_", "prizeBox", "strongOut", "width", "showKeFuIn", "StarFlash1", "items", "./QFlyRes", "curCreateC", "eCar", "imageCloud", "isWxMiniGa", "onError : ", "oxRed", "./QGameCon", "Label,time", "yun3", "setLastTim", "view", "content-ty", "LevelDownl", "ildByMulti", "setReviveS", "successRev", "Pro", "maxValue", "iamondBase", "nds:", "yIndex", "removeChil", "FAKE_SHARE", "hieldCity", "_supplyBox", "fakeShare", "dlIcon1", "Pos", "imgLevelBg", "解锁角色", "recoveStam", "Close1", "IndexArr", "getSceneCh", "winGameTim", "changeText", "ryShare", "QMoneyType", "DiamondIco", "dailyConfi", "changeLigh", "png", "rUserInfoS", "JcdlPageTy", "isUpdate", "newbieInGa", "OfficialTi", "icVertical", "freshInvit", "getTopFive", "isSyncOnli", "playFlyRes", "QSequenceI", "supplyCarB", "ardLimit", "arLevelId", "wSupplyCar", "BuyCar", "d.default.", "nObj", "veTimes", "Gold", "curShareCo", "rewardCoun", "config", "arIndex", "T_DOWN", "x1000", "imgSignRed", "tCount", "&userId=", "_btn_blue.", "EIGHT", "btnGiveUP", "content", "diamondAdd", "getSupplyO", "lblOriCarC", "setIsOldPl", "checkLogin", "method", "newbieinGa", "startBtn", "jcdlAniDel", "deListJcdl", "isSoundOn", "boxLose", "isGameSoun", "oxRewardDi", "ilTimes", "TCP_CLOSE", "foundFirst", "gRes", "length", "ClearLastL", "shopGetFre", "logic", "GameConfig", "compareVer", "setDailyCh", "isGetSignI", "listCarIco", "ainCarTime", "img1", "setTo", "terSetter", "setUserClo", "交叉导流", "isAlreadyL", "47,77,57,8", "ken", "ShopDialog", "幸运宝箱", "客服会话", "lostScript", "getCurrent", "ide", "stopPlayHa", "deDialog", "useShareOr", "setLifeFir", "NormalizeC", "changeLabe", "chievement", "isGetGZHAw", "isOpenFirs", "UI_ShopDia", "VIEW_FAIL", "labelOne2", "setDailyFi", "imgLight", "fo Fail!", "ult", "owBannerUI", "getMaxRevi", "maxRegainS", "13,21,19,2", "showCheckC", "gameConfig", "find", "ottom_img.", "onnected", "loadCount", "GameVersio", "/Icon_mask", "Sprite,img", "inviteLabe", "imation", "gongzhongh", "position", "shareConte", "setShopCur", "chaochu", "wDialogUI", "#626262", "erText", "setIsGetGZ", "supplyboxB", "refreshNew", "dynamicBox", "Type", " checkfoll", "Area", "ward : ", "onLoadPart"];
    return _0x284e = function () {
        return e
    }, _0x284e()
}

function _0x276c(e, t) {
    var i = _0x284e();
    return _0x276c = function (e, t) {
        e -= 389;
        var a = i[e];
        return a
    }, _0x276c(e, t)
}(function (e, t) {
    for (var i = _0x276c, a = e();;) try {
        var n = -parseInt(i(2004)) / 1 + parseInt(i(2385)) / 2 + parseInt(i(1167)) / 3 + -parseInt(i(4208)) / 4 + parseInt(i(1524)) / 5 * (parseInt(i(2873)) / 6) + parseInt(i(2600)) / 7 + -parseInt(i(3723)) / 8;
        if (n === t) break;
        a.push(a.shift())
    } catch (e) {
        a.push(a.shift())
    }
})(_0x284e, 897810);
var __extends = this && this.__extends || function () {
    var e = Object.setPrototypeOf || {
        __proto__: []
    }
    instanceof Array && function (e, t) {
        e.__proto__ = t
    } || function (e, t) {
        for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i])
    };
    return function (t, i) {
        function a() {
            this.constructor = t
        }
        e(t, i), t.prototype = null === i ? Object.create(i) : (a.prototype = i.prototype, new a)
    }
}();
! function () {
    function e(t, i, a) {
        function n(r, s) {
            if (!i[r]) {
                if (!t[r]) {
                    var l = "function" == typeof require && require;
                    if (!s && l) return l(r, !0);
                    if (o) return o(r, !0);
                    var c = new Error("Cannot find module '" + r + "'");
                    throw c.code = "MODULE_NOT_FOUND", c
                }
                var h = i[r] = {
                    exports: {}
                };
                t[r][0].call(h.exports, function (e) {
                    return n(t[r][1][e] || e)
                }, h, h.exports, e, t, i, a)
            }
            return i[r].exports
        }
        for (var o = "function" == typeof require && require, r = 0; r < a.length; r++) n(a[r]);
        return n
    }
    return e
}()({
    1: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a = e("./framework/QUIAnchor"),
            n = e("./game/view/QGameView"),
            o = function () {
                function e() {}
                return e.init = function () {
                    var e = Laya.ClassUtils.regClass;
                    e("framework/QUIAnchor.ts", a.default), e("game/view/QGameView.ts", n.default)
                }, e.width = 640, e.height = 1136, e.scaleMode = "fixedwidth", e.screenMode = "vertical", e.alignV = "center", e.alignH = "middle", e.startScene = "view/SupplyDialog.scene", e.sceneRoot = "", e.debug = !1, e.stat = !1, e.physicsDebug = !1, e.exportSceneToJson = !0, e
            }();
        i.default = o, o.init()
    }, {
        "./framework/QUIAnchor": 12,
        "./game/view/QGameView": 47
    }],
    2: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a = e("./GameConfig"),
            n = e("./framework/QConst"),
            o = e("./game/core/QGameMgr"),
            r = e("./game/core/QTcpMgr");
        new(function () {
            function e() {
                window.Laya3D ? Laya3D.init(n.default.DesignWidth, n.default.DesignHeight) : Laya.init(n.default.DesignWidth, n.default.DesignHeight, Laya.WebGL),
                    Laya.stage.scaleMode = "fixedwidth", Laya.stage.screenMode = "vertical", Laya.stage.alignV = "center", Laya.stage.alignH = "middle",
                    Laya.MouseManager.multiTouchEnabled = !1, Laya.URL.exportSceneToJson = !0, Laya.alertGlobalError = !1, r.default.instance.init(),
                    o.default.instance.init()
            }
            return e.prototype.onVersionLoaded = function () {
                Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded))
            }, e.prototype.onConfigLoaded = function () {
                a.default.startScene && Laya.Scene.open(a.default.startScene);
            }, e
        }())
    }, {
        "./GameConfig": 1,
        "./framework/QConst": 3,
        "./game/core/QGameMgr": 16,
        "./game/core/QTcpMgr": 19
    }],
    3: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.framework || (n.framework = {}), r = function () {
            function e() {}
            return e.DesignWidth = 750, e.DesignHeight = 1334, e
        }(), o.QConst = r, i.default = a.framework.QConst
    }, {}],
    4: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.framework || (n.framework = {}), r = function () {
            function e() {}
            return e.log = function (e) {
                this.isDebug && console.log(e)
            }, e.logWarning = function (t) {
                e.isDebug && (e.isWxMiniGame ? console.log("[W] " + t) : console.log("[33m[W] " + t + "[0m"))
            }, e.logError = function (t) {
                e.isDebug && (e.isWxMiniGame ? console.log("[E] " + t) : console.log("[31m[E] " + t + "[0m"))
            }, e.I = function (t) {
                e.isDebug && (e.isWxMiniGame ? console.log("%c[I] " + t, "color: #006ff5") : console.log("[34m[I] " + t + "[0m"))
            }, e.P = function (t) {
                e.isDebug && (e.isWxMiniGame ? console.log("%c[P] " + t, "color: #00a957") : console.log("[32m[P] " + t + "[0m"))
            }, e.D = function (t) {
                e.isDebug && (e.isWxMiniGame ? console.log("%c[D] " + t, "color: #f01663") : console.log("[35m[D] " + t + "[0m"))
            }, e.W = function (t) {
                e.isDebug && (e.isWxMiniGame ? console.log("[W] " + t) : console.log("[33m[W] " + t + "[0m"))
            }, e.E = function (t) {
                e.isWxMiniGame ? console.log("[E] " + t) : console.log("[31m[E] " + t + "[0m")
            }, e.isDebug = !0, e.isWxMiniGame = Laya.Browser.onMiniGame, e
        }(), o.QDebug = r, i.default = a.framework.QDebug
    }, {}],
    5: [function (e, t, i) {
        "use strict";
        var a, n;
        Object.defineProperty(i, "__esModule", {
                value: !0
            }), n = a || (a = {}),
            function (e) {
                var t = function () {
                    function e(e, t, i, a) {
                        void 0 === t && (t = null), void 0 === i && (i = -1), void 0 === a && (a = !1), this.isTimerHandlerEvent = !1, this.eventId = e, this.handler = t, this.delay = i
                    }
                    return e.prototype.doCallback = function () {
                        null != this.param ? this.handler.runWith(this.param) : this.handler.run()
                    }, e
                }();
                e.QEventParam = t;
                var i = function () {
                    function e() {
                        this.dicEvent = {}
                    }
                    return Object.defineProperty(e, "instance", {
                        get: function () {
                            return null == e._instance && (e._instance = new e), e._instance
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e.destroy = function () {
                        e._instance = null
                    }, e.prototype.register = function (e, i, a) {
                        null == this.dicEvent[e] && (this.dicEvent[e] = new Array), this.dicEvent[e].push(new t(e, Laya.Handler.create(a, i, null, !1)))
                    }, e.prototype.unregister = function (e, t, i) {
                        var a = this.dicEvent[e];
                        if (null != a)
                            for (var n = a.length - 1; n >= 0; n--) a[n].handler.caller == i && a[n].handler.method == t && (a[n].handler.recover(), a.splice(n, 1))
                    }, e.prototype.sendEvent = function (e, t) {
                        void 0 === t && (t = null);
                        var i = this.dicEvent[e];
                        if (null != i)
                            for (var a = 0; a < i.length; a++) i[a].param = t, i[a].doCallback()
                    }, e.prototype.sendTimerEvent = function (e, t, i) {
                        var a = this.dicEvent[e];
                        if (null != a)
                            for (var n = 0; n < a.length; n++) a[n].param = t, a[n].delay = i
                    }, e.prototype.sendTimerHandlerEvent = function (e, i, a, n, o) {
                        null == this.dicEvent[e] && (this.dicEvent[e] = new Array), this.dicEvent[e].push(new t(e, Laya.Handler.create(a, i, null, !1), o, !0))
                    }, e.prototype.update = function () {
                        for (this.tempKey in this.dicEvent) {
                            this.tempListEvent = this.dicEvent[this.tempKey], this.tempLength = this.tempListEvent.length;
                            for (var e = length - 1; e >= 0; e--) this.tempListEvent[e].delay > 0 && (this.tempListEvent[e].delay -= .001 * Laya.timer.delta, this.tempListEvent[e].delay < 0 && (this.tempListEvent[e].delay = -1, this.tempListEvent[e].doCallback(), this.tempListEvent[e].isTimerHandlerEvent && (this.tempListEvent[e].handler.recover(), this.tempListEvent.splice(e, 1))))
                        }
                    }, e
                }();
                e.QEventMgr = i
            }(n.framework || (n.framework = {})), i.default = a.framework.QEventMgr
    }, {}],
    6: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.framework || (n.framework = {}), r = function () {
            function e() {
                this.httpRequest = new Laya.HttpRequest
            }
            return Object.defineProperty(e, "instance", {
                get: function () {
                    return null == e._instance && (e._instance = new e), e._instance
                },
                enumerable: !0,
                configurable: !0
            }), e.prototype.get = function (e, t, i, a) {
                return void 0 === a && (a = null), this.caller = t, this.callback = i, this.args = a, this.httpRequest.once(Laya.Event.COMPLETE, this, this.onHttpRequestComplete), this.httpRequest.once(Laya.Event.ERROR, this, this.onHttpRequestError), this.httpRequest.send(e, null, "get", "text"), this
            }, e.prototype.post = function (e, t, i, a, n, o, r) {
                return void 0 === i && (i = null), void 0 === a && (a = null), void 0 === r && (r = null), this.caller = n, this.callback = o, this.args = r, this.httpRequest.once(Laya.Event.COMPLETE, this, this.onHttpRequestComplete), this.httpRequest.once(Laya.Event.ERROR, this, this.onHttpRequestError), i = i || "text", null == a ? this.httpRequest.send(e, t, "post", i) : this.httpRequest.send(e, t, "post", i, ["content-type", a]), this
            }, e.prototype.onHttpRequestError = function (e) {
                this.callback.apply(this.caller, [{
                    state: 500,
                    msg: "http exception",
                    args: this.args
                }])
            }, e.prototype.onHttpRequestComplete = function (e) {
                this.callback.apply(this.caller, [{
                    state: 200,
                    data: JSON.parse(e),
                    args: this.args
                }])
            }, e
        }(), o.QHttp = r, i.default = a.framework.QHttp
    }, {}],
    7: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.framework || (n.framework = {}), r = function () {
            function e() {}
            return e.safe_add = function (e, t) {
                var i = (65535 & e) + (65535 & t);
                return (e >> 16) + (t >> 16) + (i >> 16) << 16 | 65535 & i
            }, e.rol = function (e, t) {
                return e << t | e >>> 32 - t
            }, e.cmn = function (e, t, i, a, n, o) {
                return this.safe_add(this.rol(this.safe_add(this.safe_add(t, e), this.safe_add(a, o)), n), i)
            }, e.ff = function (e, t, i, a, n, o, r) {
                return this.cmn(t & i | ~t & a, e, t, n, o, r)
            }, e.gg = function (e, t, i, a, n, o, r) {
                return this.cmn(t & a | i & ~a, e, t, n, o, r)
            }, e.hh = function (e, t, i, a, n, o, r) {
                return this.cmn(t ^ i ^ a, e, t, n, o, r)
            }, e.ii = function (e, t, i, a, n, o, r) {
                return this.cmn(i ^ (t | ~a), e, t, n, o, r)
            }, e.coreMD5 = function (e) {
                for (var t = 1732584193, i = -271733879, a = -1732584194, n = 271733878, o = 0; o < e.length; o += 16) {
                    var r = t,
                        s = i,
                        l = a,
                        c = n;
                    t = this.ff(t, i, a, n, e[o + 0], 7, -680876936), n = this.ff(n, t, i, a, e[o + 1], 12, -389564586), a = this.ff(a, n, t, i, e[o + 2], 17, 606105819), i = this.ff(i, a, n, t, e[o + 3], 22, -1044525330), t = this.ff(t, i, a, n, e[o + 4], 7, -176418897), n = this.ff(n, t, i, a, e[o + 5], 12, 1200080426), a = this.ff(a, n, t, i, e[o + 6], 17, -1473231341), i = this.ff(i, a, n, t, e[o + 7], 22, -45705983), t = this.ff(t, i, a, n, e[o + 8], 7, 1770035416), n = this.ff(n, t, i, a, e[o + 9], 12, -1958414417), a = this.ff(a, n, t, i, e[o + 10], 17, -42063), i = this.ff(i, a, n, t, e[o + 11], 22, -1990404162), t = this.ff(t, i, a, n, e[o + 12], 7, 1804603682), n = this.ff(n, t, i, a, e[o + 13], 12, -40341101), a = this.ff(a, n, t, i, e[o + 14], 17, -1502002290), i = this.ff(i, a, n, t, e[o + 15], 22, 1236535329), t = this.gg(t, i, a, n, e[o + 1], 5, -165796510), n = this.gg(n, t, i, a, e[o + 6], 9, -1069501632), a = this.gg(a, n, t, i, e[o + 11], 14, 643717713), i = this.gg(i, a, n, t, e[o + 0], 20, -373897302), t = this.gg(t, i, a, n, e[o + 5], 5, -701558691), n = this.gg(n, t, i, a, e[o + 10], 9, 38016083), a = this.gg(a, n, t, i, e[o + 15], 14, -660478335), i = this.gg(i, a, n, t, e[o + 4], 20, -405537848), t = this.gg(t, i, a, n, e[o + 9], 5, 568446438), n = this.gg(n, t, i, a, e[o + 14], 9, -1019803690), a = this.gg(a, n, t, i, e[o + 3], 14, -187363961), i = this.gg(i, a, n, t, e[o + 8], 20, 1163531501), t = this.gg(t, i, a, n, e[o + 13], 5, -1444681467), n = this.gg(n, t, i, a, e[o + 2], 9, -51403784), a = this.gg(a, n, t, i, e[o + 7], 14, 1735328473), i = this.gg(i, a, n, t, e[o + 12], 20, -1926607734), t = this.hh(t, i, a, n, e[o + 5], 4, -378558), n = this.hh(n, t, i, a, e[o + 8], 11, -2022574463), a = this.hh(a, n, t, i, e[o + 11], 16, 1839030562), i = this.hh(i, a, n, t, e[o + 14], 23, -35309556), t = this.hh(t, i, a, n, e[o + 1], 4, -1530992060), n = this.hh(n, t, i, a, e[o + 4], 11, 1272893353), a = this.hh(a, n, t, i, e[o + 7], 16, -155497632), i = this.hh(i, a, n, t, e[o + 10], 23, -1094730640), t = this.hh(t, i, a, n, e[o + 13], 4, 681279174), n = this.hh(n, t, i, a, e[o + 0], 11, -358537222), a = this.hh(a, n, t, i, e[o + 3], 16, -722521979), i = this.hh(i, a, n, t, e[o + 6], 23, 76029189), t = this.hh(t, i, a, n, e[o + 9], 4, -640364487), n = this.hh(n, t, i, a, e[o + 12], 11, -421815835), a = this.hh(a, n, t, i, e[o + 15], 16, 530742520), i = this.hh(i, a, n, t, e[o + 2], 23, -995338651), t = this.ii(t, i, a, n, e[o + 0], 6, -198630844), n = this.ii(n, t, i, a, e[o + 7], 10, 1126891415), a = this.ii(a, n, t, i, e[o + 14], 15, -1416354905), i = this.ii(i, a, n, t, e[o + 5], 21, -57434055), t = this.ii(t, i, a, n, e[o + 12], 6, 1700485571), n = this.ii(n, t, i, a, e[o + 3], 10, -1894986606), a = this.ii(a, n, t, i, e[o + 10], 15, -1051523), i = this.ii(i, a, n, t, e[o + 1], 21, -2054922799), t = this.ii(t, i, a, n, e[o + 8], 6, 1873313359), n = this.ii(n, t, i, a, e[o + 15], 10, -30611744), a = this.ii(a, n, t, i, e[o + 6], 15, -1560198380), i = this.ii(i, a, n, t, e[o + 13], 21, 1309151649), t = this.ii(t, i, a, n, e[o + 4], 6, -145523070), n = this.ii(n, t, i, a, e[o + 11], 10, -1120210379), a = this.ii(a, n, t, i, e[o + 2], 15, 718787259), i = this.ii(i, a, n, t, e[o + 9], 21, -343485551), t = this.safe_add(t, r), i = this.safe_add(i, s), a = this.safe_add(a, l), n = this.safe_add(n, c)
                }
                return [t, i, a, n]
            }, e.binl2hex = function (e) {
                for (var t = "", i = 0; i < 4 * e.length; i++) t += "0123456789abcdef".charAt(e[i >> 2] >> i % 4 * 8 + 4 & 15) + "0123456789abcdef".charAt(e[i >> 2] >> i % 4 * 8 & 15);
                return t
            }, e.binl2b64 = function (e) {
                for (var t = "", i = 0; i < 32 * e.length; i += 6) t += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(e[i >> 5] << i % 32 & 63 | e[i >> 6] >> 32 - i % 32 & 63);
                return t
            }, e.str2binl = function (e) {
                for (var t = 1 + (e.length + 8 >> 6), i = new Array(16 * t), a = 0; a < 16 * t; a++) i[a] = 0;
                for (a = 0; a < e.length; a++) i[a >> 2] |= (255 & e.charCodeAt(a)) << a % 4 * 8;
                return i[a >> 2] |= 128 << a % 4 * 8, i[16 * t - 2] = 8 * e.length, i
            }, e.strw2binl = function (e) {
                for (var t = 1 + (e.length + 4 >> 5), i = new Array(16 * t), a = 0; a < 16 * t; a++) i[a] = 0;
                for (a = 0; a < e.length; a++) i[a >> 1] |= e.charCodeAt(a) << a % 2 * 16;
                return i[a >> 1] |= 128 << a % 2 * 16, i[16 * t - 2] = 16 * e.length, i
            }, e.hexMD5 = function (e) {
                return this.binl2hex(this.coreMD5(this.str2binl(e)))
            }, e.hexMD5w = function (e) {
                return this.binl2hex(this.coreMD5(this.strw2binl(e)))
            }, e.b64MD5 = function (e) {
                return this.binl2b64(this.coreMD5(this.str2binl(e)))
            }, e.b64MD5w = function (e) {
                return this.binl2b64(this.coreMD5(this.strw2binl(e)))
            }, e.calcMD5 = function (e) {
                return this.binl2hex(this.coreMD5(this.str2binl(e)))
            }, e
        }(), o.QMD5Util = r, i.default = a.framework.QMD5Util
    }, {}],
    8: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = Laya.Handler,
            l = e("./QSequenceItem");
        n = a || (a = {}), o = n.framework || (n.framework = {}), r = function () {
            function e() {
                this.listItem = new Array, this.autoRecovery = !0, this.time = 0
            }
            return e.create = function (t) {
                var i;
                return void 0 === t && (t = !0), e.poolSequence.length > 0 && (i = e.poolSequence.shift()), null == i && (i = new e), i.autoRecovery = t, i
            }, e.prototype.clear = function () {
                return this.time = 0, Laya.timer.clear(this, this.update), this
            }, e.prototype.recovery = function () {
                e.poolSequence.push(this.clear())
            }, e.prototype.destroy = function () {
                if (null != this.listItem)
                    for (var e = this.listItem.length - 1; e >= 0; e--) this.listItem[e].recovery(), this.listItem.splice(e, 1);
                this.recovery()
            }, e.prototype.add = function (e, t, i, a) {
                void 0 === a && (a = null);
                var n = s.create(i, t, a, !1),
                    o = new l.default(e, n);
                this.listItem.push(o)
            }, e.prototype.start = function () {
                this.time = 0, Laya.timer.frameLoop(1, this, this.update)
            }, e.prototype.update = function () {
                if (this.listItem.length > 0) {
                    this.time += .001 * Laya.timer.delta;
                    for (var e = this.listItem.length - 1; e >= 0; e--) {
                        var t = this.listItem[e];
                        this.time >= t.startTime && (t.handler.run(), t.recovery(), this.listItem.splice(e, 1))
                    }
                    0 == this.listItem.length && (this.autoRecovery ? this.recovery() : this.clear())
                }
            }, e.poolSequence = new Array, e
        }(), o.QSequence = r, i.default = a.framework.QSequence
    }, {
        "./QSequenceItem": 9
    }],
    9: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.framework || (n.framework = {}), r = function () {
            function e(e, t) {
                this.startTime = e, this.handler = t
            }
            return e.prototype.clear = function () {
                return this.startTime = 0, this.handler.clear(), this
            }, e.prototype.recovery = function () {
                e.poolItem.push(this.clear())
            }, e.create = function (t, i) {
                var a = Laya.Pool.getItem("QSequenceItem");
                return e.poolItem.length > 0 && (a = e.poolItem.shift()), null == a && (a = new e(t, i)), a
            }, e.poolItem = new Array, e
        }(), o.QSequenceItem = r, i.default = a.framework.QSequenceItem
    }, {}],
    10: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = Laya.Vector3;
        n = a || (a = {}), o = n.framework || (n.framework = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.sprite3D = null, t.transform = null, t.from = null, t.to = null, t.duration = 0, t.delay = 0, t.executeTime = 0, t.callback = null, t.caller = null, t.isLocal = !1, t.isUpdate = !1, t.tempVec3 = new s, t
            }
            return __extends(t, e), t.prototype.onAwake = function () {
                this.sprite3D = this.owner, this.transform = this.sprite3D.transform
            }, t.prototype.onStart = function () {}, t.prototype.onUpdate = function () {
                this.isUpdate && (this.delay > 0 ? this.delay -= .001 * Laya.timer.delta : this.executeTime < this.duration ? (this.executeTime += .001 * Laya.timer.delta, this.executeOn()) : (this.executeEnd(), null != this.callback && this.callback.apply(this.caller), this.destroy()))
            }, t.prototype.initParam = function (e, t, i, a, n, o, r) {
                void 0 === a && (a = !1), void 0 === n && (n = 0), void 0 === o && (o = null), void 0 === r && (r = null), this.from = e, this.to = t, this.duration = i, this.isLocal = a, this.delay = n, this.callback = o, this.caller = r, this.executeTime = 0, this.isUpdate = !0
            }, t.prototype.executeOn = function () {}, t.prototype.executeEnd = function () {}, t.prototype.stop = function () {
                this.isUpdate = !1, this.enabled = !1
            }, t
        }(Laya.Script3D), o.QTween = r, i.default = a.framework.QTween
    }, {}],
    11: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("./QTween"),
            l = e("./QUtil");
        n = a || (a = {}), o = n.framework || (n.framework = {}), r = function (e) {
            function t() {
                var t = e.call(this) || this;
                return t.tween = null, t
            }
            return __extends(t, e), t.prototype.executeOn = function () {
                this.isLocal ? this.transform.localPosition = this.tempVec3 : this.transform.position = this.tempVec3
            }, t.prototype.executeEnd = function () {
                this.isLocal ? this.transform.localPosition = this.to : this.transform.position = this.to
            }, t.DoTween = function (e, i, a, n, o, r, s, c, h) {
                void 0 === o && (o = !1), void 0 === r && (r = 0), void 0 === s && (s = null), void 0 === c && (c = null), void 0 === h && (h = Laya.Ease.linearOut);
                var d = e.getComponent(t);
                return l.default.isNullOrEmpty(d) || d.destroy(), (d = e.addComponent(t)).initParam(i, a, n, o, r, s, c), d.tempVec3 = i.clone(), d.tween = Laya.Tween.to(d.tempVec3, {
                    x: a.x,
                    y: a.y,
                    z: a.z
                }, 1e3 * n, h), d
            }, t.prototype.onDestroy = function () {
                l.default.isNullOrEmpty(this.tween) || this.tween.clear()
            }, t
        }(s.default), o.QTweenPosition = r, i.default = a.framework.QTweenPosition
    }, {
        "./QTween": 10,
        "./QUtil": 13
    }],
    12: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r;
        e("./QConst"), e("./QDebug");
        n = a || (a = {}), o = n.framework || (n.framework = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.pixelOffsetX = 0, t.pixelOffsetY = 0, t
            }
            return __extends(t, e), t.prototype.onStart = function () {
                this.uiComponent = this.owner, this.uiComponent.mouseEnabled = !0, this.uiComponent.mouseThrough = !0, this.uiComponent.frameOnce(2, this, this.reposition)
            }, t.prototype.reposition = function () {}, t.prototype.printParams = function () {}, t
        }(Laya.Script), o.QUIAnchor = r, i.default = a.framework.QUIAnchor
    }, {
        "./QConst": 3,
        "./QDebug": 4
    }],
    13: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = Laya.Vector3,
            l = (e("./QConst"), e("./QDebug"), e("../game/data/QGameConst"));
        n = a || (a = {}), o = n.framework || (n.framework = {}), r = function () {
            function e() {}
            return e.vec3ToStr = function (e) {
                return "[" + e.x.toFixed(2) + "," + e.y.toFixed(2) + "," + e.z.toFixed(2) + "]"
            }, e.localNormalize = function (e, t) {
                void 0 === t && (t = 1), e.localPosition = Laya.Vector3.ZERO.clone(), e.localRotation = Laya.Quaternion.DEFAULT.clone(), e.localScale = new s(t, t, t)
            }, e.getMiddlePoint = function (e, t) {
                return new s((e.x + t.x) / 2, (e.y + t.y) / 2, (e.z + t.z) / 2)
            }, e.getRandomInt = function (e, t) {
                var i = t - e,
                    a = Math.random(),
                    n = e + Math.round(i * a);
                return Math.ceil(n)
            }, e.getVector3Zero = function () {
                return new s(0, 0, 0)
            }, e.getVector3One = function () {
                return new s(1, 1, 1)
            }, e.Set2UIElementsPosMiddle = function (e, t, i, a) {
                if (void 0 === a && (a = !0), !a) throw "Not Implemented Exception";
                var n = e.parent;
                if (n == t.parent) {
                    var o = e.width * e.scaleX + i + t.width * t.scaleX,
                        r = n.width / 2 - o / 2;
                    e.x = r + e.pivotX * e.scaleX, t.x = r + e.width * e.scaleX + i + t.pivotX * t.scaleX
                } else console.log("The two UI elements do not have the same parent.")
            }, e.Set2UIElementsPosHoriAlign = function (e, t, i, a) {
                a ? t.x = e.x - e.pivotX * e.scaleX + e.width * e.scaleX + i + t.pivotX * t.scaleX : e.x = t.x - t.pivotX * t.scaleX - i - e.width * e.scaleX + e.pivotX * e.scaleX
            }, e.SetMultiUIPosHori = function (t, i, a) {
                if (a) {
                    for (r = 0; r < t.length; r++)
                        if (s = t[r], 0 != r) {
                            var n = t[r - 1];
                            s.x = n.x + n.width * n.scaleX + i
                        }
                } else {
                    for (var o = (t.length - 1) * i, r = 0; r < t.length; r++) {
                        var s;
                        o += (s = t[r]).width * s.scaleX
                    }
                    var l = t[0].parent;
                    t[0].x = l.width * l.scaleX / 2 - o / 2, e.SetMultiUIPosHori(t, i, !0)
                }
            }, e.CloneImage = function (e, t, i, a) {
                void 0 === t && (t = null), void 0 === i && (i = null), void 0 === a && (a = null);
                var n = new Laya.Image(e.skin);
                return n.x = t || e.x, n.y = i || e.y, (a || e.parent).addChild(n), n
            }, e.isNullOrEmpty = function (e) {
                return null == e || null == e || "string" == typeof e && "" == e
            }, e.GetMusicIndexText = function (e) {
                return e + 1 < 10 ? "0" + (e + 1) : (e + 1).toString()
            }, e.NormalizeColorFromHex = function (e) {
                var t = e.toLowerCase();
                if (t && /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/.test(t)) {
                    if (4 === t.length) {
                        for (var i = "#", a = 1; a < 4; a += 1) i += t.slice(a, a + 1).concat(t.slice(a, a + 1));
                        t = i
                    }
                    var n = [];
                    for (a = 1; a < 7; a += 2) n.push(parseInt("0x" + t.slice(a, a + 2)));
                    console.log("NormalizeColor(" + n[0] + "," + n[1] + "," + n[2] + ",1.00) = new Laya.Vector4(" + (n[0] / 255).toFixed(2) + "," + (n[1] / 255).toFixed(2) + "," + (n[2] / 255).toFixed(2) + ",1.00) //" + t + "ff")
                } else console.log("Format error at " + t)
            }, e.setCameraFov = function (e) {}, e.getHeightWidthRatio = function () {
                return e.readHeightWidthRatio
            }, e.getScreenRadio = function () {
                return Laya.Browser.height / Laya.Browser.width
            }, e.getHeightWidthRatioSquare = function () {
                return -1 == e.readHeightWidthRatioSquare && (e.readHeightWidthRatioSquare = e.getHeightWidthRatio() * e.getHeightWidthRatio()), e.readHeightWidthRatioSquare
            }, e.getSceneChildByMultiPath = function (t, i) {
                var a, n = i.split("/");
                if (!e.isNullOrEmpty(n) && n.length > 0 && (a = t.getChildByName(n[0]), !e.isNullOrEmpty(a) && n.length > 1))
                    for (var o = 1; o < n.length; o++) this.isNullOrEmpty(a) || (a = a.getChildByName(n[o]));
                return a
            }, e.getChildByMultiPath = function (t, i) {
                var a = null,
                    n = i.split("/");
                if (!e.isNullOrEmpty(n) && n.length > 0) {
                    a = t;
                    for (var o = 0; o < n.length; o++) this.isNullOrEmpty(a) || (a = a.getChildByName(n[o]))
                }
                return a
            }, e.setVector3 = function (e, t, i, a) {
                e.x = t, e.y = i, e.z = a
            }, e.setTimerScale = function (e) {
                Laya.timer.scale = e
            }, e.changeLayer = function (e, t) {
                e.layer = t;
                for (var i = 0; i < e.numChildren; i++) this.changeLayer(e.getChildAt(i), t)
            }, e.Vec3MultiplyConst = function (e, t, i) {
                return i.x = e.x * t, i.y = e.y * t, i.z = e.z * t, i
            }, e.deg2Rad = function (e) {
                return e * Math.PI / 180
            }, e.getIdByPrefix = function (e, t) {
                var i = e.indexOf(t);
                return -1 != i ? (i += t.length, parseInt(e.substring(i, e.length))) : -1
            }, e.assignValueToVec3 = function (e, t, i, a) {
                e.x = t, e.y = i, e.z = a
            }, e.biReport = function (e, t) {
                void 0 === t && (t = null), tywx.BiLog.clickStat(e, t)
            }, e.BeginNumRoll = function (e, t, i, a, n, o, r, s, c, h) {
                void 0 === a && (a = 0), void 0 === n && (n = null), void 0 === o && (o = null), void 0 === r && (r = null), void 0 === s && (s = .5), void 0 === c && (c = 0), void 0 === h && (h = !1);
                var d = {
                        rollCounter: 0,
                        rollValue: t
                    },
                    p = {
                        _rollingText: function (e, t, i, a, n, o, r, s, c, h) {
                            n == l.default.NumRollType.AddType ? t.rollValue += t.rollCounter * s : n == l.default.NumRollType.ReduceType && (t.rollValue -= t.rollCounter * s), t.rollValue <= a && n == l.default.NumRollType.AddType || t.rollValue >= a && n == l.default.NumRollType.ReduceType ? (e.text = o + t.rollValue.toFixed(c).toString() + r, t.rollCounter++) : (e.text = o + a.toString() + r, Laya.timer.clear(this, this._rollingText), t.rollCounter = 0, t.rollValue = i, null != h && h())
                        }
                    },
                    u = h && i >= 500 ? Number((i / 500).toFixed(1)) : 1;
                Laya.timer.frameLoop(1, p, p._rollingText, [e, d, t, i, a, n, o, s * u, c, r])
            }, e.labelNumAni = function (e, t, i, a, n, o, r, s) {
                var l = i - t,
                    c = Math.floor(1e3 * a / (l > 0 ? l : -l)),
                    h = {
                        tempValue: t
                    },
                    d = {
                        updateLabel: function (e, t, i, a, n, o, r, s, l) {
                            n ? t.tempValue++ : t.tempValue--, i = s ? s(t.tempValue) : t.tempValue, e.text = o + i + r, t.tempValue == a && (Laya.timer.clear(this, this.updateLabel), l && l())
                        }
                    };
                Laya.timer.loop(c, d, d.updateLabel, [e, h, "", i, l > 0, n || "", o || "", r, s])
            }, e.timestampToDate = function (e) {
                var t = new Date(1e3 * e);
                return 1e4 * t.getFullYear() + 100 * (t.getMonth() + 1) + t.getDate()
            }, e.addMsgParam = function (e, t, i) {
                void 0 === t && (t = !1), void 0 === i && (i = !0), t && (e.params.authorCode = tywx.UserInfo.authorCode), i && (e.params.intClientId = tywx.SystemInfo.intClientId), e.params.gameId = tywx.SystemInfo.gameId, e.params.userId = tywx.UserInfo.userId
            }, e.formatTime = function (e, t) {
                if (void 0 === t && (t = 0), 0 == t) return a = e % 60, ((i = Math.floor(e / 60)) > 9 ? "" : "0") + i + ":" + (a > 9 ? "" : "0") + a;
                var i = Math.floor(e / 60),
                    a = Math.floor(e % 60),
                    n = Math.floor(1e3 * (e - Math.floor(e)));
                return (i > 0 ? (i > 9 ? i : "0" + i) + "'" : "") + (a > 9 ? "" : "0") + a + "''" + (n < 100 ? "0" : "") + (n < 10 ? "0" : "") + n
            }, e.doUIPopAnim = function (e, t) {
                void 0 === t && (t = null), e.scale(0, 0), Laya.Tween.to(e, {
                    scaleX: 1,
                    scaleY: 1
                }, 300, Laya.Ease.backOut, t)
            }, e.doUICloseAnim = function (e, t) {
                void 0 === t && (t = null), Laya.Tween.to(e, {
                    scaleX: 0,
                    scaleY: 0
                }, 300, Laya.Ease.linearNone, t)
            }, e.playBtnScaleAni = function (t, i) {
                var a = this;
                void 0 === i && (i = null), this.isStartPlay && (this.isStartPlay = !1, Laya.Tween.to(t, {
                    scaleX: .9,
                    scaleY: .9
                }, 100, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
                    Laya.Tween.to(t, {
                        scaleX: 1,
                        scaleY: 1
                    }, 100, Laya.Ease.linearIn, Laya.Handler.create(a, function () {
                        e.isNullOrEmpty(i) || i.run(), a.isStartPlay = !0
                    }))
                })))
            }, e.playBtnScaleAniTwo = function (t, i) {
                void 0 === i && (i = null), this.isStartPlay && (this.isStartPlay = !1, Laya.Tween.to(t, {
                    scaleX: 1.1,
                    scaleY: 1.1
                }, 100, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
                    var a = this;
                    Laya.Tween.to(t, {
                        scaleX: 1.2,
                        scaleY: 1.2
                    }, 100, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
                        e.isNullOrEmpty(i) || i.run(), a.isStartPlay = !0
                    }))
                })))
            }, e.getIsNeedScreenAdaptive = function () {
                return Laya.Browser.height / Laya.Browser.width >= 2
            }, e.isBSG = function () {
                if (!e.isNullOrEmpty(this.listShieldCity)) {
                    for (var t = 0; t < this.listShieldCity.length; t++)
                        if (tywx.UserInfo.userArea == this.listShieldCity[t]) return !0;
                    return !1
                }
                return !0
            }, e.isComDialogBSG = function () {
                if (!e.isNullOrEmpty(this.listComDialogShieldCity)) {
                    for (var t = 0; t < this.listComDialogShieldCity.length; t++)
                        if (tywx.UserInfo.userArea == this.listComDialogShieldCity[t]) return !0;
                    return !1
                }
                return !0
            }, e.cdnFailover = function () {
                var e = "3dqn.nalrer.cn",
                    t = "3dhw.nalrer.cn"; - 1 != l.default.DownloadUrl.indexOf(e) ? l.default.DownloadUrl = l.default.DownloadUrl.replace(e, t) : -1 != l.default.DownloadUrl.indexOf(t) && (l.default.DownloadUrl = l.default.DownloadUrl.replace(t, e)), console.log("cdnFailover: " + l.default.DownloadUrl)
            }, e.isAndroid = function () {
                return 3 == tywx.UserInfo.systemType
            }, e.isInArray = function (e, t) {
                for (var i = 0; i < e.length; i++)
                    if (e[i] == t) return !0;
                return !1
            }, e.getCommonBg = function (e) {
                var t = new Laya.Image;
                return t.x = 375, t.y = 675, t.width = 1e3, t.height = 3e3, t.anchorX = t.anchorY = .5, t.skin = e, t
            }, e.getScreenPos = function (e) {
                var t = e.parent.localToGlobal(new Laya.Point(e.x, e.y), !0);
                return new Laya.Vector3(t.x, t.y, 0)
            }, e.getUIPos = function (e) {
                var t = e.parent.localToGlobal(new Laya.Point(e.x, e.y), !0);
                return new Laya.Vector3(t.x, t.y)
            }, e.RegisterBtnClickWithAnim = function (e, t, i, a) {
                isNaN(e.anchorX) && (e.anchorX = .5, e.x += e.width * e.scaleX * .5), isNaN(e.anchorY) && (e.anchorY = .5, e.y += e.height * e.scaleY * .5);
                var n = e.scaleX,
                    o = e.scaleY,
                    r = !1;
                e.on(Laya.Event.MOUSE_DOWN, this, function () {
                    Laya.Tween.to(e, {
                        scaleX: .9 * n,
                        scaleY: .9 * o
                    }, 50, Laya.Ease.linearIn), r = !1
                }), e.on(Laya.Event.MOUSE_OUT, this, function () {
                    r || (Laya.Tween.to(e, {
                        scaleX: n,
                        scaleY: o
                    }, 50, Laya.Ease.linearIn), r = !0)
                }), e.on(Laya.Event.MOUSE_UP, this, function (t, a) {
                    r || (Laya.Tween.to(e, {
                        scaleX: n,
                        scaleY: o
                    }, 50, Laya.Ease.linearIn), i.apply(t, a), r = !0)
                }, [t, a])
            }, e.compareVersion = function (e, t) {
                if (e == t) return !0;
                e = e.split("."), t = t.split(".");
                for (var i = Math.max(e.length, t.length); e.length < i;) e.push("0");
                for (; t.length < i;) t.push("0");
                for (var a = 0; a < i; a++)
                    if (parseInt(e[a]) < parseInt(t[a])) return !1;
                return !0
            }, e.readHeightWidthRatio = -1, e.readHeightWidthRatioSquare = -1, e.isStartPlay = !0, e.isStartPlayTwo = !0, e
        }(), o.QUtil = r, i.default = a.framework.QUtil
    }, {
        "../game/data/QGameConst": 24,
        "./QConst": 3,
        "./QDebug": 4
    }],
    14: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../framework/QUtil");
        n = a || (a = {}), o = n.core || (n.core = {}), r = function () {
            function e(e) {
                this.addToStage = !0, this.dicSubUI = {}, this.uiName = e
            }
            return e.prototype.start = function () {
                this.registerEvent(), this.init(), this.scene.width = 1200, this.scene.height = 1800, this.addToStage && Laya.stage.addChild(this.scene), this.postInit()
            }, e.prototype.destroy = function () {
                this.unregisterEvent(), this.doDestroy(), Laya.timer.clearAll(this), s.default.isNullOrEmpty(this.scene) || Laya.stage.removeChild(this.scene)
            }, e.prototype.setActive = function (e) {
                this.scene.visible = e
            }, e.prototype.init = function () {}, e.prototype.postInit = function () {}, e.prototype.registerEvent = function () {}, e.prototype.unregisterEvent = function () {}, e.prototype.doEnabled = function () {}, e.prototype.doDisabled = function () {}, e.prototype.doDestroy = function () {}, e.prototype.setParam = function (e) {}, e
        }(), o.QBaseUI = r, i.default = a.core.QBaseUI
    }, {
        "../../framework/QUtil": 13
    }],
    15: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = Laya.Handler,
            l = e("../../framework/QEventMgr"),
            c = e("../data/QGameConst"),
            h = e("../data/QEventType"),
            d = e("../../framework/QHttp"),
            p = (e("../../framework/QDebug"), e("../data/QGameData"));
        n = a || (a = {}), o = n.core || (n.core = {}), r = function () {
            function e() {
                this.dicConfig = {}, this.loadCfgType = 0, this.MAX_CONFIG_NUM = 5, this.loadCount = 0, this.isAllCfgLoadFinished = !1, this.configPathPrefix = "res/config/"
            }
            return Object.defineProperty(e, "instance", {
                get: function () {
                    return null == this._instance && (this._instance = new e), this._instance
                },
                enumerable: !0,
                configurable: !0
            }), e.prototype.loadAllCfg = function (e) {
                void 0 === e && (e = !0);
                var t = void 0;
                for (t in c.default.QCfgType)(new d.default).get(this.getCfgPathByType(c.default.QCfgType[t]), this, this.getOnlineConfigDone, [c.default.QCfgType[t]])
            }, e.prototype.loadSingleCfg = function (e) {
                p.default.instance.useLocalRes || !Laya.Browser.onMiniGame ? Laya.loader.load(this.getCfgPathByType(e), s.create(this, this.getLocalConfigDone, [e]), null, Laya.Loader.BUFFER) : (new d.default).get(c.default.DownloadUrl + this.getCfgPathByType(e) + "?v=" + Math.sqrt(Math.random()), this, this.getOnlineConfigDone, [e])
            }, e.prototype.isCfgLoadFinished = function (e) {
                return 0 != (this.loadCfgType & e)
            }, e.prototype.getLocalConfigDone = function (e) {
                var t = Laya.loader.getRes(this.getCfgPathByType(e)),
                    i = new Laya.Byte(t),
                    a = i.readUTFBytes(i.length);
                this.dicConfig[e] = JSON.parse(a), this.doCfgLoadFinish(e)
            }, e.prototype.getOnlineConfigDone = function (e) {
                var t = this;
                if (200 == e.state) {
                    var i = e.data,
                        a = e.args;
                    this.dicConfig[e.args] = i, this.doCfgLoadFinish(a)
                } else {
                    var n = e.args;
                    Laya.timer.once(3e3, this, function () {
                        t.loadSingleCfg(n)
                    }), console.log("getOnlineConfigDone Failed: " + e.msg)
                }
            }, e.prototype.doCfgLoadFinish = function (e) {
                this.loadCfgType |= e;
                var t, i = !0;
                for (t in c.default.QCfgType)
                    if (!this.isCfgLoadFinished(c.default.QCfgType[t])) {
                        i = !1;
                        break
                    } i && !this.isAllCfgLoadFinished && (this.isAllCfgLoadFinished = !0, this.loadCfgType = 0, p.default.instance.initData(), p.default.instance.initServerData(), l.default.instance.sendEvent(h.default.RES_LOAD_FINISHED, c.default.QResType.Config))
            }, e.prototype.getCfgPathByType = function (e) {
                return this.configPathPrefix + c.default.QCfgName[e] + ".json"
            }, e.prototype.getCarInfoByLevelId = function (e) {
                return this.dicConfig[c.default.QCfgType.Car][e]
            }, e
        }(), o.QCfgMgr = r, i.default = a.core.QCfgMgr
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QHttp": 6,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25
    }],
    16: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../framework/QEventMgr"),
            l = e("../data/QGameConst"),
            c = e("../data/QEventType"),
            h = e("./QResMgr"),
            d = e("./QUIMgr"),
            p = (e("../../framework/QDebug"), e("./QCfgMgr")),
            u = e("../data/QGameData"),
            g = e("./QWxSDK"),
            m = e("./QSoundMgr");
        n = a || (a = {}), o = n.core || (n.core = {}), r = function () {
            function e() {
                this.needLoadAllRes = !0, this.loadedResType = 0, this.allResLoadFinished = !1
            }
            return Object.defineProperty(e, "instance", {
                    get: function () {
                        return null == this._instance && (this._instance = new e, this._instance.registerEvent()), this._instance
                    },
                    enumerable: !0,
                    configurable: !0
                }), e.prototype.registerEvent = function () {
                    s.default.instance.register(c.default.RES_LOAD_FINISHED, this.resLoadFinishedHandler, this)
                }, e.prototype.unregisterEvent = function () {
                    s.default.instance.unregister(c.default.RES_LOAD_FINISHED, this.resLoadFinishedHandler, this)
                }, e.prototype.init = function () {
                    h.default.instance.loadLoadingRes(), this.caleLoadingTime = Laya.Browser.now()
                }, e.prototype.isResLoadFinished = function (e) {
                    return 0 != (this.loadedResType & e)
                }, e.prototype.resLoadFinishedHandler = function (e) {
                    switch (console.log("eeee", e), e) {
                        case l.default.QResType.LoadingViewRes:
                            console.log("加载 LoadingViewRes 花费: " + (Laya.Browser.now() - this.caleLoadingTime)), this.caleLoadingTime = Laya.Browser.now();
                            break;
                        case l.default.QResType.Subpackage:
                            console.log("load Subpackage cost: " + (Laya.Browser.now() - this.caleLoadingTime)), this.caleLoadingTime = Laya.Browser.now();
                            break;
                        case l.default.QResType.Config:
                            console.log("load Config cost: " + (Laya.Browser.now() - this.caleLoadingTime)), this.caleLoadingTime = Laya.Browser.now();
                            break;
                        case l.default.QResType.UIRes:
                            console.log("load UIRes cost: " + (Laya.Browser.now() - this.caleLoadingTime))
                    }
                    console.log("===resLoadFinishedHandler: " + e), e == l.default.QResType.LoadingViewRes ? (d.default.instance.createUI(d.default.UI_Loading), g.default.instance.downloadFileAndUnzip(Laya.Handler.create(this, function () {
                        s.default.instance.sendEvent(c.default.RES_LOAD_FINISHED, l.default.QResType.OnlineZip)
                    }))) : e == l.default.QResType.OnlineZip ? p.default.instance.loadAllCfg() : e == l.default.QResType.Config && (console.log("d.default.instance.PreloadLevelCount", u.default.instance.PreloadLevelCount), u.default.instance.PreloadLevel(u.default.instance.PreloadLevelCount), h.default.instance.loadRes(), m.default.instance.loadSound()), this.loadedResType |= e, this.isResLoadFinished(l.default.QResType.Config) && this.isResLoadFinished(l.default.QResType.UIRes) && this.isResLoadFinished(l.default.QResType.Font) && (this.allResLoadFinished = !0, u.default.instance.fixedTimeRefection(), this.loadedResType = 0)
                },
                e.prototype.showBeOffline = function () {
                    d.default.instance.createUI(d.default.UI_BeOffline)
                }, e
        }(), o.QGameMgr = r, i.default = a.core.QGameMgr
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "./QCfgMgr": 15,
        "./QResMgr": 17,
        "./QSoundMgr": 18,
        "./QUIMgr": 20,
        "./QWxSDK": 21
    }],
    17: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = Laya.Handler,
            l = e("../../framework/QEventMgr"),
            c = e("../data/QGameConst"),
            h = e("../data/QEventType"),
            d = e("./QWxSDK"),
            p = e("../../framework/QTweenPosition"),
            u = e("../../framework/QUtil");
        n = a || (a = {}), o = n.core || (n.core = {}), r = function () {
            function e() {
                this.maxLoadFontCount = 2, this.hasLoadedFontCount = 0, this.fxPath = "", this.fxScenePath = "LayaScene_zcScene/Conventional/zcScene.ls"
            }
            return Object.defineProperty(e, "instance", {
                get: function () {
                    return null == this._instance && (this._instance = new e, this._instance.registerEvent()), this._instance
                },
                enumerable: !0,
                configurable: !0
            }), e.prototype.registerEvent = function () {}, e.prototype.unregisterEvent = function () {}, e.prototype.init = function () {}, e.prototype.loadLoadingRes = function () {
                Laya.loader.load(["res/Texture/bg.jpg", "res/atlas/ui_loading.atlas"], Laya.Handler.create(this, this.completeHandler, [c.default.QResType.LoadingViewRes]))
            }, e.prototype.completeHandler = function (e) {
                console.log("eeeeeeeee", e), l.default.instance.sendEvent(h.default.RES_LOAD_FINISHED, e)
            }, e.prototype.clearLoadingRes = function () {
                Laya.loader.clearTextureRes("res/Texture/bg.jpg"), Laya.loader.clearTextureRes("res/atlas/loading.atlas")
            }, e.prototype.loadRes = function () {
                this.loadOnlineRes(), this.loadFontRes(), this.loadFxScene()
            }, e.prototype.loadFontRes = function () {
                for (var e = this, t = function (t) {
                        var a = new Laya.BitmapFont;
                        a.loadFont("res/font/font_" + (t + 1) + ".fnt", Laya.Handler.create(i, function (t) {
                            Laya.Text.registerBitmapFont("font_" + t, a), e.hasLoadedFontCount++, e.hasLoadedFontCount >= e.maxLoadFontCount && l.default.instance.sendEvent(h.default.RES_LOAD_FINISHED, [c.default.QResType.Font])
                        }, [t + 1]))
                    }, i = this, a = 0; a < this.maxLoadFontCount; a++) t(a)
            }, e.prototype.loadOnlineRes = function () {
                d.default.instance.getSubpackagePath();
                var e = ["res/atlas/ui_real_uncompress.atlas", "res/atlas/ui_car_combine.atlas", "res/atlas/ui_com.atlas", "res/atlas/ui_dialog.atlas", "res/atlas/ui_home.atlas", "res/atlas/ui_shop.atlas", "res/atlas/ui_game.atlas", "res/atlas/ui_effexts.atlas", "res/atlas/ui_common2.atlas", "res/atlas/ui_achieve.atlas", "res/ui_particle/aniOne.ani", "res/ui_particle/gainTreasureCoin.ani", "res/ui_particle/gainTreasureDiamond.ani", "res/ui_particle/hand.ani"];
                e.push("res/atlas/ui_car.atlas"), Laya.loader.load(e, s.create(this, this.completeHandler, [c.default.QResType.UIRes]))
            }, e.prototype.loadFx = function () {}, e.prototype.onLoadPartSuccess = function (e) {}, e.prototype.playFxMoveAni = function (e, t, i) {
                void 0 === i && (i = .35)
            }, e.prototype.removePartFx = function () {}, e.prototype.loadFxScene = function () {
                this.fxScenePath = "subpackage/res/" + this.fxScenePath, Laya.loader.create(this.fxScenePath, Laya.Handler.create(this, this.loadFxSceneFinished))
            }, e.prototype.loadFxSceneFinished = function () {
                this.fxScene = Laya.loader.getRes(this.fxScenePath), this.camera = this.fxScene.getChildByName("Camera"), this.camera.orthographic = !0, this.camera.orthographicVerticalSize *= u.default.getHeightWidthRatio(), this.fxStar = this.fxScene.getChildByName("particleStar"), this.fxWater = this.fxScene.getChildByName("water_drop"), this.fxStar.active = !1, this.fxWater.active = !1, Laya.Pool.recover("fxStar", this.fxStar), Laya.Pool.recover("fxWater", this.fxWater)
            }, e.prototype.playFxAni = function (e, t, i, a, n) {
                var o;
                void 0 === e && (e = 0), void 0 === a && (a = .8), this.fxScene.removeSelf(), Laya.stage.addChild(this.fxScene), e == c.default.QPlayFxType.fxStar ? (o = Laya.Pool.getItem("fxStar")) || (o = this.fxStar.clone()) : e == c.default.QPlayFxType.fxWater && ((o = Laya.Pool.getItem("fxWater")) || (o = this.fxWater.clone())), o.active = !0, this.fxScene.addChild(o);
                var r = Laya.Vector3.ZERO.clone(),
                    s = Laya.Vector3.ZERO.clone();
                this.camera.convertScreenCoordToOrthographicCoord(t, r), this.camera.convertScreenCoordToOrthographicCoord(i, s);
                var d = a;
                p.default.DoTween(o, r, s, d, !0), Laya.timer.once(1e3 * d + 500, this, function (t) {
                    t.active = !1, e == c.default.QPlayFxType.fxStar ? (Laya.Pool.recover("fxStar", t), l.default.instance.sendEvent(h.default.FINISH_STAR_PARTICLE, n)) : e == c.default.QPlayFxType.fxWater && Laya.Pool.recover("fxWater", t)
                }, [o])
            }, e.prototype.hideFx = function () {
                u.default.isNullOrEmpty(this.fxStar) || (this.fxStar.active = !1), u.default.isNullOrEmpty(this.fxWater) || (this.fxWater.active = !1)
            }, e
        }(), o.QResMgr = r, i.default = a.core.QResMgr
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QTweenPosition": 11,
        "../../framework/QUtil": 13,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "./QWxSDK": 21
    }],
    18: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../framework/QUtil"),
            l = e("../data/QGameConst"),
            c = e("../../framework/QEventMgr"),
            h = e("../data/QEventType"),
            d = Laya.Handler,
            p = e("../logic/QGamePlay"),
            u = e("../data/QGameData");
        e("./QWxSDK");
        n = a || (a = {}), o = n.core || (n.core = {}), r = function () {
            function e() {
                this.path = "subpackage/res/sound/", this.isSoundOn = !0, this.dicAudioContext = {}
            }
            return Object.defineProperty(e, "instance", {
                get: function () {
                    return null == e._instance && (e._instance = new e), e._instance
                },
                enumerable: !0,
                configurable: !0
            }), e.prototype.loadSound = function () {
                for (var t = [this.path + e.BuyCar + e.suffix_mp3, this.path + e.Merge + e.suffix_mp3, this.path + e.Countdown + e.suffix_mp3, this.path + e.Click + e.suffix_mp3, this.path + e.Win + e.suffix_mp3, this.path + e.Lose + e.suffix_mp3, this.path + e.Miss + e.suffix_mp3], i = 1; i <= 5; i++) t.push(this.path + "find" + i + e.suffix_mp3);
                Laya.loader.load(t, d.create(this, this.completeHandler, [l.default.QResType.Sound]), null, Laya.Loader.SOUND)
            }, e.prototype.completeHandler = function (e) {
                c.default.instance.sendEvent(h.default.RES_LOAD_FINISHED, e), Laya.SoundManager.autoReleaseSound = !1
            }, e.prototype.setSoundState = function (e) {
                this.isSoundOn = e, u.default.instance.setCurSoundState(e), e ? p.default.instance.isInGame || this.playBgm() : Laya.SoundManager.stopMusic()
            }, e.prototype.playBgm = function () {}, e.prototype.stopBgm = function () {
                this.isSoundOn && (Laya.SoundManager.stopMusic(), this.bgmChannel = null)
            }, e.prototype.resumeBgm = function () {
                s.default.isNullOrEmpty(this.bgmChannel) || p.default.instance.isInGame || this.playBgm()
            }, e.prototype.playSfx = function (e, t, i) {
                1 == window.isGameSound && Laya.SoundManager.playSound("subpackage/res/sound/" + e + ".mp3")
            }, e.prototype.stopSfx = function (e, t) {
                void 0 === t && (t = ".mp3"), this.isSoundOn && Laya.SoundManager.stopSound(this.path + e + t)
            }, e.BuyCar = "buy_car", e.Merge = "merge", e.Countdown = "countdown", e.Click = "click", e.Win = "win", e.Lose = "lose", e.Miss = "miss", e.suffix_mp3 = ".mp3", e.suffix_wav = ".wav", e
        }(), o.QSoundMgr = r, i.default = a.core.QSoundMgr
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QGamePlay": 27,
        "./QWxSDK": 21
    }],
    19: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../framework/QUtil"),
            l = e("../../framework/QEventMgr"),
            c = e("../data/QEventType"),
            h = e("../data/QGameData");
        e("../../framework/QDebug");
        n = a || (a = {}), o = n.core || (n.core = {}), r = function () {
            function e() {
                this.isTimerInited = !1, this.listUnsentMsg = []
            }
            return Object.defineProperty(e, "instance", {
                get: function () {
                    return null == e._instance && (e._instance = new e), e._instance
                },
                enumerable: !0,
                configurable: !0
            }), e.prototype.init = function () {
                var e = this;
                console.log("tywx.NotificationCenter.listen TCP_OPENED TCP_CLOSE TCP_RECEIVE"), console.log("tywx", tywx), tywx.NotificationCenter.listen(tywx.EventType.TCP_OPENED, function (t) {
                    e.isTimerInited || (e.isTimerInited = !0, e.heartBeatMsg = {
                        cmd: "user5",
                        params: {
                            action: "heartbeat",
                            userId: tywx.UserInfo.userId,
                            gameId: 9999,
                            intClientId: tywx.SystemInfo.intClientId,
                            must: 1
                        }
                    }, Laya.timer.loop(3e3, e, e.update)), e.bindUser()
                }, this), tywx.NotificationCenter.listen(tywx.EventType.TCP_CLOSE, function (t) {
                    console.log("TCP断开连接"), e.isTimerInited = !1, Laya.timer.clear(e, e.update)
                }, this), tywx.NotificationCenter.listen(tywx.EventType.TCP_RECEIVE, function (e) {
                    l.default.instance.sendEvent(c.default.RECEIVE_MSG, e)
                }, this)
            }, e.prototype.update = function () {
                console.log("tcp 心跳"), this.sendMsg(this.heartBeatMsg), tywx.TCPClient.reconnet()
            }, e.prototype.sendAllUnsentMsg = function () {
                for (var e = this.listUnsentMsg.length - 1; e >= 0; e--) this.sendMsg(this.listUnsentMsg[e]), this.listUnsentMsg.splice(e, 1)
            }, e.prototype.sendMsg = function (e) {
                tywx.TCPClient.connectStatus != tywx.TCPClient.CONNECT_STATUS_OK ? this.listUnsentMsg.push(e) : tywx.TCPClient.sendMsg(e)
            }, e.prototype.bindUser = function () {
                var e = {
                    apiVersion: 5,
                    cmd: "bind_user5",
                    namespace: "hall",
                    params: {}
                };
                s.default.addMsgParam(e, !0), e.params.gameId = 9999, this.sendMsg(e)
            }, e.prototype.saveMainItemData = function (e, t) {
                if (h.default.instance.isSyncOnline && !s.default.isNullOrEmpty(e) && null != t) {
                    var i = {
                        cmd: "skiddycar",
                        params: {
                            action: "save_data_item",
                            key: e,
                            value: t
                        }
                    };
                    s.default.addMsgParam(i), this.sendMsg(i)
                } else null == t && console.log("saveMainItemData: key: " + e + ", value: " + t)
            }, e.prototype.saveMainItemDatas = function (e) {
                var t = {
                    cmd: "skiddycar",
                    params: {
                        action: "save_data_items",
                        data: e
                    }
                };
                s.default.addMsgParam(t), this.sendMsg(t)
            }, e.prototype.saveSubItemData = function (e, t, i) {
                var a = {
                    cmd: "skiddycar",
                    params: {
                        action: "save_data_item_attr",
                        key: e,
                        value: i
                    }
                };
                s.default.addMsgParam(a), s.default.isNullOrEmpty(t) || (a.params.attr = t), this.sendMsg(a)
            }, e
        }(), o.QTcpMgr = r, i.default = a.core.QTcpMgr
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../data/QEventType": 23,
        "../data/QGameData": 25
    }],
    20: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../data/QGameConst"),
            l = e("../../framework/QUtil"),
            c = (e("../../framework/QDebug"), e("../view/QTipsView")),
            h = e("../view/QGameView"),
            d = e("../view/QLoadingView"),
            p = e("../view/QMainPageScene"),
            u = e("../view/QShopDialog"),
            g = e("../view/QAddRevenueDialog"),
            m = e("../view/QRankDialog"),
            f = e("../view/QDailyCheckDialog"),
            y = e("../view/QBeOfflineDialog"),
            v = e("../view/QGainDiamondDialog"),
            w = e("../view/QGainCarDialog"),
            I = e("../view/QCollectDialog"),
            S = e("./QWxSDK"),
            x = e("./QCfgMgr"),
            _ = e("../view/QFreeLevelUp"),
            C = e("../data/QGameData"),
            T = e("../view/QJcdlTypeView"),
            b = e("../view/QSupplyTipDialog"),
            k = e("../view/QEveryGiftDialog"),
            L = e("../view/QCommonDialogPage"),
            D = e("../view/QGainStaminaDialog"),
            G = e("../view/QBoxRewardDialog"),
            A = e("../view/QGameBoxView"),
            B = e("../view/QReviveView"),
            N = e("../view/QNewResultView"),
            M = e("../view/QGongZhongHaoDialog"),
            U = e("../view/QGZHAwardDialog"),
            R = e("../view/QNewLottyDialog"),
            E = e("../view/QWaitLoadDialog"),
            P = e("../view/QAchievementDialog"),
            Q = e("../view/QWelfareDialog"),
            O = e("../view/QKeFuDialog"),
            X = e("../view/QXiaoChengXuDialog"),
            Y = e("../view/QWelfareRewardDialog"),
            F = e("../view/QInvitePlayerRewardDialog"),
            V = e("../view/QFloatWindowDialog"),
            H = e("../view/QGameGuideView"),
            J = e("../view/QInviteFriendBoxDialog");
        n = a || (a = {}), o = n.core || (n.core = {}), r = function () {
            function e() {
                this.listAllUI = [], this.needShowBanner = !1
            }
            return Object.defineProperty(e, "instance", {
                get: function () {
                    return null == this._instance && (this._instance = new e, this._instance.registerEvent()), this._instance
                },
                enumerable: !0,
                configurable: !0
            }), e.prototype.registerEvent = function () {}, e.prototype.unregisterEvent = function () {}, e.prototype.init = function () {}, e.prototype.createUI = function (t, i) {
                var a;
                void 0 === i && (i = null);
                for (var n = !1, o = 0; o < this.listAllUI.length; o++)
                    if (this.listAllUI[o].uiName == t) {
                        n = !0;
                        break
                    } if (!n) {
                    switch (t) {
                        case e.UI_Result:
                            a = new N.default(t);
                            break;
                        case e.UI_Game:
                            a = new h.default(t);
                            break;
                        case e.UI_Loading:
                            a = new d.default(t);
                            break;
                        case e.UI_Tip:
                            a = new c.default(t);
                            break;
                        case e.UI_Stamina:
                            a = new D.default(t);
                            break;
                        case e.UI_MainPage:
                            a = new p.default(t);
                            break;
                        case e.UI_AddRevenueDialog:
                            a = new g.default(t);
                            break;
                        case e.UI_RankDialog:
                            a = new m.default(t);
                            break;
                        case e.UI_ShopDialog:
                            a = new u.default(t);
                            break;
                        case e.UI_DailyCheck:
                            a = new f.default(t);
                            break;
                        case e.UI_CommonPage:
                            a = new L.default(t);
                            break;
                        case e.UI_BeOffline:
                            a = new y.default(t);
                            break;
                        case e.UI_GainDiamond:
                            a = new v.default(t);
                            break;
                        case e.UI_GainCar:
                            a = new w.default(t);
                            break;
                        case e.UI_Lottery:
                            a = new R.default(t);
                            break;
                        case e.UI_CollectDialog:
                            a = new I.default(t);
                            break;
                        case e.UI_GongZhongHao:
                            a = new M.default(t);
                            break;
                        case e.UI_GZHAward:
                            a = new U.default(t);
                            break;
                        case e.UI_Revive:
                            a = new B.default(t);
                            break;
                        case e.UI_Supply_Tips:
                            break;
                        case e.UI_FreeLevelUp:
                            a = new _.default(t);
                            break;
                        case e.UI_SupplyDialog:
                            a = new b.default(t);
                            break;
                        case e.UI_EveryGift:
                            a = new k.default(t);
                            break;
                        case e.UI_BoxReward:
                            a = new G.default(t);
                            break;
                        case e.UI_BoxDialog:
                            a = new A.default(t);
                            break;
                        case e.UI_WaitLoadDialog:
                            a = new E.default(t);
                            break;
                        case e.UI_AchievementDialog:
                            a = new P.default(t);
                            break;
                        case e.UI_WelfareDialog:
                            a = new Q.default(t);
                            break;
                        case e.UI_KeFuDialog:
                            a = new O.default(t);
                            break;
                        case e.UI_XiaoChengXuDialog:
                            a = new X.default(t);
                            break;
                        case e.UI_WelfareReward:
                            a = new Y.default(t);
                            break;
                        case e.UI_FloatWindow:
                            a = new V.default(t);
                            break;
                        case e.UI_GameGuideDialog:
                            a = new H.default(t);
                            break;
                        case e.UI_InviteFriendBoxDialog:
                            a = new J.default(t);
                            break;
                        case e.UI_InvitePlayerRewardDialog:
                            a = new F.default(t)
                    }
                    this.listAllUI.push(a)
                }
                l.default.isNullOrEmpty(a) || (a.start(), a.setParam(i), a.setActive(!0))
            }, e.prototype.checkCommonBanner = function (t, i) {
                return void 0 === i && (i = null), !!(t != e.UI_CommonPage || i && i.isLotteryEnter)
            }, e.prototype.showBannerFun = function () {
                this.needShowBanner && S.default.instance.showBannerAd(!1)
            }, e.prototype.getUIShowState = function (e) {
                for (var t = !1, i = 0; i < this.listAllUI.length; i++)
                    if (this.listAllUI[i].uiName == e) {
                        t = !0;
                        break
                    } return t
            }, e.prototype.removeUI = function (e, t) {
                void 0 === t && (t = !0);
                for (var i = 0; i < this.listAllUI.length; i++)
                    if (this.listAllUI[i].uiName == e) {
                        this.listAllUI[i].destroy(), this.listAllUI.splice(i, 1), this.isShowBannerUI(e) && !this.containsShowBannerUIInStack() && (console.log("do hide banner: " + e), S.default.instance.hideBannerAd(), this.needShowBanner = !1, Laya.timer.clear(this, this.showBannerFun));
                        break
                    } this.listAllUI.length > 0 && this.isShowBannerUI(this.listAllUI[this.listAllUI.length - 1].uiName) && this.checkCommonBanner(e) && (this.needShowBanner = !0, Laya.timer.clear(this, this.showBannerFun), Laya.timer.frameOnce(5, this, this.showBannerFun)), C.default.instance.isPullBannerFail && this.isShowJcdl(e) && T.default.remove()
            }, e.prototype.longScreen = function () {
                return (Laya.Browser.onMiniGame ? Laya.Browser.window.screen.availWidth : Laya.Browser.window.screen.width) / (Laya.Browser.onMiniGame ? Laya.Browser.window.screen.availHeight : Laya.Browser.window.screen.height) < 375 / 667
            }, e.prototype.isShowJcdl = function (e) {
                var t = x.default.instance.dicConfig[s.default.QCfgType.GameConfig];
                if (!l.default.isNullOrEmpty(t)) {
                    var i = t.noBannerShowJcdlCfg;
                    if (!l.default.isNullOrEmpty(i))
                        for (var a = 0; a < i.length; a++)
                            if (i[a] == e) return !0
                }
                return !1
            }, e.prototype.removeAllUI = function () {
                for (var t = 0; t < this.listAllUI.length; t++) e.instance.removeUI(this.listAllUI[t].uiName)
            }, e.prototype.pullViewJCDL = function (e) {
                l.default.isNullOrEmpty(e) || this.IsShowJcdlUI(e) && C.default.instance.isPullBannerFail && C.default.instance.showJcdl && !C.default.instance.isAuditVersion && 2 == C.default.instance.tutorialState && (T.default.create(), T.default.showSlideListJcdl())
            }, e.prototype.IsShowJcdlUI = function (e) {
                var t = x.default.instance.dicConfig[s.default.QCfgType.GameConfig];
                if (!l.default.isNullOrEmpty(t))
                    for (var i = 0; i < t.noBannerShowJcdlCfg.length; i++)
                        if (t.noBannerShowJcdlCfg[i] == e) return !0;
                return !1
            }, e.DoUIAnim_DialogPop = function (e) {
                isNaN(e.anchorX) && (e.anchorX = .5, e.x += e.width * e.scaleX * .5), isNaN(e.anchorY) && (e.anchorY = .5, e.y += e.height * e.scaleY * .5);
                var t = e.scaleX,
                    i = e.scaleY;
                e.scale(.8 * t, .8 * i), Laya.Tween.to(e, {
                    scaleX: t,
                    scaleY: i
                }, 200, Laya.Ease.expoInOut)
            }, e.RegisterBtnClickWithAnim = function (e, t, i, a) {
                isNaN(e.anchorX) && (e.anchorX = .5, e.x += e.width * e.scaleX * .5), isNaN(e.anchorY) && (e.anchorY = .5, e.y += e.height * e.scaleY * .5);
                var n = e.scaleX,
                    o = e.scaleY,
                    r = !1;
                return e.on(Laya.Event.MOUSE_DOWN, this, function () {
                    Laya.Tween.to(e, {
                        scaleX: .8 * n,
                        scaleY: .8 * o
                    }, 50, Laya.Ease.expoInOut), r = !1
                }), e.on(Laya.Event.MOUSE_OUT, this, function () {
                    r || (Laya.Tween.to(e, {
                        scaleX: n,
                        scaleY: o
                    }, 200, Laya.Ease.expoInOut), r = !0)
                }), e.on(Laya.Event.MOUSE_UP, this, function (t, a) {
                    r || (Laya.Tween.to(e, {
                        scaleX: n,
                        scaleY: o
                    }, 200, Laya.Ease.expoInOut), i.apply(t, a), r = !0)
                }, [t, a])
            }, e.prototype.isShowBannerUI = function (e) {
                if (C.default.instance.curTrackId < 2) return !1;
                var t = x.default.instance.dicConfig[s.default.QCfgType.GameConfig];
                if (!l.default.isNullOrEmpty(t)) {
                    var i = t.listShowBannerUI;
                    if (!l.default.isNullOrEmpty(i))
                        for (var a = 0; a < i.length; a++)
                            if (i[a] == e) return !0
                }
                return !1
            }, e.prototype.containsShowBannerUIInStack = function () {
                for (var e, t = 0; t < this.listAllUI.length; t++)
                    if (e = this.listAllUI[t].uiName, this.isShowBannerUI(e)) return !0;
                return !1
            }, e.UI_Result = 0, e.UI_Game = 1, e.UI_Loading = 2, e.UI_Tip = 3, e.UI_Stamina = 4, e.UI_OnlineGiftDialog = 5, e.UI_MainPage = 6, e.UI_AddRevenueDialog = 7, e.UI_RankDialog = 8, e.UI_ShopDialog = 9, e.UI_DailyCheck = 10, e.UI_CommonPage = 11, e.UI_Revive = 12, e.UI_BeOffline = 13, e.UI_GainDiamond = 14, e.UI_GainCar = 15, e.UI_Lottery = 16, e.UI_CollectDialog = 17, e.UI_GongZhongHao = 18, e.UI_GZHAward = 19, e.UI_Supply = 20, e.UI_Supply_Tips = 21, e.UI_FreeLevelUp = 22, e.UI_JCDL = 23, e.UI_SupplyDialog = 25, e.UI_EveryGift = 26, e.UI_StartAcc = 30, e.UI_BoxDialog = 31, e.UI_BoxReward = 32, e.UI_WaitLoadDialog = 33, e.UI_AchievementDialog = 34, e.UI_WelfareDialog = 35, e.UI_KeFuDialog = 36, e.UI_XiaoChengXuDialog = 37, e.UI_WelfareReward = 38, e.UI_FloatWindow = 39, e.UI_GameGuideDialog = 40, e.UI_InviteFriendBoxDialog = 41, e.UI_InvitePlayerRewardDialog = 42, e
        }(), o.QUIMgr = r, i.default = a.core.QUIMgr
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QUtil": 13,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../view/QAchievementDialog": 30,
        "../view/QAddRevenueDialog": 31,
        "../view/QBeOfflineDialog": 32,
        "../view/QBoxRewardDialog": 33,
        "../view/QCollectDialog": 34,
        "../view/QCommonDialogPage": 35,
        "../view/QDailyCheckDialog": 36,
        "../view/QEveryGiftDialog": 37,
        "../view/QFloatWindowDialog": 38,
        "../view/QFreeLevelUp": 40,
        "../view/QGZHAwardDialog": 41,
        "../view/QGainCarDialog": 42,
        "../view/QGainDiamondDialog": 43,
        "../view/QGainStaminaDialog": 44,
        "../view/QGameBoxView": 45,
        "../view/QGameGuideView": 46,
        "../view/QGameView": 47,
        "../view/QGongZhongHaoDialog": 48,
        "../view/QInviteFriendBoxDialog": 49,
        "../view/QInvitePlayerRewardDialog": 50,
        "../view/QJcdlTypeView": 51,
        "../view/QKeFuDialog": 52,
        "../view/QLoadingView": 53,
        "../view/QMainPageScene": 54,
        "../view/QNewLottyDialog": 55,
        "../view/QNewResultView": 56,
        "../view/QRankDialog": 57,
        "../view/QReviveView": 58,
        "../view/QShopDialog": 59,
        "../view/QSupplyTipDialog": 60,
        "../view/QTipsView": 61,
        "../view/QWaitLoadDialog": 62,
        "../view/QWelfareDialog": 63,
        "../view/QWelfareRewardDialog": 64,
        "../view/QXiaoChengXuDialog": 65,
        "./QCfgMgr": 15,
        "./QWxSDK": 21
    }],
    21: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("./QUIMgr"),
            l = e("../data/QLanguage"),
            c = e("../../framework/QDebug"),
            h = e("../../framework/QUtil"),
            d = e("../data/QGameConst"),
            p = e("../data/QGameData"),
            u = e("../../framework/QEventMgr"),
            g = e("../data/QEventType"),
            m = e("./QCfgMgr"),
            f = e("../data/QBIEvent");
        n = a || (a = {}), o = n.core || (n.core = {}), r = function () {
            function e() {
                this.fakeShareWaitTime = 0, this.dicSharePoint = {}, this.useDefaultShare = !1, this.cancelShareTxt = "您取消了分享，请分享到群！", this.activeShareInfo = {
                    wxActivityId: "",
                    memeberCount: 0,
                    roomLimit: 0
                }, this.bannerChangeCount = 6, this.fakeShareLeaveGameTime = -1, this.fakeShareSuccessCallbackHandler = null, this.lastShareSuccess = !1, this.isCancelShare = !1, this.hasInitVideoCallback = !1, this.isVideoPlaying = !1, this.videoSuccessCallbackHandler = null, this.bannerAd = null, this.showBannerCount = 0, this.bannerShowDuration = 0, this.needRefreshBanner = !1, this.btnGetUserInfo = null, this.GameRecorder = null, this.recorderShareBtn = null, u.default.instance.register(g.default.FAKE_SHARE_RETURN, this.fakeShareReturnHandler, this)
            }
            return Object.defineProperty(e, "instance", {
                get: function () {
                    return null == e._instance && (e._instance = new e), e._instance
                },
                enumerable: !0,
                configurable: !0
            }), e.prototype.init = function () {
                this.gameConfig = m.default.instance.dicConfig[d.default.QCfgType.GameConfig], this.fakeShareWaitTime = this.gameConfig.FakeShareWaitTime, this.cancelShareTxt = this.gameConfig.cancelShareTxt, this.shareConfirmShieldCity = this.gameConfig.shareConfirmShieldCity, this.listActiveShare = this.gameConfig.listActiveShare, this.dicSharePoint[d.default.QShareType.GainDiamond] = "GainDiamond", this.dicSharePoint[d.default.QShareType.resultDoubleAward] = "resultDoubleAward", this.dicSharePoint[d.default.QShareType.offLineEarnings] = "offLineEarnings", this.dicSharePoint[d.default.QShareType.freeCoin] = "freeCoin", this.dicSharePoint[d.default.QShareType.AddLotteryCount] = "AddLotteryCount", this.dicSharePoint[d.default.QShareType.AddRevenue] = "AddRevenue", this.dicSharePoint[d.default.QShareType.doubleDailyCheck] = "doubleDailyCheck", this.dicSharePoint[d.default.QShareType.FreeLevelUp] = "cheliangshengji", this.dicSharePoint[d.default.QShareType.Kongtou] = "kongtou", this.dicSharePoint[d.default.QShareType.initiativeShare] = "once_show", this.dicSharePoint[d.default.QShareType.StartAcc] = "speedup_item", this.dicSharePoint[d.default.QShareType.Ticket] = "ticket_get", this.dicSharePoint[d.default.QShareType.BelleModel] = "unlock_model", this.dicSharePoint[d.default.QShareType.moreMultipleAward] = "NEXT_threetime", this.dicSharePoint[d.default.QShareType.openLootbox] = "Box_single", this.dicSharePoint[d.default.QShareType.doubleClaimLootbox] = "Box_Double", this.dicSharePoint[d.default.QShareType.gainStamina] = "GetEnergy", this.dicSharePoint[d.default.QShareType.revive] = "Revive", this.dicSharePoint[d.default.QShareType.HomeInvite] = "friend", this.dicSharePoint[d.default.QShareType.Hint] = "Tips", this.dicSharePoint[d.default.QShareType.OpenBox] = "Box_single", this.dicSharePoint[d.default.QShareType.BoxAward] = "Box_Double", this.dicSharePoint[d.default.QShareType.ShopPropShare] = "ShopPropShare", this.dicSharePoint[d.default.QShareType.songtili] = "songtili", this.dicSharePoint[d.default.QShareType.songzuanshi] = "songzuanshi", this.useDefaultShare = this.gameConfig.SafeMode, this.defaultShareUrl = this.gameConfig.defaultShare.url, this.defaultShareTitle = this.gameConfig.defaultShare.title, this.defaultSharePointId = this.gameConfig.defaultShare.pointId, this.defaultShareSchemeId = this.gameConfig.defaultShare.schemeId, this.adUnitID_Banner = this.gameConfig.ADUnitID_Banner, this.adUnitID_Video = this.gameConfig.ADUnitID_Video, this.listFakeShareWaitTime = this.gameConfig.listFakeShareWaitTime, this.shareSuccessRate = this.gameConfig.shareSuccessRate, this.jcdlCfg = m.default.instance.dicConfig[d.default.QCfgType.JCDL], h.default.isNullOrEmpty(this.gameConfig.bannerChangeCount) || (this.bannerChangeCount = this.gameConfig.bannerChangeCount)
            }, e.prototype.setUserCloudStorage = function (e, t) {
                Laya.Browser.onMiniGame && Laya.Browser.window.wx.setUserCloudStorage({
                    KVDataList: [{
                        key: e,
                        value: t
                    }],
                    success: function (e) {
                        console.log("setUserCloudStorage: " + JSON.stringify(e))
                    }
                })
            }, e.prototype.InitiativeShare = function (e) {
                return e == d.default.QShareType.initiativeShare
            }, e.prototype.fakeShare = function (e, t, i, a) {
                if (void 0 === a && (a = null), Laya.Browser.onMiniGame) {
                    this.showWxLoading("加载中", 1e3);
                    var n = new Date;
                    this.fakeShareLeaveGameTime = Date.parse(n.toString()), this.fakeShareSuccessCallbackHandler = Laya.Handler.create(t, i, a), this.fakeShareParam = e, this.share(e)
                } else i.apply(this, a)
            }, e.prototype.fakeShareReturnHandler = function () {
                if (p.default.instance.setAllShareTimes(), !h.default.isNullOrEmpty(this.fakeShareSuccessCallbackHandler)) {
                    console.log("fakeShareReturnHandler()");
                    var e = Date.parse((new Date).toString()) - this.fakeShareLeaveGameTime,
                        t = 0;
                    switch (p.default.instance.shareFailStrategy) {
                        case 1:
                            t = p.default.instance.shareFailTimesList[p.default.instance.curShareFailTimes] || 0;
                            break;
                        case 2:
                            t = p.default.instance.shareFailTimeConstant
                    }
                    var i = !1;
                    i = !!this.InitiativeShare(this.fakeShareParam.shareType) || e >= 1e3 * t, this.fakeShareParam.shareType != d.default.QShareType.initiativeShare ? (1 == p.default.instance.shareFailStrategy && p.default.instance.curShareFailTimes >= p.default.instance.shareFailTimesList.length && (i = !0), 1 != p.default.instance.lifeFirstShareState || h.default.isBSG() || (i = !1, p.default.instance.setLifeFirstShareState(2))) : i = !0, this.fakeShareHandle(i)
                }
            }, e.prototype.getShareFailedContent = function () {
                var e = h.default.getRandomInt(0, p.default.instance.shareFailMessages.length - 1);
                return p.default.instance.shareFailMessages[e]
            }, e.prototype.fakeShareHandle = function (e) {
                var t = this;
                if (void 0 === e && (e = !1), e) h.default.isNullOrEmpty(this.fakeShareSuccessCallbackHandler) || (p.default.instance.setCurShareFailTimes(!0), this.fakeShareSuccessCallbackHandler.run());
                else {
                    if (p.default.instance.setCurShareFailTimes(), 2 == this.gameConfig.shareType) return void(Laya.Browser.onMiniGame && Laya.Browser.window.wx.showModal({
                        title: this.gameConfig.showModalTitle,
                        content: this.getShareFailedContent(),
                        confirmText: this.gameConfig.showModalconfirmText,
                        success: function (e) {
                            e.confirm ? (t.fakeShareLeaveGameTime = Date.parse((new Date).toString()), t.showWxLoading("加载中", 1e3), t.share(t.fakeShareParam)) : (t.fakeShareLeaveGameTime = -1, t.fakeShareSuccessCallbackHandler = null, t.fakeShareParam = null)
                        }
                    }));
                    s.default.instance.createUI(s.default.UI_Tip, {
                        text: this.gameConfig.shareAssignTimesFailureHint,
                        delay: 2,
                        type: d.default.QTipsHintType.flock
                    })
                }
                this.fakeShareLeaveGameTime = -1, this.fakeShareSuccessCallbackHandler = null, this.fakeShareParam = null
            }, e.prototype.clearFakeShareHandle = function (e) {
                h.default.isNullOrEmpty(this.fakeShareParam) || h.default.isNullOrEmpty(e) || e.shareType == this.fakeShareParam.shareType && (this.fakeShareLeaveGameTime = -1, this.fakeShareSuccessCallbackHandler = null, this.fakeShareParam = null)
            }, e.prototype.share = function (e) {
                if (this.isCancelShare = !1, console.log("share: " + JSON.stringify(e.shareType)), this.isNetworkConnected()) try {
                    Laya.Browser.onMiniGame && this.doShare(e)
                } catch (e) {
                    c.default.E("share exception: " + e), Laya.Browser.window.wx.showModal({
                        title: l.default.SHARE_FAIL,
                        duration: 2e3
                    })
                }
            }, e.prototype.doShare = function (t) {
                var i, a = this.defaultShareUrl,
                    n = this.defaultShareTitle,
                    o = this.defaultSharePointId,
                    r = this.defaultShareSchemeId,
                    s = tywx.PropagateInterface._cachedShareConfig;
                if (!this.useDefaultShare && !h.default.isNullOrEmpty(s)) {
                    i = this.dicSharePoint[t.shareType];
                    for (var l = !1, c = 0; c < this.listActiveShare.length; c++)
                        if (i == this.listActiveShare[c]) {
                            l = !0;
                            break
                        } if (l && !h.default.isNullOrEmpty(this.activeShareInfo.wxActivityId)) {
                        if (f = s[i], !h.default.isNullOrEmpty(f)) {
                            var d = 1e5,
                                p = Math.random() * d,
                                u = 0,
                                g = 0;
                            for (c = 0; c < f.length; c++) g += f[c].weight;
                            var m = 0;
                            for (c = 0; c < f.length; c++)
                                if (m += f[c].weight / g * d, p < m) {
                                    u = c;
                                    break
                                } return a = f[u].sharePicUrl, n = f[u].shareContent.replace("X", tywx.UserInfo.userProvince), o = f[u].sharePointId, r = f[u].shareSchemeId, console.log("active shareInfo: " + JSON.stringify(f)), console.log("title: " + n + ", url: " + a + ", activeShareInfo: " + JSON.stringify(this.activeShareInfo)), void Laya.Browser.window.wx.updateShareMenu({
                                withShareTicket: !0,
                                isUpdatableMessage: !0,
                                activityId: this.activeShareInfo.wxActivityId,
                                templateInfo: {
                                    parameterList: [{
                                        name: "member_count",
                                        value: this.activeShareInfo.memeberCount.toString()
                                    }, {
                                        name: "room_limit",
                                        value: this.activeShareInfo.roomLimit.toString()
                                    }]
                                },
                                success: function (t) {
                                    Laya.Browser.window.wx.shareAppMessage({
                                        title: n,
                                        imageUrl: a,
                                        query: "inviteCode=" + tywx.UserInfo.userId + "&sourceCode=" + o + "&inviteName=" + tywx.UserInfo.userName + "&imageType=" + r + "&template_type=1&fun_type=activityShare&extraInfo=",
                                        cancel: function (t) {
                                            e.instance.isCancelShare = !0
                                        }
                                    }), tywx.BiLog.clickStat(tywx.clickStatEventType.clickStatEventTypeUserShare, [o, 1, r, 1, "activityShare"])
                                },
                                fail: function (e) {
                                    console.log("updateShareMenu fail !!!!!!!")
                                },
                                complete: function () {
                                    setTimeout(function () {
                                        Laya.Browser.window.wx.updateShareMenu({
                                            withShareTicket: !0,
                                            isUpdatableMessage: !1,
                                            activityId: "",
                                            templateInfo: {}
                                        })
                                    }, 1e3)
                                }
                            })
                        }
                        l = !1
                    }
                    if (!l) {
                        var f = s[i];
                        if (!h.default.isNullOrEmpty(f)) {
                            for (d = 1e5, p = Math.random() * d, u = 0, g = 0, c = 0; c < f.length; c++) g += f[c].weight;
                            for (m = 0, c = 0; c < f.length; c++)
                                if (m += f[c].weight / g * d, p < m) {
                                    u = c;
                                    break
                                } a = f[u].sharePicUrl, n = f[u].shareContent, o = f[u].sharePointId, r = f[u].shareSchemeId, console.log("share: " + i + "," + f[u].shareSchemeId)
                        }
                    }
                }
                Laya.Browser.onMiniGame && (tywx.BiLog.clickStat(tywx.clickStatEventType.clickStatEventTypeUserShare, [o, 1, r]), Laya.Browser.window.wx.shareAppMessage({
                    title: n,
                    imageUrl: a,
                    query: "inviteCode=" + tywx.UserInfo.userId + "&sourceCode=" + o + "&inviteName=" + tywx.UserInfo.userName + "&imageType=" + r + "&extraInfo=",
                    cancel: function (t) {
                        console.log("=====cancel share======================="), e.instance.isCancelShare = !0
                    }
                }))
            }, e.prototype.sendMsgToSub = function (e) {
                Laya.Browser.onMiniGame && Laya.Browser.window.wx.getOpenDataContext().postMessage({
                    message: e
                })
            }, e.prototype.playVideoAd = function (e, t) {
                if (void 0 === t && (t = null), this.isNetworkConnected())
                    if (Laya.Browser.onMiniGame) {
                        if (!this.isVideoPlaying && !h.default.isNullOrEmpty(this.adUnitID_Video)) try {
                            this.doPlayVideoAd(e, t)
                        } catch (t) {
                            this.pushAdVideoError(e.shareType), c.default.E("playVideoAd exception: " + t)
                        }
                    } else t.run()
            }, e.prototype.doPlayVideoAd = function (e, t) {
                var i = this;
                void 0 === t && (t = null), this.isVideoPlaying = !0, this.videoSuccessCallbackHandler = t, Laya.Browser.onMiniGame ? (this.showWxLoading(), this.videoShareParam = e, this.videoAd = Laya.Browser.window.wx.createRewardedVideoAd({
                    adUnitId: this.adUnitID_Video
                }), this.videoAd.load().then(function () {
                    i.videoAd.show().catch(function (t) {
                        i.pushAdVideoError(e.shareType), c.default.E("videoAd.onError0000: " + JSON.stringify(t))
                    })
                }).catch(function (t) {
                    i.pushAdVideoError(e.shareType), c.default.E("videoAd.onError11111: " + JSON.stringify(t))
                }), this.hasInitVideoCallback || (this.hasInitVideoCallback = !0, this.videoAd.onClose(function (e) {
                    e && e.isEnded || void 0 === e ? (null != i.videoSuccessCallbackHandler && i.videoSuccessCallbackHandler.run(), i.isVideoPlaying = !1) : (i.closeVideoTips(), i.isVideoPlaying = !1, u.default.instance.sendEvent(g.default.MANUAL_CLOSE_VIDEO_AD, i.videoShareParam))
                }), this.videoAd.onError(function (t) {
                    c.default.E("onError : " + JSON.stringify(t)), i.pushAdVideoError(e.shareType)
                }))) : (this.videoShareParam = e, null != this.videoSuccessCallbackHandler && this.videoSuccessCallbackHandler.run(), this.isVideoPlaying = !1)
            }, e.prototype.closeVideoTips = function () {
                Laya.Browser.onMiniGame && Laya.Browser.window.wx.showModal({
                    title: "提示",
                    content: "看完视频才可获得奖励哦～",
                    showCancel: !1,
                    success: function (e) {},
                    fail: function () {},
                    complete: function () {}
                })
            }, e.prototype.pushAdVideoError = function (e) {
                console.log("pushAdBVideoError : " + e), this.isVideoPlaying = !1, p.default.instance.isOpenVideoToShare && e != d.default.QShareType.EveryGift && !p.default.instance.isSearch ? (p.default.instance.setNoVideoToShareWay(1), u.default.instance.sendEvent(g.default.PUSH_VIDEO_AD_FAIL, {
                    shareType: e
                })) : s.default.instance.createUI(s.default.UI_Tip, {
                    text: "当前视频已达到上限!"
                })
            }, e.prototype.showBannerAd = function (e) {
                var t = this;
                if (void 0 === e && (e = !1), !h.default.isNullOrEmpty(this.adUnitID_Banner) && Laya.Browser.onMiniGame) {
                    !h.default.isNullOrEmpty(this.bannerAd) && this.needRefreshBanner && (this.bannerAd.destroy(), this.bannerAd = null);
                    var i = Laya.Browser.window.wx.getSystemInfoSync(),
                        a = i.windowWidth,
                        n = i.windowHeight;
                    (2 == tywx.UserInfo.systemType || s.default.instance.longScreen()) && (e = !0);
                    var o = e ? a : 300;
                    h.default.isNullOrEmpty(this.bannerAd) && (this.bannerAd = Laya.Browser.window.wx.createBannerAd({
                        adUnitId: this.adUnitID_Banner,
                        style: {
                            left: (a - o) / 2,
                            top: n - 80,
                            width: o
                        }
                    })), h.default.isNullOrEmpty(this.bannerAd) || (this.bannerAd.style.left = (a - o) / 2, this.bannerAd.style.width = o, 2 == tywx.UserInfo.systemType ? this.bannerAd.style.top = n - this.bannerAd.style.realHeight - 30 : this.bannerAd.style.top = n - this.bannerAd.style.realHeight, Laya.timer.frameOnce(3, this, function () {
                        s.default.instance.needShowBanner && this.bannerAd.show()
                    }), this.bannerShowTime = Date.parse((new Date).toString()), this.bannerAd.onResize(function (e) {
                        2 == tywx.UserInfo.systemType ? t.bannerAd.style.top = n - t.bannerAd.style.realHeight - 30 : t.bannerAd.style.top = n - t.bannerAd.style.realHeight
                    }), this.bannerAd.onError(function (e) {
                        console.log("banner error: " + JSON.stringify(e)), p.default.instance.isPullBannerFail = !0
                    }))
                }
            }, e.prototype.hideBannerAd = function () {
                Laya.Browser.onMiniGame && (h.default.isNullOrEmpty(this.bannerAd) || (this.bannerAd.hide(), this.checkBannerShowTime()))
            }, e.prototype.checkBannerShowTime = function () {
                if (this.bannerShowTime) {
                    var e = Date.parse((new Date).toString());
                    this.bannerShowDuration += Math.floor(.001 * (e - this.bannerShowTime)),
                        this.bannerShowDuration >= p.default.instance.bannerRefreshTime ? (this.needRefreshBanner = !0, this.bannerShowDuration = 0) : this.needRefreshBanner = !1, console.log("banner已显示时长：" + this.bannerShowDuration + " 下次显示刷新banner：" + this.needRefreshBanner)
                }
            }, e.prototype.clickAdIcon = function (e) {
                if (console.log("clickAdIcon: " + e), Laya.Browser.onMiniGame) {
                    if (h.default.isNullOrEmpty(this.jcdlCfg)) return;
                    for (var t = null, i = 0; i < this.jcdlCfg.length; i++)
                        if (e == this.jcdlCfg[i].toappid) {
                            t = this.jcdlCfg[i];
                            break
                        } if (h.default.isNullOrEmpty(t)) return;
                    console.log("clickAdIcon: " + t.gameName);
                    var a = t.icon_id,
                        n = t.toappid,
                        o = t.togame,
                        r = t.icon_skip_type,
                        s = t.path,
                        l = t.second_toappid,
                        c = t.webpages[0].webpage_url,
                        d = t.webpages[0].webpage_id,
                        p = [a, t.webpages[0].config_id, c, n, o, d, 1];
                    if (Laya.Browser.window.wx && Laya.Browser.window.wx.navigateToMiniProgram) return 1 == r ? void Laya.Browser.window.wx.navigateToMiniProgram({
                        appId: n,
                        path: s || "?from=adcross",
                        envVersion: "release",
                        extraData: {
                            from: s || "?from=adcross"
                        },
                        success: function (e) {
                            tywx.BiLog.clickStat(tywx.clickStatEventType.clickStatEventTypeClickDirectToMiniGameSuccess, p), console.log("wx.navigateToMiniProgram success"), console.log(e)
                        },
                        fail: function (e) {
                            tywx.BiLog.clickStat(tywx.clickStatEventType.clickStatEventTypeClickDirectToMiniGameFail, p), console.log("wx.navigateToMiniProgram fail"), console.log(e)
                        },
                        complete: function (e) {
                            console.log("navigateToMiniProgram ==== complete")
                        }
                    }) : void(2 == r ? Laya.Browser.window.wx.navigateToMiniProgram({
                        appId: l,
                        path: s || "?from=adcross",
                        envVersion: "release",
                        extraData: {
                            from: s || "?from=adcross"
                        },
                        success: function (e) {
                            tywx.BiLog.clickStat(tywx.clickStatEventType.clickStatEventTypeClickDirectToMiniGameSuccess, p), console.log("wx.navigateToMiniProgram success"), console.log(e)
                        },
                        fail: function (e) {
                            tywx.BiLog.clickStat(tywx.clickStatEventType.clickStatEventTypeClickDirectToMiniGameFail, p), console.log("wx.navigateToMiniProgram fail"), console.log(e)
                        },
                        complete: function (e) {
                            tywx.AdManager.adNodeObj.resetBtnIcon(), console.log("navigateToMiniProgram ==== complete")
                        }
                    }) : console.log("Unsupported skip type! Please Check!"));
                    if (!c) return;
                    tywx.BiLog.clickStat(tywx.clickStatEventType.clickStatEventTypeClickShowQRCode, p), Laya.Browser.onMiniGame && Laya.Browser.window.wx.previewImage({
                        current: [c],
                        urls: [c],
                        success: function (e) {
                            console.log("预览图片成功！")
                        },
                        fail: function (e) {
                            console.log("预览图片失败！")
                        },
                        complete: function (e) {
                            console.log("预览图片完成")
                        }
                    })
                }
            }, e.prototype.tryGetUserInfo = function () {
                if (1 != p.default.instance.isGetPlayerUserInfoSuccess) {
                    var t = Laya.Browser.clientWidth / d.default.StandardScreenClientWidth * 187,
                        i = Laya.Browser.clientWidth / d.default.StandardScreenClientWidth * 73,
                        a = Laya.Browser.clientWidth / d.default.StandardScreenClientWidth * 95,
                        n = 577;
                    2 == tywx.UserInfo.systemType || s.default.instance.longScreen() ? n -= 50 : 5 == tywx.UserInfo.systemType && (n -= 50);
                    var o = n * (Laya.Browser.clientHeight / d.default.StandardScreenClientHeight);
                    Laya.Browser.onMiniGame && Laya.Browser.window.wx.getSetting({
                        success: function (n) {
                            console.log("是否添加授权按钮：" + n.authSetting["scope.userInfo"] + "  isOpenGZHDialog:" + p.default.instance.isOpenGZHDialog), !n.authSetting["scope.userInfo"] && p.default.instance.isOpenGZHDialog ? (h.default.isNullOrEmpty(e.instance.btnGetUserInfo) || (e.instance.btnGetUserInfo.destroy(), e.instance.btnGetUserInfo = null), e.instance.btnGetUserInfo = Laya.Browser.window.wx.createUserInfoButton({
                                type: "text",
                                text: "",
                                style: {
                                    left: a,
                                    top: o,
                                    width: t,
                                    height: i,
                                    borderRadius: 4,
                                    backgroundColor: "#00ff0000",
                                    color: "#00ffffff",
                                    textAlign: "center"
                                }
                            }), e.instance.btnGetUserInfo.onTap(function (t) {
                                Laya.Browser.window.wx.getSetting({
                                    success: function (t) {
                                        t.authSetting["scope.userInfo"] && (p.default.instance.setIsGetPlayerUserInfoSuccess(), e.instance.destroyGetUserInfoBtn(), e.instance.getUserInfo(this, function (e) {
                                            console.log("userInfo :  " + JSON.stringify(e))
                                        }), u.default.instance.sendEvent(g.default.AUTHORIZE_SUCCESS, [0]))
                                    }
                                })
                            })) : n.authSetting["scope.userInfo"] && (p.default.instance.setIsGetPlayerUserInfoSuccess(), e.instance.destroyGetUserInfoBtn(), e.instance.getUserInfo(this, function (e) {
                                console.log("userInfo :  " + JSON.stringify(e))
                            }), u.default.instance.sendEvent(g.default.AUTHORIZE_SUCCESS, [1]))
                        },
                        fail: function (e) {
                            console.log("gainUserInfo : fail : " + e)
                        }
                    })
                }
            }, e.prototype.showUserInfoBtn = function (e) {
                Laya.Browser.onMiniGame && (h.default.isNullOrEmpty(this.btnGetUserInfo) || (e ? this.btnGetUserInfo.show() : this.btnGetUserInfo.hide()))
            }, e.prototype.destroyGetUserInfoBtn = function () {
                Laya.Browser.onMiniGame && (h.default.isNullOrEmpty(this.btnGetUserInfo) || (this.btnGetUserInfo.destroy(), this.btnGetUserInfo = null))
            }, e.prototype.getUserInfo = function (e, t) {
                void 0 === e && (e = null), void 0 === t && (t = null), Laya.Browser.onMiniGame && Laya.Browser.window.wx.getUserInfo({
                    success: function (i) {
                        null != t && t.apply(e, [i])
                    },
                    fail: function (e) {
                        console.logWarning(" getUserInfo Fail!")
                    }
                })
            }, e.prototype.getNetworkType = function () {
                Laya.Browser.onMiniGame && Laya.Browser.window.wx.getNetworkType({
                    success: function (e) {
                        e.hasOwnProperty("isConnected") ? tywx.StateInfo.networkConnected = e.isConnected : e.hasOwnProperty("errMsg") && (tywx.StateInfo.networkConnected = "getNetworkType:ok" == e.errMsg), tywx.StateInfo.networkConnected = "none" != e.networkType, tywx.StateInfo.networkType = e.networkType, console.log("getNetworkType: " + JSON.stringify(e) + " : " + tywx.StateInfo.networkConnected)
                    }
                })
            }, e.prototype.isNetworkConnected = function () {
                return !Laya.Browser.onMiniGame || (tywx.StateInfo.networkConnected || wx.showModal({
                    title: l.default.NETWORK_NOT_CONNECTED,
                    showCancel: !1,
                    duration: 2e3
                }), tywx.StateInfo.networkConnected)
            }, e.prototype.showWxLoading = function (e, t) {
                void 0 === e && (e = "加载中"), void 0 === t && (t = 2e3), Laya.Browser.onMiniGame && (Laya.Browser.window.wx.showLoading({
                    title: e,
                    mask: !0
                }), setTimeout(function () {
                    Laya.Browser.window.wx.hideLoading()
                }, t))
            }, e.prototype.showWxToast = function (e) {
                Laya.Browser.onMiniGame && Laya.Browser.window.wx.showToast({
                    title: e,
                    duration: 2e3
                })
            }, e.prototype.showModal = function (e, t) {
                Laya.Browser.onMiniGame && Laya.Browser.window.wx.showModal({
                    title: e,
                    content: t,
                    showCancel: !1
                })
            }, e.prototype.gc = function () {
                Laya.Browser.onMiniGame && Laya.Browser.window.wx.triggerGC()
            }, e.prototype.getMenuButtonBoundingClientRect = function () {
                var e;
                return Laya.Browser.onMiniGame && (e = Laya.Browser.window.wx.getMenuButtonBoundingClientRect()), h.default.isNullOrEmpty(e) ? 10 : e.top
            }, e.prototype.loadSubpackage = function (t) {
                if (void 0 === t && (t = null), Laya.Browser.onMiniGame && !h.default.isNullOrEmpty(Laya.Browser.window.wx.loadSubpackage)) try {
                    Laya.Browser.window.wx.loadSubpackage({
                        name: "subpackage",
                        success: function (e) {
                            console.log("loadSubpackage success: " + JSON.stringify(e)), h.default.isNullOrEmpty(t) || t.run()
                        },
                        fail: function (i) {
                            Laya.timer.once(1e3, e.instance, function () {
                                e.instance.loadSubpackage(t)
                            })
                        }
                    })
                } catch (e) {
                    console.log(" loadSubpackage err : " + JSON.stringify(e))
                } else h.default.isNullOrEmpty(t) || t.run()
            }, e.prototype.getSubpackagePath = function () {
                return "subpackage/"
            }, e.prototype.forceUpdate = function () {
                if (Laya.Browser.onMiniGame && "function" == typeof Laya.Browser.window.wx.getUpdateManager) {
                    var e = Laya.Browser.window.wx.getUpdateManager();
                    e.onCheckForUpdate(function (e) {
                        console.log(e.hasUpdate)
                    }), e.onUpdateReady(function () {
                        e.applyUpdate()
                    }), e.onUpdateFailed(function () {})
                }
            }, e.prototype.onStartVibrateShort = function () {
                Laya.Browser.onMiniGame && Laya.Browser.window.wx.vibrateShort()
            }, e.prototype.getLaunchOptionsSync = function () {
                if (Laya.Browser.onMiniGame) {
                    var e = Laya.Browser.window.wx.getLaunchOptionsSync();
                    return console.log("info : " + e.scene), e.scene
                }
            }, e.prototype.getWxLocalFilePath = function () {
                return Laya.Browser.window.wx.env.USER_DATA_PATH + "/v" + d.default.GameVersion + "/"
            }, e.prototype.downloadFileAndUnzip = function (t) {
                console.log("tttt", t), this.downloadFileAndUnzipCallback = t, h.default.isNullOrEmpty(e.instance.downloadFileAndUnzipCallback) || e.instance.downloadFileAndUnzipCallback.run()
            }, e.prototype.removeSavedFile = function () {
                if (Laya.Browser.onMiniGame) {
                    var e = Laya.Browser.window.wx,
                        t = e.getFileSystemManager();
                    t.readdir({
                        dirPath: e.env.USER_DATA_PATH,
                        success: function (i) {
                            console.log("readdir: " + JSON.stringify(i)), i.files.forEach(function (i) {
                                console.log(e.env.USER_DATA_PATH + "/" + i), t.rmdir({
                                    dirPath: e.env.USER_DATA_PATH + "/" + i,
                                    recursive: !0,
                                    fail: function (e) {
                                        console.log(JSON.stringify(e))
                                    }
                                })
                            })
                        }
                    })
                }
            }, e.prototype.openCustomerServiceConversation = function (e) {
                if (Laya.Browser.onMiniGame) switch (e) {
                    case 1:
                        Laya.Browser.window.wx.openCustomerServiceConversation({
                            sendMessageTitle: "我要领体力",
                            success: function (e) {
                                console.log("进入客服 成功", e)
                            },
                            fail: function (e) {
                                console.log("进入客服 失败")
                            }
                        });
                        break;
                    case 2:
                        Laya.Browser.window.wx.openCustomerServiceConversation({
                            showMessageCard: !0,
                            sendMessageTitle: "我要领体力",
                            sendMessagePath: "https://xiaoyouxi.qiniu.andla.cn/diffimage/kefu/tili.png",
                            sendMessageImg: "https://xiaoyouxi.qiniu.andla.cn/diffimage/kefu/tili.png",
                            success: function (e) {
                                h.default.biReport(f.default.enterServiceSuccess), p.default.instance.openCustomerService = 1, console.log("进入客服 成功", e)
                            },
                            fail: function (e) {
                                console.log("进入客服 失败")
                            }
                        })
                }
            }, e.prototype.cbMoreGame = function () {
                if (Laya.Browser.onMiniGame) {
                    var e = "https://3dqn.nalrer.cn/ty3d/wxgame/plank/gongzhonghao/test2.png",
                        t = [];
                    t.push(e), Laya.Browser.window.wx.previewImage({
                        current: e,
                        urls: t,
                        success: function (e) {
                            console.log("预览的图片 成功", e)
                        },
                        fail: function (e) {
                            console.log("预览的图片 失败")
                        }
                    })
                }
            }, e.prototype.setWxEncrytedData = function (t, i) {
                if (Laya.Browser.onMiniGame) {
                    var a = tywx.SystemInfo.loginUrl,
                        n = {
                            userId: tywx.UserInfo.userId,
                            wxAppId: tywx.SystemInfo.wxAppId,
                            encryptedData: t,
                            iv: i
                        };
                    Laya.Browser.window.wx.request({
                        url: a + "open/v6/user/setWxEncryptedData",
                        header: {
                            "content-type": "application/x-www-form-urlencoded"
                        },
                        data: n,
                        method: "POST",
                        success: function (t) {
                            console.log(" setWxEncrytedData success : " + JSON.stringify(t)), e.instance.checkfollowmp()
                        },
                        fail: function (e) {
                            console.log(" setWxEncrytedData fail : " + JSON.stringify(e))
                        },
                        complete: function (e) {
                            console.log(" setWxEncrytedData complete : " + JSON.stringify(e))
                        }
                    })
                }
            }, e.prototype.checkfollowmp = function () {
                if (Laya.Browser.onMiniGame) {
                    var e = tywx.SystemInfo.loginUrl,
                        t = {
                            userId: tywx.UserInfo.userId,
                            wxgameappid: tywx.SystemInfo.wxAppId,
                            wxmpappid: "wx883fe88056acbb43",
                            unionId: ""
                        };
                    Laya.Browser.window.wx.request({
                        url: e + "open/v4/user/act/wx/checkfollowmp",
                        header: {
                            "content-type": "application/x-www-form-urlencoded"
                        },
                        data: t,
                        method: "POST",
                        success: function (e) {
                            h.default.isNullOrEmpty(e.data.result.follow) || e.data.result.follow && 0 == p.default.instance.isGetGZHAward && (p.default.instance.setIsGetGZHAward(1), u.default.instance.sendEvent(g.default.GZH_LEVEL_GAME)), console.log(" checkfollowmp success : " + JSON.stringify(e))
                        },
                        fail: function (e) {
                            console.log(" checkfollowmp fail : " + JSON.stringify(e))
                        },
                        complete: function (e) {
                            console.log(" checkfollowmp complete : " + JSON.stringify(e))
                        }
                    })
                }
            }, e.prototype.initGameRecorder = function () {
                Laya.Browser.onMiniGame && (this.GameRecorder || (this.GameRecorder = Laya.Browser.window.wx.getGameRecorder()))
            }, e.prototype.JudgeIsCanRecorder = function () {
                return !(!Laya.Browser.onMiniGame || h.default.isNullOrEmpty(this.GameRecorder) || !this.GameRecorder.isFrameSupported())
            }, e.prototype.startGameRecorder = function () {
                Laya.Browser.onMiniGame && (h.default.isNullOrEmpty(this.GameRecorder) || (this.GameRecorder.start(), this.GameRecorder.off("start", function () {}), this.GameRecorder.on("start", function () {})))
            }, e.prototype.stopGameRecorder = function () {
                Laya.Browser.onMiniGame && (h.default.isNullOrEmpty(this.GameRecorder) || (this.GameRecorder.stop(), this.GameRecorder.on("stop", function (e) {})))
            }, e.prototype.pauseGameRecorder = function () {
                Laya.Browser.onMiniGame && (h.default.isNullOrEmpty(this.GameRecorder) || (this.GameRecorder.pause(), this.GameRecorder.on("pause", function (e) {})))
            }, e.prototype.resumeGameRecorder = function () {
                Laya.Browser.onMiniGame && (h.default.isNullOrEmpty(this.GameRecorder) || (this.GameRecorder.resume(), this.GameRecorder.on("resume", function (e) {})))
            }, e.prototype.abortGameRecorder = function () {
                Laya.Browser.onMiniGame && (h.default.isNullOrEmpty(this.GameRecorder) || (this.GameRecorder.abort(), this.GameRecorder.on("abort", function (e) {}), this.GameRecorder = null))
            }, e.prototype.showRecorderButton = function () {
                Laya.Browser.onMiniGame && (h.default.isNullOrEmpty(this.recorderShareBtn) || this.recorderShareBtn.show())
            }, e.prototype.hideRecorderButton = function () {
                Laya.Browser.onMiniGame && (h.default.isNullOrEmpty(this.recorderShareBtn) || this.recorderShareBtn.hide())
            }, e.prototype.createRecorderShareButton = function () {
                var e = Laya.Browser.clientWidth / d.default.StandardScreenClientWidth * 205,
                    t = Laya.Browser.clientHeight / d.default.StandardScreenClientHeight * 308;
                4 != tywx.UserInfo.systemType && 1 != tywx.UserInfo.systemType || (t = Laya.Browser.clientHeight / d.default.StandardScreenClientHeight * 358), Laya.Browser.onMiniGame && (this.recorderShareBtn || (this.recorderShareBtn = Laya.Browser.window.wx.createGameRecorderShareButton({
                    style: {
                        left: e,
                        top: t,
                        height: 40,
                        color: "#ffffff",
                        textAlign: "center",
                        fontSize: 19,
                        borderRadius: 4,
                        iconMarginRight: 16,
                        paddingLeft: 1,
                        paddingRight: 30
                    },
                    text: "确定",
                    share: {
                        query: "a=1&b=2",
                        bgm: "",
                        timeRange: [
                            [1e3, 6e4]
                        ],
                        button: {
                            template: "default.enter"
                        }
                    }
                }))), this.recorderShareBtn.onTap(function (e) {})
            }, e
        }(), o.QWxSDK = r, i.default = a.core.QWxSDK
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../data/QLanguage": 26,
        "./QCfgMgr": 15,
        "./QUIMgr": 20
    }],
    22: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.data || (n.data = {}), r = function () {
            function e() {}
            return e.loadingSuccess = 20001, e.onClickStartGame = 20002, e.finishFirstLevel = 20003, e.finishOneUsCar = 20004, e.onClickFastBuyCar = 20005, e.finishSecondLevel = 20006, e.finishThirdlyLevel = 20007, e.finishFourthLevel = 20008, e.finishFifthLevel = 20009, e.finishTenLevel = 20010, e.usCarThreeRank = 20011, e.usCarFiveRank = 20012, e.userShareOrVideoQuicken = 20013, e.userDiamondQuicken = 20014, e.inShopBuyCar = 20015, e.successGainCollect = 20016, e.successComDailyCheck = 20017, e.successDoubleDailyCheck = 20018, e.successTurnDial = 20019, e.successMoreMutipleAward = 20020, e.successAddDialTimes = 20021, e.resultDoubleAward = 20022, e.successSellCar = 20023, e.successGetThreeAward = 20025, e.successGetFiveAward = 20026, e.successRevive = 20027, e.upgradeSuccessGetDiamond = 20028, e.shopGetFreeCar = 20029, e.successLevelUp = 20030, e.shareSuccessBox = 20031, e.videoSuccessBox = 20032, e.getCommonOffLineAward = 20033, e.getDoubleOffLineAward = 20034, e.useReviveInFirstLevel = 20035, e.getFirstCarDiamond = 20036, e.onClickSecondLevel = 20037, e.secondLevelRevive = 20038, e.secondLevelFail = 20039, e.passTrack = 20040, e.unlockNewCar = 20041, e.successGetBelleModel = 20042, e.modelViewInviteFriend = 20043, e.JCDLGameBIEvent0 = 20044, e.gainCarModel = 20046, e.gainCarModelVideo = 20047, e.jcdl1 = 20048, e.jcdl2 = 20049, e.jcdl3 = 20050, e.jcdl4 = 20051, e.showSupply = 20052, e.gotSupply = 20053, e.gotLifeTimeFreeSupply = 20054, e.tryToGetSupply = 20055, e.getOneDiamondGiftAward = 20056, e.getFiveDiamondGiftAward = 20057, e.showGun = 20058, e.lootboxShowUp = 20059, e.lootboxOpen = 20060, e.boxOpenGainTicket = 20061, e.newbieInGameShow = 20062, e.newbieinGameBtnStartClick = 20063, e.JCDLShow = 20064, e.JCDLClick = 20065, e.startLoading = 20066, e.inviteFriend = 20067, e.showEveryDayBox = 20068, e.getEveryDayBox = 20069, e.showPassBox = 20070, e.getPassBox = 20071, e.getDoublePassBox = 20072, e.gatherWaterPopLottry = 20073, e.lottrySuccessPop = 20074, e.freeStartTurnLottry = 20075, e.shareOrVideoTurnLottry = 20076, e.getLottryThreeAward = 20077, e.getLottrySicAward = 20078, e.onClickFreeHint = 20079, e.onClickShareOrVideoHint = 20080, e.openGZHDialog = 20081, e.getGZHAward = 20082, e.onClickRestartGame = 20083, e.openGainStaminaDialog = 20084, e.closeGainStaminaDialog = 20085, e.gainStaminaSuccess = 20086, e.jcdl5 = 20087, e.jcdl6 = 20088, e.foundFirstLevelDiff = [20089, 20090, 20091, 20092, 20093], e.noEnoughStamina = 20094, e.jcdl7 = 20095, e.enterSecondLevel = 20096, e.enterGameLevel = 20097, e.winGameLevel = 20098, e.showAchievementDialog = 20099, e.getAchievementReward = 20100, e.enterThirdLevel = 20101, e.enterFourLevel = 20102, e.clickServiceBtn = 20103, e.enterServiceSuccess = 20104, e.enterSixLevel = 20105, e.ClickManToHome = 20106, e.ServicePowerSuccess = 20107, e.ShowGameGuide = 20108, e.ChooseGuideMain = 20109, e.ChooseGuideGame = 20110, e.openServiceDialog = 20111, e.openFloatWindowDialog = 20112, e.FlaotWindowPowerSuccess = 20113, e.openXiaoChengXuDialog = 20114, e.XiaoChengXuPowerSuccess = 20115, e.shareFriend = 20116, e.showInviteFriendBox = 20117, e.onClickInviteFriend = 20118, e.getInviteFriendReward = 20119, e.showGiftRankList = 20120, e.sendStaminaGift = 20121, e.sendDiamondGift = 20122, e.receiveStaminaGift = 20123, e.receiveDiamondGift = 20124, e
        }(), o.QBIEvent = r, i.default = a.data.QBIEvent
    }, {}],
    23: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.data || (n.data = {}), r = function () {
            function e() {}
            return e.RES_LOAD_FINISHED = 10001, e.RECEIVE_MSG = 10002, e.UPDATE_VIEW_DATA = 10003, e.BUY_CAR_SUCCESS_REFRESH = 10004, e.CHOICE_NEW_CAR = 10005, e.REFRESH_MAIN_BTN_STATE = 10006, e.DETECTION_GARAGE_FULL = 10007, e.GAME_SIGN = 10008, e.ADD_MONEY = 10009, e.REFRESH_MAIN_EVERY_GIFT_STATE = 10010, e.SHOW_SUPPLY = 10011, e.HIDE_SUPPLY = 10012, e.SUPPLY_CAR = 10013, e.SUPPLY_GUN = 10014, e.SUB_CAR_STOP = 10015, e.REFRESH_RECOVER_COUNT_DOWN = 10016, e.GAME_REVIVE_SUC = 10017, e.REFRESH_MAIN_SELF_RANKING = 10018, e.GZH_LEVEL_GAME = 10019, e.REFRESH_MAIN_GZH_BTN_STATE = 10020, e.REFRESH_MAIN_NEWBIE_HINT = 10021, e.PUSH_VIDEO_AD_FAIL = 10101, e.MANUAL_CLOSE_VIDEO_AD = 10102, e.FAKE_SHARE_RETURN = 10103, e.UPDATE_LOTTERY = 10104, e.SHOW_NEWBIE4 = 10105, e.FINISH_STAR_PARTICLE = 10106, e.SHOW_GAME_RESULT = 10107, e.GAME_FINISHED = 10108, e.REV_SERVER_DATA = 10110, e.AUTHORIZE_SUCCESS = 10111, e.GAME_RESTART = 10112, e.GAME_CONTINUE = 10113, e.CLOSE_STAMINA_DIALOG = 10114, e.CLOSE_NEWUSER_GUIDE = 10115, e.GET_RESULT_AWARD = 10116, e.AUTO_START_GAME = 10117, e.REFRESH_WELFARE_STATE = 10118, e.SHOW_AWARD_RESULT = 10119, e.COMMON_DIALOG_TO_HOME = 100120, e.FRESH_INVITE_RED_STATE = 100121, e.UPDATE_INVITED_BOX = 100122, e.RANK_CHANGE_JCDL_SHOW = 100123, e
        }(), o.QEventType = r, i.default = a.data.QEventType
    }, {}],
    24: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.data || (n.data = {}), r = function () {
            function e() {}
            return e.GameVersion = 30056, e.DownloadUrl = "", e.LevelDownloadUrl = "subpackage/res/maps/", e.LevelDownLoadUrlForHuaWei = "", e.QResType = {
                LoadingViewRes: 1,
                UIRes: 2,
                Scene3D: 4,
                Config: 8,
                Font: 16,
                Sound: 32,
                Subpackage: 64,
                OnlineZip: 128
            }, e.QTrackType = {
                Start: 1,
                End: 2,
                Track: 3
            }, e.QCfgType = {
                GameConfig: 1,
                JCDL: 2,
                Car: 4
            }, e.QCfgName = {
                1: "game_config",
                2: "jcdl_config",
                4: "car"
            }, e.QAcquireWayType = {
                Free: 1,
                Track: 2,
                Coin: 4,
                Video: 8,
                Share: 16
            }, e.QGainWay = {
                Video: 0,
                Share: 1
            }, e.StandardScreenWidth = 750, e.StandardScreenHeight = 1334, e.StandardScreenClientWidth = 375, e.StandardScreenClientHeight = 667, e.QShareType = {
                HomePage: 1,
                AddRevenue: 2,
                doubleDailyCheck: 4,
                resultDoubleAward: 5,
                moreMultipleAward: 6,
                offLineEarnings: 7,
                freeCoin: 8,
                ShopPropShare: 9,
                AddLotteryCount: 11,
                GainDiamond: 12,
                FreeLevelUp: 13,
                Kongtou: 14,
                EveryGift: 15,
                initiativeShare: 16,
                Ticket: 17,
                StartAcc: 18,
                BelleModel: 19,
                openLootbox: 20,
                doubleClaimLootbox: 21,
                gainStamina: 22,
                revive: 23,
                Hint: 24,
                HomeInvite: 25,
                OpenBox: 26,
                BoxAward: 27,
                AddShop: 28,
                AddFree: 29,
                AchievementReward: 30,
                songtili: 31,
                songzuanshi: 32
            }, e.NumRollType = {
                AddType: 0,
                ReduceType: 1
            }, e.QTipsHintType = {
                flock: 1
            }, e.QMoneyType = {
                Coin: 1,
                Diamond: 2,
                stamina: 3
            }, e.QMouseType = {
                MOUSE_DOWN: 1,
                MOUSE_UP: 2,
                MOUSE_MOVE: 3
            }, e.QCommonViewType = {
                FreeGet: 1,
                Lattery: 2
            }, e.QCoinUnitCon = ["K", "M", "B", "T", "AA", "AB", "AC", "AD", "AE", "AF", "AG", "AH", "AI", "AJ", "AK", "AL", "AM", "AN", "AO", "AP", "AQ", "AR", "AS", "AT", "AU", "AV", "AW", "AX", "AY", "AZ"], e.QResultMoreAwardType = {
                two: 2,
                three: 3,
                five: 5
            }, e.QCurServerType = {
                test: "http://openxyxfz.nalrer.cn",
                fz: "http://xyxtest.nalrer.cn",
                open: "https://open.andla.cn"
            }, e.QPlayFxType = {
                fxStar: 0,
                fxWater: 1
            }, e
        }(), o.QGameConst = r, i.default = a.data.QGameConst
    }, {}],
    25: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../framework/QUtil"),
            l = e("../core/QCfgMgr"),
            c = e("./QGameConst"),
            h = e("../../framework/QDebug"),
            d = e("../../framework/QEventMgr"),
            p = e("./QEventType"),
            u = e("../core/QWxSDK"),
            g = e("../../framework/QHttp"),
            m = e("../core/QUIMgr"),
            f = e("../logic/QSupplyMgr"),
            y = e("../../framework/QMD5Util"),
            v = e("../core/QSoundMgr"),
            w = e("./QBIEvent");
        n = a || (a = {}), o = n.data || (n.data = {}), r = function () {
            function e() {
                var t, i;
                for (t in this.useLocalRes = !1, this.leveResList = {}, this.PreloadLevelCount = 2, this.MAX_LEVEL_NUM = 80, this.TryLoadMapTimes = 5, this.SwitchDownLoadType = !1, this.CurLoadTime = 0, this.LoadTimeInterval = 3e3, this.isStartGame = !1, this.maxRegainStamina = 5, this.encryptedData = "", this.iv = "", this.isSyncOnline = !1, this.listCarData = new Array, this.isOpenDoubleCoinAward = !1, this.speedUpCost = [], this.addSpeedTime = 0, this.curCreateCarIndex = -1, this.noVideoToShareWay = 0, this.beOfflineMaxTime = 0, this.isNeedPerSecondEarnings = !1, this.isNeedPlayHandAni = !1, this.recomStrategy = 0, this.isNewPlayer = !0, this.isOldPlayer = !1, this.hasCalcOffline = !1, this.isFinishShowModelView = !1, this.curAllCarCount = 0, this.curReviveTimes = 0, this.maxReviveTimes = 1, this.curShareFailTimes = 0, this.levelGameTime = -1, this.isOpenGZHDialog = !1, this.mainLevelScreenTime = 0, this.isPullBannerFail = !1, this.isGetSupply = !1, this.OnlineTime = 0, this.supplyGunCount = 0, this.supplyGunLv = [], this.showSupply = !1, this.isShowSupplyOutsideGarage = !1, this.isOpenFirstWinBox = !1, this.gzhSchemeType = 1, this.showJcdl = !1, this.needLevelGameTime = 45, this.attentionGZHFailTimesCfg = 2, this.addLotteryCount = 1, this.bannerRefreshTime = 300, this.newUserGuideSteps = 3, this.shareFailMessages = ["分享失败，请确认分享成功后再返回"], this.shareFailTimesList = [5, 4], this.achievementLevelPassCfg = [], this.achievementWinningStreakCfg = [], this.winningStreakCount = 0, this.achievementLevelPassStage = 0, this.achievementWinningStreakStage = 0, this.isLoginBoxReward = !1, this.GameJcdlFreshIndex = 0, this.NextTargetNum = 0, this.FinishLevelNum = 0, this.showKeFuInResult = 0, this.receivedGiftOnce = 0, this.todayDiamondGiftFromFriends = 0, this.todayStaminaGiftFromFriends = 0, this.checkShareGiftLater = !1, this.listImportantSaveKey = [], this.coin = 0, this.stamina = 0, this.curMaxLevel = 1, this.diamond = 0, this.signInDays = 0, this.isGetSignInGift = !1, this.getCoinTime = 0, this.clickCarIndex = 0, this.gainCoinTime = 0, this.lastRegisterTime = 0, this.tutorialState = 0, this.shopCarBuyTimes = [], this.garageEarnings = 0, this.useShareOrVideoTimes = 0, this.secondPlanRecomCar = [], this.curRecomCarLevel = 1, this.curSelectCarLevelId = 0, this.everyDayCommonVideoShareTime = 0, this.shopVideoShareTime = 0, this.freeVideoShareTime = 0, this.kongtouVideoShareTime = 0, this.isGetCollectAward = !1, this.allShareTimes = 0, this.resultDoubleAwardTimes = 0, this.shopIntervalShare = 0, this.shopCurLeaveTime = 0, this.levelUpInterval = 0, this.levelUpLeaveTime = 0, this.resultNoGetThreeAwardTimes = 0, this.isFirstNewBie = 0, this.freeHintTimes = 0, this.isClickBtnGongZhongHao = 0, this.isGetGZHAward = 0, this.attentionGZHFailTimes = 0, this.isGetPlayerUserInfoSuccess = 0, this.addRevenueGetTimes = 0, this.beOfflineGetTimes = 0, this.freeCoinGetTimes = 0, this.dailyCheckGetTimes = 0, this.lotteryGetTimes = 0, this.resultGetMoreAwardTimes = 0, this.reviveSuccessTimes = 0, this.lotteryMoreAwardTimes = 0, this.gainStaminaTimes = 0, this.gameHintTims = 0, this.openBoxTimes = 0, this.getMoreBoxAward = 0, this.getAchievementReward = 0, this.isFirstPlayRecycleCarAni = 0, this.comDialogBannerShowTimes = 0, this.curSoundState = !0, this.lastLotteryIndex = -1, this.availableLotteryCount = 0, this.isLotteryShare = !1, this.curTrackId = 1, this.serverSynData = null, this.serverIsSkipPop = 0, this.LastTime = 0, this.intervalTime = 0, this.beOfflineCoin = 0, this.supplyBoxInGarageIndex = -1, this.isDailyFirstGame = !0, this.isLifeFirstGame = !0, this.supplyGuide = !1, this.curDiamondGiftType = 0, this.diamondGiftGetTimes = 0, this.lastPlayerScoreType = -1, this.playerScoreVideoShareTime = 0, this.curPlayerScore = 200, this.curGatherPro = 0, this.lifeFirstShareState = 0, this.levelTestSwitch = 0, this.collecTimeSwitch = 0, this.collectTimeLimit = 40, this.collectTimeMultipe = .015, this.autoGuideInterval = 5, this.showLoginBox = 0, this.levelResultDialogsList = [], this.shareFailStrategy = 1, this.shareFailTimeConstant = 3, this.levelResultDialogStrategy = 1, this.resultManBtnSwitch = 0, this.gameResultMultiple = 36, this.isTodayFirstGame = !1, this.enterMainPage = !1, this.isShowDialogInResult = !0, this.NoneTimeCurTrackId = 1, this.InviteBoxTimes = 0, this.InviteBoxRedPointShow = !1, this.InviteBoxCycleNum = 3, this.InviteTotalNum = 0, this.InviteBoxState = 0, this.InviteByBoxAward = null, this.GiftRankDiamondAward = 100, this.GiftRankStaminaAward = 1, this.RankGiftAwardLimit = {
                        2: 5,
                        3: 5
                    }, this.todayFirstLottery = 0, this.ARRAY_MAX_LENGTH = 6, this.saveCoinFrequence = 0, this.hasComparedServerData = !1, this.multiple = 1, this.multipleTime = 0, this.isStartReplyStamina = !1, this.timeDifference = 0, this.dicAllDataJson = {}, this.firstWin = !0, this.winGameTimes = 0, this.rewardShowType = [0, 2, 0, 1], this.welfareList = {
                        gongzhonghao: {
                            ui: m.default.UI_GongZhongHao,
                            title: "关注公众号",
                            state: 0,
                            reward: 1,
                            count: 8,
                            skin: "ui_dialog/OfficialTitle.png"
                        },
                        kefu: {
                            ui: m.default.UI_KeFuDialog,
                            title: "客服会话",
                            state: 0,
                            reward: 1,
                            count: 2,
                            skin: "ui_dialog/serviceTitle.png"
                        },
                        xiaochengxu: {
                            ui: m.default.UI_XiaoChengXuDialog,
                            title: "添加到小程序",
                            state: 0,
                            reward: 1,
                            count: 2,
                            skin: "ui_dialog/programTitle.png"
                        },
                        fuchuang: {
                            ui: m.default.UI_FloatWindow,
                            title: "启用浮窗",
                            state: 0,
                            reward: 1,
                            count: 2,
                            skin: "ui_dialog/floatTitle.png"
                        }
                    }, this.showWelfareRewardDialog = 0, this.showXiaoChengXuDialog = 0, this.openCustomerService = 0, this.isClickDeleteService = !1, e.SaveKey) "isSync" != t && "deviceId" != t && (e.SaveKey[t] = "sxlzc_" + e.SaveKey[t]);
                if (this.listImportantSaveKey = [e.SaveKey.curMaxLevel, e.SaveKey.curTrackId], s.default.isNullOrEmpty(this.saveLocalDataKeys))
                    for (i in this.saveLocalDataKeys = [], e.SaveKey) this.saveLocalDataKeys.push(e.SaveKey[i])
            }
            return Object.defineProperty(e, "instance", {
                get: function () {
                    return null == this._instance && (this._instance = new e, this._instance.registerEvent()), this._instance
                },
                enumerable: !0,
                configurable: !0
            }), e.prototype.registerEvent = function () {
                var e = this;
                d.default.instance.register(p.default.RECEIVE_MSG, this.revMsgHandler, this), Laya.Browser.onMiniGame && tywx.NotificationCenter.listen(tywx.EventType.GAME_HIDE, function () {
                    e.levelGameTime = Date.parse((new Date).toString()), e.saveAllData(), e.sendUserDataServer()
                }, this)
            }, e.prototype.unregisterEvent = function () {
                d.default.instance.unregister(p.default.RECEIVE_MSG, this.revMsgHandler, this)
            }, e.prototype.PreloadLevel = function (t) {
                console.log("ttttttttttt", t);
                for (var i = 0; i < t; i++) {
                    var a = e.instance.curTrackId + i;
                    a > this.MAX_LEVEL_NUM && (a = this.MAX_LEVEL_NUM), this._preloadLevelRes(a)
                }
            }, e.prototype.ClearLastLevel = function (e) {
                var t = e;
                if (t > this.MAX_LEVEL_NUM && (t = this.MAX_LEVEL_NUM), this.leveResList[t] && this.leveResList[t].levelResPath && this.leveResList[t].config) {
                    for (var i = 0; i < this.leveResList[t].levelResPath.length; i++) Laya.loader.clearRes(this.leveResList[t].levelResPath[i]);
                    Laya.loader.clearRes(this.leveResList[t].config), delete this.leveResList[t]
                }
            }, e.prototype.isCurLevelLoadOk = function (e) {
                var t = e;
                return t > this.MAX_LEVEL_NUM && (t = this.MAX_LEVEL_NUM), !!(this.leveResList[t] && this.leveResList[t].isOK && this.leveResList[t].levelInfo) || (this._preloadLevelRes(t), !1)
            }, e.prototype.isTestUser = function () {
                if (this.levelTestSwitch) return 0 != tywx.UserInfo.userId && tywx.UserInfo.userId % 10 > 7
            }, e.prototype._preloadLevelRes = function (e) {
                var t = e;
                if (t > this.MAX_LEVEL_NUM && (t = this.MAX_LEVEL_NUM), i = this.isTestUser(), !this.leveResList[t] || !this.leveResList[t].isOK) {
                    if (this.leveResList[t] || (this.leveResList[t] = {}), t <= 2 && !i) {
                        console.log("ddsfsfhsjfshdkfj");
                        var a = "maps/lv_";
                        a = Laya.Browser.onMiniGame ? u.default.instance.getWxLocalFilePath() + a : "subpackage/res/" + a, this.leveResList[t].config = a + t + "/images/level.json", this.leveResList[t].images = a + t + "/images/"
                    } else {
                        console.log("dddddddddddddddddddddddddddddddddddddddddddd");
                        var n = i ? this.getTopFiveLevelRes(t) : t,
                            o = c.default.LevelDownloadUrl;
                        this.leveResList[t].config = o + "lv_" + n + "/images/level.json", this.leveResList[t].images = o + "lv_" + n + "/images/", console.log("this.leveResList[t].config", this.leveResList[t].config), console.log("this.leveResList[t].images", this.leveResList[t].images)
                    }
                    Laya.loader.load(this.leveResList[t].config, Laya.Handler.create(this, this.getTrackConfig, [t]), null, Laya.Loader.BUFFER, 0, !0)
                }
            }, e.prototype.getTrackConfig = function (e) {
                if (!this.leveResList[e].levelInfo && !this.leveResList[e].isOK) {
                    var t = this.leveResList[e].images,
                        i = this.leveResList[e].config,
                        a = Laya.loader.getRes(i),
                        n = new Laya.Byte(a),
                        o = n.readUTFBytes(n.length),
                        r = JSON.parse(o);
                    if (r.skins && r.skins.slots && !(r.skins.slots.length < 6)) {
                        this.leveResList[e].levelInfo = r.skins.slots, this.leveResList[e].levelResPath = [];
                        for (var s = 0; s < this.leveResList[e].levelInfo.length; s++)
                            if ("layer" == this.leveResList[e].levelInfo[s].name) this.leveResList[e].levelResPath.push(t + "layer.jpg");
                            else {
                                var l = this.leveResList[e].levelInfo[s].name;
                                this.leveResList[e].levelResPath.push(t + l + ".png")
                            } console.log("this.leveResList[e].levelResPath", this.leveResList[e].levelResPath), Laya.loader.load(this.leveResList[e].levelResPath, Laya.Handler.create(this, this._completeResLoaded, [e]))
                    }
                }
            }, e.prototype._completeResLoaded = function (e) {
                this.leveResList[e].isOK || Laya.timer.frameOnce(3, this, function () {
                    this.leveResList[e].isOK = !0
                })
            }, e.prototype.autoCheckDownloadUrl = function (e) {
                return this.CurLoadTime += 1, this.CurLoadTime >= this.TryLoadMapTimes
            }, e.prototype.resetAutoDownloadData = function () {
                this.CurLoadTime = 0
            }, e.prototype.initData = function () {
                this.gameConfig = l.default.instance.dicConfig[c.default.QCfgType.GameConfig], s.default.listShieldCity = this.gameConfig.shieldCity, s.default.listComDialogShieldCity = this.gameConfig.comDialogShieldCity, this.carConfig = l.default.instance.dicConfig[c.default.QCfgType.Car], this.coin = this.getDataFromLocal(e.SaveKey.coin, this.gameConfig.defaultCoin), this.stamina = this.getDataFromLocal(e.SaveKey.stamina, this.gameConfig.defaultStamina), this.diamond = this.getDataFromLocal(e.SaveKey.diamond, this.gameConfig.defaultDiamond), this.signInDays = this.getDataFromLocal(e.SaveKey.signInDays, this.signInDays), this.getCoinTime = this.getDataFromLocal(e.SaveKey.getCoinTime, this.getCoinTime), this.isGetSignInGift = this.getDataFromLocal(e.SaveKey.isGetSignInGift, this.isGetSignInGift), this.gainCoinTime = this.getDataFromLocal(e.SaveKey.gainCoinTime, this.gainCoinTime), this.clickCarIndex = this.getDataFromLocal(e.SaveKey.clickCarIndex, this.clickCarIndex), this.lastRegisterTime = this.getDataFromLocal(e.SaveKey.lastRegisterTime, this.lastRegisterTime), this.tutorialState = this.getDataFromLocal(e.SaveKey.tutorialState, 0), this.curMaxLevel = this.getDataFromLocal(e.SaveKey.curMaxLevel, this.curMaxLevel), this.curGatherPro = this.getDataFromLocal(e.SaveKey.curGatherPro, this.curGatherPro), this.useShareOrVideoTimes = this.getDataFromLocal(e.SaveKey.useShareOrVideoTimes, this.useShareOrVideoTimes), this.curRecomCarLevel = this.getDataFromLocal(e.SaveKey.curRecomCarLevel, this.curRecomCarLevel), this.isGetCollectAward = this.getDataFromLocal(e.SaveKey.isGetCollectAward, this.isGetCollectAward), this.addSpeedTime = this.getDataFromLocal(e.SaveKey.addSpeedTime, this.addSpeedTime), this.isOpenDoubleCoinAward = this.addSpeedTime > 0, this.allShareTimes = this.getDataFromLocal(e.SaveKey.allShareTimes, this.allShareTimes), this.resultDoubleAwardTimes = this.getDataFromLocal(e.SaveKey.resultDoubleAwardTimes, this.resultDoubleAwardTimes), this.shopCurLeaveTime = this.getDataFromLocal(e.SaveKey.shopCurLeaveTime, this.shopCurLeaveTime), this.levelUpLeaveTime = this.getDataFromLocal(e.SaveKey.levelUpLeaveTime, this.levelUpLeaveTime), this.freeHintTimes = this.getDataFromLocal(e.SaveKey.freeHintTimes, this.freeHintTimes), this.isClickBtnGongZhongHao = this.getDataFromLocal(e.SaveKey.isClickBtnGongZhongHao, this.isClickBtnGongZhongHao), this.isFirstPlayRecycleCarAni = this.getDataFromLocal(e.SaveKey.isFirstPlayRecycleCarAni, this.isFirstPlayRecycleCarAni), this.comDialogBannerShowTimes = this.getDataFromLocal(e.SaveKey.comDialogBannerShowTimes, this.comDialogBannerShowTimes), this.curSoundState = this.getDataFromLocal(e.SaveKey.curSoundState, this.curSoundState), this.resultNoGetThreeAwardTimes = this.getDataFromLocal(e.SaveKey.resultNoGetThreeAwardTimes, this.resultNoGetThreeAwardTimes), this.curDiamondGiftType = this.getDataFromLocal(e.SaveKey.curDiamondGiftType, this.curDiamondGiftType), this.diamondGiftGetTimes = this.getDataFromLocal(e.SaveKey.diamondGiftGetTimes, this.diamondGiftGetTimes), this.lastPlayerScoreType = this.getDataFromLocal(e.SaveKey.lastPlayerScoreType, this.lastPlayerScoreType), this.playerScoreVideoShareTime = this.getDataFromLocal(e.SaveKey.playerScoreVideoShareTime, this.playerScoreVideoShareTime), this.addRevenueGetTimes = this.getDataFromLocal(e.SaveKey.addRevenueGetTimes, this.addRevenueGetTimes),
                    this.beOfflineGetTimes = this.getDataFromLocal(e.SaveKey.beOfflineGetTimes, this.beOfflineGetTimes), this.freeCoinGetTimes = this.getDataFromLocal(e.SaveKey.freeCoinGetTimes, this.freeCoinGetTimes), this.dailyCheckGetTimes = this.getDataFromLocal(e.SaveKey.dailyCheckGetTimes, this.dailyCheckGetTimes), this.lotteryGetTimes = this.getDataFromLocal(e.SaveKey.lotteryGetTimes, this.lotteryGetTimes), this.resultGetMoreAwardTimes = this.getDataFromLocal(e.SaveKey.resultGetMoreAwardTimes, this.resultGetMoreAwardTimes), this.reviveSuccessTimes = this.getDataFromLocal(e.SaveKey.reviveSuccessTimes, this.reviveSuccessTimes), this.lotteryMoreAwardTimes = this.getDataFromLocal(e.SaveKey.lotteryGetTimes, this.lotteryMoreAwardTimes), this.gainStaminaTimes = this.getDataFromLocal(e.SaveKey.gainStaminaTimes, this.gainStaminaTimes), this.isFirstNewBie = this.getDataFromLocal(e.SaveKey.isFirstNewBie, this.isFirstNewBie), this.openBoxTimes = this.getDataFromLocal(e.SaveKey.openBoxTimes, this.openBoxTimes), this.getMoreBoxAward = this.getDataFromLocal(e.SaveKey.getMoreBoxAward, this.getMoreBoxAward), this.lifeFirstShareState = this.getDataFromLocal(e.SaveKey.lifeFirstShareState, this.lifeFirstShareState), this.isGetGZHAward = this.getDataFromLocal(e.SaveKey.isGetGZHAward, this.isGetGZHAward), this.attentionGZHFailTimes = this.getDataFromLocal(e.SaveKey.attentionGZHFailTimes, this.attentionGZHFailTimes), this.isGetPlayerUserInfoSuccess = this.getDataFromLocal(e.SaveKey.isGetPlayerUserInfoSuccess, this.isGetPlayerUserInfoSuccess), this.winGameTimes = this.getDataFromLocal(e.SaveKey.winGameTimes, this.winGameTimes), this.isOldPlayer = this.getDataFromLocal(e.SaveKey.isOldPlayer, this.isOldPlayer), v.default.instance.isSoundOn = e.instance.curSoundState, this.isDailyFirstGame = !0, this.isLifeFirstGame = this.getDataFromLocal(e.SaveKey.isLifeFirstGame, this.isLifeFirstGame), this.todayFirstLottery = this.getDataFromLocal(e.SaveKey.todayFirstLottery, this.todayFirstLottery), this.winningStreakCount = this.getDataFromLocal(e.SaveKey.winningStreakCount, this.winningStreakCount), this.achievementLevelPassStage = this.getDataFromLocal(e.SaveKey.achievementLevelPassStage, this.achievementLevelPassStage), this.achievementWinningStreakStage = this.getDataFromLocal(e.SaveKey.achievementWinningStreakStage, this.achievementWinningStreakStage), this.welfareList = this.getDataFromLocal(e.SaveKey.welfareList, this.welfareList), this.showXiaoChengXuDialog = this.getDataFromLocal(e.SaveKey.showXiaoChengXuDialog, this.showXiaoChengXuDialog), this.isLoginBoxReward = this.getDataFromLocal(e.SaveKey.isLoginBoxReward, this.isLoginBoxReward), this.showKeFuInResult = this.getDataFromLocal(e.SaveKey.showKeFuInResult, this.showKeFuInResult), this.InviteBoxTimes = this.getDataFromLocal(e.SaveKey.InviteBoxTimes, this.InviteBoxTimes), this.InviteBoxRedPointShow = this.getDataFromLocal(e.SaveKey.InviteBoxRedPointShow, this.InviteBoxRedPointShow), this.InviteTotalNum = this.getDataFromLocal(e.SaveKey.InviteTotalNum, this.InviteTotalNum), this.InviteBoxState = this.getDataFromLocal(e.SaveKey.InviteBoxState, this.InviteBoxState), this.todayDiamondGiftFromFriends = parseInt(this.getDataFromLocal(e.SaveKey.todayDiamondGiftFromFriends, this.todayDiamondGiftFromFriends)), this.todayStaminaGiftFromFriends = parseInt(this.getDataFromLocal(e.SaveKey.todayStaminaGiftFromFriends, this.todayStaminaGiftFromFriends)), this.supplyGuide = !1, this.shopIntervalShare = this.gameConfig.shopIntervalShare, this.levelUpInterval = this.gameConfig.levelUpInterval, this.beOfflineMaxTime = this.gameConfig.beOfflineMaxTime, this.boxRewardInfo = this.gameConfig.boxRewardInfo, this.isOpenFirstWinBox = this.gameConfig.isOpenFirstWinBox, this.topFiveLevelResCfg = this.gameConfig.topFiveLevelResCfg, this.levelTestSwitch = this.gameConfig.levelTestSwitch, this.dropBoxLevel = this.gameConfig.dropBoxLevel, this.collecTimeSwitch = this.gameConfig.collecTimeSwitch, this.collectTimeLimit = this.gameConfig.collectTimeLimit, this.collectTimeMultipe = this.gameConfig.collectTimeMultipe, this.maxRegainStamina = this.gameConfig.MaxRegainStamina, this.autoGuideInterval = this.gameConfig.autoGuideInterval, this.gzhSchemeType = this.gameConfig.gzhSchemeType || 1, this.showJcdl = this.gameConfig.showJcdl || !1, this.needLevelGameTime = this.gameConfig.needLevelGameTime || 45, this.attentionGZHFailTimesCfg = this.gameConfig.attentionGZHFailTimes || 2, this.addLotteryCount = this.gameConfig.addLotteryCount || 1, s.default.isNullOrEmpty(this.gameConfig.bannerRefreshTime) || (this.bannerRefreshTime = this.gameConfig.bannerRefreshTime), s.default.isNullOrEmpty(this.gameConfig.shareFailMessages) || (this.shareFailMessages = this.gameConfig.shareFailMessages), s.default.isNullOrEmpty(this.gameConfig.shareFailTimesList) || (this.shareFailTimesList = this.gameConfig.shareFailTimesList), s.default.isNullOrEmpty(this.gameConfig.achievementLevelPassCfg) || (this.achievementLevelPassCfg = this.gameConfig.achievementLevelPassCfg), s.default.isNullOrEmpty(this.gameConfig.achievementWinningStreakCfg) || (this.achievementWinningStreakCfg = this.gameConfig.achievementWinningStreakCfg), s.default.isNullOrEmpty(this.gameConfig.levelResultDialogsList) || (this.levelResultDialogsList = this.gameConfig.levelResultDialogsList), s.default.isNullOrEmpty(this.gameConfig.shareFailStrategy) || (this.shareFailStrategy = this.gameConfig.shareFailStrategy), s.default.isNullOrEmpty(this.gameConfig.shareFailTimeConstant) || (this.shareFailTimeConstant = this.gameConfig.shareFailTimeConstant), s.default.isNullOrEmpty(this.gameConfig.levelResultDialogStrategy) || (this.levelResultDialogStrategy = this.gameConfig.levelResultDialogStrategy), s.default.isNullOrEmpty(this.gameConfig.resultManBtnSwitch) || (this.resultManBtnSwitch = this.gameConfig.resultManBtnSwitch), s.default.isNullOrEmpty(this.gameConfig.gameResultMultiple) || (this.gameResultMultiple = this.gameConfig.gameResultMultiple), s.default.isNullOrEmpty(this.gameConfig.NoneTimeCurTrackId) || (this.NoneTimeCurTrackId = this.gameConfig.NoneTimeCurTrackId), s.default.isNullOrEmpty(this.gameConfig.InviteBoxCycleNum) || (this.InviteBoxCycleNum = this.gameConfig.InviteBoxCycleNum), s.default.isNullOrEmpty(this.gameConfig.InviteByBoxAward) || (this.InviteByBoxAward = this.gameConfig.InviteByBoxAward), s.default.isNullOrEmpty(this.gameConfig.GiftRankDiamondAward) || (this.GiftRankDiamondAward = this.gameConfig.GiftRankDiamondAward), s.default.isNullOrEmpty(this.gameConfig.GiftRankStaminaAward) || (this.GiftRankStaminaAward = this.gameConfig.GiftRankStaminaAward), s.default.isNullOrEmpty(this.gameConfig.RankGiftAwardLimit) || (this.RankGiftAwardLimit = this.gameConfig.RankGiftAwardLimit);
                var t = this.gameConfig.garageInitCar;
                for (this.garageCarData = [], r = 0; r < 12; r++) r < t.length ? this.garageCarData.push(this.getGarageCarData(t[r])) : this.garageCarData.push(this.getGarageCarData(0));
                for (this.garageCarData = this.getDataFromLocal(e.SaveKey.garageCarData, this.garageCarData), r = 0; r < this.garageCarData.length; r++) this.setCarData(this.garageCarData[r].level, this.garageCarData[r]);
                this.setGarageCarData(this.garageCarData, !1), this.curSelectCarLevelId = this.getDataFromLocal(e.SaveKey.curSelectCarLevelId, t[0]), this.lastLotteryIndex = this.getDataFromLocal(e.SaveKey.lastLotteryIndex, this.lastLotteryIndex), this.availableLotteryCount = this.getDataFromLocal(e.SaveKey.availableLotteryCount, l.default.instance.dicConfig[c.default.QCfgType.GameConfig].initLotteryCount), this.isLotteryShare = this.getDataFromLocal(e.SaveKey.isLotteryShare, this.isLotteryShare), this.everyDayCommonVideoShareTime = this.getDataFromLocal(e.SaveKey.everyDayCommonVideoShareTime, this.everyDayCommonVideoShareTime), this.shopVideoShareTime = this.getDataFromLocal(e.SaveKey.shopVideoShareTime, this.shopVideoShareTime), this.freeVideoShareTime = this.getDataFromLocal(e.SaveKey.freeVideoShareTime, this.freeVideoShareTime), this.kongtouVideoShareTime = this.getDataFromLocal(e.SaveKey.KongtouVideoShareTime, this.kongtouVideoShareTime), this.curTrackId = this.getDataFromLocal(e.SaveKey.curTrackId, 1), this.recordGainCarTimes = [];
                var i = [];
                for (var a in this.carConfig) i = [0, 0], this.recordGainCarTimes.push(i);
                this.recordGainCarTimes = this.getDataFromLocal(e.SaveKey.recordGainCarTimes, this.recordGainCarTimes);
                var n = 0;
                for (var a in this.carConfig) n++;
                for (r = this.recordGainCarTimes.length; r < n; r++) i = [0, 0], this.recordGainCarTimes.push(i);
                var o = this.gameConfig.shopPropCfg;
                this.shopCarBuyTimes = [];
                for (var r = 0; r < o.length; r++) this.shopCarBuyTimes.push(0);
                if (this.shopCarBuyTimes = this.getDataFromLocal(e.SaveKey.shopCarBuyTimes, this.shopCarBuyTimes), this.isAuditVersion = this.gameConfig.isAuditVersion, this.isSearch = 1005 == u.default.instance.getLaunchOptionsSync() || 1006 == u.default.instance.getLaunchOptionsSync() || 1027 == u.default.instance.getLaunchOptionsSync() || 1042 == u.default.instance.getLaunchOptionsSync() || 1106 == u.default.instance.getLaunchOptionsSync() || 1053 == u.default.instance.getLaunchOptionsSync() || 1054 == u.default.instance.getLaunchOptionsSync(), this.isNoVideoAuditVersion = this.gameConfig.isNoVideoAuditVersion, this.isOpenVideoToShare = this.gameConfig.isOpenVideoToShare, this.speedUpCost = this.gameConfig.speedUpCost, this.fullCarTipsDes = this.gameConfig.fullCarTipsDes, this.isOpenTestFun = this.gameConfig.isOpenTestFun, this.hasCalcOffline || (this.hasCalcOffline = !0, this.beOfflineCount = this.gameConfig.beOfflineCount, this.beOfflineShow = this.gameConfig.beOfflineShow, this.beOfflineCfg = this.gameConfig.beOfflineCfg, this.LastTime = this.getDataFromLocal(e.SaveKey.lastTime, this.LastTime), console.log("上次的时间：" + this.LastTime), 0 == this.LastTime && (this.LastTime = Laya.Browser.now(), this.saveDataToLocal(e.SaveKey.lastTime, this.LastTime)), this.GetBeOfflineTime()), this.gameConfig.isOpenNewBieGuide || this.finishTutorial(4), this.dailyDate = this.getDataFromLocal(e.SaveKey.dailyDate, 0), this.judgeResetDailyInfo(Math.floor(Laya.Browser.now() / 1e3), this.dailyDate), 1 == this.curTrackId) {
                    var h = [];
                    this.getListItem("newUnlockedTrack", h), h.length > 0 && (this.curTrackId = h.length > 10 ? h.length - 10 : 1, this.saveDataToLocal(e.SaveKey.curTrackId, this.curTrackId), 0 == this.tutorialState && this.finishTutorial(0))
                }
                this.gameConfig.isOpenSupply && (this.showSupply = !1), this.curMaxLevel > 1 && this.finishTutorial(4), Laya.timer.loop(1e3, this, this.doPerSecond), Laya.timer.loop(6e4, this, this.doPerMinute), this.gameConfig.showSipply && f.default.instance.init(), this.gameConfig.showFreeBox && f.default.instance.initFreeBox();
                var d = 0;
                for (var a in this.carConfig) d++;
                this.curAllCarCount = d, this.checkIsShowSupplyCarOutsideGarage(), this.OnlineTime = 0, this.supplyGunLv = [], this.initServerData(), this.welfareList.kefu || (this.welfareList.kefu = {
                    ui: m.default.UI_KeFuDialog,
                    title: "客服会话",
                    state: 0,
                    reward: 1,
                    count: 2,
                    skin: "ui_dialog/serviceTitle.png"
                }), this.resetWelfareCount(), 0 == this.getWelfareState("gongzhonghao") && (1 == this.isGetGZHAward && this.setIsGetGZHAward(1), 2 == this.isGetGZHAward && this.setWelfareState("gongzhonghao", 1)), this.loginScene && this.onChangeWelfareState(this.loginScene)
            }, e.prototype.getTopFiveLevelRes = function (e) {
                if (!this.topFiveLevelResCfg) return e;
                if (e <= this.topFiveLevelResCfg.length) return this.topFiveLevelResCfg[e - 1] || e;
                for (var t = 0; t < this.topFiveLevelResCfg.length; t++)
                    if (this.topFiveLevelResCfg[t] == e) return t + 1;
                return e
            }, e.prototype.checkIsShowSupplyCarOutsideGarage = function () {
                this.curMaxLevel >= this.gameConfig.supplyCarBoxOutsideGarageUnlockCarLevel ? this.isShowSupplyOutsideGarage = !0 : this.isShowSupplyOutsideGarage = !1
            }, e.prototype.judgeResetDailyInfo = function (t, i) {
                var a = s.default.timestampToDate(t);
                if (i != a) {
                    this.setTodayFirstLottery(1), 0 != i && (console.log("重置体力领取"), this.setIsOldPlayer(!0), this.setShowXiaoChengXuDialog(0), this.resetWelfareState()), this.saveIsGetSignInGift(!1), this.signInDays >= 7 && (this.signInDays = 0, this.dailyCheckGetTimes = 0, this.saveDataToLocal(e.SaveKey.dailyCheckGetTimes, this.dailyCheckGetTimes)), this.saveDataToLocal(e.SaveKey.signInDays, this.signInDays), this.allShareTimes = 0, this.saveDataToLocal(e.SaveKey.allShareTimes, this.allShareTimes), this.gainCoinTime = 0, this.saveDataToLocal(e.SaveKey.gainCoinTime, this.gainCoinTime), this.comDialogBannerShowTimes = 0, this.saveDataToLocal(e.SaveKey.comDialogBannerShowTimes, this.comDialogBannerShowTimes), this.curDiamondGiftType = 0, this.saveDataToLocal(e.SaveKey.curDiamondGiftType, this.curDiamondGiftType), this.diamondGiftGetTimes = 0, this.saveDataToLocal(e.SaveKey.diamondGiftGetTimes, this.diamondGiftGetTimes), this.playerScoreVideoShareTime = 0, this.saveDataToLocal(e.SaveKey.playerScoreVideoShareTime, this.playerScoreVideoShareTime), this.addRevenueGetTimes = 0, this.saveDataToLocal(e.SaveKey.addRevenueGetTimes, this.addRevenueGetTimes), this.beOfflineGetTimes = 0, this.saveDataToLocal(e.SaveKey.beOfflineGetTimes, this.beOfflineGetTimes), this.freeCoinGetTimes = 0, this.saveDataToLocal(e.SaveKey.freeCoinGetTimes, this.freeCoinGetTimes), this.lotteryGetTimes = 0, this.saveDataToLocal(e.SaveKey.lotteryGetTimes, this.lotteryGetTimes), this.resultGetMoreAwardTimes = 0, this.saveDataToLocal(e.SaveKey.resultGetMoreAwardTimes, this.resultGetMoreAwardTimes), this.reviveSuccessTimes = 0, this.saveDataToLocal(e.SaveKey.reviveSuccessTimes, this.reviveSuccessTimes), this.lotteryMoreAwardTimes = 0, this.saveDataToLocal(e.SaveKey.lotteryMoreAwardTimes, this.lotteryMoreAwardTimes), this.gainStaminaTimes = 0, this.saveDataToLocal(e.SaveKey.gainStaminaTimes, this.gainStaminaTimes), this.gameHintTims = 0, this.saveDataToLocal(e.SaveKey.gameHintTims, this.gameHintTims), this.openBoxTimes = 0, this.saveDataToLocal(e.SaveKey.openBoxTimes, this.openBoxTimes), this.getMoreBoxAward = 0, this.saveDataToLocal(e.SaveKey.getMoreBoxAward, this.getMoreBoxAward), this.shopCarBuyTimes = [];
                    for (var n = 0; n < this.gameConfig.shopPropCfg.length; n++) this.shopCarBuyTimes.push(0);
                    this.saveDataToLocal(e.SaveKey.shopCarBuyTimes, this.shopCarBuyTimes), 0 == this.isFirstNewBie && 0 == this.lifeFirstShareState && this.setLifeFirstShareState(1), this.everyDayCommonVideoShareTime = 0, this.shopVideoShareTime = 0, this.freeVideoShareTime = 0, this.kongtouVideoShareTime = 0, this.saveDataToLocal(e.SaveKey.everyDayCommonVideoShareTime, this.everyDayCommonVideoShareTime), this.saveDataToLocal(e.SaveKey.shopVideoShareTime, this.shopVideoShareTime), this.saveDataToLocal(e.SaveKey.freeVideoShareTime, this.freeVideoShareTime), this.saveDataToLocal(e.SaveKey.KongtouVideoShareTime, this.kongtouVideoShareTime), this.saveDataToLocal(e.SaveKey.dailyDate, a), this.setDailyFirstGame(!0), this.setTodayFirstGame(!0), this.setLoginBoxReward(!1), this.setShowKeFuInResult(0), this.setInviteBoxRedPointShow(!1), this.setTodayDiamondGiftFromFriends(0), this.setTodayStaminaGiftFromFriends(0)
                }
            }, e.prototype.setSupplyData = function () {
                var t = this.gameConfig.supplyCarNumRange[0],
                    i = this.gameConfig.supplyCarNumRange[1],
                    a = Math.floor(Math.random() * (i - t));
                this.supplyGunCount = t + a;
                for (var n = this.carConfig[this.curMaxLevel].random_level_d, o = this.carConfig[this.curMaxLevel].random_weight_d, r = [], l = 0, c = 0; c < o.length; c++) l += o[c];
                for (c = 0; c < o.length; c++) o[c] = o[c] / l;
                var h = 0;
                for (c = 0; c < n.length; c++) {
                    var d = Math.floor(this.supplyGunCount * o[c]);
                    0 == d && (d = 1), r[n[c]] = d, h += d
                }
                for (var p in h < this.supplyGunCount && (r[n[0]] += this.supplyGunCount - h), h > this.supplyGunCount && r[n[0]] > h - this.supplyGunCount && (r[n[0]] -= h - this.supplyGunCount), r)
                    for (c = 0; c < r[p]; c++) this.supplyGunLv.push(parseInt(p));
                e.instance.tutorialState >= this.newUserGuideSteps && s.default.biReport(w.default.showSupply)
            }, e.prototype.setShowKeFuInResult = function (t) {
                this.showKeFuInResult = t, this.saveDataToLocal(e.SaveKey.showKeFuInResult, this.showKeFuInResult)
            }, e.prototype.setIsGetPlayerUserInfoSuccess = function () {
                this.isGetPlayerUserInfoSuccess = 1, this.saveDataToLocal(e.SaveKey.isGetPlayerUserInfoSuccess, this.isGetPlayerUserInfoSuccess)
            }, e.prototype.setAttentionGZHFailTimes = function () {
                this.attentionGZHFailTimes++, this.saveDataToLocal(e.SaveKey.attentionGZHFailTimes, this.attentionGZHFailTimes)
            }, e.prototype.setIsGetGZHAward = function (t) {
                1 == t && (this.onChangeWelfareState("gongzhonghao"), t = 2), 2 == t && this.setWelfareState("gongzhonghao", 1), this.isGetGZHAward = t, this.saveDataToLocal(e.SaveKey.isGetGZHAward, this.isGetGZHAward)
            }, e.prototype.setIsClickBtnGongZhongHao = function () {
                this.isClickBtnGongZhongHao = 1, this.saveDataToLocal(e.SaveKey.isClickBtnGongZhongHao, this.isClickBtnGongZhongHao)
            }, e.prototype.setLifeFirstShareState = function (t) {
                this.lifeFirstShareState = t, this.saveDataToLocal(e.SaveKey.lifeFirstShareState, this.lifeFirstShareState)
            }, e.prototype.setTodayStaminaGiftFromFriends = function (t) {
                this.todayStaminaGiftFromFriends = parseInt(t + ""), this.saveDataToLocal(e.SaveKey.todayStaminaGiftFromFriends, this.todayStaminaGiftFromFriends)
            }, e.prototype.setTodayDiamondGiftFromFriends = function (t) {
                this.todayDiamondGiftFromFriends = parseInt(t + ""), this.saveDataToLocal(e.SaveKey.todayDiamondGiftFromFriends, this.todayDiamondGiftFromFriends)
            }, e.prototype.getCurGatherProIsEnough = function (t) {
                if (0 != this.gameConfig.collecTimeSwitch) {
                    if (this.curGatherPro += t, this.curGatherPro >= 1) {
                        this.curGatherPro = 0;
                        var i = this.availableLotteryCount;
                        return i += this.gameConfig.gatherLotteryProFinishAddTimes, this.setAvailableLotteryCount(i), this.saveDataToLocal(e.SaveKey.curGatherPro, this.curGatherPro), s.default.biReport(w.default.gatherWaterPopLottry), !0
                    }
                    return this.saveDataToLocal(e.SaveKey.curGatherPro, this.curGatherPro), !1
                }
            }, e.prototype.getFreeHintTimes = function () {
                return this.freeHintTimes
            }, e.prototype.setFreeHintTimes = function (t) {
                this.freeHintTimes <= 0 && t < 0 || (this.freeHintTimes += t, this.saveDataToLocal(e.SaveKey.freeHintTimes, this.freeHintTimes))
            }, e.prototype.setIsFirstNewBie = function () {
                this.isFirstNewBie = 1, this.saveDataToLocal(e.SaveKey.isFirstNewBie, this.isFirstNewBie)
            }, e.prototype.getMaxReviveTimes = function () {
                return this.maxReviveTimes
            }, e.prototype.getCurReviveTimes = function () {
                return this.curReviveTimes
            }, e.prototype.setReviveTimes = function (e) {
                void 0 === e && (e = !1), e ? this.curReviveTimes = 0 : this.curReviveTimes++
            }, e.prototype.addStamina = function (e, t) {
                void 0 === t && (t = !0), h.default.I("Add Stamina " + e), t ? this.stamina < this.gameConfig.defaultStamina && (this.stamina += e, this.stamina > this.gameConfig.defaultStamina && (this.stamina = this.gameConfig.defaultStamina, h.default.I("Stamina out of range, will set to max value."))) : this.stamina += e, this.saveStamina(), d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA)
            }, e.prototype.coseStamina = function (e) {
                return this.stamina < e ? (console.log("Not enough stamina !"), !1) : (h.default.I("cost stamina !" + e), this.stamina -= e, this.saveStamina(), d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA), !0)
            }, e.prototype.saveStamina = function () {
                console.log("saveStaminasaveStaminasaveStaminasaveStaminasaveStamina"), this.saveDataToLocal(e.SaveKey.stamina, this.stamina)
            }, e.prototype.PopSupplyGun = function () {
                return this.supplyGunCount--, this.supplyGunLv.pop()
            }, e.prototype.setDailyFirstGame = function (t) {
                this.isDailyFirstGame = t, this.saveDataToLocal(e.SaveKey.isDailyFirstGame, t ? 1 : 0)
            }, e.prototype.setLifeFirstGame = function (t) {
                this.isLifeFirstGame = t, this.saveDataToLocal(e.SaveKey.isLifeFirstGame, t ? 1 : 0)
            }, e.prototype.setLoginBoxReward = function (t) {
                this.isLoginBoxReward = t, this.saveDataToLocal(e.SaveKey.isLoginBoxReward, t)
            }, e.prototype.setTodayFirstGame = function (e) {
                this.isTodayFirstGame = e
            }, e.prototype.checkNextDialog = function () {
                this.isLoginBoxReward ? this.JudeIsShowBeOffline() && m.default.instance.createUI(m.default.UI_BeOffline) : m.default.instance.createUI(m.default.UI_BoxDialog, {
                    type: 1
                })
            }, e.prototype.ResetSupply = function () {
                this.isGetSupply = !1, this.OnlineTime = 0, this.showSupply = !1, this.supplyGuide = !1
            }, e.prototype.setSupplyGuide = function (t) {
                this.supplyGuide = t, this.saveDataToLocal(e.SaveKey.supplyGuide, t ? 1 : 0)
            }, e.prototype.setCurDiamondGiftType = function (t) {
                this.curDiamondGiftType = t, this.saveDataToLocal(e.SaveKey.curDiamondGiftType, this.curDiamondGiftType)
            }, e.prototype.setdiamondGiftGetTimes = function () {
                this.diamondGiftGetTimes++, this.saveDataToLocal(e.SaveKey.diamondGiftGetTimes, this.diamondGiftGetTimes)
            }, e.prototype.setAddRevenueGetTimes = function () {
                this.setShareTimes(c.default.QShareType.AddRevenue)
            }, e.prototype.setGameHintGetTimes = function () {
                this.setShareTimes(c.default.QShareType.Hint)
            }, e.prototype.setBeOfflineGetTimes = function () {
                this.setShareTimes(c.default.QShareType.offLineEarnings)
            }, e.prototype.setFreeCoinGetTimes = function () {
                this.setShareTimes(c.default.QShareType.freeCoin)
            }, e.prototype.setDailyCheckGetTimes = function () {
                this.setShareTimes(c.default.QShareType.doubleDailyCheck)
            }, e.prototype.setLotteryGetTimes = function () {
                this.setShareTimes(c.default.QShareType.AddLotteryCount)
            }, e.prototype.setResultGetMoreAwardTimes = function () {
                this.setShareTimes(c.default.QShareType.resultDoubleAward)
            }, e.prototype.setOpenBoxTimes = function () {
                this.setShareTimes(c.default.QShareType.OpenBox)
            }, e.prototype.setGetMoreBoxAward = function () {
                this.setShareTimes(c.default.QShareType.BoxAward)
            }, e.prototype.setReviveSuccessTimes = function () {
                this.setShareTimes(c.default.QShareType.revive)
            }, e.prototype.setLotteryMoreAwardTimes = function () {
                this.setShareTimes(c.default.QShareType.moreMultipleAward)
            }, e.prototype.setGainStaminaTimes = function () {
                this.setShareTimes(c.default.QShareType.gainStamina)
            }, e.prototype.setResultNoGetThreeAwardTimes = function (t) {
                void 0 === t && (t = !1), t ? this.resultNoGetThreeAwardTimes = 0 : this.resultNoGetThreeAwardTimes++, this.saveDataToLocal(e.SaveKey.resultNoGetThreeAwardTimes, this.resultNoGetThreeAwardTimes)
            }, e.prototype.IsShopShowFree = function () {
                var e = !1;
                for (var t in this.carConfig) this.carConfig[t].pos = t, this.listCarData.push(this.carConfig[t]);
                return this.listCarData[this.curMaxLevel - 1].bonusCar_level > 0 && !this.IsShopTimeLeave() && this.getShopShareTimesIsEnough() && (e = !0), e
            }, e.prototype.IsShopTimeLeave = function () {
                return this.shopCurLeaveTime > 0
            }, e.prototype.IsLevelUpTimeLeave = function () {
                return this.levelUpLeaveTime > 0
            }, e.prototype.setComDialogBannerShowTimes = function () {
                this.comDialogBannerShowTimes++, this.saveDataToLocal(e.SaveKey.comDialogBannerShowTimes, this.comDialogBannerShowTimes)
            }, e.prototype.setCurSoundState = function (t) {
                this.curSoundState = t, this.saveDataToLocal(e.SaveKey.curSoundState, this.curSoundState)
            }, e.prototype.setIsFirstPlayRecycleCarAni = function () {
                this.isFirstPlayRecycleCarAni = 0, this.saveDataToLocal(e.SaveKey.isFirstPlayRecycleCarAni, this.isFirstPlayRecycleCarAni)
            }, e.prototype.setShopCurLeaveTime = function () {
                this.shopCurLeaveTime = this.shopIntervalShare, this.saveDataToLocal(e.SaveKey.shopCurLeaveTime, this.shopCurLeaveTime), d.default.instance.sendEvent(p.default.GAME_SIGN)
            }, e.prototype.setLevelUpLeaveTime = function () {
                this.levelUpLeaveTime = this.levelUpInterval, this.saveDataToLocal(e.SaveKey.levelUpLeaveTime, this.levelUpLeaveTime)
            }, e.prototype.resetShopCurLeaveTime = function () {
                this.shopCurLeaveTime = -1, this.saveDataToLocal(e.SaveKey.shopCurLeaveTime, this.shopCurLeaveTime), d.default.instance.sendEvent(p.default.GAME_SIGN)
            }, e.prototype.doShopShare = function () {
                this.shopCurLeaveTime > 0 && (this.shopCurLeaveTime -= 1e3, this.saveDataToLocal(e.SaveKey.shopCurLeaveTime, this.shopCurLeaveTime), d.default.instance.sendEvent(p.default.GAME_SIGN))
            }, e.prototype.doEasyBuy = function () {
                this.levelUpLeaveTime > 0 && (this.levelUpLeaveTime -= 1e3, this.saveDataToLocal(e.SaveKey.levelUpLeaveTime, this.levelUpLeaveTime))
            }, e.prototype.judgeGarageCarFull = function () {
                var e = !0;
                for (var t in this.garageCarData) 0 == this.garageCarData[t].level && this.supplyBoxInGarageIndex != parseInt(t) && (e = !1);
                return e
            }, e.prototype.judgeGarageOnlyOneEmpty = function () {
                var e = 0;
                for (var t in this.garageCarData)(this.garageCarData[t].level > 0 || this.supplyBoxInGarageIndex == parseInt(t)) && e++;
                return 11 == e
            }, e.prototype.judgeGarageNoCarToMerge = function () {
                var e = !1,
                    t = 1e4;
                for (var i in this.garageCarData)
                    if (this.garageCarData[i].level > 0)
                        for (var a in t > this.garageCarData[i].level && this.garageCarData[i].level > 0 && (t = this.garageCarData[i].level), this.garageCarData) i != a && this.garageCarData[i].level == this.garageCarData[a].level && (e = !0);
                return e ? 0 : t
            }, e.prototype.setIsLotteryShare = function (e) {
                this.isLotteryShare = e
            }, e.prototype.setResultDoubleAwardTimes = function (t) {
                void 0 === t && (t = !1), t ? this.resultDoubleAwardTimes++ : this.resultDoubleAwardTimes = 0, this.saveDataToLocal(e.SaveKey.resultDoubleAwardTimes, this.resultDoubleAwardTimes)
            }, e.prototype.setIsGetCollectAward = function () {
                this.isGetCollectAward = !0, this.saveDataToLocal(e.SaveKey.isGetCollectAward, this.isGetCollectAward)
            }, e.prototype.getExtraAwardDiamondCfg = function () {
                for (var e = 0; e < this.gameConfig.extraAwardDiamondCfg.length; e++)
                    if (this.curMaxLevel - 1 >= this.gameConfig.extraAwardDiamondCfg[e][0] && this.curMaxLevel - 1 <= this.gameConfig.extraAwardDiamondCfg[e][1]) return this.gameConfig.extraAwardDiamondCfg[e][2];
                return c.default.QAcquireWayType.Share
            }, e.prototype.GetBeOfflineTime = function () {
                console.log("上一次的時間：" + this.LastTime), console.log("本次的時間：" + Laya.Browser.now()), this.intervalTime = Laya.Browser.now() - this.LastTime - this.beOfflineCount, this.intervalTime > 0 && (console.log("间隔：" + this.intervalTime), this.shopCurLeaveTime -= this.intervalTime, this.shopCurLeaveTime <= 0 || this.shopCurLeaveTime, this.saveDataToLocal(e.SaveKey.shopCurLeaveTime, this.shopCurLeaveTime), this.levelUpLeaveTime -= this.intervalTime, this.levelUpLeaveTime <= 0 || this.levelUpLeaveTime, this.saveDataToLocal(e.SaveKey.levelUpLeaveTime, this.levelUpLeaveTime), this.intervalTime = this.intervalTime > this.beOfflineMaxTime ? this.beOfflineMaxTime : this.intervalTime, this.intervalTime = this.intervalTime > 864e5 ? 864e5 : this.intervalTime, this.LastTime = Laya.Browser.now(), this.saveDataToLocal(e.SaveKey.lastTime, this.LastTime))
            }, e.prototype.GetBeOfflineCoin = function () {
                if (this.JudeIsShowBeOffline()) return this.CountBeOfflineCoin(Math.floor(this.intervalTime / 1e3)), console.log("每秒金币：" + this.getGarageAllValue()), console.log("总共获得：" + this.beOfflineCoin), this.beOfflineCoin
            }, e.prototype.CountBeOfflineCoin = function (e) {
                for (var t, i, a, n = 0; n < this.beOfflineCfg.length; n++) t = 3600 * this.beOfflineCfg[n].min_time, i = 3600 * this.beOfflineCfg[n].max_time, a = this.beOfflineCfg[n].revenue_multiple, e > t && e <= i && (this.beOfflineCoin += (e - t) * this.getGarageAllValue() * a, t > 0 && this.CountBeOfflineCoin(t))
            }, e.prototype.getGarageAllValue = function () {
                for (var t = 0, i = 0; i < this.garageCarData.length; i++) e.instance.isOpenDoubleCoinAward ? t += this.garageCarData[i].income * this.gameConfig.CoinAwardMultiple : t += this.garageCarData[i].income;
                return t
            }, e.prototype.JudeIsShowBeOffline = function () {
                return console.log("当前间隔时间：" + this.intervalTime), console.log("离线显示要求时间：" + this.beOfflineShow), this.intervalTime > this.beOfflineShow
            }, e.prototype.setAllShareTimes = function () {
                this.allShareTimes++, this.saveDataToLocal(e.SaveKey.allShareTimes, this.allShareTimes)
            }, e.prototype.setLastTime = function () {
                this.LastTime = Laya.Browser.now(), this.saveDataToLocal(e.SaveKey.lastTime, this.LastTime)
            }, e.prototype.setCurSelectCarLevelId = function (t) {
                this.curSelectCarLevelId = t, this.saveDataToLocal(e.SaveKey.curSelectCarLevelId, this.curSelectCarLevelId)
            }, e.prototype.getCurRecomCarLevelCoinNum = function (t) {
                return this.carConfig[t].buy_gold * Math.pow(this.carConfig[t].add_gold, e.instance.getRecordGainCarTimes(c.default.QMoneyType.Coin, t))
            }, e.prototype.setLastLotteryIndex = function (t) {
                this.lastLotteryIndex = t, this.saveDataToLocal(e.SaveKey.lastLotteryIndex, t)
            }, e.prototype.setAvailableLotteryCount = function (t) {
                this.availableLotteryCount = t, this.saveDataToLocal(e.SaveKey.availableLotteryCount, t)
            }, e.prototype.setShopVideoShareTime = function () {
                this.setShareTimes(c.default.QShareType.AddShop)
            }, e.prototype.setFreeVideoShareTime = function () {
                this.setShareTimes(c.default.QShareType.FreeLevelUp)
            }, e.prototype.setKongtouVideoShareTime = function () {
                this.setShareTimes(c.default.QShareType.Kongtou)
            }, e.prototype.setAchievementVideoShareTime = function () {
                this.setShareTimes(c.default.QShareType.AchievementReward)
            }, e.prototype.setSupplyBoxInGarageIndex = function (e) {
                this.supplyBoxInGarageIndex = e
            }, e.prototype.getPlayerScoreVideoShareType = function () {
                var e = this.getPlayerInviteScoreType();
                this.lastPlayerScoreType != e && (this.setplayerScoreVideoShareTime(!0), this.setLastPlayerScoreType(e));
                for (var t = this.gameConfig.playerScoreShareOrVideoCfg[e], i = 0; i < t.length; i++)
                    if (this.playerScoreVideoShareTime + 1 >= t[i][0] && this.playerScoreVideoShareTime + 1 <= t[i][1]) return console.log("lastPlayerScoreType:" + this.lastPlayerScoreType + "  type:" + e + "  shareType:" + t[i][2] + "  playerScoreVideoShareTime:" + this.playerScoreVideoShareTime), t[i][2];
                return c.default.QAcquireWayType.Video
            }, e.prototype.getPlayerInviteScoreType = function () {
                var e = this.gameConfig.playerScoreCfg;
                console.log("curPlayerScore : " + this.curPlayerScore);
                for (var t = 0; t < e.length; t++)
                    if (this.curPlayerScore >= e[t][0] && this.curPlayerScore <= e[t][1]) return console.log("getPlayerInviteScoreType : " + t), t;
                return 1
            }, e.prototype.getIsActiveSharePoint = function (e) {
                for (var t = 0; t < this.gameConfig.activeShareOrVideoCfg.length; t++)
                    if (e == this.gameConfig.activeShareOrVideoCfg[t]) return !0;
                return !1
            }, e.prototype.setplayerScoreVideoShareTime = function (t) {
                void 0 === t && (t = !1), t ? (this.playerScoreVideoShareTime = 0, this.saveDataToLocal(e.SaveKey.playerScoreVideoShareTime, this.playerScoreVideoShareTime)) : this.setShareTimes(0)
            }, e.prototype.setLastPlayerScoreType = function (t) {
                this.lastPlayerScoreType = t, this.saveDataToLocal(e.SaveKey.lastPlayerScoreType, this.lastPlayerScoreType)
            }, e.prototype.setNoVideoToShareWay = function (e) {
                this.noVideoToShareWay = e
            }, e.prototype.setShareTimes = function (e) {
                var t = this.gameConfig.sameVideoSharePoint;
                if (t) {
                    var i = [];
                    if (console.log("是否为老用户：" + this.isOldPlayer + "搜索进入：" + this.isSearch), (i = this.isOldPlayer ? t[2] : this.isSearch ? t[0] : t[1]) && i.length > 0)
                        for (var a = 0; a < i.length; a++)
                            if (i[a] && i[a].length > 0)
                                for (var n = 0; n < i[a].length; n++)
                                    if (e == i[a][n]) return void this.setSamePointSharetimes(i[a]);
                    this.setOnePointShareTimes(e)
                } else this.setOnePointShareTimes(e)
            }, e.prototype.setSamePointSharetimes = function (e) {
                for (var t = 0; t < e.length; t++) this.setOnePointShareTimes(e[t])
            }, e.prototype.setOnePointShareTimes = function (t, i) {
                switch (t) {
                    case c.default.QShareType.AddShop:
                        this.shopVideoShareTime++, this.saveDataToLocal(e.SaveKey.shopVideoShareTime, this.shopVideoShareTime);
                        break;
                    case c.default.QShareType.FreeLevelUp:
                        this.freeVideoShareTime++, this.saveDataToLocal(e.SaveKey.freeVideoShareTime, this.freeVideoShareTime);
                        break;
                    case c.default.QShareType.AddRevenue:
                        this.addRevenueGetTimes++, this.saveDataToLocal(e.SaveKey.addRevenueGetTimes, this.addRevenueGetTimes);
                        break;
                    case c.default.QShareType.offLineEarnings:
                        this.beOfflineGetTimes++, this.saveDataToLocal(e.SaveKey.beOfflineGetTimes, this.beOfflineGetTimes);
                        break;
                    case c.default.QShareType.freeCoin:
                        this.freeCoinGetTimes++, this.saveDataToLocal(e.SaveKey.freeCoinGetTimes, this.freeCoinGetTimes);
                        break;
                    case c.default.QShareType.doubleDailyCheck:
                        this.dailyCheckGetTimes++, this.saveDataToLocal(e.SaveKey.dailyCheckGetTimes, this.dailyCheckGetTimes);
                        break;
                    case c.default.QShareType.AddLotteryCount:
                        this.lotteryGetTimes++, this.saveDataToLocal(e.SaveKey.lotteryGetTimes, this.lotteryGetTimes);
                        break;
                    case c.default.QShareType.resultDoubleAward:
                        this.resultGetMoreAwardTimes++, this.saveDataToLocal(e.SaveKey.resultGetMoreAwardTimes, this.resultGetMoreAwardTimes);
                        break;
                    case c.default.QShareType.Kongtou:
                        this.kongtouVideoShareTime++, this.saveDataToLocal(e.SaveKey.KongtouVideoShareTime, this.kongtouVideoShareTime);
                        break;
                    case c.default.QShareType.moreMultipleAward:
                        this.lotteryMoreAwardTimes++, this.saveDataToLocal(e.SaveKey.lotteryMoreAwardTimes, this.lotteryMoreAwardTimes);
                        break;
                    case c.default.QShareType.gainStamina:
                        this.gainStaminaTimes++, this.saveDataToLocal(e.SaveKey.gainStaminaTimes, this.gainStaminaTimes);
                        break;
                    case c.default.QShareType.revive:
                        this.reviveSuccessTimes++, this.saveDataToLocal(e.SaveKey.reviveSuccessTimes, this.reviveSuccessTimes);
                        break;
                    case c.default.QShareType.Hint:
                        this.gameHintTims++, this.saveDataToLocal(e.SaveKey.gameHintTims, this.gameHintTims);
                        break;
                    case c.default.QShareType.OpenBox:
                        this.openBoxTimes++, this.saveDataToLocal(e.SaveKey.openBoxTimes, this.openBoxTimes);
                        break;
                    case c.default.QShareType.BoxAward:
                        this.getMoreBoxAward++, this.saveDataToLocal(e.SaveKey.getMoreBoxAward, this.getMoreBoxAward);
                        break;
                    case c.default.QShareType.AchievementReward:
                        this.getAchievementReward++, this.saveDataToLocal(e.SaveKey.getAchievementReward, this.getAchievementReward);
                        break;
                    default:
                        this.playerScoreVideoShareTime++, this.saveDataToLocal(e.SaveKey.playerScoreVideoShareTime, this.playerScoreVideoShareTime)
                }
            }, e.prototype.getPointVideoShareType = function (e) {
                var t = this.getPointVideoShareInfo(e);
                if (!t) return c.default.QAcquireWayType.Share;
                var i = t.cfg,
                    a = t.times;
                if (i && i.length > 0)
                    for (var n = 0; n < i.length; n++)
                        if (a + 1 >= i[n][0] && a + 1 <= i[n][1]) {
                            if (3 == i[n].length) return console.log(e + "分享策略1：" + i[n][2] + "times:" + a), i[n][2];
                            var o = i[n][2],
                                r = i[n][3] + i[n][4],
                                s = (a + 1 - i[n][0]) % r;
                            return s + 1 <= i[n][3] ? (console.log(e + "分享策略2：" + o + "step:" + r + "index:" + s), o ? c.default.QAcquireWayType.Video : c.default.QAcquireWayType.Share) : (console.log(e + "分享策略3：" + o + "step:" + r + "index:" + s), o ? c.default.QAcquireWayType.Share : c.default.QAcquireWayType.Video)
                        } return c.default.QAcquireWayType.Share
            }, e.prototype.getPointVideoShareInfo = function (t) {
                var i = this.gameConfig.everyDayCommonVideoShareType,
                    a = 0;
                if (e.instance.getIsActiveSharePoint(t)) - 1 == this.lastPlayerScoreType && (this.lastPlayerScoreType = 0), i = this.gameConfig.playerScoreShareOrVideoCfg[this.lastPlayerScoreType], a = this.playerScoreVideoShareTime;
                else switch (t) {
                    case c.default.QShareType.AddShop:
                        i = this.gameConfig.addShopType, a = this.shopVideoShareTime;
                        break;
                    case c.default.QShareType.FreeLevelUp:
                        i = this.gameConfig.addFreeType, a = this.freeVideoShareTime;
                        break;
                    case c.default.QShareType.AddRevenue:
                        i = this.gameConfig.addRevenueShareOrVideoCfg, a = this.addRevenueGetTimes;
                        break;
                    case c.default.QShareType.offLineEarnings:
                        i = this.gameConfig.BeOfflineShareOrVideoCfg, a = this.beOfflineGetTimes;
                        break;
                    case c.default.QShareType.freeCoin:
                        i = this.gameConfig.freeCoinShareOrVideoCfg, a = this.freeCoinGetTimes;
                        break;
                    case c.default.QShareType.doubleDailyCheck:
                        i = this.gameConfig.dailyCheckShareOrVideoCfg, a = this.dailyCheckGetTimes;
                        break;
                    case c.default.QShareType.AddLotteryCount:
                        i = this.gameConfig.lotteryAddTimesShareOrVideoCfg, a = this.lotteryGetTimes;
                        break;
                    case c.default.QShareType.resultDoubleAward:
                        i = this.gameConfig.resultShareOrVideoCfg, a = this.resultGetMoreAwardTimes;
                        break;
                    case c.default.QShareType.Kongtou:
                        i = this.gameConfig.KongtouScoreShareOrVideoCfg, a = this.kongtouVideoShareTime;
                        break;
                    case c.default.QShareType.moreMultipleAward:
                        i = this.gameConfig.lotteryMoreAwardShareOrVideoCfg, a = this.lotteryMoreAwardTimes;
                        break;
                    case c.default.QShareType.gainStamina:
                        i = this.gameConfig.staminaShareOrVideoCfg, a = this.gainStaminaTimes;
                        break;
                    case c.default.QShareType.revive:
                        i = this.gameConfig.reviveShareOrVideoCfg, a = this.reviveSuccessTimes;
                        break;
                    case c.default.QShareType.Hint:
                        i = this.gameConfig.gameHintShareOrVideoCfg, a = this.gameHintTims;
                        break;
                    case c.default.QShareType.OpenBox:
                        i = this.gameConfig.openBoxShareOrVideoCfg, a = this.openBoxTimes;
                        break;
                    case c.default.QShareType.BoxAward:
                        i = this.gameConfig.boxMoreAwardShareOrVideoCfg, a = this.getMoreBoxAward;
                        break;
                    case c.default.QShareType.AchievementReward:
                        i = this.gameConfig.AchievementAwardShareOrVideoCfg, a = this.getAchievementReward;
                        break;
                    default:
                        i = this.gameConfig.everyDayCommonVideoShareType, a = this.playerScoreVideoShareTime
                }
                var n = i;
                return i && i.length > 0 && (console.log("是否为老用户：" + this.isOldPlayer + "搜索进入：" + this.isSearch), n = this.isOldPlayer ? i[2] : this.isSearch ? i[0] : i[1]), {
                    cfg: n,
                    times: a
                }
            }, e.prototype.getShareTimesIsEnough = function (e, t) {
                void 0 === t && (t = !0);
                var i = this.getPointVideoShareInfo(e);
                if (!i) return !1;
                var a = i.cfg,
                    n = i.times;
                if (a && a.length > 0) {
                    console.log("curTimes " + n + " shareType : " + e + " shareOrVideoCfg :" + a);
                    var o = n < a[a.length - 1][1];
                    return !o && t && m.default.instance.createUI(m.default.UI_Tip, {
                        text: "当日获得次数达到上限!"
                    }), o
                }
                return !1
            }, e.prototype.setCurShareFailTimes = function (e) {
                void 0 === e && (e = !1), e ? this.curShareFailTimes = 0 : this.curShareFailTimes++
            }, e.prototype.getShopShareTimesIsEnough = function () {
                var e = this.gameConfig.addShopType[this.gameConfig.addShopType.length - 1][1];
                return this.shopVideoShareTime < e
            }, e.prototype.getFreeShareTimesIsEnough = function () {
                var e = this.gameConfig.addFreeType[this.gameConfig.addFreeType.length - 1][1];
                return this.freeVideoShareTime < e
            }, e.prototype.setClickCarIndex = function (t) {
                this.clickCarIndex = t, this.saveDataToLocal(e.SaveKey.clickCarIndex, this.clickCarIndex)
            }, e.prototype.setCurRecomCarLevel = function (t) {
                this.curRecomCarLevel = t, this.saveDataToLocal(e.SaveKey.curRecomCarLevel, this.curRecomCarLevel)
            }, e.prototype.getCurRecomCarLevelId = function () {
                if (0 == this.secondPlanRecomCar.length)
                    if (this.curMaxLevel < 10)
                        for (i = 0; i < this.curMaxLevel - 4; i++) this.secondPlanRecomCar.push(i + 1);
                    else
                        for (i = 0; i < this.ARRAY_MAX_LENGTH; i++) this.secondPlanRecomCar.push(this.curMaxLevel - 9 + i);
                for (var e = 0, t = 0, i = 0; i < this.secondPlanRecomCar.length; i++) {
                    var a = this.getCurRecomCarLevelCoinNum(this.secondPlanRecomCar[i]) / this.carConfig[this.secondPlanRecomCar[i]].output_gold;
                    (a < e || 0 == i) && (e = a, t = i)
                }
                return this.secondPlanRecomCar[t]
            }, e.prototype.setGarageEarnings = function (e) {
                this.garageEarnings = e
            }, e.prototype.setBuyCarData = function (t, i, a) {
                void 0 === i && (i = 0), void 0 === a && (a = !1);
                for (var n = 0; n < this.garageCarData.length; n++)
                    if (0 == this.garageCarData[n].carId && n != this.supplyBoxInGarageIndex) {
                        this.curCreateCarIndex = n, a && (this.curEasyBuyCarIndex = n), this.garageCarData.splice(n, 1, this.getGarageCarData(t, i)), this.saveDataToLocal(e.SaveKey.garageCarData, this.garageCarData);
                        break
                    }
            }, e.prototype.setBuyCarDataByIndex = function (t, i, a, n) {
                void 0 === a && (a = 0), void 0 === n && (n = !1), console.log("setBuyCarDataByIndex:" + t), t < 0 || 0 == this.garageCarData[t].carId && (this.curCreateCarIndex = t, n && (this.curEasyBuyCarIndex = t), this.garageCarData.splice(t, 1, this.getGarageCarData(i, a)), this.saveDataToLocal(e.SaveKey.garageCarData, this.garageCarData))
            }, e.prototype.reFreshCarData = function (t) {
                console.log("curEasyBuyCarIndex:" + this.curEasyBuyCarIndex), this.garageCarData.splice(this.curEasyBuyCarIndex, 1, this.getGarageCarData(t)), this.saveDataToLocal(e.SaveKey.garageCarData, this.garageCarData)
            }, e.prototype.setGarageCarData = function (t, i) {
                void 0 === i && (i = !0), this.garageCarData = t, this.saveDataToLocal(e.SaveKey.garageCarData, this.garageCarData, i)
            }, e.prototype.finishTrack = function () {
                this.curTrackId++, this.curTrackId > this.MAX_LEVEL_NUM && (window.chaochu = !0, this.curTrackId = this.MAX_LEVEL_NUM), this.saveDataToLocal(e.SaveKey.curTrackId, this.curTrackId), this.saveAllData()
            }, e.prototype.testFinishTrack = function (t) {
                this.curTrackId += t, this.saveDataToLocal(e.SaveKey.curTrackId, this.curTrackId)
            }, e.prototype.testChooseTrack = function (t) {
                this.curTrackId = t, this.saveDataToLocal(e.SaveKey.curTrackId, this.curTrackId)
            }, e.prototype.getRecordGainCarTimes = function (e, t) {
                if (!s.default.isNullOrEmpty(t)) {
                    var i = 0,
                        a = 0;
                    for (var n in this.carConfig) {
                        if (n == t.toString()) {
                            a = i;
                            break
                        }
                        i++
                    }
                    return e == c.default.QMoneyType.Coin ? this.recordGainCarTimes[a][0] : e == c.default.QMoneyType.Diamond ? this.recordGainCarTimes[a][1] : void 0
                }
            }, e.prototype.setRecordGainCarTimes = function (t, i) {
                var a = 0,
                    n = 0;
                for (var o in this.carConfig) {
                    if (o == i.toString()) {
                        n = a;
                        break
                    }
                    a++
                }
                t == c.default.QMoneyType.Coin ? this.recordGainCarTimes[n][0]++ : t == c.default.QMoneyType.Diamond && this.recordGainCarTimes[n][1]++, this.saveDataToLocal(e.SaveKey.recordGainCarTimes, this.recordGainCarTimes)
            }, e.prototype.setCarData = function (e, t, i) {
                void 0 === i && (i = 0);
                var a = this.carConfig[e];
                s.default.isNullOrEmpty(a) ? (t.level = 0, t.carId = 0, t.output_gold = 0, t.unlock_diamond = 0, t.interval = 0, t.sell_gold = 0, t.income = 0, t.income_add = 0, t.boxState = 0) : (t.level = a.level, t.carId = a.car_id, t.output_gold = a.output_gold, t.unlock_diamond = e < this.gameConfig.unlockDiamondLevel ? a.unlock_diamond : a.diamond, t.interval = a.interval, t.sell_gold = a.sell_gold, t.income = a.income, t.income_add = a.income_add, t.boxState = i)
            }, e.prototype.getGarageCarData = function (e, t) {
                void 0 === t && (t = 0);
                var i = {};
                return this.setCarData(e, i, t), i
            }, e.prototype.judgeCompanyAnyCar = function () {
                if (this.tutorialState < this.newUserGuideSteps)
                    for (var e = 0; e < this.garageCarData.length; e++)
                        if (!s.default.isNullOrEmpty(this.garageCarData.level) && this.garageCarData.level > 1) {
                            this.finishTutorial(4);
                            break
                        }
            }, e.prototype.setMaxLevel = function () {
                this.curMaxLevel++, this.saveDataToLocal(e.SaveKey.curMaxLevel, this.curMaxLevel)
            }, e.prototype.getMaxLevel = function () {
                return this.curMaxLevel
            }, e.prototype.addMoney = function (e, t, i) {
                void 0 === i && (i = !0), e == c.default.QMoneyType.Coin ? (console.log("加钱：" + t), this.addCoin(t, i)) : e == c.default.QMoneyType.Diamond ? (console.log("加钻石：" + t), this.addDiamond(t, i)) : e == c.default.QMoneyType.stamina && this.addStamina(t, !1)
            }, e.prototype.addCoin = function (t, i, a) {
                void 0 === i && (i = !0), void 0 === a && (a = !0), this.coin += t, !e.instance.isStartGame && a && (console.log("存储数据!!"), this.saveCoin()), i && d.default.instance.sendEvent(p.default.ADD_MONEY, c.default.QMoneyType.Coin), d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA)
            }, e.prototype.addDiamond = function (e, t) {
                void 0 === t && (t = !0), this.diamond += e, this.saveDiamond(), t && d.default.instance.sendEvent(p.default.ADD_MONEY, c.default.QMoneyType.Diamond), d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA)
            }, e.prototype.coseMoney = function (e, t) {
                return e == c.default.QMoneyType.Coin ? this.coseCoin(t) : e == c.default.QMoneyType.Diamond ? this.coseDiamond(t) : void 0
            }, e.prototype.coseCoin = function (e) {
                return this.coin < e ? (console.log("Not enough coin !"), !1) : (this.coin -= e, d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA), this.saveCoin(), !0)
            }, e.prototype.coseDiamond = function (e) {
                return this.diamond < e ? (console.log("Not enough diamond !"), !1) : (this.diamond -= e, d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA), this.saveDiamond(), !0)
            }, e.prototype.getCoinNumType = function (e) {
                for (var t = 0, i = 0; i < 90; i++)
                    if (e >= Math.pow(10, 3 * i) && e < Math.pow(10, 3 * (i + 1))) switch (i) {
                        case 0:
                            t = Math.floor(e);
                            break;
                        default:
                            t = (e / Math.pow(10, 3 * i)).toFixed(1) + c.default.QCoinUnitCon[i - 1]
                    }
                return t
            }, e.prototype.saveCoin = function () {
                this.coin < 0 && (this.coin = 0), this.saveDataToLocal(e.SaveKey.coin, this.coin)
            }, e.prototype.saveDiamond = function () {
                this.saveDataToLocal(e.SaveKey.diamond, this.diamond)
            }, e.prototype.saveGetCoinTime = function () {
                this.getCoinTime += 1, this.saveDataToLocal(e.SaveKey.getCoinTime, this.getCoinTime)
            }, e.prototype.saveIsGetSignInGift = function (t) {
                this.isGetSignInGift = t, this.saveDataToLocal(e.SaveKey.isGetSignInGift, this.isGetSignInGift)
            }, e.prototype.saveSignInDays = function (t) {
                this.signInDays = t, this.saveDataToLocal(e.SaveKey.signInDays, this.signInDays)
            }, e.prototype.setLastRegisterTime = function (t) {
                this.lastRegisterTime = t, this.saveDataToLocal(e.SaveKey.lastRegisterTime, this.lastRegisterTime)
            }, e.prototype.finishTutorial = function (t) {
                this.tutorialState = t, this.saveDataToLocal(e.SaveKey.tutorialState, this.tutorialState)
            }, e.prototype.getListItem = function (e, t) {
                var i = Laya.LocalStorage.getItem(e);
                if (!s.default.isNullOrEmpty(i))
                    for (var a = i.split(","), n = 0; n < a.length; n++) t[n] = Number(a[n])
            }, e.prototype.getDataFromLocal = function (e, t) {
                void 0 === t && (t = 0);
                try {
                    var i = Laya.LocalStorage.getItem(e);
                    if ("null" != i && "undefined" != i || (i = void 0), !s.default.isNullOrEmpty(i)) return JSON.parse(i)
                } catch (t) {
                    console.log("getDataFromLocal Exception: " + e)
                }
                return t
            }, e.prototype.getAIWxUserInfo = function () {
                (new g.default).get("https://open3d.nalrer.cn/api/casualmatch/common/get_robot_users?count=20", this, this.getAIWxUserDataSuccess)
            }, e.prototype.getAIWxUserDataSuccess = function (e) {
                if (200 == e.state) {
                    var t = JSON.parse(e.data);
                    this.aiUserInfoUrl = t.result.data[2].purl, this.aiUserInfoName = t.result.data[2].name
                } else Laya.timer.once(3e3, this, this.getAIWxUserInfo), console.log("getAIWxUserInfo Failed: " + e.data)
            }, e.prototype.sendWxFeatureLibraryMsg = function () {
                if (Laya.Browser.onMiniGame) {
                    var e = Math.floor(Laya.Browser.now() / 1e3),
                        t = y.default.calcMD5("market.tuyoo.com-api-cloud_id=" + tywx.SystemInfo.cloudId + "game_id=" + tywx.SystemInfo.gameId + "time=" + e + "user_id=" + tywx.UserInfo.userId + "-market.tuyoo-api");
                    (new g.default).get("https://analy.ywdier.com/?act=api.getUserFeature&game_id=" + tywx.SystemInfo.gameId + "&sign=" + t + "&user_id=" + tywx.UserInfo.userId + "&cloud_id=" + tywx.SystemInfo.cloudId + "&time=" + e, this, this.getWxFeatureLibrarySuccess)
                }
            }, e.prototype.getWxFeatureLibrarySuccess = function (e) {
                if (200 == e.state) {
                    var t = JSON.parse(e.data).retmsg;
                    if (!s.default.isNullOrEmpty(t)) {
                        this.isNewPlayer = !1, console.log("是否为老用户：" + this.isNewPlayer);
                        for (var i = t.share_pred_proba, a = i.split(":"), n = Number(a[1]), o = 0; o < this.gameConfig.proAstrictScopeCfg.length; o++)
                            if (n >= this.gameConfig.proAstrictScopeCfg[o][0] && n < this.gameConfig.proAstrictScopeCfg[o][1]) {
                                this.recomStrategy = o + 1;
                                break
                            } console.log("share_pred_proba" + i + "  curInviterNewPlayerProType=" + n + '  "this.recomStrategy' + this.recomStrategy)
                    }
                }
            }, e.prototype.checkMainViewDialog = function () {
                this.showWelfareRewardDialog ? this.showLoginBox = 1 : (console.log("loading弹窗弹出：" + this.isOldPlayer + " isTodayFirstGame: " + this.isTodayFirstGame), this.isOldPlayer ? this.isLoginBoxReward ? this.JudeIsShowBeOffline() && m.default.instance.createUI(m.default.UI_BeOffline) : m.default.instance.createUI(m.default.UI_BoxDialog, {
                    type: 1
                }) : this.isTodayFirstGame || m.default.instance.createUI(m.default.UI_GameGuideDialog))
            }, e.prototype.loadServerData = function (e) {
                for (var t in console.log("loadData copy online data to local!! deviceId"), e) s.default.isNullOrEmpty(e[t]) || this.saveDataToLocal(t, e[t], !1, !0);
                l.default.instance.isAllCfgLoadFinished && (console.log("QGameData.initData() executed!! deviceId"), this.initData())
            }, e.prototype.copyDataFromLocalToOnline = function () {
                try {
                    for (var t = {}, i = 0; i < this.saveLocalDataKeys.length; i++) {
                        var a = Laya.LocalStorage.getJSON(this.saveLocalDataKeys[i]);
                        s.default.isNullOrEmpty(a) || (t[this.saveLocalDataKeys[i]] = a)
                    }
                    e.instance.isSyncOnline && this.sendSaveDataItems(t)
                } catch (e) {
                    console.log("copyDataFromLocalToOnline Exception deviceId")
                }
            }, e.prototype.clearOnlineData = function () {
                for (var e = {}, t = 0; t < this.saveLocalDataKeys.length; t++) e[this.saveLocalDataKeys[t]] = null;
                this.sendSaveDataItems(e)
            }, e.prototype.saveDataToLocal = function (e, t, i, a, n) {
                console.log("eeeeeeeee", e), void 0 === i && (i = !0), void 0 === a && (a = !1), void 0 === n && (n = !0), i && (this.dicAllDataJson[e] = t), Laya.Browser.onMiniGame && !a || Laya.LocalStorage.setItem(e, n ? JSON.stringify(t) : t), this.listImportantSaveKey.indexOf(e) >= 0 && Laya.LocalStorage.setItem(e, n ? JSON.stringify(t) : t), this.isSyncOnline || Laya.LocalStorage.setItem(e, n ? JSON.stringify(t) : t)
            }, e.prototype.setTodayFirstLottery = function (t) {
                this.todayFirstLottery = t || 0, this.saveDataToLocal(e.SaveKey.todayFirstLottery, this.todayFirstLottery)
            }, e.prototype.initServerData = function (t) {
                if (void 0 === t && (t = !1), !s.default.isNullOrEmpty(this.serverData) && !this.hasComparedServerData && l.default.instance.isAllCfgLoadFinished) {
                    if (this.isOpenTestFun) return;
                    this.hasComparedServerData = !0, t || this.initData(), !s.default.isNullOrEmpty(this.serverData[e.SaveKey.curTrackId]) && this.serverData[e.SaveKey.curTrackId] > this.curTrackId ? this.loadServerData(this.serverData) : (s.default.isNullOrEmpty(this.serverData[e.SaveKey.curTrackId]) || this.serverData[e.SaveKey.curTrackId] < this.curTrackId) && this.copyDataFromLocalToOnline()
                }
            }, e.prototype.revMsgHandler = function (t) {
                var i = t.gdata;
                console.log("revMsgHandler gdata: " + i), i && (e.instance.isSyncOnline && (this.serverData = i, this.initServerData()), s.default.isNullOrEmpty(i.bi_score) || (this.curPlayerScore = i.bi_score, console.log("curPlayerScore : " + this.curPlayerScore + " gdata['bi_score'] : " + i.bi_score)))
            }, e.prototype.saveAddSpeedTime = function () {
                this.saveDataToLocal(e.SaveKey.addSpeedTime, this.addSpeedTime)
            }, e.prototype.addAddSpeedTime = function (e) {
                this.addSpeedTime += e, this.saveAddSpeedTime(), d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA)
            }, e.prototype.costAddSpeedTime = function (e) {
                this.addSpeedTime -= e, this.saveAddSpeedTime(), d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA)
            }, e.prototype.doPerSecond = function () {
                this.OnlineTime++, this.doPerSecondAddCoin(), this.doShopShare(), this.doEasyBuy(), this.stamina < this.maxRegainStamina && this.everySecReplyStamina(), !this.isStartGame && e.instance.tutorialState >= this.newUserGuideSteps && this.mainLevelScreenTime++, this.mainLevelScreenTime == this.gameConfig.guideEnterGameTime && d.default.instance.sendEvent(p.default.REFRESH_MAIN_NEWBIE_HINT), e.instance.isGetSupply || e.instance.showSupply || !this.gameConfig.isOpenSupply || e.instance.OnlineTime >= this.gameConfig.getSupplyOnlineTime && (e.instance.setSupplyData(), d.default.instance.sendEvent(p.default.SHOW_SUPPLY)), this.isOpenGZHDialog || u.default.instance.destroyGetUserInfoBtn()
            }, e.prototype.doPerMinute = function () {
                this.setLastTime()
            }, e.prototype.doPerSecondAddCoin = function () {
                for (var e = 0, t = 0; t < this.garageCarData.length; t++) this.isOpenDoubleCoinAward ? this.addSpeedTime > 0 && (e += this.garageCarData[t].income * this.gameConfig.CoinAwardMultiple * this.multiple) : e += this.garageCarData[t].income * this.multiple;
                this.addSpeedTime > 0 ? this.costAddSpeedTime(1) : this.isOpenDoubleCoinAward = !1, e *= 1, this.setGarageEarnings(e), this.isNeedPerSecondEarnings && this.addCoin(e, !1), this.multipleTime > 0 ? this.multipleTime-- : this.multiple = 1
            }, e.prototype.getResultMoreAwardType = function () {
                for (var e = 1e5 * Math.random(), t = 0, i = 0; i < this.gameConfig.resultMoreAwardCfg.length; i++) {
                    var a = this.gameConfig.resultMoreAwardCfg[i].probability,
                        n = this.resultDoubleAwardTimes * this.gameConfig.doubleAwardReducePro * this.gameConfig.resultMoreAwardCfg[0].probability;
                    if (t += 1e5 * (a + (0 == i ? -n : .5 * n)), e <= t) {
                        var o = this.gameConfig.resultMoreAwardCfg[i].awardType,
                            r = o != c.default.QResultMoreAwardType.two;
                        return this.setResultDoubleAwardTimes(!r), o
                    }
                }
                return 2
            }, e.prototype.IncomeMultiple = function (e, t) {
                this.multiple = e, this.multipleTime += t
            }, e.prototype.IsVideoGain = function (e) {
                var t = e == c.default.QAcquireWayType.Video,
                    i = this.noVideoToShareWay == c.default.QGainWay.Video;
                return t && i || this.isAuditVersion
            }, e.prototype.fixedTimeRefection = function () {
                this.zeroToNowTimeSec = Date.parse((new Date).toString()) / 1e3, this.staminaRegainTime = this.gameConfig.StaminaRegainTime, this.staminaRegainCount = this.gameConfig.StaminaRegainCount, 0 == this.lastRegisterTime ? this.setLastRegisterTime(this.zeroToNowTimeSec) : this.regainStaminaAdd(this.zeroToNowTimeSec, this.lastRegisterTime, this.staminaRegainTime, this.staminaRegainCount), this.isStartReplyStamina = !0
            }, e.prototype.everySecReplyStamina = function () {
                this.isStartReplyStamina && (this.zeroToNowTimeSec = Date.parse((new Date).toString()) / 1e3, this.regainStaminaAdd(this.zeroToNowTimeSec, this.lastRegisterTime, this.staminaRegainTime, this.staminaRegainCount))
            }, e.prototype.regainStaminaAdd = function (e, t, i, a) {
                if (this.timeDifference = e - t, this.timeDifference < 0 || this.stamina == this.gameConfig.defaultStamina) return this.timeDifference = 0, void this.setLastRegisterTime(e);
                this.timeDifference >= i && (this.addStamina(Number((this.timeDifference / i).toFixed(0)) * a, !0), this.setLastRegisterTime(e), d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA)), d.default.instance.sendEvent(p.default.REFRESH_RECOVER_COUNT_DOWN)
            }, e.prototype.getCurGarageAllValue = function () {
                for (var t = 0, i = 0; i < this.garageCarData.length; i++) 0 == this.garageCarData[i].boxState && (e.instance.isOpenDoubleCoinAward ? t += this.garageCarData[i].income * this.gameConfig.CoinAwardMultiple : t += this.garageCarData[i].income);
                return t * e.instance.multiple * 1
            }, e.prototype.saveAllData = function () {
                for (var t in this.dicAllDataJson) Laya.LocalStorage.setItem(t, JSON.stringify(this.dicAllDataJson[t]));
                e.instance.isSyncOnline && this.sendSaveDataItems(this.dicAllDataJson)
            }, e.prototype.sendEnterGame = function () {
                g.default.instance.get(tywx.SystemInfo.loginUrl + "api/sxlzc/enter_game?gameId=" + tywx.SystemInfo.gameId + "&userId=" + tywx.UserInfo.userId, this, this.enterGameSuccessHandle)
            }, e.prototype.enterGameSuccessHandle = function (e) {
                200 == e.state ? (console.log(" data : " + JSON.stringify(e)), this.revMsgHandler(e.data.data), d.default.instance.sendEvent(p.default.REV_SERVER_DATA)) : Laya.timer.once(3e3, this, this.sendEnterGame)
            }, e.prototype.sendSaveDataItems = function (e) {
                var t = {
                        gameId: tywx.SystemInfo.gameId,
                        userId: tywx.UserInfo.userId,
                        data: e
                    },
                    i = JSON.stringify(t);
                g.default.instance.post(tywx.SystemInfo.loginUrl + "api/sxlzc/save_data_items", i, null, null, this, this.saveAllDataSuccessHandle), console.log("sendSaveDataItems: " + i)
            }, e.prototype.saveAllDataSuccessHandle = function (e) {
                200 == e.state ? console.log(" saveAllDataSuccess : " + JSON.stringify(e)) : console.log(" saveAllDataFail : " + JSON.stringify(e))
            }, e.prototype.checkResultDialogStrategy = function (e) {
                return 2 == this.levelResultDialogStrategy && (e || this.curTrackId) <= this.levelResultDialogsList.length ? 1 : 0
            }, e.prototype.getResultDialogType = function () {
                return this.curTrackId > this.levelResultDialogsList.length ? 0 : (this.resultDialogInfo = this.levelResultDialogsList[this.curTrackId - 1], this.resultDialogInfo[0] || 0)
            }, e.prototype.getResultDialogUI = function () {
                switch (1 == e.instance.serverIsSkipPop && (this.resultDialogInfo[0] = 0, e.instance.serverIsSkipPop = 0), this.resultDialogInfo[0] || 0) {
                    case 0:
                        Laya.timer.frameOnce(3, this, function () {
                            this.isShowDialogInResult = !1, d.default.instance.sendEvent(p.default.GET_RESULT_AWARD)
                        });
                        break;
                    case 1:
                        t = this.resultDialogInfo[1], m.default.instance.createUI(m.default.UI_AchievementDialog, {
                            type: 1,
                            stage: this.achievementWinningStreakStage,
                            image: t.image,
                            reward: t.reward,
                            label: "连胜" + this.winningStreakCount + "场",
                            count: t.count
                        });
                        break;
                    case 2:
                        var t = this.resultDialogInfo[1];
                        m.default.instance.createUI(m.default.UI_AchievementDialog, {
                            type: 2,
                            stage: this.achievementWinningStreakStage,
                            image: t.image,
                            reward: t.reward,
                            label: t.label,
                            count: t.count
                        });
                        break;
                    case 3:
                        var i = e.instance.availableLotteryCount;
                        i += e.instance.gameConfig.addLotteryCount, e.instance.setAvailableLotteryCount(i), m.default.instance.createUI(m.default.UI_Lottery, {
                            isMainEnter: !1
                        });
                        break;
                    case 4:
                        e.instance.getShareTimesIsEnough(c.default.QShareType.OpenBox) && m.default.instance.createUI(m.default.UI_BoxDialog, {
                            type: 2
                        });
                        break;
                    case 5:
                        this.welfareList.kefu.state;
                        break;
                    case 6:
                        0 == this.welfareList.xiaochengxu.state && m.default.instance.createUI(m.default.UI_XiaoChengXuDialog);
                        break;
                    case 7:
                        0 == this.welfareList.fuchuang.state && m.default.instance.createUI(m.default.UI_FloatWindow);
                        break;
                    default:
                        Laya.timer.frameOnce(3, this, function () {
                            this.isShowDialogInResult = !1, d.default.instance.sendEvent(p.default.GET_RESULT_AWARD)
                        })
                }
            }, e.prototype.checkDropBoxType = function () {
                if (this.checkResultDialogStrategy()) return this.getResultDialogType();
                var e = 4;
                this.boxRewardInfo && (e = this.boxRewardInfo.step, this.rewardShowType = this.boxRewardInfo.rewardShowType);
                var t = this.winGameTimes % e;
                return 0 == t && (this.winGameTimes = 0), this.rewardShowType[t]
            }, e.prototype.updateWinGameTimes = function () {
                this.winGameTimes++, this.saveDataToLocal(e.SaveKey.winGameTimes, this.winGameTimes)
            }, e.prototype.addWinningStreakCount = function () {
                this.winningStreakCount++, this.saveDataToLocal(e.SaveKey.winningStreakCount, this.winningStreakCount)
            }, e.prototype.setWinningStreakStage = function (t) {
                this.achievementWinningStreakStage = t, this.saveDataToLocal(e.SaveKey.achievementWinningStreakStage, this.achievementWinningStreakStage)
            }, e.prototype.setLevelPassStage = function (t) {
                this.achievementLevelPassStage = t, this.saveDataToLocal(e.SaveKey.achievementLevelPassStage, this.achievementLevelPassStage)
            }, e.prototype.addtWinningStreakStage = function () {
                this.achievementWinningStreakStage++, this.saveDataToLocal(e.SaveKey.achievementWinningStreakStage, this.achievementWinningStreakStage)
            }, e.prototype.resetWinningStreakCount = function (t) {
                this.winningStreakCount = t || 0, this.saveDataToLocal(e.SaveKey.winningStreakCount, this.winningStreakCount), this.achievementWinningStreakStage = t || 0, this.saveDataToLocal(e.SaveKey.achievementWinningStreakStage, this.achievementWinningStreakStage)
            }, e.prototype.checkKeFuDialog = function () {
                return console.log("检测客服弹窗弹出逻辑state：" + this.getWelfareState("kefu") + "showKeFuInResult：" + this.showKeFuInResult), 0 == this.getWelfareState("kefu") && !this.showKeFuInResult && (6 == this.curTrackId || this.curTrackId > 6 && 1 == e.instance.stamina) && (e.instance.isShowDialogInResult = !0, this.setShowKeFuInResult(1), !0)
            }, e.prototype.checkAchievementReward = function () {
                if (this.checkResultDialogStrategy(this.curTrackId - 1)) return 0;
                if (this.achievementWinningStreakCfg.length > 0 && this.achievementWinningStreakStage < this.achievementWinningStreakCfg.length)
                    for (n = this.achievementWinningStreakStage; n < this.achievementWinningStreakCfg.length; n++) {
                        if (this.winningStreakCount == this.achievementWinningStreakCfg[n].streak) {
                            var e = this.achievementWinningStreakCfg[n].reward,
                                t = this.achievementWinningStreakCfg[n].image,
                                i = this.achievementWinningStreakCfg[n].label,
                                a = this.achievementWinningStreakCfg[n].count;
                            return m.default.instance.createUI(m.default.UI_AchievementDialog, {
                                type: 1,
                                stage: this.achievementWinningStreakStage,
                                image: t,
                                reward: e,
                                label: i,
                                count: a
                            }), this.setWinningStreakStage(n + 1), 1
                        }
                        if (this.winningStreakCount < this.achievementWinningStreakCfg[n].streak) {
                            this.setWinningStreakStage(n);
                            break
                        }
                    }
                if (this.achievementLevelPassCfg.length > 0 && this.achievementLevelPassStage < this.achievementLevelPassCfg.length)
                    for (var n = this.achievementLevelPassStage; n < this.achievementLevelPassCfg.length; n++) {
                        if (this.curTrackId - 1 == this.achievementLevelPassCfg[n].level) return e = this.achievementLevelPassCfg[n].reward, t = this.achievementLevelPassCfg[n].image, i = this.achievementLevelPassCfg[n].label, a = this.achievementLevelPassCfg[n].count, console.log("弹出等级成就：" + this.curTrackId), m.default.instance.createUI(m.default.UI_AchievementDialog, {
                            type: 2,
                            stage: this.achievementLevelPassStage,
                            image: t,
                            reward: e,
                            label: i,
                            count: a
                        }), this.setLevelPassStage(n + 1), 2;
                        if (this.curTrackId - 1 < this.achievementLevelPassCfg[n].level) return this.setLevelPassStage(n), 0
                    }
                return 0
            }, e.prototype.resetWelfareCount = function () {
                for (var e in this.welfareList) "gongzhonghao" == e ? this.welfareList.gongzhonghao.count = 8 : this.welfareList[e].count = 2
            }, e.prototype.resetWelfareState = function () {
                this.welfareList.xiaochengxu = {
                    ui: m.default.UI_XiaoChengXuDialog,
                    title: "添加到小程序",
                    state: 0,
                    reward: 1,
                    count: 2,
                    skin: "ui_dialog/programTitle.png"
                }, this.welfareList.fuchuang = {
                    ui: m.default.UI_FloatWindow,
                    title: "启用浮窗",
                    state: 0,
                    reward: 1,
                    count: 2,
                    skin: "ui_dialog/floatTitle.png"
                }, this.welfareList.kefu = {
                    ui: m.default.UI_KeFuDialog,
                    title: "客服会话",
                    state: 0,
                    reward: 1,
                    count: 2,
                    skin: "ui_dialog/serviceTitle.png"
                }, this.saveDataToLocal(e.SaveKey.welfareList, this.welfareList)
            }, e.prototype.setIsOldPlayer = function (t) {
                this.isOldPlayer = t, this.saveDataToLocal(e.SaveKey.isOldPlayer, this.isOldPlayer)
            }, e.prototype.setShowXiaoChengXuDialog = function (t) {
                this.showXiaoChengXuDialog = t, this.saveDataToLocal(e.SaveKey.showXiaoChengXuDialog, this.showXiaoChengXuDialog)
            }, e.prototype.setWelfareState = function (t, i) {
                this.showWelfareRewardDialog = 0, t && this.welfareList[t] && (this.welfareList[t].state = i, console.log("设置奖励领取" + JSON.stringify(this.welfareList)), this.saveDataToLocal(e.SaveKey.welfareList, this.welfareList))
            }, e.prototype.getWelfareState = function (e) {
                if (e && this.welfareList[e]) return this.welfareList[e].state
            }, e.prototype.sendScenePost = function () {
                if (!this.loginSceneInfo.scene || 1073 == this.loginSceneInfo.scene) {
                    console.log("发送客服登录场景进入消息");
                    var e = {
                            gameId: tywx.SystemInfo.gameId,
                            userId: tywx.UserInfo.userId,
                            wxgame_openid: tywx.UserInfo.wxgame_openid,
                            scene: this.loginSceneInfo.scene
                        },
                        t = JSON.stringify(e);
                    g.default.instance.post(tywx.SystemInfo.loginUrl + "api/sxlzc/loginMessage", t, null, null, this, this.sendSceneSuccessHandle)
                }
            }, e.prototype.sendSceneSuccessHandle = function (e) {
                200 == e.state ? console.log(" sendSceneSuccess : " + JSON.stringify(e)) : console.log(" sendSceneFail : " + JSON.stringify(e))
            }, e.prototype.checkLoginScene = function (e) {
                if (console.log("wel检测登录场景值" + JSON.stringify(e)), e && e.scene && 1 != this.curTrackId) {
                    switch (e.scene) {
                        case 1001:
                        case 1089:
                            console.log("wel小程序state：" + this.welfareList.xiaochengxu.state + "  this.showXiaoChengXuDialog" + this.showXiaoChengXuDialog + "this.showLoadingView：" + this.showLoadingView), 0 == this.welfareList.xiaochengxu.state && 1 == this.showXiaoChengXuDialog && (this.showWelfareRewardDialog = 1, this.loginScene = "xiaochengxu", this.showLoadingView && this.onChangeWelfareState("xiaochengxu"));
                            break;
                        case 1073:
                            console.log("wel小程序state：" + this.welfareList.kefu.state + "this.showLoadingView：" + this.showLoadingView), 0 == this.welfareList.kefu.state && this.openCustomerService && (this.showWelfareRewardDialog = 1, this.loginScene = "kefu", this.showLoadingView && (this.openCustomerService = 0, this.onChangeWelfareState("kefu")));
                            break;
                        case 1131:
                            console.log("wel小程序state：" + this.welfareList.fuchuang.state + "this.showLoadingView：" + this.showLoadingView), 0 == this.welfareList.fuchuang.state && (this.showWelfareRewardDialog = 1, this.loginScene = "fuchuang", this.showLoadingView && this.onChangeWelfareState("fuchuang"))
                    }
                    console.log("wel弹出客服奖励" + this.showWelfareRewardDialog + "openCustomerService:" + this.openCustomerService), !this.showWelfareRewardDialog && this.openCustomerService && 0 == this.welfareList.kefu.state && (this.showWelfareRewardDialog = 1, this.loginScene = "kefu", this.showLoadingView && (this.openCustomerService = 0, this.onChangeWelfareState("kefu")))
                }
            }, e.prototype.onChangeWelfareState = function (t) {
                if (console.log("wel弹出体力奖励领取" + t + "state:" + this.welfareList[t].state), this.welfareList[t].state) return this.showWelfareRewardDialog = 0, void(this.showLoginBox && this.checkNextDialog());
                console.log("wel弹出体力奖励领取" + t), m.default.instance.removeUI(m.default.UI_WelfareReward), e.instance.setWelfareState(t, 1), d.default.instance.sendEvent(p.default.REFRESH_WELFARE_STATE), m.default.instance.createUI(m.default.UI_WelfareReward, [t])
            }, e.prototype.checkIsCanAddBox = function (e) {
                this.InviteTotalNum = e, console.log("检测宝箱状态 2 :" + this.InviteBoxState + "num:" + e + "InviteBoxTimes:" + this.InviteBoxTimes), !this.InviteBoxState && Math.floor(this.InviteTotalNum / this.InviteBoxCycleNum) > this.InviteBoxTimes && (this.InviteBoxState = 1), this.saveInviteData(), d.default.instance.sendEvent(p.default.UPDATE_INVITED_BOX)
            }, e.prototype.changeInviteBoxTimes = function (e) {
                this.InviteBoxTimes += e, console.log("zlk----刷新宝箱领取次数：" + this.InviteBoxTimes), this.saveInviteData()
            }, e.prototype.saveInviteData = function () {
                this.saveDataToLocal(e.SaveKey.InviteBoxTimes, this.InviteBoxTimes), this.saveDataToLocal(e.SaveKey.InviteTotalNum, this.InviteTotalNum), this.saveDataToLocal(e.SaveKey.InviteBoxState, this.InviteBoxState)
            }, e.prototype.setInviteBoxRedPointShow = function (t) {
                this.InviteBoxRedPointShow = t, this.saveDataToLocal(e.SaveKey.InviteBoxRedPointShow, this.InviteBoxRedPointShow)
            }, e.prototype.checkIsUpdateData = function () {
                var t = this.getDataFromLocal(e.SaveKey.curMaxLevel, "NONE"),
                    i = this.getDataFromLocal(e.SaveKey.diamond, "NONE"),
                    a = this.getDataFromLocal(e.SaveKey.tutorialState, "NONE"),
                    n = this.getDataFromLocal(e.SaveKey.isGetGZHAward, "NONE"),
                    o = this.getDataFromLocal(e.SaveKey.curTrackId, "NONE");
                if (this.getDataFromLocal(e.SaveKey.garageCarData, "NONE"), this.getDataFromLocal(e.SaveKey.signInDays, "NONE"), t = this.getDataFromLocal(e.SaveKey.curMaxLevel, "NONE"), i = this.getDataFromLocal(e.SaveKey.diamond, "NONE"), a = this.getDataFromLocal(e.SaveKey.tutorialState, "NONE"), n = this.getDataFromLocal(e.SaveKey.isGetGZHAward, "NONE"), o = this.getDataFromLocal(e.SaveKey.curTrackId, "NONE"), this.getDataFromLocal(e.SaveKey.garageCarData, "NONE"), this.getDataFromLocal(e.SaveKey.signInDays, "NONE"), this.getDataFromLocal(e.SaveKey.isOldPlayer, "NONE"), this.getDataFromLocal(e.SaveKey.InviteBoxTimes, "NONE"), !tywx.UserInfo.isCreate && "NONE" == t && "NONE" == i && "NONE" == a && "NONE" == n && "NONE" == o) {
                    var r = {
                            gameId: tywx.SystemInfo.gameId,
                            userId: tywx.UserInfo.userId
                        },
                        s = JSON.stringify(r);
                    g.default.instance.post(tywx.SystemInfo.loginUrl + "api/sxlzc/getUserData", s, null, null, this, this.GetDataSuccessHandle)
                }
            }, e.prototype.GetDataSuccessHandle = function (e) {
                if (200 == e.state && e.data.userData) {
                    var t = e.data.userData;
                    this.serverSynData = t
                }
            }, e.prototype.freshUserSaveData = function (t) {
                t.coin > 0 && (this.coin = t.coin, this.saveCoin(), d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA)), -1 != t.curMaxLevel && t.curMaxLevel > 0 && (this.curMaxLevel = t.curMaxLevel, this.saveDataToLocal(e.SaveKey.curMaxLevel, t.curMaxLevel)), -1 != t.diamond && t.diamond > 0 && (this.diamond = t.diamond, this.saveDiamond(), d.default.instance.sendEvent(p.default.UPDATE_VIEW_DATA)), -1 != t.tutorialState && this.finishTutorial(t.tutorialState), -1 != t.isGetGZHAward && this.setIsGetGZHAward(t.isGetGZHAward), -1 != t.curTrackId && t.curTrackId > 0 && (this.curTrackId = t.curTrackId, this.saveDataToLocal(e.SaveKey.curTrackId, t.curTrackId)), 0 != t.garageCarData.length && (this.garageCarData = t.garageCarData, this.setGarageCarData(this.garageCarData, !1)), -1 != t.signInDays && t.signInDays > 0 && (this.signInDays = t.signInDays, this.signInDays >= 7 && (this.signInDays = 0), this.saveDataToLocal(e.SaveKey.signInDays, this.signInDays)), -1 != t.isOldPlayer && (0 == t.isOldPlayer ? this.isOldPlayer = !1 : 1 == t.isOldPlayer && (this.isOldPlayer = !0), this.saveDataToLocal(e.SaveKey.isOldPlayer, this.isOldPlayer)), t.inviteBoxTimes > 0 && (this.InviteBoxTimes = t.inviteBoxTimes, this.saveDataToLocal(e.SaveKey.InviteBoxTimes, t.inviteBoxTimes), console.log("zlk-----合成数据存储 InviteBoxTimes：" + this.InviteBoxTimes))
            }, e.prototype.sendUserDataServer = function () {
                if (!this.isClickDeleteService) {
                    var e = -1;
                    0 == this.isOldPlayer ? e = 0 : 1 == this.isOldPlayer && (e = 1);
                    var t = {
                            coin: this.coin,
                            curMaxLevel: this.curMaxLevel,
                            diamond: this.diamond,
                            tutorialState: this.tutorialState,
                            isGetGZHAward: this.isGetGZHAward,
                            curTrackId: this.curTrackId,
                            garageCarData: this.garageCarData,
                            signInDays: this.signInDays,
                            wxgame_openid: tywx.UserInfo.wxgame_openid,
                            isOldPlayer: e,
                            inviteBoxTimes: this.InviteBoxTimes
                        },
                        i = {
                            gameId: tywx.SystemInfo.gameId,
                            userId: tywx.UserInfo.userId,
                            userData: t
                        },
                        a = JSON.stringify(i);
                    g.default.instance.post(tywx.SystemInfo.loginUrl + "api/sxlzc/saveUserData", a, null, null, this, function (e) {})
                }
            }, e.prototype.setGameJcdlNum = function (e) {
                this.GameJcdlFreshIndex = e
            }, e.prototype.getGameJcdlNum = function () {
                return this.GameJcdlFreshIndex
            }, e.prototype.setNextTargetNum = function (e) {
                this.NextTargetNum = e
            }, e.prototype.getNextTargetNum = function () {
                return this.NextTargetNum
            }, e.prototype.setFinishLevelNum = function (e) {
                this.FinishLevelNum = e
            }, e.prototype.getFinishLevelNum = function () {
                return this.FinishLevelNum
            }, e.SaveKey = {
                deviceId: "deviceId",
                coin: "coin",
                stamina: "stamina",
                shopCarBuyTimes: "shopCarBuyTimes",
                curMaxLevel: "curMaxLevel",
                garageEarnings: "garageEarnings",
                curRecomCarLevel: "curRecomCarLevel",
                useShareOrVideoTimes: "useShareOrVideoTimes",
                diamond: "diamond",
                signInDays: "signInDays",
                isGetSignInGift: "isGetSignInGift",
                getCoinTime: "getCoinTime",
                clickCarIndex: "clickCarIndex",
                gainCoinTime: "gainCoinTime",
                lastRegisterTime: "lastRegisterTime",
                tutorialState: "tutorialState",
                curSelectCarLevelId: "curSelectCarLevelId",
                everyDayCommonVideoShareTime: "everyDayCommonVideoShareTime",
                shopVideoShareTime: "shopVideoShareTime",
                freeVideoShareTime: "freeVideoShareTime",
                lastLotteryIndex: "lastLotteryIndex",
                availableLotteryCount: "availableLotteryCount",
                curTrackId: "curTrackId",
                dailyDate: "dailyDate",
                lastTime: "lastTime",
                garageCarData: "garageCarData",
                recordGainCarTimes: "recordGainCarTimes",
                isGetCollectAward: "isGetCollectAward",
                isLotteryShare: "isLotteryShare",
                addSpeedTime: "addSpeedTime",
                allShareTimes: "allShareTimes",
                resultDoubleAwardTimes: "resultDoubleAwardTimes",
                shopCurLeaveTime: "shopCurLeaveTime",
                levelUpLeaveTime: "levelUpLeaveTime",
                isFirstPlayRecycleCarAni: "isFirstPlayRecycleCarAni",
                comDialogBannerShowTimes: "comDialogBannerShowTimes",
                curSoundState: "curSoundState",
                resultNoGetThreeAwardTimes: "resultNoGetThreeAwardTimes",
                isDailyFirstGame: "isDailyFirstGame",
                KongtouVideoShareTime: "KongtouVideoShareTime",
                supplyGuide: "supplyGuide",
                isLifeFirstGame: "isLifeFirstGame",
                supplyBoxInGarageIndex: "supplyBoxInGarageIndex",
                curDiamondGiftType: "curDiamondGiftType",
                diamondGiftGetTimes: "diamondGiftGetTimes",
                lastPlayerScoreType: "lastPlayerScoreType",
                playerScoreVideoShareTime: "playerScoreVideoShareTime",
                addRevenueGetTimes: "addRevenueGetTimes",
                beOfflineGetTimes: "beOfflineGetTimes",
                freeCoinGetTimes: "freeCoinGetTimes",
                dailyCheckGetTimes: "dailyCheckGetTimes",
                lotteryGetTimes: "lotteryGetTimes",
                resultGetMoreAwardTimes: "resultGetMoreAwardTimes",
                reviveSuccessTimes: "reviveSuccessTimes",
                lotteryMoreAwardTimes: "lotteryMoreAwardTimes",
                gainStaminaTimes: "gainStaminaTimes",
                isFirstNewBie: "isFirstNewBie",
                gameHintTims: "gameHintTims",
                freeHintTimes: "freeHintTimes",
                openBoxTimes: "openBoxTimes",
                getMoreBoxAward: "getMoreBoxAward",
                curGatherPro: "curGatherPro",
                lifeFirstShareState: "lifeFirstShareState",
                isClickBtnGongZhongHao: "isClickBtnGongZhongHao",
                isGetGZHAward: "isGetGZHAward",
                attentionGZHFailTimes: "attentionGZHFailTimes",
                isGetPlayerUserInfoSuccess: "isGetPlayerUserInfoSuccess",
                winGameTimes: "winGameTimes",
                todayFirstLottery: "todayFirstLottery",
                getAchievementReward: "getAchievementReward",
                winningStreakCount: "winningStreakCount",
                achievementLevelPassStage: "achievementLevelPassStage",
                achievementWinningStreakStage: "achievementWinningStreakStage",
                welfareList: "welfareList",
                floatPopAward: "floatPopAward",
                showXiaoChengXuDialog: "showXiaoChengXuDialog",
                isLoginBoxReward: "isLoginBoxReward",
                isOldPlayer: "isOldPlayer",
                showKeFuInResult: "showKeFuInResult",
                InviteBoxTimes: "InviteBoxTimes",
                InviteBoxRedPointShow: "InviteBoxRedPointShow",
                InviteTotalNum: "InviteTotalNum",
                InviteBoxState: "InviteBoxState",
                todayDiamondGiftFromFriends: "todayDiamondGiftFromFriends",
                todayStaminaGiftFromFriends: "todayStaminaGiftFromFriends"
            }, e
        }(), o.QGameData = r, i.default = a.data.QGameData
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QHttp": 6,
        "../../framework/QMD5Util": 7,
        "../../framework/QUtil": 13,
        "../core/QCfgMgr": 15,
        "../core/QSoundMgr": 18,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../logic/QSupplyMgr": 29,
        "./QBIEvent": 22,
        "./QEventType": 23,
        "./QGameConst": 24
    }],
    26: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.data || (n.data = {}), r = function () {
            function e() {}
            return e.SHARE_FAIL = "分享失败", e.VIEW_FAIL = "查看失败", e.NO_VIDEO_AD_TRY_SHARE = "现在没有广告，试试求助好友哦~", e.NO_VIDEO_AD_TRY_LATER = "现在没有广告，请稍后再试哦~", e.NETWORK_NOT_CONNECTED = "请连接网络后再试", e.LOADING_RES = "正在加载资源，请稍候...", e.LOAD_RES_FAIL = "加载资源失败，请检查网络...", e.UNLOCK_BY_VIDEO = "视频解锁", e.GAIN_BY_SHARE = "求助好友", e.LOTTERY_BY_VIDEO = "视频抽奖", e
        }(), o.QLanguage = r, i.default = a.data.QLanguage
    }, {}],
    27: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.logic || (n.logic = {}), r = function () {
            function e() {
                this.isInGame = !1
            }
            return Object.defineProperty(e, "instance", {
                get: function () {
                    return null == this._instance && (this._instance = new e, this._instance.registerEvent()), this._instance
                },
                enumerable: !0,
                configurable: !0
            }), e.prototype.registerEvent = function () {}, e.prototype.unregisterEvent = function () {}, e.prototype.startGame = function (e) {
                void 0 === e && (e = 1), this.isInGame = !0
            }, e.prototype.finishGame = function () {
                this.isInGame = !1
            }, e.prototype.gameOver = function () {}, e
        }(), o.QGamePlay = r, i.default = a.logic.QGamePlay
    }, {}],
    28: [function (e, t, i) {
        "use strict";
        var a, n, o, r;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), n = a || (a = {}), o = n.logic || (n.logic = {}), r = function () {
            function e() {
                this.params = {}, this.mainCallBackHandler = null
            }
            return e.create = function () {
                return this.listPool.length > 0 ? this.listPool.shift() : new e
            }, e.prototype.clear = function () {
                return this.shareType = -1, this.params = null, this
            }, e.prototype.recovery = function () {}, e.listPool = new Array, e
        }(), o.QShareParam = r, i.default = a.logic.QShareParam
    }, {}],
    29: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../framework/QEventMgr"),
            l = e("../data/QEventType"),
            c = e("../../framework/QUtil"),
            h = e("../core/QCfgMgr"),
            d = e("../data/QGameConst"),
            p = e("../data/QGameData");
        n = a || (a = {}), o = n.logic || (n.logic = {}), r = function () {
            function e() {
                this.totalWeight = 0, this.reflushSupplyTime = 0, this.lotteryWeightList = new Array, this.isShowPage = !1, this.supplyIndex = 0, this.intervalTime = 0, this.freeBoxNum = 0, this.perBoxflushTime = 0, this.supplyCarLevel = -1, this.supplyCarNum = 0
            }
            return Object.defineProperty(e, "instance", {
                get: function () {
                    return null == this._instance && (this._instance = new e, this._instance.registerEvent()), this._instance
                },
                enumerable: !0,
                configurable: !0
            }), e.prototype.init = function () {
                this.gameConfig = h.default.instance.dicConfig[d.default.QCfgType.GameConfig], this.supplycfg = this.gameConfig.supply, this.reflushSupplyTime = this.gameConfig.reflushSupplyTime, this.showSupplyTime = this.gameConfig.showSupplyTime, this.carCfg = h.default.instance.dicConfig[d.default.QCfgType.Car];
                for (var e = 0; e < this.supplycfg.length; e++) {
                    var t = this.supplycfg[e];
                    this.totalWeight += t.weight, this.lotteryWeightList.push(this.totalWeight)
                }
                p.default.instance.allShareTimes <= this.gameConfig.everyDayCommonVideoShareType[this.gameConfig.everyDayCommonVideoShareType.length - 1][1] && Laya.timer.once(1e3 * this.reflushSupplyTime, this, this.showSupply)
            }, e.prototype.initFreeBox = function () {
                if (4 == p.default.instance.tutorialState && this.gameConfig.isOpenSupply) {
                    this.perBoxflushTime = this.gameConfig.freeBoxFlushTime, this.intervalTime = Math.floor(p.default.instance.intervalTime / 1e3), this.freeBoxNum = Math.floor(this.intervalTime / this.perBoxflushTime);
                    for (var e = 0; e < this.freeBoxNum; e++) this.createFreeBox();
                    this.freeBoxNum = 0
                }
            }, e.prototype.createFreeBox = function () {
                if (4 == p.default.instance.tutorialState && this.gameConfig.isOpenSupply && !p.default.instance.judgeGarageCarFull()) {
                    var e = this.genFreeBoxCar();
                    p.default.instance.setBuyCarData(e, 1), s.default.instance.sendEvent(l.default.SUPPLY_CAR)
                }
            }, e.prototype.registerEvent = function () {
                s.default.instance.register(l.default.HIDE_SUPPLY, this.hideSupply, this), s.default.instance.register(l.default.SUB_CAR_STOP, this.PopCarInMap, this)
            }, e.prototype.unregisterEvent = function () {
                s.default.instance.unregister(l.default.HIDE_SUPPLY, this.hideSupply, this), s.default.instance.unregister(l.default.SUB_CAR_STOP, this.PopCarInMap, this)
            }, e.prototype.showSupply = function () {
                if (4 == p.default.instance.tutorialState && this.gameConfig.isOpenSupply) {
                    for (var e = -1, t = c.default.getRandomInt(0, this.totalWeight - 1), i = 0; i < this.lotteryWeightList.length; i++)
                        if (t < this.lotteryWeightList[i]) {
                            e = i;
                            break
                        } e = e < 0 ? 0 : e, e = this.supplyCarNum > 0 ? 0 : e, this.isShowPage = !0, s.default.instance.sendEvent(l.default.SHOW_SUPPLY, e), Laya.timer.once(1e3 * this.showSupplyTime, this, this._hideSupply), this.supplyIndex = e
                }
            }, e.prototype.HideFlyBox = function () {
                Laya.timer.clear(this, this._hideSupply)
            }, e.prototype._hideSupply = function () {
                this.isShowPage = !1, s.default.instance.sendEvent(l.default.HIDE_SUPPLY)
            }, e.prototype.hideSupply = function () {
                p.default.instance.allShareTimes <= this.gameConfig.everyDayCommonVideoShareType[this.gameConfig.everyDayCommonVideoShareType.length - 1][1] && Laya.timer.once(1e3 * this.reflushSupplyTime, this, this.showSupply), Laya.timer.clear(this, this._hideSupply)
            }, e.prototype.genSupplyCar = function () {
                var e = p.default.instance.curMaxLevel;
                e > this.carCfg.length && (e = this.carCfg.length);
                for (var t = this.carCfg[e.toString()].random_level, i = this.carCfg[e.toString()].random_weight, a = 0, n = new Array, o = 0; o < i.length; o++) a += i[o], n.push(a);
                for (var r = c.default.getRandomInt(0, a - 1), s = -1, l = 0; l < n.length; l++)
                    if (r < n[l]) {
                        s = l;
                        break
                    } return s = s < 0 ? 0 : s, t[s]
            }, e.prototype.genFreeBoxCar = function () {
                var e = p.default.instance.curMaxLevel;
                e > this.carCfg.length && (e = this.carCfg.length);
                for (var t = this.carCfg[e.toString()].random_level_m, i = this.carCfg[e.toString()].random_weight_m, a = 0, n = new Array, o = 0; o < i.length; o++) a += i[o], n.push(a);
                for (var r = c.default.getRandomInt(0, a - 1), s = -1, l = 0; l < n.length; l++)
                    if (r < n[l]) {
                        s = l;
                        break
                    } return s = s < 0 ? 0 : s, t[s]
            }, e.prototype.AddSupplyMap = function (e, t) {
                this.supplyCarLevel = e, this.supplyCarNum = t
            }, e.prototype.PopCarInMap = function () {
                for (var e = 0; e < this.supplyCarNum; e++) !p.default.instance.judgeGarageCarFull() && this.supplyCarNum > 0 && this.supplyCarLevel > 0 ? (p.default.instance.setBuyCarData(this.supplyCarLevel, 2), s.default.instance.sendEvent(l.default.SUPPLY_CAR), this.supplyCarNum--) : this.supplyCarNum < 1 && (this.supplyCarLevel = -1)
            }, e
        }(), o.QSupplyMgr = r, i.default = a.logic.QSupplyMgr
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../core/QCfgMgr": 15,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25
    }],
    30: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = e("../data/QGameConst"),
            d = e("../logic/QShareParam"),
            p = e("../core/QWxSDK"),
            u = e("../data/QGameData"),
            g = e("../../framework/QEventMgr"),
            m = e("../data/QEventType"),
            f = e("../../framework/QUtil"),
            y = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.addNormalTime = 60, t.addShareTime = 200, t.isVideoGain = !1, t.achieveType = 0, t.achieveImage = 0, t.achieveCount = 0, t.achieveLabel = 0, t.achieveReward = 0, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                g.default.instance.register(m.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.unregisterEvent = function () {
                g.default.instance.unregister(m.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.init = function () {
                this.scene = new s.ui.view.AchievementDialogUI, this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), this.scene.btnGiveUP.on(Laya.Event.CLICK, this, this.onClickBtnClose), this.scene.btnGet.on(Laya.Event.CLICK, this, this.onClickBtnShare);
                var e = u.default.instance.getIsActiveSharePoint(h.default.QShareType.AchievementReward) ? u.default.instance.getPlayerScoreVideoShareType() : u.default.instance.getPointVideoShareType(h.default.QShareType.AchievementReward);
                this.isVideoGain = u.default.instance.IsVideoGain(e), this.scene.imgVideo.visible = !0, this.isVideoGain || (this.scene.btnLblBox.x = 174), this.scene.btnGiveUP.alpha = 0, this.scene.btnGiveUP.visible = !1, Laya.timer.once(2e3, this, function () {
                    this.scene.btnGiveUP.visible = !0, Laya.Tween.to(this.scene.btnGiveUP, {
                        alpha: 1
                    }, 300)
                }), f.default.doUIPopAnim(this.scene.AnchorCenter)
            }, t.prototype.setParam = function (e) {
                this.achieveType = e.type, this.achieveImage = e.image, this.achieveLabel = e.label, this.achieveReward = e.reward, this.achieveCount = e.count, this.scene.Icon.skin = "ui_achieve/" + this.achieveImage, this.scene.achievelbl.text = "" + this.achieveLabel, this.scene.imgmultiple.skin = 2 == this.achieveCount ? "ui_achieve/rewardx2.png" : "ui_achieve/rewardx3.png", f.default.biReport(y.default.showAchievementDialog)
            }, t.prototype.onClickBtnClose = function () {
                c.default.instance.removeUI(c.default.UI_AchievementDialog), u.default.instance.setLifeFirstGame(!1)
            }, t.prototype.onClickBtnShare = function () {
                var e = this;
                u.default.instance.getShareTimesIsEnough(h.default.QShareType.AchievementReward) && (u.default.instance.isNoVideoAuditVersion ? this.successHanle() : (this.param = d.default.create(), this.param.shareType = h.default.QShareType.AchievementReward, this.isVideoGain ? p.default.instance.playVideoAd(this.param, Laya.Handler.create(this, function () {
                    e.successHanle()
                })) : p.default.instance.fakeShare(this.param, this, function () {
                    e.successHanle()
                })))
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this;
                f.default.isNullOrEmpty(this.param) && (this.param = d.default.create()), this.param.shareType = h.default.QShareType.AchievementReward, e.shareType == this.param.shareType && p.default.instance.fakeShare(this.param, this, function () {
                    t.successHanle()
                })
            }, t.prototype.successHanle = function () {
                this.getAchievementReward(), f.default.biReport(y.default.getAchievementReward), c.default.instance.createUI(c.default.UI_Tip, {
                    text: "领取成功!"
                }), f.default.doUICloseAnim(this.scene.AnchorCenter, Laya.Handler.create(this, function () {
                    c.default.instance.removeUI(c.default.UI_AchievementDialog)
                })), u.default.instance.setAchievementVideoShareTime()
            }, t.prototype.getAchievementReward = function () {
                u.default.instance.addStamina(this.achieveCount, !1)
            }, t.prototype.doDestroy = function () {
                this.scene.imgHand.stop(), c.default.instance.getUIShowState(c.default.UI_Result) && g.default.instance.sendEvent(m.default.GET_RESULT_AWARD)
            }, t
        }(l.default), o.QAchievementDialog = r, i.default = a.view.QAchievementDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    31: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = e("../data/QGameConst"),
            d = e("../logic/QShareParam"),
            p = e("../core/QWxSDK"),
            u = e("../data/QGameData"),
            g = e("../../framework/QEventMgr"),
            m = e("../data/QEventType"),
            f = e("../../framework/QUtil"),
            y = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.addNormalTime = 60, t.addShareTime = 60, t.isVideoGain = !1, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                g.default.instance.register(m.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.unregisterEvent = function () {
                g.default.instance.unregister(m.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.init = function () {
                this.scene = new s.ui.view.AddRevenueDialogUI;
                var e = this.scene.speedupbg,
                    t = e.getChildByName("btnClose"),
                    i = e.getChildByName("btnSpeedUp").getChildByName("lblCost"),
                    a = e.getChildByName("btnShare");
                a.getChildByName("lblShare"), t.on(Laya.Event.CLICK, this, this.onClickBtnClose), f.default.RegisterBtnClickWithAnim(a, this, this.onClickBtnShare), this.costType = u.default.instance.speedUpCost[0], this.costNum = u.default.instance.speedUpCost[1];
                var n = u.default.instance.getIsActiveSharePoint(h.default.QShareType.AddRevenue) ? u.default.instance.getPlayerScoreVideoShareType() : u.default.instance.getPointVideoShareType(h.default.QShareType.AddRevenue);
                this.isVideoGain = u.default.instance.IsVideoGain(n), this.scene.imgShare.visible = !1, this.scene.imgVideo.visible = this.isVideoGain, this.isVideoGain || (this.scene.lblImage.x = 187, this.scene.lblImage.scale(1.2, 1.2)), i.changeText(this.costNum.toString()), f.default.doUIPopAnim(this.scene.AnchorCenter)
            }, t.prototype.onClickBtnClose = function () {
                c.default.instance.removeUI(c.default.UI_AddRevenueDialog)
            }, t.prototype.onClickBtnSpeedUp = function () {
                u.default.instance.coseDiamond(this.costNum) ? (f.default.biReport(y.default.userDiamondQuicken), c.default.instance.createUI(c.default.UI_Tip, {
                    text: "加速时间累计成功"
                }), u.default.instance.addAddSpeedTime(this.addNormalTime), u.default.instance.isOpenDoubleCoinAward = !0, this.onClickBtnClose()) : c.default.instance.createUI(c.default.UI_Tip, {
                    text: "钻石不足!"
                })
            }, t.prototype.onClickBtnShare = function () {
                u.default.instance.getShareTimesIsEnough(h.default.QShareType.AddRevenue) && (u.default.instance.isNoVideoAuditVersion ? this.speedUpSuccessHanle() : (this.param = d.default.create(), this.param.shareType = h.default.QShareType.AddRevenue, this.isVideoGain ? p.default.instance.playVideoAd(this.param, Laya.Handler.create(this, function (e) {
                    e.speedUpSuccessHanle()
                }, [this])) : p.default.instance.fakeShare(this.param, this, function (e) {
                    e.speedUpSuccessHanle()
                }, [this])))
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this;
                f.default.isNullOrEmpty(this.param) && (this.param = d.default.create()), this.param.shareType = h.default.QShareType.AddRevenue, e.shareType == this.param.shareType && p.default.instance.fakeShare(this.param, this, function () {
                    t.speedUpSuccessHanle()
                })
            }, t.prototype.speedUpSuccessHanle = function () {
                c.default.instance.createUI(c.default.UI_Tip, {
                    text: "加速成功!"
                }), u.default.instance.addAddSpeedTime(this.addShareTime), u.default.instance.isOpenDoubleCoinAward = !0, this.onClickBtnClose(), f.default.biReport(y.default.userShareOrVideoQuicken), u.default.instance.getIsActiveSharePoint(h.default.QShareType.AddRevenue) ? u.default.instance.setplayerScoreVideoShareTime() : u.default.instance.setAddRevenueGetTimes()
            }, t.prototype.doDestroy = function () {}, t
        }(l.default), o.QAddRevenueDialog = r, i.default = a.view.QAddRevenueDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    32: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = e("../data/QGameConst"),
            d = e("../data/QGameData"),
            p = e("../../framework/QEventMgr"),
            u = e("../data/QEventType"),
            g = e("../../framework/QUtil"),
            m = e("../data/QBIEvent"),
            f = e("../core/QWxSDK"),
            y = e("../logic/QShareParam");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.isVideoGain = !1, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                p.default.instance.register(u.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.unregisterEvent = function () {
                p.default.instance.unregister(u.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.init = function () {
                this.scene = new s.ui.view.BeOfflineDialogUI, this.refreshUI(), g.default.doUIPopAnim(this.scene.AnchorCenter)
            }, t.prototype.setParam = function (e) {
                c.default.DoUIAnim_DialogPop(this.scene.tweener_main);
                var t = d.default.instance.getIsActiveSharePoint(h.default.QShareType.offLineEarnings) ? d.default.instance.getPlayerScoreVideoShareType() : d.default.instance.getPointVideoShareType(h.default.QShareType.offLineEarnings);
                this.isVideoGain = d.default.instance.IsVideoGain(t), this.scene.imgShare.visible = !1, this.scene.imgVideo.visible = this.isVideoGain, this.isVideoGain || (this.scene.lblImage.x = 186, this.scene.lblImage.scale(1.2, 1.2)), g.default.RegisterBtnClickWithAnim(this.scene.btnDouble, this, this.onClickBtnAwardDouble), g.default.RegisterBtnClickWithAnim(this.scene.btnGet, this, this.onClickBtnAward), this.scene.closeBtn.on(Laya.Event.CLICK, this, this.onClickBtnClose)
            }, t.prototype.refreshUI = function () {
                this.coin = d.default.instance.GetBeOfflineCoin(), this.scene.lblCoinCount.changeText("+" + d.default.instance.getCoinNumType(this.coin))
            }, t.prototype.onClickBtnAward = function () {
                c.default.instance.removeUI(c.default.UI_BeOffline), d.default.instance.addCoin(this.coin), g.default.biReport(m.default.getCommonOffLineAward)
            }, t.prototype.onClickBtnClose = function () {
                c.default.instance.removeUI(c.default.UI_BeOffline), d.default.instance.addCoin(this.coin), g.default.biReport(m.default.getCommonOffLineAward)
            }, t.prototype.onClickBtnAwardDouble = function () {
                d.default.instance.getShareTimesIsEnough(h.default.QShareType.offLineEarnings) && (d.default.instance.isNoVideoAuditVersion ? this.getAwardDoubleSuccessHanle() : (this.param = y.default.create(), this.param.shareType = h.default.QShareType.offLineEarnings, this.isVideoGain ? f.default.instance.playVideoAd(this.param, Laya.Handler.create(this, function (e) {
                    e.getAwardDoubleSuccessHanle()
                }, [this])) : f.default.instance.fakeShare(this.param, this, function (e) {
                    e.getAwardDoubleSuccessHanle()
                }, [this])))
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this;
                g.default.isNullOrEmpty(this.param) && (this.param = y.default.create()), this.param.shareType = h.default.QShareType.offLineEarnings, e.shareType == this.param.shareType && f.default.instance.fakeShare(this.param, this, function () {
                    t.getAwardDoubleSuccessHanle()
                })
            }, t.prototype.getAwardDoubleSuccessHanle = function () {
                c.default.instance.createUI(c.default.UI_Tip, {
                    text: "成功领取奖励!"
                }), c.default.instance.removeUI(c.default.UI_BeOffline), d.default.instance.addCoin(2 * this.coin), d.default.instance.getIsActiveSharePoint(h.default.QShareType.offLineEarnings) ? d.default.instance.setplayerScoreVideoShareTime() : d.default.instance.setBeOfflineGetTimes(), g.default.biReport(m.default.getDoubleOffLineAward)
            }, t.prototype.doDestroy = function () {
                p.default.instance.sendEvent(u.default.DETECTION_GARAGE_FULL), f.default.instance.hideBannerAd()
            }, t
        }(l.default), o.QBeOfflineDialog = r, i.default = a.view.QBeOfflineDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    33: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../data/QGameData"),
            h = e("../core/QCfgMgr"),
            d = e("../data/QGameConst"),
            p = e("../../framework/QEventMgr"),
            u = e("../data/QEventType"),
            g = e("../logic/QShareParam"),
            m = e("../core/QWxSDK"),
            f = e("../../framework/QUtil"),
            y = e("../core/QUIMgr"),
            v = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.awardType = 0, t.rewardGoldNum = 0, t.isVideoGain = !1, t.jiesuan_fxPath = "res/ui_particle/jiesuan.part", t.rewardAniList = [], t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                p.default.instance.register(u.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), p.default.instance.register(u.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.unregisterEvent = function () {
                p.default.instance.unregister(u.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), p.default.instance.unregister(u.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.init = function () {
                this.scene = new l.ui.view.BoxRewardViewUI, this.gameCfg = h.default.instance.dicConfig[d.default.QCfgType.GameConfig], this.listGarageCfg = c.default.instance.garageCarData;
                var e = c.default.instance.getIsActiveSharePoint(d.default.QShareType.BoxAward) ? c.default.instance.getPlayerScoreVideoShareType() : c.default.instance.getPointVideoShareType(d.default.QShareType.BoxAward);
                this.isVideoGain = c.default.instance.IsVideoGain(e), this.scene.imgShare.visible = !1, this.scene.imgVideo.visible = this.isVideoGain, this.isVideoGain || (this.scene.lblReward.x = 203, this.scene.lblReward.scale(1.2, 1.2)), f.default.getIsNeedScreenAdaptive() && (this.scene.boxTopLeft.y += 50), f.default.RegisterBtnClickWithAnim(this.scene.btnGetReward, this, this.onClickBtnDoubleAward), f.default.RegisterBtnClickWithAnim(this.scene.btnClose, this, this.onClickBtnClose), this.refreshGoldData(), this.scene.btnClose.alpha = 0, this.scene.btnClose.visible = !1, Laya.timer.once(2e3, this, function () {
                    this.scene.btnClose.visible = !0, Laya.Tween.to(this.scene.btnClose, {
                        alpha: 1
                    }, 300)
                }), this.showJiesuanFx(), f.default.doUIPopAnim(this.scene.AnchorCenter, Laya.Handler.create(this, function (e) {}, [this]))
            }, t.prototype.onLoadPartSuccess = function (e) {
                e && (this.partSp = new Laya.Particle2D(e), this.partSp.emitter.start(), this.partSp.x = this.scene.lblTitleName.x, this.partSp.y = this.scene.lblTitleName.y, this.partSp.zOrder = 0, this.scene.addChild(this.partSp), Laya.timer.once(4e3, this, function () {
                    this.removePartFx()
                }))
            }, t.prototype.removePartFx = function () {
                f.default.isNullOrEmpty(this.partSp) || (this.partSp.stop(), this.partSp.removeSelf())
            }, t.prototype.showJiesuanFx = function () {
                Laya.loader.load(this.jiesuan_fxPath, Laya.Handler.create(this, this.onLoadPartSuccess), null, Laya.Loader.JSON)
            }, t.prototype.setParam = function (e) {
                this.rewardInfo = e, this.scene.rewardList.width = 200 * this.rewardInfo.length, this.updateRewardUI()
            }, t.prototype.updateRewardUI = function () {
                1 == this.rewardInfo.length && (this.scene.rewardBox2.visible = !1);
                for (var e = 0; e < this.rewardInfo.length; e++) {
                    var t = this.scene.rewardList._children[e];
                    t.x = 100 + 280 * e - 40 * (this.rewardInfo.length - 1);
                    var i = t.getChildByName("rewardAni");
                    i.source = "energy" == this.rewardInfo[e].type ? "res/ui_particle/gainRewardEnergy.ani" : "res/ui_particle/gainRewardCoins.ani", i.play(0, !0);
                    var a = t.getChildByName("rewardCount");
                    a.font = "font_1", a.text = "+" + c.default.instance.getCoinNumType(this.rewardInfo[e].count), this.rewardAniList.push(i)
                }
            }, t.prototype.refreshGoldData = function () {
                this.scene.lblGoldNum.changeText(c.default.instance.getCoinNumType(c.default.instance.coin)), this.scene.lblAddGold2.changeText("+" + c.default.instance.getCoinNumType(this.getGarageAllValue()) + "/s"), this.scene.lblDiamondNum.changeText(c.default.instance.getCoinNumType(c.default.instance.diamond)), this.scene.lblStaminaNum.changeText(c.default.instance.stamina.toString())
            }, t.prototype.onClickBtnClose = function () {
                this.addBoxReward(1), y.default.instance.removeUI(y.default.UI_BoxReward)
            }, t.prototype.addBoxReward = function (e) {
                for (var t = 0; t < this.rewardInfo.length; t++) "coin" == this.rewardInfo[t].type ? c.default.instance.addCoin(this.rewardInfo[t].count * e) : "energy" == this.rewardInfo[t].type && c.default.instance.addStamina(this.rewardInfo[t].count * e, !1);
                2 == e && f.default.biReport(v.default.getDoublePassBox), y.default.instance.createUI(y.default.UI_Tip, {
                    text: "成功领取奖励!"
                })
            }, t.prototype.onClickBtnDoubleAward = function () {
                if (c.default.instance.isNoVideoAuditVersion) this.onClickGetBoxAwardSuccessHandle();
                else {
                    var e = g.default.create();
                    e.shareType = d.default.QShareType.BoxAward, this.isVideoGain ? m.default.instance.playVideoAd(e, Laya.Handler.create(this, function (e) {
                        e.onClickGetBoxAwardSuccessHandle()
                    }, [this])) : m.default.instance.fakeShare(e, this, function (e) {
                        e.onClickGetBoxAwardSuccessHandle()
                    }, [this])
                }
            }, t.prototype.onClickGetBoxAwardSuccessHandle = function () {
                this.addBoxReward(2), y.default.instance.removeUI(y.default.UI_BoxReward), c.default.instance.getIsActiveSharePoint(d.default.QShareType.OpenBox) ? c.default.instance.setplayerScoreVideoShareTime() : c.default.instance.setGetMoreBoxAward()
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this,
                    i = g.default.create();
                i.shareType = d.default.QShareType.BoxAward, e.shareType == i.shareType && m.default.instance.fakeShare(i, this, function () {
                    t.onClickGetBoxAwardSuccessHandle()
                })
            }, t.prototype.getGarageAllValue = function () {
                for (var e = 0, t = 0; t < this.listGarageCfg.length; t++) 0 == this.listGarageCfg[t].boxState && (c.default.instance.isOpenDoubleCoinAward ? e += this.listGarageCfg[t].income * this.gameCfg.CoinAwardMultiple : e += this.listGarageCfg[t].income);
                return e * c.default.instance.multiple * 1
            }, t.prototype.doDestroy = function () {
                for (var e = 0; e < this.rewardAniList.length; e++) this.rewardAniList[e].gotoAndStop(0);
                this.removePartFx(), y.default.instance.removeUI(y.default.UI_BoxDialog), y.default.instance.getUIShowState(y.default.UI_MainPage) && c.default.instance.JudeIsShowBeOffline() ? y.default.instance.createUI(y.default.UI_BeOffline) : y.default.instance.getUIShowState(y.default.UI_Result) && (c.default.instance.checkKeFuDialog() || c.default.instance.checkAchievementReward() || p.default.instance.sendEvent(u.default.GET_RESULT_AWARD))
            }, t
        }(s.default), o.QBoxRewardDialog = r, i.default = a.view.QBoxRewardDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    34: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../core/QCfgMgr"),
            h = e("../data/QGameConst"),
            d = e("../core/QUIMgr"),
            p = e("../../framework/QUtil"),
            u = e("../data/QGameData"),
            g = e("../core/QWxSDK"),
            m = e("../data/QBIEvent"),
            f = e("../data/QEventType"),
            y = e("../../framework/QEventMgr");
        n = a || (a = {}), o = n.scene || (n.scene = {}), r = function (e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return __extends(t, e), t.prototype.init = function () {
                this.scene = new l.ui.view.CollectDialogUI, this.gameConfig = c.default.instance.dicConfig[h.default.QCfgType.GameConfig], p.default.doUIPopAnim(this.scene.AnchorCenter), this.scene.btnGet.visible = !u.default.instance.isGetCollectAward, this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), p.default.RegisterBtnClickWithAnim(this.scene.btnGet, this, this.onClickBtnGet)
            }, t.prototype.onClickBtnGet = function () {
                var e = g.default.instance.getLaunchOptionsSync();
                1104 == e || 1103 == e || 1001 == e || 1089 == e ? (u.default.instance.addDiamond(this.gameConfig.AwardDiamonNum), u.default.instance.setIsGetCollectAward(), d.default.instance.createUI(d.default.UI_Tip, {
                    text: "恭喜获得" + this.gameConfig.AwardDiamonNum + "钻石"
                }), this.scene.btnGet.visible = !1, y.default.instance.sendEvent(f.default.REFRESH_MAIN_BTN_STATE), p.default.biReport(m.default.successGainCollect)) : d.default.instance.createUI(d.default.UI_Tip, {
                    text: "请添加到我的小程序!"
                })
            }, t.prototype.onClickBtnClose = function () {
                d.default.instance.removeUI(d.default.UI_CollectDialog)
            }, t
        }(s.default), o.QCollectDialog = r, i.default = a.scene.QCollectDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25
    }],
    35: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = (e("../../framework/QDebug"), e("../data/QGameConst")),
            d = e("../data/QGameData"),
            p = e("../core/QCfgMgr"),
            u = e("../../framework/QEventMgr"),
            g = e("../data/QEventType"),
            m = e("../../framework/QUtil"),
            f = e("../data/QBIEvent"),
            y = e("../core/QWxSDK"),
            v = e("../logic/QShareParam");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.propIconPath = "ui_dialog/", t.propIconType = ".png", t.isLotteryEnter = !1, t.isVideoGain = !1, t.showBannerTimes = 0, t.comDialogBannerShowTimes = 0, t.curAwardType = 1, t.awardText = "", t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                u.default.instance.register(g.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.unregisterEvent = function () {
                u.default.instance.unregister(g.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.init = function () {
                this.scene = new s.ui.view.CommonDialogPageUI, this.gameConfig = p.default.instance.dicConfig[h.default.QCfgType.GameConfig], this.carConfig = p.default.instance.dicConfig[h.default.QCfgType.Car], m.default.doUIPopAnim(this.scene.AnchorCenter), this.scene.btnClose.on(Laya.Event.CLICK, this, this.closeUI), m.default.RegisterBtnClickWithAnim(this.scene.btnHelp, this, this.onClickBtnAward), m.default.RegisterBtnClickWithAnim(this.scene.btnPrize, this, this.onClickBtnPrize)
            }, t.prototype.setParam = function (e) {
                this.viewType = e.viewType, this.dataView = e.dataView, this.isLotteryEnter = e.isLotteryEnter, this.refreshUI(), this.comDialogBannerShowTimes = d.default.instance.comDialogBannerShowTimes, this.showBannerTimes = m.default.isComDialogBSG() ? this.gameConfig.comDialogBannerShowTimes : this.gameConfig.noBSGComDialogBannerShowTimes, this.comDialogBannerShowTimes < this.showBannerTimes && (y.default.instance.showBannerAd(!1), d.default.instance.setComDialogBannerShowTimes())
            }, t.prototype.refreshUI = function () {
                if (this.viewType == h.default.QCommonViewType.FreeGet) this.scene.lbltitle.text = "金币不足", this.scene.startBtn.visible = !0, m.default.RegisterBtnClickWithAnim(this.scene.startBtn, this, this.onClickBtnStart), e = d.default.instance.getIsActiveSharePoint(h.default.QShareType.freeCoin) ? d.default.instance.getPlayerScoreVideoShareType() : d.default.instance.getPointVideoShareType(h.default.QShareType.freeCoin), this.isVideoGain = d.default.instance.IsVideoGain(e), this.refreshFreeGet();
                else if (this.viewType == h.default.QCommonViewType.Lattery) {
                    this.scene.imgCommonBG.height = 770, this.scene.startBtn.visible = !1, this.scene.btnHelp.y = 670, this.scene.btnPrize.y = 670;
                    var e = d.default.instance.getIsActiveSharePoint(h.default.QShareType.moreMultipleAward) ? d.default.instance.getPlayerScoreVideoShareType() : d.default.instance.getPointVideoShareType(h.default.QShareType.moreMultipleAward);
                    this.isVideoGain = d.default.instance.IsVideoGain(e), this.refreshLoterry(this.dataView)
                }
            }, t.prototype.onClickBtnStart = function () {
                d.default.instance.stamina >= this.gameConfig.everyTimesUseStaminaNum ? d.default.instance.isCurLevelLoadOk(d.default.instance.curTrackId) ? (d.default.instance.setReviveTimes(!0), c.default.instance.removeUI(c.default.UI_MainPage), c.default.instance.removeUI(c.default.UI_CommonPage), Laya.timer.frameOnce(1, this, function () {
                    c.default.instance.createUI(c.default.UI_Game), u.default.instance.sendEvent(g.default.COMMON_DIALOG_TO_HOME)
                })) : c.default.instance.createUI(c.default.UI_WaitLoadDialog) : (m.default.biReport(f.default.noEnoughStamina), d.default.instance.getShareTimesIsEnough(h.default.QShareType.AddRevenue) ? (c.default.instance.removeUI(c.default.UI_CommonPage), c.default.instance.createUI(c.default.UI_Stamina)) : c.default.instance.createUI(c.default.UI_Tip, {
                    text: "体力不足!"
                })), d.default.instance.isSyncOnline && d.default.instance.saveAllData()
            }, t.prototype.refreshLoterry = function (e) {
                this.moneyType = e.moneyType, this.curAwardType = e.moneyType, this.awardText = d.default.instance.getCoinNumType(e.count), console.log(" data : " + JSON.stringify(e)), this.scene.btnPrize.visible = !0, this.scene.btnHelp.visible = !1, console.log(" icon Url : " + e.icon), this.scene.imgIcon.skin = "ui_dialog/" + e.icon + this.propIconType, "com_getCoin" == e.icon || "dia_img_staminas" == e.icon ? (this.scene.imgIcon.visible = !1, this.scene.prizeBox.visible = !0, "com_getCoin" == e.icon ? (this.scene.aniPrizeCoin.visible = !0, this.scene.aniPrizeDiamond.visible = !1, this.scene.aniPrizeCoin.play(0, !0)) : (this.scene.aniPrizeDiamond.visible = !0, this.scene.aniPrizeCoin.visible = !1, this.scene.aniPrizeDiamond.play(0, !0))) : (this.scene.prizeBox.visible = !1, this.scene.imgIcon.visible = !0), this.scene.lbltitle.text = "恭喜获得";
                var t = this.scene.btnPrize.getChildByName("imgVideo"),
                    i = this.scene.btnPrize.getChildByName("imgShare"),
                    a = this.scene.btnPrize.getChildByName("imgGetShare"),
                    n = this.scene.btnPrize.getChildByName("imgGet");
                this.scene.btnPrize.getChildByName("imgGet"), 0 != e.moneyType ? (this.scene.lblCoinCount.visible = !0, this.scene.imgDes.visible = !1, this.scene.lblCoinCount.changeText("+" + d.default.instance.getCoinNumType(e.count)), this.scene.lblGetFreeDes.changeText("获得" + e.name), this.scene.btnClose.visible = !1, t.visible = !1, i.visible = !1, a.visible = !1, n.visible = !0) : (t.visible = this.isVideoGain, i.visible = !1, a.visible = this.isVideoGain, n.visible = !this.isVideoGain, this.scene.btnClose.visible = !0, this.scene.lblGetFreeDes.visible = !1, this.scene.lblCoinCount.visible = !1, this.scene.imgDes.visible = !0, 3 == e.count ? (m.default.biReport(f.default.getLottryThreeAward), this.scene.imgDes.skin = this.propIconPath + "lottery_next_three_des" + this.propIconType) : (m.default.biReport(f.default.getLottrySicAward), this.scene.imgDes.skin = this.propIconPath + "lottery_next_six_des" + this.propIconType))
            }, t.prototype.refreshFreeGet = function () {
                var e;
                if (d.default.instance.getMaxLevel() < 5) e = this.gameConfig.defaultBaseShareCoin;
                else {
                    for (var t in this.carConfig) this.carConfig[t].level == d.default.instance.getMaxLevel() - 4 && (e = this.carConfig[t].buy_gold * Math.pow(this.carConfig[t].add_gold, d.default.instance.getRecordGainCarTimes(1, this.carConfig[t].level)));
                    var i = d.default.instance.getCoinTime;
                    i >= 5 && i <= 6 ? e *= .5 : i > 6 && (e *= .3)
                }
                this.scene.imgVideo0.visible = this.isVideoGain, this.scene.imgShare0.visible = !1, this.scene.lblimage.visible = this.isVideoGain, this.scene.imgHelpGet.visible = !this.isVideoGain, this.coin = Math.floor(e), this.scene.lblCoinCount.changeText("+" + d.default.instance.getCoinNumType(e)), this.scene.lblGetFreeDes.visible = !0, this.scene.btnPrize.visible = !1, this.scene.btnHelp.visible = !0, this.scene.imgDes.visible = !1, this.scene.imgIcon.visible = !1, this.scene.prizeBox.visible = !0, this.scene.aniPrizeDiamond.visible = !1, this.scene.aniPrizeCoin.visible = !0, this.scene.aniPrizeCoin.play(0, !0)
            }, t.prototype.onCloseStaminaDialog = function () {}, t.prototype.onClickBtnPrize = function () {
                if (0 != this.moneyType) 1 == this.curAwardType ? c.default.instance.createUI(c.default.UI_Tip, {
                    text: "成功领取" + this.awardText + "金币!"
                }) : 3 == this.curAwardType && c.default.instance.createUI(c.default.UI_Tip, {
                    text: "成功领取" + this.awardText + "点体力!"
                }), this.isLotteryEnter && c.default.instance.createUI(c.default.UI_Lottery, {
                    isMainEnter: !0
                }), c.default.instance.removeUI(c.default.UI_CommonPage);
                else {
                    if (!d.default.instance.getShareTimesIsEnough(h.default.QShareType.moreMultipleAward)) return;
                    if (d.default.instance.isNoVideoAuditVersion) this.moreMultipleAwardSuccessHandle();
                    else {
                        var e = v.default.create();
                        e.shareType = h.default.QShareType.moreMultipleAward, this.isVideoGain ? y.default.instance.playVideoAd(e, Laya.Handler.create(this, function (e) {
                            e.moreMultipleAwardSuccessHandle()
                        }, [this])) : y.default.instance.fakeShare(e, this, function (e) {
                            e.moreMultipleAwardSuccessHandle()
                        }, [this])
                    }
                }
            }, t.prototype.moreMultipleAwardSuccessHandle = function () {
                d.default.instance.setIsLotteryShare(!0), this.isLotteryEnter && c.default.instance.createUI(c.default.UI_Lottery, {
                    isMainEnter: !0
                }), c.default.instance.removeUI(c.default.UI_CommonPage), u.default.instance.sendEvent(g.default.UPDATE_LOTTERY), m.default.biReport(f.default.successMoreMutipleAward), d.default.instance.getIsActiveSharePoint(h.default.QShareType.moreMultipleAward) ? d.default.instance.setplayerScoreVideoShareTime() : d.default.instance.setLotteryMoreAwardTimes()
            }, t.prototype.onClickBtnAward = function () {
                d.default.instance.getShareTimesIsEnough(h.default.QShareType.freeCoin) && (d.default.instance.isNoVideoAuditVersion ? this.getCoinSuccessHandle() : (this.param = v.default.create(), this.param.shareType = h.default.QShareType.freeCoin, this.isVideoGain ? y.default.instance.playVideoAd(this.param, Laya.Handler.create(this, function (e) {
                    e.getCoinSuccessHandle()
                }, [this])) : y.default.instance.fakeShare(this.param, this, function (e) {
                    e.getCoinSuccessHandle()
                }, [this])))
            }, t.prototype.getCoinSuccessHandle = function () {
                d.default.instance.getMaxLevel() >= 5 && d.default.instance.saveGetCoinTime(), c.default.instance.removeUI(c.default.UI_CommonPage), d.default.instance.addCoin(this.coin), c.default.instance.createUI(c.default.UI_Tip, {
                    text: "成功领取奖励!"
                }), d.default.instance.getIsActiveSharePoint(h.default.QShareType.freeCoin) ? d.default.instance.setplayerScoreVideoShareTime() : d.default.instance.setFreeCoinGetTimes()
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this;
                m.default.isNullOrEmpty(this.param) && (this.param = v.default.create()), e.shareType == h.default.QShareType.freeCoin ? (this.param.shareType = h.default.QShareType.freeCoin, y.default.instance.fakeShare(this.param, this, function () {
                    t.getCoinSuccessHandle()
                })) : e.shareType == h.default.QShareType.moreMultipleAward && (this.param.shareType = h.default.QShareType.moreMultipleAward, y.default.instance.fakeShare(this.param, this, function () {
                    t.moreMultipleAwardSuccessHandle()
                }))
            }, t.prototype.onSuccessGet = function () {
                c.default.instance.removeUI(c.default.UI_CommonPage), d.default.instance.addCoin(this.coin)
            }, t.prototype.closeUI = function () {
                this.comDialogBannerShowTimes < this.showBannerTimes && y.default.instance.hideBannerAd(), this.isLotteryEnter && c.default.instance.createUI(c.default.UI_Lottery, {
                    isMainEnter: !0
                }), c.default.instance.removeUI(c.default.UI_CommonPage)
            }, t.prototype.doDestroy = function () {}, t
        }(l.default), o.QCommonDialogPage = r, i.default = a.view.QCommonDialogPage
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    36: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = e("../core/QCfgMgr"),
            d = e("../data/QGameConst"),
            p = e("../logic/QShareParam"),
            u = e("../core/QWxSDK"),
            g = e("../data/QGameData"),
            m = e("../../framework/QEventMgr"),
            f = e("../data/QEventType"),
            y = e("../../framework/QUtil"),
            v = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.isSigned = !1, t.signedNum = 0, t.gridNormal = "ui_dialog/dia_img_signawardbg.png", t.gridSel = "ui_dialog/dia_img_signchoosebg.png", t.gridSpecialNormal = "ui_dialog/dia_img_signawardbg.png", t.gridSpecialSel = "ui_dialog/dia_img_signchoosebg.png", t.isVideoGain = !1, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                m.default.instance.register(f.default.UPDATE_VIEW_DATA, this.refreshUI, this), m.default.instance.register(f.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.unregisterEvent = function () {
                m.default.instance.unregister(f.default.UPDATE_VIEW_DATA, this.refreshUI, this), m.default.instance.unregister(f.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.init = function () {
                this.scene = new s.ui.view.DailycheckUI, this.gameConfig = h.default.instance.dicConfig[d.default.QCfgType.GameConfig], this.dailyConfig = this.gameConfig.dailyCheck, this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose);
                var e = this.scene.Receive.getChildByName("ReceiveBtn"),
                    t = this.scene.Receive.getChildByName("DoubleBtn");
                y.default.RegisterBtnClickWithAnim(e, this, this.onClickBtnRecive), y.default.RegisterBtnClickWithAnim(t, this, this.onClickBtnShare);
                var i = g.default.instance.getIsActiveSharePoint(d.default.QShareType.doubleDailyCheck) ? g.default.instance.getPlayerScoreVideoShareType() : g.default.instance.getPointVideoShareType(d.default.QShareType.doubleDailyCheck);
                this.isVideoGain = g.default.instance.IsVideoGain(i), this.scene.imgShare.visible = !1, this.scene.imgVideo.visible = this.isVideoGain, this.isVideoGain || (this.scene.lblImage.x = 185), this.createFilter(), this.refreshUI(), y.default.doUIPopAnim(this.scene.AnchorCenter), this.refreshUIPos()
            }, t.prototype.refreshUIPos = function () {
                (2 == tywx.UserInfo.systemType || c.default.instance.longScreen()) && (this.scene.AnchorCenter.y -= 100)
            }, t.prototype.refreshUI = function () {
                this.signedNum = g.default.instance.signInDays, this.isSigned = g.default.instance.isGetSignInGift;
                for (var e, t, i = this.scene.DayBox, a = 0; a < i.numChildren; a++) e = i.getChildAt(a), t = this.dailyConfig[a].day != this.signedNum + 1 || this.isSigned ? this.gridNormal : this.gridSel, a == i.numChildren - 1 && (t = this.dailyConfig[a].day != this.signedNum + 1 || this.isSigned ? this.gridSpecialNormal : this.gridSpecialSel), e.skin = t, e.getChildByName("day").changeText(this.dailyConfig[a].name), e.getChildByName("icon").skin = "ui_dialog/" + this.dailyConfig[a].iconName + ".png", e.getChildByName("num").changeText("x" + this.dailyConfig[a].count), e.getChildByName("mark").visible = this.dailyConfig[a].day <= this.signedNum, e.getChildByName("check").visible = this.dailyConfig[a].day <= this.signedNum;
                this.SetCheckState()
            }, t.prototype.createFilter = function () {
                this.blackFilter = new Laya.ColorFilter([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]), this.whiteFilter = new Laya.ColorFilter([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
            }, t.prototype.SetCheckState = function () {
                this.scene.lblReceived.visible = this.isSigned, this.scene.Receive.visible = !this.isSigned
            }, t.prototype.Recive = function (e) {
                if (!this.isSigned) {
                    switch (e) {
                        case 1:
                            y.default.biReport(v.default.successComDailyCheck);
                            break;
                        case 2:
                            y.default.biReport(v.default.successDoubleDailyCheck)
                    }
                    var t = this.signedNum + 1;
                    for (var i in this.dailyConfig) this.dailyConfig[i].day == t && (this.isSigned = !0, this.signedNum += 1, g.default.instance.saveIsGetSignInGift(this.isSigned), g.default.instance.saveSignInDays(this.signedNum), g.default.instance.addMoney(this.dailyConfig[i].moneyType, this.dailyConfig[i].count * e), m.default.instance.sendEvent(f.default.UPDATE_VIEW_DATA), m.default.instance.sendEvent(f.default.GAME_SIGN));
                    c.default.instance.createUI(c.default.UI_Tip, {
                        text: "成功领取奖励!"
                    }), y.default.doUICloseAnim(this.scene.AnchorCenter, Laya.Handler.create(this, function () {
                        c.default.instance.removeUI(c.default.UI_DailyCheck)
                    })), g.default.instance.getIsActiveSharePoint(d.default.QShareType.doubleDailyCheck) ? g.default.instance.setplayerScoreVideoShareTime() : g.default.instance.setDailyCheckGetTimes()
                }
            }, t.prototype.onClickBtnRecive = function () {
                this.Recive(1)
            }, t.prototype.onClickBtnShare = function () {
                g.default.instance.getShareTimesIsEnough(d.default.QShareType.doubleDailyCheck) && (g.default.instance.isNoVideoAuditVersion ? this.Recive(2) : (this.param = p.default.create(), this.param.shareType = d.default.QShareType.doubleDailyCheck, this.isVideoGain ? u.default.instance.playVideoAd(this.param, Laya.Handler.create(this, function (e) {
                    e.Recive(2)
                }, [this])) : u.default.instance.fakeShare(this.param, this, function (e) {
                    e.Recive(2)
                }, [this])))
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this;
                y.default.isNullOrEmpty(this.param) && (this.param = p.default.create()), this.param.shareType = d.default.QShareType.doubleDailyCheck, e.shareType == this.param.shareType && u.default.instance.fakeShare(this.param, this, function () {
                    t.Recive(2)
                })
            }, t.prototype.onClickBtnClose = function () {
                c.default.instance.removeUI(c.default.UI_DailyCheck)
            }, t.prototype.doDestroy = function () {
                m.default.instance.sendEvent(f.default.DETECTION_GARAGE_FULL), u.default.instance.hideBannerAd()
            }, t
        }(l.default), o.QDailyCheckDialog = r, i.default = a.view.QDailyCheckDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    37: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o = e("../core/QBaseUI"),
            r = e("../../ui/layaMaxUI"),
            s = e("../core/QUIMgr"),
            l = e("../data/QGameConst"),
            c = e("../data/QGameData"),
            h = e("../core/QCfgMgr"),
            d = e("../../framework/QUtil"),
            p = e("../logic/QShareParam"),
            u = e("../core/QWxSDK"),
            g = e("../../framework/QEventMgr"),
            m = e("../data/QEventType"),
            f = (e("../../framework/QDebug"), e("../data/QBIEvent"));
        n = a || (a = {}),
            function (e) {
                var t, i, a, n, y, v;
                i = t || (t = {}), i[i.AwardType = 0] = "AwardType", i[i.AwardNum = 1] = "AwardNum", i[i.GetType = 2] = "GetType", n = a || (a = {}), n[n.Diamond = 0] = "Diamond", n[n.Coin = 1] = "Coin", v = y || (y = {}), v[v.firstType = 1] = "firstType", v[v.secondType = 2] = "secondType";
                var w = function (e) {
                    function i() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.isVideoGain = !1, t.curGetGiftTimes = 0, t.isDiamondAward = !1, t.iconUrl = "ui_compress/", t.iconType = ".png", t.curGunCost = 0, t.curTimesDiamondAward = 0, t
                    }
                    return __extends(i, e), i.prototype.registerEvent = function () {
                        g.default.instance.register(m.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
                    }, i.prototype.unregisterEvent = function () {
                        g.default.instance.unregister(m.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
                    }, i.prototype.init = function () {
                        this.scene = new r.ui.view.EveryGiftDialogUI, d.default.doUIPopAnim(this.scene.AnchorCenter), this.gameConfig = h.default.instance.dicConfig[l.default.QCfgType.GameConfig], this.gunConfig = h.default.instance.dicConfig[l.default.QCfgType.Car], this.refreshViewInfo(), d.default.RegisterBtnClickWithAnim(this.scene.btnGet, this, this.onClickBtnGet), this.scene.btnReturn.on(Laya.Event.CLICK, this, this.onClickBtnReturn)
                    }, i.prototype.refreshViewInfo = function (e) {
                        void 0 === e && (e = !1), this.curGetGiftTimes = c.default.instance.diamondGiftGetTimes, c.default.instance.curMaxLevel >= 6 && (this.curGunCost = this.gunConfig[c.default.instance.curMaxLevel - 2].buy_diamond + this.gunConfig[c.default.instance.curMaxLevel - 2].add_diamond * c.default.instance.getRecordGainCarTimes(l.default.QMoneyType.Diamond, c.default.instance.curMaxLevel - 2)), this.curGetGiftTimes >= this.gameConfig.everyGiftShareOrVideoCfg.length && (this.curGetGiftTimes = this.gameConfig.everyGiftShareOrVideoCfg.length - 1), 0 == c.default.instance.curDiamondGiftType && (c.default.instance.curMaxLevel < 6 ? c.default.instance.setCurDiamondGiftType(y.firstType) : this.curGunCost * this.gameConfig.recommendDiamondBase > this.gameConfig.everyGiftShareOrVideoCfg[this.curGetGiftTimes][t.AwardNum] ? c.default.instance.setCurDiamondGiftType(y.secondType) : c.default.instance.setCurDiamondGiftType(y.firstType)), console.log("curGunCost : " + this.curGunCost + " curGetGiftTimes : " + this.curGetGiftTimes + " CurDiamondGiftType : " + c.default.instance.curDiamondGiftType);
                        var i = this.gameConfig.everyGiftShareOrVideoCfg[this.curGetGiftTimes][t.GetType] == l.default.QAcquireWayType.Video;
                        this.isVideoGain = i || c.default.instance.isAuditVersion, this.scene.imgShare.visible = !1, this.scene.imgVideo.visible = this.isVideoGain, this.isVideoGain || (this.scene.lblImage.y = 80), this.isDiamondAward = this.gameConfig.everyGiftShareOrVideoCfg[this.curGetGiftTimes][t.AwardType] == a.Diamond;
                        var n = this.isDiamondAward ? "com_getDiamond1" : "com_getCoin";
                        this.scene.imgAwardIcon.skin = this.iconUrl + n + this.iconType;
                        var o = 0;
                        c.default.instance.curDiamondGiftType == y.secondType ? (o = 0 == this.curGetGiftTimes ? 0 : this.gameConfig.diamondAddNum * this.curGetGiftTimes, this.curTimesDiamondAward = Math.ceil(this.curGunCost * this.gameConfig.recommendDiamondBase + o)) : this.curTimesDiamondAward = Math.ceil(this.gameConfig.everyGiftShareOrVideoCfg[this.curGetGiftTimes][t.AwardNum]), this.scene.lblAwardCount.changeText("+" + this.curTimesDiamondAward);
                        var r = this.gameConfig.everyGiftShareOrVideoCfg.length - c.default.instance.diamondGiftGetTimes;
                        this.scene.lblResidueTimes.changeText(r.toString()), e && (this.scene.lblAwardCount.scale(2, 2), Laya.Tween.to(this.scene.lblAwardCount, {
                            scaleX: 1,
                            scaleY: 1
                        }, 300, Laya.Ease.quartInOut))
                    }, i.prototype.onClickBtnGet = function () {
                        if (c.default.instance.diamondGiftGetTimes < this.gameConfig.everyGiftShareOrVideoCfg.length)
                            if (c.default.instance.isNoVideoAuditVersion) this.getEveryGiftSuccessHandle();
                            else {
                                var e = p.default.create();
                                e.shareType = l.default.QShareType.EveryGift, this.isVideoGain ? u.default.instance.playVideoAd(e, Laya.Handler.create(this, function (e) {
                                    e.getEveryGiftSuccessHandle()
                                }, [this])) : u.default.instance.fakeShare(e, this, function (e) {
                                    e.getEveryGiftSuccessHandle()
                                }, [this])
                            }
                        else s.default.instance.createUI(s.default.UI_Tip, {
                            text: "今日领取已达上限，请明天再来~"
                        })
                    }, i.prototype.videoInequacyToShare = function (e) {
                        var t = this,
                            i = p.default.create();
                        i.shareType = l.default.QShareType.EveryGift, e.shareType == i.shareType && u.default.instance.fakeShare(i, this, function () {
                            t.getEveryGiftSuccessHandle()
                        })
                    }, i.prototype.getEveryGiftSuccessHandle = function () {
                        switch (this.curGetGiftTimes) {
                            case 0:
                                d.default.biReport(f.default.getOneDiamondGiftAward);
                                break;
                            case 4:
                                d.default.biReport(f.default.getFiveDiamondGiftAward)
                        }
                        c.default.instance.setdiamondGiftGetTimes(), this.refreshViewInfo(!0), g.default.instance.sendEvent(m.default.REFRESH_MAIN_EVERY_GIFT_STATE), c.default.instance.diamondGiftGetTimes >= this.gameConfig.everyGiftShareOrVideoCfg.length && this.onClickBtnReturn(), this.isDiamondAward ? c.default.instance.addDiamond(this.curTimesDiamondAward) : c.default.instance.addCoin(this.curTimesDiamondAward)
                    }, i.prototype.onClickBtnReturn = function () {
                        s.default.instance.removeUI(s.default.UI_EveryGift)
                    }, i
                }(o.default);
                e.QEveryGiftDialog = w
            }(n.view || (n.view = {})), i.default = a.view.QEveryGiftDialog
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    38: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../data/QGameData"),
            h = e("../../framework/QEventMgr"),
            d = e("../data/QEventType"),
            p = e("../../framework/QUtil"),
            u = e("../core/QUIMgr"),
            g = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.state = 0, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                h.default.instance.register(d.default.REFRESH_WELFARE_STATE, this.refreshAwardBtnState, this)
            }, t.prototype.unregisterEvent = function () {
                h.default.instance.unregister(d.default.REFRESH_WELFARE_STATE, this.refreshAwardBtnState, this)
            }, t.prototype.init = function () {
                this.scene = new l.ui.view.floatWindowDialogUI, this.state = c.default.instance.getWelfareState("fuchuang"), p.default.doUIPopAnim(this.scene.AnchorCenter), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), p.default.biReport(g.default.openFloatWindowDialog)
            }, t.prototype.onClickBtnClose = function () {
                u.default.instance.removeUI(u.default.UI_FloatWindow), u.default.instance.getUIShowState(u.default.UI_Result) && h.default.instance.sendEvent(d.default.GET_RESULT_AWARD)
            }, t.prototype.refreshAwardBtnState = function () {
                switch (this.state = c.default.instance.getWelfareState("fuchuang"), this.state) {
                    case 0:
                        break;
                    case 1:
                        u.default.instance.removeUI(u.default.UI_FloatWindow)
                }
            }, t.prototype.doDestroy = function () {}, t
        }(s.default), o.QFloatWindowDialog = r, i.default = a.view.QFloatWindowDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameData": 25
    }],
    39: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s, l = [{
                x: 0,
                y: -20
            }, {
                x: -10,
                y: 0
            }, {
                x: 15,
                y: 0
            }, {
                x: -20,
                y: 20
            }, {
                x: 0,
                y: 20
            }, {
                x: 20,
                y: 20
            }, {
                x: -30,
                y: 40
            }, {
                x: -10,
                y: 40
            }, {
                x: 10,
                y: 40
            }, {
                x: 30,
                y: 40
            }],
            c = [{
                x: 5,
                y: -60
            }, {
                x: -50,
                y: 5
            }, {
                x: 20,
                y: 5
            }, {
                x: -80,
                y: 80
            }, {
                x: 10,
                y: 90
            }, {
                x: 70,
                y: 90
            }, {
                x: -35,
                y: 45
            }, {
                x: -50,
                y: 120
            }, {
                x: 100,
                y: 100
            }, {
                x: 60,
                y: 50
            }],
            h = [6, 10];
        n = a || (a = {}), o = n.view || (n.view = {}), r = Laya.Scene, s = function () {
            function e() {
                this.cNodeArr = []
            }
            return e.prototype.playFlyResAni = function (e) {
                var t = this;
                this.param = e, this.node = new r, this.node.width = Laya.stage.width, this.node.height = Laya.stage.height, this.node.mouseEnabled = !0, this.node.mouseThrough = !0, Laya.stage.addChild(this.node);
                for (var i = this.param.fromPos, a = this.param.toPos, n = [], o = 0; o < h[this.param.countType]; o++) {
                    var s = this.getResourcesNode(this.param.type);
                    s.x = l[o].x + i.x, s.y = l[o].y + i.y;
                    var d = Math.sqrt(Math.pow(c[o].x + i.x - a.x, 2) + Math.pow(c[o].y + i.y - a.y, 2)) / 2e3;
                    n.push(Math.floor(1e3 * d)), s.visible = !0, this.node.addChild(s), this.cNodeArr.push(s)
                }
                for (o = 0; o < this.cNodeArr.length; o++) this.playAniScatter(this.cNodeArr[o], 300, c[o]);
                Laya.timer.once(300, this, function () {
                    var e = 0;
                    t.scheduleFuc = function () {
                        if (!t.cNodeArr[e]) return Laya.timer.clear(t, t.scheduleFuc), void Laya.timer.once(n[e - 1], t, t.removeSelf);
                        t.playAni(t.cNodeArr[e], n[e]), e++
                    }, Laya.timer.loop(80, t, t.scheduleFuc)
                })
            }, e.prototype.removeSelf = function () {
                for (var e = this.cNodeArr.length - 1; e >= 0; e--) this.returnResourcesNode(this.cNodeArr[e]);
                this.param.cb && this.param.cb(), Laya.stage.removeChild(this.node)
            }, e.prototype.playAni = function (e, t) {
                e && Laya.Tween.to(e, {
                    x: this.param.toPos.x,
                    y: this.param.toPos.y
                }, t, null, Laya.Handler.create(this, function () {
                    e.visible = !1
                }))
            }, e.prototype.playAniScatter = function (e, t, i) {
                e && Laya.Tween.to(e, {
                    x: i.x + this.param.fromPos.x,
                    y: i.y + this.param.fromPos.y
                }, t, null, Laya.Handler.create(this, function () {}))
            }, e.prototype.getResourcesNode = function (e) {
                var t = new Laya.Image,
                    i = "";
                switch (e) {
                    case 1:
                        i = "ui_com/com_img_coin.png";
                        break;
                    case 2:
                        i = "ui_com/com_img_diamond.png"
                }
                return t.scale(1, 1), t.pos(0, 0), t.skin = i, t
            }, e.prototype.returnResourcesNode = function (e) {
                e.destroy()
            }, e
        }(), o.QFlyRes = s, i.default = a.view.QFlyRes
    }, {}],
    40: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = e("../core/QCfgMgr"),
            d = e("../data/QGameConst"),
            p = e("../logic/QShareParam"),
            u = e("../core/QWxSDK"),
            g = e("../data/QGameData"),
            m = e("../../framework/QEventMgr"),
            f = e("../data/QEventType"),
            y = e("../../framework/QUtil"),
            v = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.isVideoGain = !1, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                m.default.instance.register(f.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.unregisterEvent = function () {
                m.default.instance.unregister(f.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.init = function () {
                this.scene = new s.ui.view.FreeLevelUpDialogUI, this.carConfig = h.default.instance.dicConfig[d.default.QCfgType.Car], this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), this.scene.lblCost.on(Laya.Event.CLICK, this, this.onClickBtnCost), y.default.RegisterBtnClickWithAnim(this.scene.btnConfirm, this, this.onClickBtnShare);
                var e = g.default.instance.getIsActiveSharePoint(d.default.QShareType.FreeLevelUp) ? g.default.instance.getPlayerScoreVideoShareType() : g.default.instance.getPointVideoShareType(d.default.QShareType.FreeLevelUp);
                this.isVideoGain = g.default.instance.IsVideoGain(e), y.default.doUIPopAnim(this.scene.AnchorCenter)
            }, t.prototype.RefreshUI = function () {
                this.scene.imgVideo.visible = this.isVideoGain, this.scene.imgShare.visible = !1, this.isVideoGain || (this.scene.lblImage.x = 225);
                var e = this.carConfig[this.curLevel];
                this.scene.imgOriCarIcon.skin = "ui_car/" + e.icon + ".png", this.scene.lblOriCarName.changeText(e.name), this.scene.lblOriCarControl.changeText(" Lv." + e.level);
                var t = this.carConfig[this.upLevel];
                this.scene.imgUpCarIcon.skin = "ui_car/" + t.icon + ".png", this.scene.lblUpCarName.changeText(t.name), this.scene.lblUpCarControl.changeText(" Lv." + t.level)
            }, t.prototype.setParam = function (e) {
                this.curLevel = e[0], this.upLevel = e[1], console.log("当前等级：" + this.curLevel), console.log("升级等级：" + this.upLevel), this.RefreshUI()
            }, t.prototype.onClickBtnCost = function () {}, t.prototype.onClickBtnShare = function () {
                g.default.instance.getFreeShareTimesIsEnough() && (g.default.instance.isNoVideoAuditVersion ? this.shareSuccessHandle() : (this.param = p.default.create(), this.param.shareType = d.default.QShareType.FreeLevelUp, this.isVideoGain ? u.default.instance.playVideoAd(this.param, Laya.Handler.create(this, function (e) {
                    e.shareSuccessHandle()
                }, [this])) : u.default.instance.fakeShare(this.param, this, function (e) {
                    e.shareSuccessHandle()
                }, [this])))
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this;
                y.default.isNullOrEmpty(this.param) && (this.param = p.default.create()), this.param.shareType = d.default.QShareType.FreeLevelUp, e.shareType == this.param.shareType && u.default.instance.fakeShare(this.param, this, function () {
                    t.shareSuccessHandle()
                })
            }, t.prototype.shareSuccessHandle = function () {
                console.log("等级：" + this.upLevel), g.default.instance.reFreshCarData(this.upLevel), g.default.instance.setFreeVideoShareTime(), y.default.biReport(v.default.successLevelUp), g.default.instance.setLevelUpLeaveTime(), m.default.instance.sendEvent(f.default.BUY_CAR_SUCCESS_REFRESH), this.onClickBtnClose()
            }, t.prototype.onClickBtnClose = function () {
                g.default.instance.setLevelUpLeaveTime(), c.default.instance.removeUI(c.default.UI_FreeLevelUp)
            }, t.prototype.doDestroy = function () {
                g.default.instance.setLevelUpLeaveTime()
            }, t
        }(l.default), o.QFreeLevelUp = r, i.default = a.view.QFreeLevelUp
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    41: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../core/QUIMgr"),
            h = e("../../framework/QUtil"),
            d = e("../data/QGameData"),
            p = e("../data/QBIEvent"),
            u = e("../../framework/QEventMgr"),
            g = e("../data/QEventType");
        e("../../framework/QDebug");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.diamondNum = 0, t.staminaNum = 0, t
            }
            return __extends(t, e), t.prototype.init = function () {
                this.scene = new l.ui.view.GZHAwardDialogUI, h.default.doUIPopAnim(this.scene.AnchorCenter), h.default.biReport(p.default.getGZHAward);
                var e = d.default.instance.gameConfig;
                this.diamondNum = e.gzhDiamondNum, this.staminaNum = e.gzhStaminaNum, this.scene.lblDiamondNum2.changeText("+" + d.default.instance.getCoinNumType(this.diamondNum)), this.scene.lblStaminaNum2.changeText("+" + this.staminaNum), h.default.RegisterBtnClickWithAnim(this.scene.btnGet, this, this.onClickBtnGet)
            }, t.prototype.onClickBtnGet = function () {
                d.default.instance.setIsGetGZHAward(2), console.log(" isGetGZHAward : " + d.default.instance.isGetGZHAward), u.default.instance.sendEvent(g.default.REFRESH_MAIN_GZH_BTN_STATE), d.default.instance.addDiamond(this.diamondNum), d.default.instance.addStamina(this.staminaNum, !1), c.default.instance.removeUI(c.default.UI_GZHAward)
            }, t
        }(s.default), o.QGZHAwardDialog = r, i.default = a.view.QGZHAwardDialog
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameData": 25
    }],
    42: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../core/QUIMgr"),
            h = e("../core/QCfgMgr"),
            d = e("../data/QGameConst"),
            p = e("../data/QGameData"),
            u = e("../../framework/QUtil"),
            g = e("../../framework/QEventMgr"),
            m = e("../data/QEventType"),
            f = e("../core/QWxSDK"),
            y = e("../logic/QShareParam"),
            v = e("../data/QBIEvent");
        n = a || (a = {}), o = n.scene || (n.scene = {}), r = function (e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return __extends(t, e), t.prototype.init = function () {
                p.default.instance.saveAllData(), this.commonBg = u.default.getCommonBg("ui_com/com_bg3.png"), this.commonBg.alpha = .9, Laya.stage.addChild(this.commonBg), this.scene = new l.ui.view.GainCarDiaogUI, this.carConfig = h.default.instance.dicConfig[d.default.QCfgType.Car], this.scene.hebing.play(0, !1);
                var e = p.default.instance.curMaxLevel;
                this.scene.imgCarIcon.alpha = 0, this.scene.imgCarIcon.scaleX = 0, this.scene.imgCarIcon.scaleY = 0, this.scene.imgCarIcon.skin = "ui_car/" + this.carConfig[e].icon + ".png", this.scene.lblCarName.changeText(this.carConfig[e].name), this.scene.lblCarControl.changeText("Lv." + this.carConfig[e].level), p.default.instance.setCurSelectCarLevelId(this.carConfig[e].level), g.default.instance.sendEvent(m.default.CHOICE_NEW_CAR), u.default.RegisterBtnClickWithAnim(this.scene.btnConfirm, this, this.onClickBtnConfirm), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnColse), u.default.doUIPopAnim(this.scene.AnchorCenter), this.scene.newBieGuide.visible = !1,
                    this.scene.imgCar1.skin = this.scene.imgCar2.skin = "ui_car/" + this.carConfig[e - 1].icon + ".png", this.scene.imgCar3.skin = "ui_car/" + this.carConfig[e].icon + ".png"
            }, t.prototype.setParam = function (e) {
                var t = p.default.instance.curTrackId - 1 <= 1,
                    i = p.default.instance.tutorialState;
                t && i < p.default.instance.newUserGuideSteps && (this.scene.newBieGuide.visible = t, this.scene.imgHand.play(0, !0), this.scene.txtConfirm.skin = "ui_dialog/dia_queding.png")
            }, t.prototype.postInit = function () {
                Laya.timer.frameOnce(3, this, this.mergeCarAnim)
            }, t.prototype.mergeCarAnim = function () {}, t.prototype.onClickBtnColse = function () {
                c.default.instance.removeUI(c.default.UI_GainCar)
            }, t.prototype.onLoadPartSuccess = function (e) {
                this.partSp = new Laya.Particle2D(e), this.partSp.emitter.start(), this.partSp.play(), this.scene.addChild(this.partSp), this.partSp.x = this.scene.width / 2, this.partSp.y = 0
            }, t.prototype.onClickBtnConfirm = function () {
                var e = p.default.instance.curTrackId - 1 <= 1,
                    t = p.default.instance.tutorialState;
                if (!e || t >= p.default.instance.newUserGuideSteps) {
                    var i = y.default.create();
                    i.shareType = d.default.QShareType.initiativeShare, f.default.instance.fakeShare(i, this, function (e) {
                        e.selfShare()
                    }, [this])
                } else c.default.instance.removeUI(c.default.UI_GainCar)
            }, t.prototype.selfShare = function () {
                u.default.biReport(v.default.showGun), c.default.instance.removeUI(c.default.UI_GainCar)
            }, t.prototype.doDestroy = function () {
                u.default.isNullOrEmpty(this.partSp) || this.partSp.removeSelf(), u.default.isNullOrEmpty(this.commonBg) || this.commonBg.destroy(), g.default.instance.sendEvent(m.default.CLOSE_NEWUSER_GUIDE), c.default.instance.createUI(c.default.UI_GainDiamond)
            }, t
        }(s.default), o.QGainCarDialog = r, i.default = a.scene.QGainCarDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    43: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../core/QUIMgr"),
            h = e("../data/QGameData"),
            d = e("../core/QCfgMgr"),
            p = e("../data/QGameConst"),
            u = e("../../framework/QUtil"),
            g = e("../logic/QShareParam"),
            m = e("../core/QWxSDK"),
            f = e("../../framework/QEventMgr"),
            y = e("../data/QEventType"),
            v = e("../data/QBIEvent");
        n = a || (a = {}), o = n.scene || (n.scene = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.curGainDiamondNum = 0, t.isVideoGain = !1, t.isHintAward = !1, t.IsDirectGainDiamon = !1, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                f.default.instance.register(y.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.unregisterEvent = function () {
                f.default.instance.unregister(y.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.init = function () {
                this.scene = new l.ui.view.GainDiamondDialogUI, this.carConfig = d.default.instance.dicConfig[p.default.QCfgType.Car], this.gameConfig = d.default.instance.dicConfig[p.default.QCfgType.GameConfig];
                var e = h.default.instance.curMaxLevel;
                this.isHintAward = this.gameConfig.isOpenHintAward, this.scene.boxSingle.visible = !this.isHintAward, this.scene.boxDouble.visible = this.isHintAward, this.IsDirectGainDiamon = h.default.instance.curMaxLevel < this.gameConfig.unlockDiamondLevel, this.curGainDiamondNum = this.IsDirectGainDiamon ? this.carConfig[e].unlock_diamond : this.carConfig[e].diamond, this.isHintAward ? (this.scene.lblDiamondNum2.changeText("+" + h.default.instance.getCoinNumType(this.curGainDiamondNum)), this.scene.lblHintNum2.changeText("+" + this.gameConfig.upLevelAwardHintNum)) : this.scene.lblDiamondNum.changeText("+" + h.default.instance.getCoinNumType(this.curGainDiamondNum));
                var t = h.default.instance.getExtraAwardDiamondCfg() == p.default.QAcquireWayType.Video,
                    i = h.default.instance.noVideoToShareWay == p.default.QGainWay.Video;
                this.isVideoGain = t && i || h.default.instance.isAuditVersion, this.scene.btnClose.visible = !this.IsDirectGainDiamon, this.IsDirectGainDiamon ? (this.scene.imgShare.visible = !1, this.scene.imgVideo.visible = !1, this.scene.imgGet.x = 187, this.scene.imgGet.scale(1.2, 1.2)) : (this.scene.imgShare.visible = !1, this.scene.imgVideo.visible = this.isVideoGain, this.isVideoGain || (this.scene.imgGet.x = 187, this.scene.imgGet.scale(1.2, 1.2))), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), u.default.RegisterBtnClickWithAnim(this.scene.btnGainDiamond, this, this.onClickBtnGainDiamond), this.scene.newBieGuide.visible = !1, u.default.doUIPopAnim(this.scene.AnchorCenter)
            }, t.prototype.setParam = function (e) {
                var t = h.default.instance.curTrackId - 1 == 1;
                h.default.instance.tutorialState, t && h.default.instance.newUserGuideSteps
            }, t.prototype.onClickBtnGainDiamond = function () {
                h.default.instance.isNoVideoAuditVersion || this.IsDirectGainDiamon ? (2 == h.default.instance.curMaxLevel && u.default.biReport(v.default.getFirstCarDiamond), this.gainDiamondSuccessHandle()) : (this.param = g.default.create(), this.param.shareType = p.default.QShareType.GainDiamond, this.isVideoGain ? m.default.instance.playVideoAd(this.param, Laya.Handler.create(this, function (e) {
                    e.gainDiamondSuccessHandle()
                }, [this])) : m.default.instance.fakeShare(this.param, this, function (e) {
                    e.gainDiamondSuccessHandle()
                }, [this]))
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this;
                u.default.isNullOrEmpty(this.param) && (this.param = g.default.create()), this.param.shareType = p.default.QShareType.GainDiamond, e.shareType == this.param.shareType && m.default.instance.fakeShare(this.param, this, function () {
                    t.gainDiamondSuccessHandle()
                })
            }, t.prototype.gainDiamondSuccessHandle = function () {
                u.default.biReport(v.default.unlockNewCar, [h.default.instance.curMaxLevel]), h.default.instance.addDiamond(this.curGainDiamondNum), this.isHintAward && h.default.instance.setFreeHintTimes(this.gameConfig.upLevelAwardHintNum), this.onClickBtnClose(), c.default.instance.createUI(c.default.UI_Tip, {
                    text: "成功领取奖励!"
                }), u.default.biReport(v.default.upgradeSuccessGetDiamond)
            }, t.prototype.onClickBtnClose = function () {
                c.default.instance.removeUI(c.default.UI_GainDiamond)
            }, t.prototype.doDestroy = function () {
                f.default.instance.sendEvent(y.default.SHOW_NEWBIE4)
            }, t
        }(s.default), o.QGainDiamondDialog = r, i.default = a.scene.QGainDiamondDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    44: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../../framework/QUtil"),
            h = e("../data/QGameData"),
            d = e("../core/QCfgMgr"),
            p = e("../data/QGameConst"),
            u = e("../../framework/QEventMgr"),
            g = e("../data/QEventType"),
            m = e("../logic/QShareParam"),
            f = e("../core/QWxSDK"),
            y = e("../core/QUIMgr"),
            v = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.isVideoGain = !0, t.triggerClose = 1, t.residueTime = 0, t.recoveStaminaTime = 0, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                u.default.instance.register(g.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this), u.default.instance.register(g.default.REFRESH_RECOVER_COUNT_DOWN, this.refreshCountDownTime, this)
            }, t.prototype.unregisterEvent = function () {
                u.default.instance.unregister(g.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this), u.default.instance.unregister(g.default.REFRESH_RECOVER_COUNT_DOWN, this.refreshCountDownTime, this)
            }, t.prototype.init = function () {
                this.scene = new l.ui.view.GainStaminaDialogUI, this.gameConfig = d.default.instance.dicConfig[p.default.QCfgType.GameConfig], this.recoveStaminaTime = this.gameConfig.StaminaRegainTime;
                var e = h.default.instance.getIsActiveSharePoint(p.default.QShareType.gainStamina) ? h.default.instance.getPlayerScoreVideoShareType() : h.default.instance.getPointVideoShareType(p.default.QShareType.gainStamina);
                this.isVideoGain = h.default.instance.IsVideoGain(e), this.scene.imgVideo.visible = !0, this.isVideoGain || (this.scene.lblTextHint.x = 209), this.scene.lblTextHint.changeText("Get × " + this.gameConfig.VideoStaminaRegainCount), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), c.default.RegisterBtnClickWithAnim(this.scene.btnGetStamina, this, this.onClickBtnGetStamina), this.refreshCountDownTime(), c.default.biReport(v.default.openGainStaminaDialog)
            }, t.prototype.setParam = function (e) {
                e && (this.triggerClose = e.triggerClose)
            }, t.prototype.onClickBtnGetStamina = function () {
                if (h.default.instance.isNoVideoAuditVersion) this.gainStaminaSuccessHandle();
                else {
                    var e = m.default.create();
                    e.shareType = p.default.QShareType.gainStamina, this.isVideoGain ? f.default.instance.playVideoAd(e, Laya.Handler.create(this, function (e) {
                        e.gainStaminaSuccessHandle()
                    }, [this])) : f.default.instance.fakeShare(e, this, function (e) {
                        e.gainStaminaSuccessHandle()
                    }, [this])
                }
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this,
                    i = m.default.create();
                i.shareType = p.default.QShareType.gainStamina, e.shareType == i.shareType && f.default.instance.fakeShare(i, this, function () {
                    t.gainStaminaSuccessHandle()
                })
            }, t.prototype.gainStaminaSuccessHandle = function () {
                platform.getInstance().showReward(() => {
                    h.default.instance.addStamina(this.gameConfig.VideoStaminaRegainCount, !1), c.default.biReport(v.default.gainStaminaSuccess), h.default.instance.setGainStaminaTimes(), y.default.instance.removeUI(y.default.UI_Stamina), this.triggerClose && u.default.instance.sendEvent(g.default.CLOSE_STAMINA_DIALOG)
                })
            }, t.prototype.onClickBtnClose = function () {
                console.log("close"), y.default.instance.removeUI(y.default.UI_Stamina), c.default.biReport(v.default.closeGainStaminaDialog), this.triggerClose && u.default.instance.sendEvent(g.default.CLOSE_STAMINA_DIALOG)
            }, t.prototype.doDestroy = function () {}, t.prototype.refreshCountDownTime = function () {
                this.residueTime = this.recoveStaminaTime - h.default.instance.timeDifference, this.scene.lblTime.changeText("Resume: " + c.default.formatTime(this.residueTime))
            }, t
        }(s.default), o.QGainStaminaDialog = r, i.default = a.view.QGainStaminaDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    45: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../data/QGameData"),
            h = e("../data/QGameConst"),
            d = e("../../framework/QEventMgr"),
            p = e("../data/QEventType"),
            u = e("../logic/QShareParam"),
            g = e("../core/QWxSDK"),
            m = e("../../framework/QUtil"),
            f = e("../core/QUIMgr"),
            y = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.awardType = 0, t.rewardGoldNum = 0, t.isVideoGain = !1, t.boxtype = 0, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                d.default.instance.register(p.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.unregisterEvent = function () {
                d.default.instance.unregister(p.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.init = function () {
                this.scene = new l.ui.view.GameBoxDiaogUI;
                var e = c.default.instance.getIsActiveSharePoint(h.default.QShareType.OpenBox) ? c.default.instance.getPlayerScoreVideoShareType() : c.default.instance.getPointVideoShareType(h.default.QShareType.OpenBox);
                this.isVideoGain = c.default.instance.IsVideoGain(e), this.scene.imgShare.visible = !1, this.scene.imgVideo.visible = this.isVideoGain, this.isVideoGain || (this.scene.txtConfirm.x = 203, this.scene.txtConfirm.scale(1.2, 1.2)), this.scene.boxPic.visible = !1, m.default.RegisterBtnClickWithAnim(this.scene.btnConfirm, this, this.onClickBtnOpen), m.default.RegisterBtnClickWithAnim(this.scene.btnClose, this, this.onClickBtnClose), this.scene.btnClose.alpha = 0, this.scene.btnClose.visible = !1, Laya.timer.once(3500, this, function () {
                    this.scene.btnClose.visible = !0, Laya.Tween.to(this.scene.btnClose, {
                        alpha: 1
                    }, 500, null)
                })
            }, t.prototype.setParam = function (e) {
                this.boxtype = e.type, 1 == this.boxtype ? (this.scene.gameBoxAni.source = "res/ui_particle/gainSignBox.ani", c.default.instance.showLoginBox = 0) : this.scene.gameBoxAni.source = "res/ui_particle/gainGameBox.ani", this.scene.gameBoxAni.visible = !0, this.scene.gameBoxAni.play(0, !0), 2 == this.boxtype ? m.default.biReport(y.default.showPassBox) : m.default.biReport(y.default.showEveryDayBox), this.scene.titleLabel.text = 2 == this.boxtype ? "幸运宝箱" : "每日登录礼包", this.scene.titletip.text = 2 == this.boxtype ? "开启宝箱获得奖励" : "开启宝箱领取奖励", this.scene.txtConfirm.text = 2 == this.boxtype ? "打开宝箱" : "领取礼包"
            }, t.prototype.onClickBtnClose = function () {
                f.default.instance.removeUI(f.default.UI_BoxDialog), 1 == this.boxtype && c.default.instance.JudeIsShowBeOffline() ? f.default.instance.createUI(f.default.UI_BeOffline) : 2 == this.boxtype && (c.default.instance.checkKeFuDialog() || c.default.instance.checkAchievementReward() || d.default.instance.sendEvent(p.default.GET_RESULT_AWARD))
            }, t.prototype.onClickBtnOpen = function () {
                if (c.default.instance.isNoVideoAuditVersion) this.onClickOpenSuccessHandle();
                else {
                    var e = u.default.create();
                    e.shareType = h.default.QShareType.OpenBox, this.isVideoGain ? g.default.instance.playVideoAd(e, Laya.Handler.create(this, function (e) {
                        e.onClickOpenSuccessHandle()
                    }, [this])) : g.default.instance.fakeShare(e, this, function (e) {
                        e.onClickOpenSuccessHandle()
                    }, [this])
                }
            }, t.prototype.onClickOpenSuccessHandle = function () {
                f.default.instance.removeUI(f.default.UI_BoxDialog);
                var e = [],
                    t = 60;
                c.default.instance.boxRewardInfo && (c.default.instance.boxRewardInfo.energyCount, t = c.default.instance.boxRewardInfo.coinMultiple), c.default.instance.tutorialState >= c.default.instance.newUserGuideSteps && e.push({
                    type: "coin",
                    count: c.default.instance.getCurGarageAllValue() * t
                }), e.push({
                    type: "energy",
                    count: 3
                }), f.default.instance.createUI(f.default.UI_BoxReward, e), 2 == this.boxtype ? m.default.biReport(y.default.getPassBox) : (m.default.biReport(y.default.getEveryDayBox), c.default.instance.setLoginBoxReward(!0)), c.default.instance.getIsActiveSharePoint(h.default.QShareType.OpenBox) ? c.default.instance.setplayerScoreVideoShareTime() : c.default.instance.setOpenBoxTimes()
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this,
                    i = u.default.create();
                i.shareType = h.default.QShareType.OpenBox, e.shareType == i.shareType && g.default.instance.fakeShare(i, this, function () {
                    t.onClickOpenSuccessHandle()
                })
            }, t.prototype.doDestroy = function () {
                this.scene.gameBoxAni.gotoAndStop(0)
            }, t
        }(s.default), o.QGameBoxView = r, i.default = a.view.QGameBoxView
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    46: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../data/QGameData"),
            h = e("../data/QGameConst"),
            d = e("../../framework/QUtil"),
            p = e("../core/QUIMgr"),
            u = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.awardType = 0, t.rewardGoldNum = 0, t.isVideoGain = !1, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {}, t.prototype.unregisterEvent = function () {}, t.prototype.init = function () {
                this.scene = new l.ui.view.GameGuideDiaogUI, d.default.biReport(u.default.ShowGameGuide), d.default.RegisterBtnClickWithAnim(this.scene.btnConfirm, this, this.onClickBtnOpen), d.default.RegisterBtnClickWithAnim(this.scene.btnClose, this, this.onClickBtnClose)
            }, t.prototype.setParam = function (e) {}, t.prototype.onClickBtnClose = function () {
                d.default.biReport(u.default.ChooseGuideMain), p.default.instance.removeUI(p.default.UI_GameGuideDialog), c.default.instance.JudeIsShowBeOffline() && p.default.instance.createUI(p.default.UI_BeOffline)
            }, t.prototype.onClickBtnOpen = function () {
                var e = c.default.instance.gameConfig.everyTimesUseStaminaNum || 1;
                c.default.instance.stamina >= e ? c.default.instance.isCurLevelLoadOk(c.default.instance.curTrackId) ? (d.default.biReport(u.default.ChooseGuideGame), c.default.instance.setReviveTimes(!0), p.default.instance.removeUI(p.default.UI_GameGuideDialog), p.default.instance.removeUI(p.default.UI_MainPage), Laya.timer.frameOnce(1, this, function () {
                    p.default.instance.createUI(p.default.UI_Game)
                })) : p.default.instance.createUI(p.default.UI_WaitLoadDialog) : (d.default.biReport(u.default.noEnoughStamina), c.default.instance.getShareTimesIsEnough(h.default.QShareType.AddRevenue) ? p.default.instance.createUI(p.default.UI_Stamina) : p.default.instance.createUI(p.default.UI_Tip, {
                    text: "体力不足!"
                })), c.default.instance.isSyncOnline && c.default.instance.saveAllData()
            }, t.prototype.doDestroy = function () {}, t
        }(s.default), o.QGameGuideView = r, i.default = a.view.QGameGuideView
    }, {
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../data/QBIEvent": 22,
        "../data/QGameConst": 24,
        "../data/QGameData": 25
    }],
    47: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = (e("../../framework/QDebug"), e("../../framework/QEventMgr")),
            c = e("../data/QEventType"),
            h = e("../core/QBaseUI"),
            d = e("../data/QGameData"),
            p = e("../data/QGameConst"),
            u = e("../core/QCfgMgr"),
            g = e("../../framework/QSequence"),
            m = e("../core/QSoundMgr"),
            f = e("../../framework/QUtil"),
            y = e("../data/QBIEvent"),
            v = e("../core/QWxSDK"),
            w = e("../core/QUIMgr"),
            I = e("../logic/QShareParam"),
            S = e("../core/QResMgr");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.tutorialState = 0, t.GameConfig = u.default.instance.dicConfig[p.default.QCfgType.GameConfig], t.levelInfo = [], t.diffPicInfo = [], t.checkPosList = [], t.layerAX = 20, t.layerAY = 260, t.layerGapHeigt = 20, t.totalTime = 100, t.errorTime = 20, t.errorTimeNode = [], t.errorNode = [], t.game_state = {
                    game_start: 0,
                    game_continue: 1,
                    game_stop: 2,
                    game_over: 3,
                    game_win: 4,
                    game_failed: 5,
                    game_revive: 6
                }, t.game_state_current = -1, t.timeCount = 0, t.checkPoint = 0, t.checkPointList = [], t.uncheckPosList = [], t.checkCirList = [], t.showGuide = !1, t.levelFreshJcdlNum = 1, t.nextTargetLevelTotalNum = 1, t.curJcdlListIndex = 0, t.GuidePointNum = 2, t.isFinsihGuide = !1, t.isAlreadyLoadLight = !1, t.showShareBtnTime = 5, t.isStopRecorder = !1, t.isLoadRecorder = !1, t.repeatTime = 3, t.isVideoGain = !1, t.tmpCheckpoint = 0, t.guideStep = 0, t.collectTimeLimit = 0, t.isShowLottery = !1, t
            }
            return __extends(t, e), t.prototype.init = function () {
                console.log("ininininini"), this.scene = new s.ui.view.GameViewUI, d.default.instance.curTrackId > 1 && (d.default.instance.coseStamina(this.GameConfig.everyTimesUseStaminaNum), 2 == d.default.instance.curTrackId ? f.default.biReport(y.default.enterSecondLevel) : 3 == d.default.instance.curTrackId ? f.default.biReport(y.default.enterThirdLevel) : 4 == d.default.instance.curTrackId ? f.default.biReport(y.default.enterFourLevel) : 6 == d.default.instance.curTrackId && f.default.biReport(y.default.enterSixLevel)), f.default.biReport(y.default.enterGameLevel, [d.default.instance.curTrackId]), this.scene.BG.width = Laya.stage.width, this.scene.BG.height = Laya.stage.height, this.scene.BG.x = 0, this.scene.BG.y = 0, this.scene.backBtn.on(Laya.Event.CLICK, this, this.onClickBack), this.scene.addTimeBtn.on(Laya.Event.CLICK, this, this.onClickAddTime), this.scene.reStartBtn.on(Laya.Event.CLICK, this, this.onGameRestart), this.scene.nextLevelBtn.on(Laya.Event.CLICK, this, this.onClickNextLevel), this.initGameCommonNode(), this.completeResHandler(), S.default.instance.loadFx(), this.initGameJcdlData(), this.freshShowPos(), this.scene.backGround.visible = !1, this.scene.recorderDialog.visible = !1, 1 == d.default.instance.curTrackId && (this.scene.backBtn.visible = !1)
            }, t.prototype.registerEvent = function () {
                l.default.instance.register(c.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this), l.default.instance.register(c.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), l.default.instance.register(c.default.GAME_REVIVE_SUC, this._reviveSuc, this), l.default.instance.register(c.default.FINISH_STAR_PARTICLE, this.onFinishStarParticle, this), l.default.instance.register(c.default.GAME_FINISHED, this.onGameFinished, this), l.default.instance.register(c.default.GAME_RESTART, this.onGameRestart, this), l.default.instance.register(c.default.GAME_CONTINUE, this.onClickNextLevel, this), Laya.Browser.onMiniGame && (tywx.NotificationCenter.listen(tywx.EventType.GAME_SHOW, this.onGameShow, this), tywx.NotificationCenter.listen(tywx.EventType.GAME_HIDE, this.onGameHide, this))
            }, t.prototype.unregisterEvent = function () {
                l.default.instance.unregister(c.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this), l.default.instance.unregister(c.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), l.default.instance.unregister(c.default.GAME_REVIVE_SUC, this._reviveSuc, this), l.default.instance.unregister(c.default.FINISH_STAR_PARTICLE, this.onFinishStarParticle, this), l.default.instance.unregister(c.default.GAME_FINISHED, this.onGameFinished, this), l.default.instance.unregister(c.default.GAME_RESTART, this.onGameRestart, this), l.default.instance.unregister(c.default.GAME_CONTINUE, this.onClickNextLevel, this), Laya.Browser.onMiniGame && tywx.NotificationCenter.ignoreScope(this)
            }, t.prototype.onGameShow = function () {
                this.game_state_current < 3 && this.onChangeGameState(this.game_state.game_continue)
            }, t.prototype.onGameHide = function () {
                this.game_state_current < 3 && this.onChangeGameState(this.game_state.game_stop)
            }, t.prototype.refreshGoldData = function () {}, t.prototype._reviveSuc = function (e) {
                this.timeCount += e, this.scene.timeLabel.color = "#000000", this.scene.timeLabel.text = this.getFormatTime(), this.onChangeGameState(this.game_state.game_continue)
            }, t.prototype.tutorialShowGoodFinish = function () {}, t.prototype.doDestroy = function () {
                Laya.timer.clearAll(this)
            }, t.prototype.onClickBack = function () {
                w.default.instance.removeUI(w.default.UI_Game), w.default.instance.createUI(w.default.UI_MainPage)
            }, t.prototype.onClickAddTime = function () {
                this.scene.addTimeBtn.visible = !1, this.scene.reStartBtn.visible = !1, this.onChangeGameState(this.game_state.game_stop), this.updateGameTime(-60), this.checkGameState()
            }, t.prototype.onGameRestart = function () {
                d.default.instance.coseStamina(this.GameConfig.everyTimesUseStaminaNum), this.checkPoint = 0, this.tmpCheckpoint = 0;
                for (var e = 0; e < this.uncheckPosList.length; e++) 1 == this.uncheckPosList[e] && (this.uncheckPosList[e] = 0, this.checkCirList[e][0].visible = !1, this.checkCirList[e][1].visible = !1), this.checkPointList[e].skin = "ui_game/point0.png", this.tipNode && this.tipNode.visible && (this.tipNode.visible = !1, this.changeTipsLightShow(!1));
                this.onChangeGameState(this.game_state.game_start)
            }, t.prototype.onClickNextLevel = function () {
                d.default.instance.coseStamina(this.GameConfig.everyTimesUseStaminaNum), this.completeResHandler()
            }, t.prototype.updateLevelUI = function () {
                this.checkPoint = 0, this.tmpCheckpoint = 0;
                var e = d.default.instance.curTrackId;
                e > d.default.instance.MAX_LEVEL_NUM && (e = d.default.instance.MAX_LEVEL_NUM), this.scene.levelLabel.text = "Level " + d.default.instance.curTrackId, d.default.instance.curTrackId > 2 && p.default.LevelDownloadUrl, this.resPath = d.default.instance.leveResList[e].images, this.configPath = d.default.instance.leveResList[e].config, this.updateCheckPointUI(), this.createLayerImg(), this.initTipGuideShow(), d.default.instance.checkDropBoxType(), d.default.instance.checkResultDialogStrategy()
            }, t.prototype.completeResHandler = function () {
                var e = d.default.instance.curTrackId;
                e > d.default.instance.MAX_LEVEL_NUM && (e = d.default.instance.MAX_LEVEL_NUM), this.levelInfo = d.default.instance.leveResList[e].levelInfo, this.showAniList = {}, d.default.instance.isShowDialogInResult = !0, this.updateLevelUI()
            }, t.prototype.updateCheckPointUI = function () {
                if (this.diffPicInfo = [], this.uncheckPosList = [], this.levelInfo && 0 != this.levelInfo.length)
                    for (var e = 0; e < this.levelInfo.length; e++) "layer" == this.levelInfo[e].name ? this.layerInfo = this.levelInfo[e] : (this.diffPicInfo.push(this.levelInfo[e]), this.uncheckPosList.push(0))
            }, t.prototype.createLayerImg = function () {
                if (this.layerInfo) {
                    this.layerImgA && (this.layerImgA.removeSelf(), this.layerImgA = null), this.layerImgA = new Laya.Image(this.resPath + "layer.jpg"), this.layerScale = (Laya.stage.width - 2 * this.layerAX) / this.layerInfo.width, console.log(" this.layerScale : " + this.layerScale + " this.layerAX : " + this.layerAX + " width : " + this.layerInfo.width), this.layerImgA.scale(this.layerScale, this.layerScale, !0), this.scene.addChild(this.layerImgA), this.layerImgA.x = this.layerAX, this.layerImgA.y = this.layerAY, this.layerImgB && (this.layerImgB.removeSelf(), this.layerImgB = null);
                    var e = this.layerImgA.width * this.layerScale,
                        t = this.layerImgA.height * this.layerScale;
                    this.layerImgB = f.default.CloneImage(this.layerImgA, this.layerAX, this.layerAY + this.layerInfo.height * this.layerScale + this.layerGapHeigt), this.layerImgB.scale(this.layerScale, this.layerScale, !0), this.zhezhaoA = new Laya.Image("ui_common2/zhezhao.png"), this.zhezhaoA.width = e, this.zhezhaoA.height = t, this.zhezhaoA.pos(this.layerImgA.x, this.layerImgA.y), this.zhezhaoA.zOrder = 60, this.scene.addChild(this.zhezhaoA), this.zhezhaoB = f.default.CloneImage(this.zhezhaoA, this.layerImgB.x, this.layerImgB.y), this.zhezhaoB.width = e, this.zhezhaoB.height = t, this.zhezhaoB.zOrder = 60, this.zhezhaoA.visible = !1, this.zhezhaoB.visible = !1, this.checkPosList = [];
                    for (var i = 0; i < this.diffPicInfo.length; i++)
                        if (this.diffPicInfo[i].name && this.diffPicInfo[i].layer && this.diffPicInfo[i].x && this.diffPicInfo[i].y && this.diffPicInfo[i].width && this.diffPicInfo[i].height) {
                            var a = new Laya.Image(this.resPath + this.diffPicInfo[i].name + ".png");
                            a.x = this.diffPicInfo[i].x - .5 * this.diffPicInfo[i].width, a.y = -this.diffPicInfo[i].y - .5 * this.diffPicInfo[i].height;
                            var n = "LayerAMiddle" == this.diffPicInfo[i].layer;
                            if ((n ? this.layerImgA : this.layerImgB).addChild(a), d.default.instance.isOpenTestFun) {
                                var o = new Laya.Sprite;
                                o.graphics.drawRect(0, 0, a.width, a.height, "#ff0400"), a.addChild(o)
                            }
                            var r = a.localToGlobal(new Laya.Point(.5 * this.diffPicInfo[i].width, .5 * this.diffPicInfo[i].height)),
                                s = {},
                                l = this.diffPicInfo[i].width * this.layerScale;
                            l = l < 80 ? 80 : l, s.x_left = r.x - .5 * l - 10, s.x_right = r.x + .5 * l + 10;
                            var c = this.diffPicInfo[i].height * this.layerScale;
                            c = c < 80 ? 80 : c;
                            var h = this.layerInfo.height * this.layerScale + this.layerGapHeigt;
                            n ? (s.y_Atop = r.y - .5 * c - 10, s.y_Abottom = r.y + .5 * c + 10, s.y_Btop = r.y + h - 10 - .5 * c, s.y_Bbottom = r.y + .5 * c + h + 10) : (s.y_Btop = r.y - 10 - .5 * c, s.y_Bbottom = r.y + .5 * c + 10, s.y_Atop = r.y - h - 10 - .5 * c, s.y_Abottom = r.y + .5 * c - h + 10), this.checkPosList.push(s);
                            var p = r.x,
                                u = .5 * (s.y_Atop + s.y_Abottom),
                                g = .5 * (s.y_Btop + s.y_Bbottom);
                            this.checkCirList[i][0].x = p, this.checkCirList[i][0].y = u, this.checkCirList[i][1].x = p, this.checkCirList[i][1].y = g
                        } this.layerImgA.on(Laya.Event.CLICK, this, this.onClickPic), this.layerImgB.on(Laya.Event.CLICK, this, this.onClickPic), this.addTipBtn(), this.onChangeGameState(this.game_state.game_start)
                }
            }, t.prototype.addTipBtn = function () {
                var e = "";
                if (d.default.instance.getFreeHintTimes() > 0 ? (e = "tipv.png", this.isFreeHint = !0) : (this.isFreeHint = !1, this.shareType = d.default.instance.getIsActiveSharePoint(p.default.QShareType.Hint) ? d.default.instance.getPlayerScoreVideoShareType() : d.default.instance.getPointVideoShareType(p.default.QShareType.Hint), this.isVideoGain = d.default.instance.IsVideoGain(this.shareType), this.isVideoGain, e = "tipv.png"), this.tipBtn ? (this.tipBtn.skin = e, this.tipBtn.visible = !0) : (this.tipBtn = new Laya.Image(e), this.tipBtn.x = .5 * Laya.stage.width, this.tipBtn.y = 1248, this.tipBtn.anchorX = .5, this.tipBtn.anchorY = .5, this.scene.addChild(this.tipBtn), window.tipbtn = this.tipBtn, f.default.RegisterBtnClickWithAnim(this.tipBtn, this, this.onClickTip)), this.tipRedPoint, this.isFreeHint)
                    if (this.freeHintLabel) this.freeHintLabel.visible = !0, this.freeHintLabel.text = d.default.instance.getFreeHintTimes() + "";
                    else {
                        var t = new Laya.Label(d.default.instance.getFreeHintTimes() + "");
                        t.font = "font_2", t.anchorX = .5, t.anchorY = .5, t.x = .5 * this.tipRedPoint.width, t.y = .5 * this.tipRedPoint.height, t.scale(.8, .8), this.tipRedPoint.addChild(t), this.freeHintLabel = t
                    }
                else this.freeHintLabel && (this.freeHintLabel.visible = !1);
                1 != d.default.instance.curTrackId && (this.showAniList.tipBtnAni = {
                    isOpen: !0,
                    interval: 10,
                    countdown: 10,
                    handler: Laya.Handler.create(this, this.showTipBtnAni, [], !1),
                    scope: this
                })
            }, t.prototype.updateFreeHintLabel = function () {
                if (d.default.instance.getFreeHintTimes() > 0) this.isFreeHint = !0, this.freeHintLabel.text = d.default.instance.getFreeHintTimes() + "";
                else {
                    this.isFreeHint = !1, this.freeHintLabel && (this.freeHintLabel.visible = !1), this.shareType = d.default.instance.getIsActiveSharePoint(p.default.QShareType.Hint) ? d.default.instance.getPlayerScoreVideoShareType() : d.default.instance.getPointVideoShareType(p.default.QShareType.Hint), this.isVideoGain = d.default.instance.IsVideoGain(this.shareType);
                    var e = (this.isVideoGain, "tipv.png");
                    this.tipBtn.skin = e
                }
            }, t.prototype.showTipBtnAni = function () {
                var e = this;
                if (this.tipBtn) {
                    this.repeatTime = 3;
                    for (var t = g.default.create(), i = 0; i < this.repeatTime; i++) t.add(.5 * i, function () {
                        e.repeatTipBtnAni()
                    }, this);
                    t.start()
                }
            }, t.prototype.clearTipBtnAni = function () {
                this.showAniList.tipBtnAni = {
                    isOpen: !0,
                    interval: 10,
                    countdown: 10,
                    handler: Laya.Handler.create(this, this.showTipBtnAni, [], !1),
                    scope: this
                }
            }, t.prototype.repeatTipBtnAni = function () {
                var e = this;
                this.game_state_current > 3 || Laya.Tween.to(this.tipBtn, {
                    scaleX: 1.1,
                    scaleY: 1.1
                }, 250, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(e.tipBtn, {
                        scaleX: 1,
                        scaleY: 1
                    }, 250, null)
                }))
            }, t.prototype.onClickTip = function () {
                platform.getInstance().showReward(() => {
                    if (console.log("tiptiptiptip"), this.isAlreadyDrawLight(), !(this.tipNode.visible && this.isFreeHint || this.game_state_current > 3)) {
                        if (this.isFreeHint || d.default.instance.isOpenTestFun) return this.onChangeGameState(this.game_state.game_stop), d.default.instance.setFreeHintTimes(-1), f.default.biReport(y.default.onClickFreeHint), void this.onClickSuccessHandle();
                        if (d.default.instance.getShareTimesIsEnough(p.default.QShareType.Hint, !0))
                            if (this.onChangeGameState(this.game_state.game_stop), d.default.instance.isNoVideoAuditVersion) this.onClickSuccessHandle();
                            else {
                                var e = I.default.create();
                                e.shareType = p.default.QShareType.Hint, this.isVideoGain ? v.default.instance.playVideoAd(e, Laya.Handler.create(this, function (e) {
                                    e.onClickSuccessHandle()
                                }, [this])) : v.default.instance.fakeShare(e, this, function (e) {
                                    e.onClickSuccessHandle()
                                }, [this]), f.default.biReport(y.default.onClickShareOrVideoHint)
                            }
                    }
                })
            }, t.prototype.onClickSuccessHandle = function (e) {
                if (console.log("success"), !(this.game_state_current > 2 || (this.checkGameState(), this.tipNode.visible))) {
                    e || d.default.instance.setGameHintGetTimes(), this.updateFreeHintLabel();
                    for (var t = 0; t < this.uncheckPosList.length; t++)
                        if (0 == this.uncheckPosList[t]) {
                            var i = .5 * (this.checkPosList[t].x_left + this.checkPosList[t].x_right),
                                a = .5 * (this.checkPosList[t].y_Btop + this.checkPosList[t].y_Bbottom),
                                n = .5 * (this.checkPosList[t].y_Atop + this.checkPosList[t].y_Abottom);
                            return this.isAlreadyLoadLight ? this.changeLightState(i, a, n, t) : (this.tipNode.scaleX = 1.3, this.tipNode.scaleY = 1.3, this.tipNode.x = i, this.tipNode.y = a, this.showTipNodeAni(), this.tipNode.visible = !0), void(1 == d.default.instance.curTrackId && (Laya.timer.clear(this, this.showTipNodeAni), Laya.timer.loop(1500, this, this.showTipNodeAni)))
                        }
                }
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this,
                    i = I.default.create();
                i.shareType = p.default.QShareType.Hint, e.shareType == i.shareType && v.default.instance.fakeShare(i, this, function () {
                    t.onClickSuccessHandle()
                })
            }, t.prototype.showGuideTipNodeAni = function () {
                var e = this;
                Laya.Tween.to(this.tipNode, {
                    scaleX: 1.5,
                    scaleY: 1.5
                }, 300, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(e.tipNode, {
                        scaleX: 1.3,
                        scaleY: 1.3
                    }, 1500, null)
                }))
            }, t.prototype.showTipNodeAni = function () {
                var e = this;
                Laya.Tween.to(this.tipNode, {
                    scaleX: 2,
                    scaleY: 2
                }, 300, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(e.tipNode, {
                        scaleX: 1.6,
                        scaleY: 1.6
                    }, 1500, null)
                }))
            }, t.prototype.onClickPic = function (e) {
                if (!(this.game_state_current > 2) && e) {
                    var t = this.checkClickPos([e.stageX, e.stageY]);
                    t ? 1 == t && this.onClickDiffPos(e) : this.onClickErrorPos([e.stageX, e.stageY])
                }
            }, t.prototype.onClickDiffPos = function (e) {
                this.tipNode && (this.tipNode.visible = !1, this.changeTipsLightShow(!1),
                    1 == d.default.instance.curTrackId && Laya.timer.clear(this, this.showTipNodeAni)), v.default.instance.onStartVibrateShort(), this.onChangeGameState(this.game_state.game_stop);
                var t = new Laya.Vector3(e.stageX, e.stageY, 0);
                if (this.checkPointList[this.tmpCheckpoint]) var i = f.default.getScreenPos(this.checkPointList[this.tmpCheckpoint]);
                console.log("clickPoint: " + t.x + ", " + t.y + "   endPoint: " + i.x + ", " + i.y), S.default.instance.playFxAni(p.default.QPlayFxType.fxStar, t, i, .5, [this.checkPoint]), this.tmpCheckpoint++, this.showGuide && this.updateNewUserGuide(), m.default.instance.playSfx("find" + (this.checkPoint + 1)), 1 == d.default.instance.curTrackId && y.default.foundFirstLevelDiff[this.checkPoint] && f.default.biReport(y.default.foundFirstLevelDiff[this.checkPoint]), this.checkPoint++, this.checkGameState(), this.startTipTime = Laya.Browser.now()
            }, t.prototype.onFinishStarParticle = function (e) {
                this.checkPointList[e].scale(1.2, 1.2), Laya.Tween.to(this.checkPointList[e], {
                    scaleX: 1,
                    scaleY: 1
                }, 300, null), this.checkPointList[e].skin = "ui_game/point1.png"
            }, t.prototype.onClickErrorPos = function (e) {
                var t = this;
                m.default.instance.playSfx(m.default.Miss);
                var i = this.getErrorNode();
                if (i.x = e[0] - .5 * i.width, i.y = e[1] - .5 * i.height, i.alpha = 1, i.visible = !0, Laya.Tween.to(i, {
                        alpha: 0
                    }, 500, null, Laya.Handler.create(this, function (e) {
                        e && (e.visible = !1)
                    }, [i])), 1 != d.default.instance.curTrackId && !(d.default.instance.curTrackId <= d.default.instance.NoneTimeCurTrackId)) {
                    var a = this.getErrorTimeNode();
                    a.x = e[0], a.y = e[1], a.visible = !0, Laya.Tween.to(a, {
                        x: this.scene.timeLabel.x - .5 * this.scene.timeLabel.width,
                        y: this.scene.timeLabel.y + .5 * this.scene.timeLabel.height
                    }, 500, null, Laya.Handler.create(this, function (e) {
                        e && (e.visible = !1), t.game_state_current < t.game_state.game_over && (t.onChangeGameState(t.game_state.game_stop), t.updateGameTime(t.errorTime), t.checkGameState())
                    }, [a]))
                }
            }, t.prototype.checkClickPos = function (e) {
                for (var t = 0; t < this.diffPicInfo.length; t++)
                    if (e[0] >= this.checkPosList[t].x_left && e[0] <= this.checkPosList[t].x_right && (e[1] >= this.checkPosList[t].y_Atop && e[1] <= this.checkPosList[t].y_Abottom || e[1] >= this.checkPosList[t].y_Btop && e[1] <= this.checkPosList[t].y_Bbottom)) {
                        if (1 == this.uncheckPosList[t]) {
                            for (var i = 0; i <= 1; i++) this.showClickCirAniByB(t, i);
                            return 2
                        }
                        this.checkCirList[t][0].visible = !0, this.checkCirList[t][1].visible = !0;
                        for (var a = 0; a <= 1; a++) this.showClickCirAniByA(t, a);
                        return this.uncheckPosList[t] = 1, 1
                    } return 0
            }, t.prototype.showClickCirAniByB = function (e, t) {
                var i = this;
                Laya.Tween.to(this.checkCirList[e][t], {
                    scaleX: 1.5,
                    scaleY: 1.5
                }, 200, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(i.checkCirList[e][t], {
                        scaleX: 1,
                        scaleY: 1
                    }, 200, null)
                }))
            }, t.prototype.showClickCirAniByA = function (e, t) {
                this.checkCirList[e][t].scaleX = 1.7, this.checkCirList[e][t].scaleY = 1.7;
                var i = this;
                Laya.Tween.to(this.checkCirList[e][t], {
                    scaleX: 2,
                    scaleY: 2
                }, 200, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(i.checkCirList[e][t], {
                        scaleX: 1,
                        scaleY: 1
                    }, 300, null)
                }))
            }, t.prototype.onChangeGameState = function (e) {
                switch (this.game_state_current = e, e) {
                    case this.game_state.game_start:
                        this.onGameStart();
                        break;
                    case this.game_state.game_continue:
                        this.onGameContinue();
                        break;
                    case this.game_state.game_stop:
                        this.onGameStop();
                        break;
                    case this.game_state.game_over:
                        this.onGameOver();
                        break;
                    case this.game_state.game_win:
                        this.onGameWin();
                        break;
                    case this.game_state.game_failed:
                        this.onGameFailed();
                        break;
                    case this.game_state.game_revive:
                        this.onGameRevive()
                }
            }, t.prototype.onGameStart = function () {
                this.isWinAniFinished = !1, this.scene.addTimeBtn.visible = !1, this.scene.reStartBtn.visible = !1, this.scene.nextLevelBtn.visible = !1, 1 == d.default.instance.curTrackId ? (this.timeCount = this.totalTime, this.scene.timeLabel.visible = !1, this.showGuide = !0, this.showNewUserGuide()) : d.default.instance.curTrackId <= d.default.instance.NoneTimeCurTrackId ? (this.timeCount = this.totalTime, this.scene.timeLabel.visible = !1, this.showGuide = !1) : (this.showGuide = !1, this.timeCount = this.totalTime, this.scene.timeLabel.visible = !0, this.scene.timeLabel.color = "#000000", this.scene.timeLabel.text = this.getFormatTime(), Laya.timer.clear(this, this.updateGameTime), Laya.timer.loop(1e3, this, this.updateGameTime))
            }, t.prototype.showNewUserGuide = function () {
                this.drawBackGround(0), this.guideTip = new Laya.Image(""), this.guideTip.anchorX = .5, this.guideTip.x = .5 * Laya.stage.width, this.guideTip.y = this.layerAY + this.layerInfo.height * this.layerScale - this.layerGapHeigt, this.scene.addChild(this.guideTip);
                var e = this.calLightCircleRadius(0);
                this.guideClick = new Laya.Image("ui_game/innerLight.png"), this.guideClick.width = 2 * e.radius + 25, this.guideClick.height = 2 * e.radius + 25, this.guideClick.anchorX = .5, this.guideClick.anchorY = .5, this.scene.addChild(this.guideClick), this.guideClick.visible = !1, this.guideOuterLight = new Laya.Image("ui_game/outerLight.png"), this.guideOuterLight.anchorX = .5, this.guideOuterLight.anchorY = .5, this.guideOuterLight.width = this.guideClick.width + 5, this.guideOuterLight.height = this.guideClick.height + 5, this.scene.addChild(this.guideOuterLight), this.guideOuterLight.visible = !1, this.guideHand = new Laya.Image("ui_game/GuideGameHand.png"), this.guideHand.anchorX = .1, this.guideHand.anchorY = .1, this.scene.addChild(this.guideHand), this.guideHand.visible = !1;
                var t = this.calLightCircleRadius(0);
                this.guideClickUp = new Laya.Image("ui_game/innerLight.png"), this.guideClickUp.width = 2 * t.radius + 25, this.guideClickUp.height = 2 * t.radius + 25, this.guideClickUp.anchorX = .5, this.guideClickUp.anchorY = .5, this.scene.addChild(this.guideClickUp), this.guideClickUp.visible = !1, this.guideOuterLightUp = new Laya.Image("ui_game/outerLight.png"), this.guideOuterLightUp.anchorX = .5, this.guideOuterLightUp.anchorY = .5, this.guideOuterLightUp.width = this.guideClickUp.width + 5, this.guideOuterLightUp.height = this.guideClickUp.height + 5, this.scene.addChild(this.guideOuterLightUp), this.guideOuterLightUp.visible = !1, this.guideOuterLightUp.on(Laya.Event.CLICK, this, this.ClickUpPoint), this.guideHandUp = new Laya.Image("ui_game/GuideGameHand.png"), this.guideHandUp.anchorX = .1, this.guideHandUp.anchorY = .1, this.scene.addChild(this.guideHandUp), this.guideHandUp.visible = !1, this.updateNewUserGuide()
            }, t.prototype.clearGuideRes = function () {
                this.guideTip && (this.guideTip.removeSelf(), this.guideTip = null), this.guideHand && (this.guideHand.removeSelf(), this.guideHand = null), this.guideClick && (this.guideClick.removeSelf(), this.guideClick = null), this.guideOuterLight && (this.guideOuterLight.removeSelf(), this.guideOuterLight = null), this.guideHandUp && (this.guideHandUp.removeSelf(), this.guideHandUp = null), this.guideClickUp && (this.guideClickUp.removeSelf(), this.guideClickUp = null), this.guideOuterLightUp && (this.guideOuterLightUp.removeSelf(), this.guideOuterLightUp = null)
            }, t.prototype.updateNewUserGuide = function () {
                switch (this.freshBackGround(this.tmpCheckpoint), this.guideStep) {
                    case 0:
                        this.refreshNewUserGuideTip(0), this.refreshHandClickPos();
                        break;
                    case 1:
                        this.refreshNewUserGuideTip(1), Laya.timer.once(1e3, this, this.refreshNewUserGuideTip, [0]), this.refreshHandClickPos();
                        break;
                    case 2:
                    case 3:
                    case 4:
                        Laya.timer.clear(this, this.refreshNewUserGuideTip), Laya.timer.clear(this, this.showHandClickAni), this.guideClick.visible = !1, this.guideOuterLight.visible = !1, this.guideHand.visible = !1, this.guideClickUp.visible = !1, this.guideOuterLightUp.visible = !1, this.guideHandUp.visible = !1, this.refreshNewUserGuideTip(1), this.autoGuideInterval = d.default.instance.autoGuideInterval || 5, Laya.timer.clear(this, this.onClickSuccessHandle), Laya.timer.once(1e3 * this.autoGuideInterval, this, this.onClickSuccessHandle, [1]);
                        break;
                    case 5:
                        this.guideTip.visible = !1
                }
                this.guideStep++
            }, t.prototype.refreshHandClickPos = function () {
                for (var e = 0; e < this.uncheckPosList.length; e++)
                    if (0 == this.uncheckPosList[e]) {
                        var t = .5 * (this.checkPosList[e].x_left + this.checkPosList[e].x_right),
                            i = .5 * (this.checkPosList[e].y_Btop + this.checkPosList[e].y_Bbottom);
                        this.guideClick.x = t, this.guideClick.y = i, this.guideOuterLight.x = t, this.guideOuterLight.y = i, this.guideOuterLight.visible = !0, this.guideHand.x = t, this.guideHand.y = i;
                        var a = .5 * (this.checkPosList[e].x_left + this.checkPosList[e].x_right),
                            n = .5 * (this.checkPosList[e].y_Atop + this.checkPosList[e].y_Abottom);
                        return this.guideClickUp.x = a, this.guideClickUp.y = n, this.guideOuterLightUp.x = a, this.guideOuterLightUp.y = n, this.guideOuterLightUp.visible = !0, this.guideHandUp.x = a, this.guideHandUp.y = n, this.showHandClickAni(), this.guideHand.visible = !0, this.guideHandUp.visible = !0, Laya.timer.clear(this, this.showHandClickAni), void Laya.timer.loop(1500, this, this.showHandClickAni)
                    }
            }, t.prototype.showHandClickAni = function () {
                var e = this;
                Laya.Tween.to(this.guideHand, {
                    scaleX: .8,
                    scaleY: .8
                }, 500, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(e.guideHand, {
                        scaleX: 1,
                        scaleY: 1
                    }, 500, null), e.guideClick.scaleX = .5, e.guideClick.scaleY = .5, e.guideClick.alpha = 1, e.guideClick.visible = !0, Laya.Tween.to(e.guideClick, {
                        scaleX: 1,
                        scaleY: 1
                    }, 500, null, Laya.Handler.create(e, function () {
                        Laya.Tween.to(e.guideClick, {
                            alpha: 0
                        }, 500, null)
                    }))
                })), Laya.Tween.to(this.guideHandUp, {
                    scaleX: .8,
                    scaleY: .8
                }, 500, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(e.guideHandUp, {
                        scaleX: 1,
                        scaleY: 1
                    }, 500, null), e.guideClickUp.scaleX = .5, e.guideClickUp.scaleY = .5, e.guideClickUp.alpha = 1, e.guideClickUp.visible = !0, Laya.Tween.to(e.guideClickUp, {
                        scaleX: 1,
                        scaleY: 1
                    }, 500, null, Laya.Handler.create(e, function () {
                        Laya.Tween.to(e.guideClickUp, {
                            alpha: 0
                        }, 500, null)
                    }))
                }))
            }, t.prototype.refreshNewUserGuideTip = function (e) {
                d.default.instance.curTrackId
            }, t.prototype.updateGameTime = function (e) {
                if (void 0 === e && (e = 1), 1 != d.default.instance.curTrackId && (this.timeCount -= e, 30 != this.timeCount && 10 != this.timeCount || m.default.instance.playSfx(m.default.Countdown), this.timeCount <= 30 ? "#ff0400" != this.scene.timeLabel.color && (this.scene.timeLabel.color = "#ff0400") : "#000000" != this.scene.timeLabel.color && (this.scene.timeLabel.color = "#000000"), this.timeCount <= 0 && (this.timeCount = 0, this.scene.timeLabel.text = "00:00", this.onChangeGameState(this.game_state.game_over)), this.scene.timeLabel.text = this.getFormatTime(), 1 == e))
                    for (var t in this.showAniList) {
                        var i = this.showAniList[t];
                        i.isOpen && (i.countdown <= 0 ? (i.countdown = i.interval, i.handler.run()) : i.countdown--)
                    }
            }, t.prototype.getFormatTime = function (e) {
                e = null == e ? this.timeCount : e;
                var t = Math.floor(e / 60) + "";
                t = t.length > 1 ? t : "0" + t;
                var i = e % 60 + "";
                return i = i.length > 1 ? i : "0" + i, t + ":" + i
            }, t.prototype.onGameStop = function () {
                Laya.timer.clear(this, this.updateGameTime)
            }, t.prototype.onGameContinue = function () {
                1 != d.default.instance.curTrackId && (d.default.instance.curTrackId <= d.default.instance.NoneTimeCurTrackId || (Laya.timer.clear(this, this.updateGameTime), Laya.timer.loop(1e3, this, this.updateGameTime)))
            }, t.prototype.onGameOver = function () {
                Laya.timer.clear(this, this.updateGameTime), this.clearTipBtnAni(), console.log(" ------onGameOver---------------------------------  "), this.checkGameState()
            }, t.prototype.checkGameState = function () {
                this.checkPoint == this.diffPicInfo.length || d.default.instance.curTrackId <= 3 && this.checkPoint > 2 ? (1 == d.default.instance.curTrackId && d.default.instance.serverSynData && Laya.timer.once(2e3, v.default.instance, function () {
                    var e = d.default.instance.serverSynData;
                    d.default.instance.freshUserSaveData(e), d.default.instance.serverSynData = null, d.default.instance.serverIsSkipPop = 1
                }), this.onChangeGameState(this.game_state.game_win)) : this.timeCount <= 0 ? this.onChangeGameState(this.game_state.game_revive) : (console.log(" ------game_continue---------------------------------  "), this.onChangeGameState(this.game_state.game_continue))
            }, t.prototype.onGameWin = function () {
                console.log(" ------onGameWin---------------------------------  "), Laya.timer.clear(this, this.updateGameTime), this.showLevelWinAni()
            }, t.prototype.onWinAniFinished = function () {
                console.log("胜利动画结束"), this.isWinAniFinished || (this.isWinAniFinished = !0, 1 != d.default.instance.curTrackId && 0 != d.default.instance.collecTimeSwitch || this.onGameFinished())
            }, t.prototype.onGameFinished = function () {
                this.clearLevelRes(), this.resetLevelUI(), f.default.biReport(y.default.winGameLevel, [d.default.instance.curTrackId]);
                var e = d.default.instance.checkResultDialogStrategy();
                d.default.instance.checkDropBoxType(), v.default.instance.setUserCloudStorage("levelCount", d.default.instance.curTrackId.toString()), v.default.instance.setUserCloudStorage("curMaxLevel", d.default.instance.curMaxLevel.toString()), d.default.instance.finishTrack(), w.default.instance.removeUI(w.default.UI_Game), this.showGameResult(1), d.default.instance.updateWinGameTimes(), e && d.default.instance.getResultDialogUI()
            }, t.prototype.showGameResult = function (e) {
                console.log("eeeeeeeeeeeeeeee", e), 1 == e ? (m.default.instance.playSfx(m.default.Win), d.default.instance.addWinningStreakCount(), w.default.instance.createUI(w.default.UI_Result, {
                    isWin: !0,
                    gameTime: this.totalTime,
                    curPass: d.default.instance.curTrackId - 1,
                    findUnComNum: this.checkCirList.length
                })) : (m.default.instance.playSfx(m.default.Lose), w.default.instance.createUI(w.default.UI_Result, {
                    isWin: !1,
                    gameTime: this.totalTime,
                    curPass: d.default.instance.curTrackId - 1,
                    findUnComNum: this.checkCirList.length
                }))
            }, t.prototype.getAniIndexList = function () {
                for (var e = this.checkCirList.length, t = [], i = 0; i < e; i++) t.push(this.checkCirList[i][0].x);
                for (var a, n, o = [], r = 0; r < e; r++) o[r] = r;
                for (var s = 0; s < e; s++)
                    for (var l = 0; l < e - s - 1; l++) t[l] < t[l + 1] && (a = t[l], t[l] = t[l + 1], t[l + 1] = a, n = o[l], o[l] = o[l + 1], o[l + 1] = n);
                return o
            }, t.prototype.showLevelWinAni = function () {
                this.showIndex = this.checkCirList.length, this.showIndexList = this.getAniIndexList(), Laya.timer.clear(this, this.showCheckCirAni), Laya.timer.loop(150, this, this.showCheckCirAni)
            }, t.prototype.showCheckCirAni = function () {
                if (this.showIndex--, this.showIndex < 0) return Laya.timer.clear(this, this.showCheckCirAni), Laya.timer.clear(this, this.onWinAniFinished), void Laya.timer.once(600, this, this.onWinAniFinished);
                this.checkCirList[this.showIndexList[this.showIndex]][0].skin = "ui_game/tipcir.png", this.checkCirList[this.showIndexList[this.showIndex]][1].skin = "ui_game/tipcir.png", Laya.Tween.to(this.checkCirList[this.showIndexList[this.showIndex]][0], {
                    scaleX: 1.35,
                    scaleY: 1.35
                }, 600, Laya.Ease.elasticOut), Laya.Tween.to(this.checkCirList[this.showIndexList[this.showIndex]][1], {
                    scaleX: 1.35,
                    scaleY: 1.35
                }, 600, Laya.Ease.elasticOut)
            }, t.prototype.resetLevelUI = function () {
                if (this && this.checkCirList) {
                    for (var e = 0; e < this.checkCirList.length; e++) this.checkCirList[e][0].visible = !1, this.checkCirList[e][1].visible = !1, this.checkCirList[e][0].scaleX = 1, this.checkCirList[e][1].scaleX = 1, this.checkCirList[e][0].scaleY = 1, this.checkCirList[e][1].scaleY = 1, this.checkCirList[e][0].skin = "ui_game/checkcir.png", this.checkCirList[e][1].skin = "ui_game/checkcir.png", this.checkPointList[e].skin = "ui_game/point0.png";
                    this.tipBtn && (this.tipBtn.visible = !1), this.zhezhaoA && this.zhezhaoA.removeSelf(), this.zhezhaoB && this.zhezhaoB.removeSelf()
                }
            }, t.prototype.clearLevelRes = function () {
                d.default.instance.ClearLastLevel(d.default.instance.curTrackId)
            }, t.prototype.clearAllLevelRes = function () {}, t.prototype.onGameFailed = function () {
                Laya.timer.clear(this, this.updateGameTime), w.default.instance.removeUI(w.default.UI_Game), this.showGameResult(0)
            }, t.prototype.onGameRevive = function () {
                Laya.timer.clear(this, this.updateGameTime), w.default.instance.createUI(w.default.UI_Revive, {
                    isWin: !1,
                    gameTime: this.totalTime,
                    curPass: d.default.instance.curTrackId,
                    findUnComNum: this.checkCirList.length
                })
            }, t.prototype.getErrorNode = function () {
                for (var e = 0; e < this.errorNode.length; e++)
                    if (!this.errorNode[e].visible) return this.errorNode[e];
                var t = new Laya.Image("ui_game/error.png");
                return this.scene.addChild(t), this.errorNode.push(t), t
            }, t.prototype.getErrorTimeNode = function () {
                for (var e = 0; e < this.errorTimeNode.length; e++)
                    if (!this.errorTimeNode[e].visible) return this.errorTimeNode[e];
                var t = new Laya.Label("-" + this.errorTime);
                return t.color = "#ff0400", t.fontSize = 50, this.scene.addChild(t), this.errorTimeNode.push(t), t
            }, t.prototype.initGameCommonNode = function () {
                this.errorTimeNode = [], this.errorNode = [], this.checkCirList = [], this.checkPointList = [], this.checkPointPosList = [], this.scene.checkPointBox.removeChildren(), this.scene.checkPointBox.width = 260;
                for (var e = d.default.instance.curTrackId <= 3 ? 3 : 5, t = 0; t < 5; t++) {
                    var i = new Laya.Label("-" + this.errorTime);
                    i.color = "#ff0400", i.fontSize = 50, i.visible = !1, i.zOrder = 50, this.scene.addChild(i), this.errorTimeNode.push(i);
                    var a = new Laya.Image("ui_game/error.png");
                    a.visible = !1, a.zOrder = 50, this.scene.addChild(a), this.errorNode.push(a);
                    var n = new Laya.Image("ui_game/checkcir.png");
                    n.visible = !1, n.zOrder = 50, n.anchorX = .5, n.anchorY = .5, this.scene.addChild(n);
                    var o = f.default.CloneImage(n);
                    o.zOrder = 50, o.visible = !1, o.anchorX = .5, o.anchorY = .5, this.checkCirList[t] = [n, o];
                    var r = new Laya.Image("ui_game/point0.png");
                    r.anchorX = .5, r.anchorY = .5, r.x = 50 * t + 30 + 25 * (5 - e), r.y += 30, t >= e && (r.visible = !1), this.scene.checkPointBox.addChild(r);
                    var s = r.localToGlobal(new Laya.Point(.5 * r.width, .5 * r.height));
                    this.checkPointList.push(r), this.checkPointPosList.push(s)
                }
            }, t.prototype.drawRectInGame = function (e) {
                var t = new Laya.Sprite;
                Laya.stage.addChild(t), t.graphics.drawRect(e.x, e.y, e.width, e.height, "#ffff00")
            }, t.prototype.freshBackGround = function (e) {
                0 != e && (this.isFinsihGuide || (this.freshLightSize(e), this.GuidePosData = this.getGuidePosArr(e), e < 2 ? this.freshGuideArea() : this.guideContainer && (this.guideContainer.visible = !1, this.guideContainer.removeSelf(), this.guideContainer = null, this.isFinsihGuide = !0)))
            }, t.prototype.freshLightSize = function (e) {
                var t = this.calLightCircleRadius(e);
                this.guideClick && (this.guideClick.width = 2 * t.radius + 25, this.guideClick.height = 2 * t.radius + 25), this.guideOuterLight && (this.guideOuterLight.width = this.guideClick.width + 5, this.guideOuterLight.height = this.guideClick.height + 5), this.guideClickUp && (this.guideClickUp.width = 2 * t.radius + 25, this.guideClickUp.height = 2 * t.radius + 25), this.guideOuterLightUp && (this.guideOuterLightUp.width = this.guideClickUp.width + 5, this.guideOuterLightUp.height = this.guideClickUp.height + 5)
            }, t.prototype.drawBackGround = function (e) {
                this.isFinsihGuide || (this.GuidePosData = this.getGuidePosArr(e), this.DrawGuideArea())
            }, t.prototype.ClickUpPoint = function (e) {
                this.onClickPic(e)
            }, t.prototype.initTipGuideShow = function () {
                1 == d.default.instance.curTrackId ? this.setTipNodeData() : d.default.instance.curTrackId > 1 && (this.GuidePosData = this.getGuidePosArr(0), this.DrawGuideArea(), this.guideContainer && (this.guideContainer.zOrder = 50, this.guideContainer.visible = !1), this.tipNode && this.scene.removeChildByName("GuideClickTipsOld"), this.CreateLightsShow())
            }, t.prototype.CreateLightsShow = function () {
                for (var e, t, i, a = 0; a < 2; a++)(e = new Laya.Image("ui_game/outerLight.png")).anchorX = .5, e.anchorY = .5, e.zOrder = 50, e.visible = !1, (t = new Laya.Image("ui_game/innerLight.png")).anchorX = .5, t.anchorY = .5, t.zOrder = 50, t.visible = !1, (i = new Laya.Image("ui_game/GuideGameHand.png")).anchorX = .1, i.anchorY = .1, i.zOrder = 50, i.visible = !1, 0 == a ? (this.tipNode = e, this.innerLightTip = t, this.guideHandTip = i, this.scene.addChild(this.tipNode), this.scene.addChild(this.innerLightTip), this.scene.addChild(this.guideHandTip)) : 1 == a && (this.tipNodeUp = e, this.innerLightTipUp = t, this.guideHandTipUp = i, this.scene.addChild(this.tipNodeUp), this.scene.addChild(this.innerLightTipUp), this.scene.addChild(this.guideHandTipUp));
                this.tipNodeUp.on(Laya.Event.CLICK, this, this.ClickUpPointTips), this.isAlreadyLoadLight = !0
            }, t.prototype.setTipNodeData = function () {
                this.tipNode = new Laya.Image("ui_game/tipcir.png"), this.tipNode.visible = !1, this.tipNode.zOrder = 50, this.tipNode.anchorX = .5, this.tipNode.anchorY = .5, this.tipNode.name = "GuideClickTipsOld", this.scene.addChild(this.tipNode)
            }, t.prototype.changeLightState = function (e, t, i, a) {
                if (1 != d.default.instance.curTrackId) {
                    this.tipNode.x = e, this.tipNode.y = t, this.innerLightTip.x = e, this.innerLightTip.y = t, this.guideHandTip.x = e, this.guideHandTip.y = t, this.tipNodeUp.x = e, this.tipNodeUp.y = i, this.innerLightTipUp.x = e, this.innerLightTipUp.y = i, this.guideHandTipUp.x = e, this.guideHandTipUp.y = i;
                    var n = this.calLightCircleRadius(a),
                        o = 2 * n.radius + 25,
                        r = 2 * n.radius + 30;
                    this.innerLightTip.width = o, this.innerLightTip.height = o, this.tipNode.width = r, this.tipNode.height = r, this.innerLightTipUp.width = o, this.innerLightTipUp.height = o, this.tipNodeUp.width = r, this.tipNodeUp.height = r, this.GuidePosData = this.getGuidePosArr(a), this.freshGuideArea(), this.changeTipsLightShow(!0), this.showLightAni(), Laya.timer.clear(this, this.showLightAni), Laya.timer.loop(1500, this, this.showLightAni)
                }
            }, t.prototype.ClickUpPointTips = function (e) {
                console.log("tishitishi"), this.onClickPic(e)
            }, t.prototype.showLightAni = function () {
                var e = this;
                Laya.Tween.to(this.guideHandTip, {
                    scaleX: .8,
                    scaleY: .8
                }, 500, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(e.guideHandTip, {
                        scaleX: 1,
                        scaleY: 1
                    }, 500, null), e.innerLightTip.scaleX = .5, e.innerLightTip.scaleY = .5, e.innerLightTip.alpha = 1, e.innerLightTip.visible = !0, Laya.Tween.to(e.innerLightTip, {
                        scaleX: 1,
                        scaleY: 1
                    }, 500, null, Laya.Handler.create(e, function () {
                        Laya.Tween.to(e.innerLightTip, {
                            alpha: 0
                        }, 500, null)
                    }))
                })), Laya.Tween.to(this.guideHandTipUp, {
                    scaleX: .8,
                    scaleY: .8
                }, 500, null, Laya.Handler.create(this, function () {
                    Laya.Tween.to(e.guideHandTipUp, {
                        scaleX: 1,
                        scaleY: 1
                    }, 500, null), e.innerLightTipUp.scaleX = .5, e.innerLightTipUp.scaleY = .5, e.innerLightTipUp.alpha = 1, e.innerLightTipUp.visible = !0, Laya.Tween.to(e.innerLightTipUp, {
                        scaleX: 1,
                        scaleY: 1
                    }, 500, null, Laya.Handler.create(e, function () {
                        Laya.Tween.to(e.innerLightTipUp, {
                            alpha: 0
                        }, 500, null)
                    }))
                }))
            }, t.prototype.changeTipsLightShow = function (e) {
                1 != d.default.instance.curTrackId && (this.tipNode.visible = e, this.innerLightTip.visible = e, this.guideHandTip.visible = e, this.tipNodeUp.visible = e, this.innerLightTipUp.visible = e, this.guideHandTipUp.visible = e, this.guideContainer.visible = e, 0 == e && Laya.timer.clear(this, this.showLightAni))
            }, t.prototype.isAlreadyDrawLight = function () {
                1 != d.default.instance.curTrackId && (this.isAlreadyLoadLight || this.initTipGuideShow())
            }, t.prototype.freshGuideArea = function () {
                this.drawCircleArea()
            }, t.prototype.calLightCircleRadius = function (e) {
                for (var t = this.getGuidePosArr(e), i = 0; i < t.length; i++)
                    if ("circle" == t[i].type) return t[i]
            }, t.prototype.DrawGuideArea = function () {
                this.guideContainer = new Laya.Sprite, this.guideContainer.cacheAs = "bitmap", this.scene.addChild(this.guideContainer);
                var e = new Laya.Sprite;
                e.alpha = .6, e.graphics.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000"), this.guideContainer.addChild(e), this.hitArea = new Laya.HitArea, this.hitArea.hit.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000"), this.guideContainer.hitArea = this.hitArea, this.guideContainer.mouseEnabled = !0, this.drawCircleArea()
            }, t.prototype.drawCircleArea = function () {
                var e = this.GuidePosData;
                e && e.length < this.GuidePointNum && (this.GuidePointNum = e.length);
                for (var t = 0; t < 2; t++) this.guideContainer.removeChildByName("interactionArea");
                for (var i = 0; i < this.GuidePointNum; i++) {
                    var a = e[i];
                    if (this.hitArea = new Laya.HitArea, this.hitArea.hit.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000"), this.guideContainer.hitArea = this.hitArea, this.guideContainer.mouseEnabled = !0, this.interactionArea = new Laya.Sprite, this.interactionArea.blendMode = "destination-out", this.interactionArea.name = "interactionArea", this.guideContainer.addChild(this.interactionArea), this.interactionArea.graphics.clear(), this.hitArea.unHit.clear(), "circle" == a.type) {
                        var n = a.posX,
                            o = a.posY,
                            r = a.radius;
                        this.interactionArea.graphics.drawCircle(n, o, r, "#000000"), this.hitArea.unHit.drawCircle(n, o, r, "#000000")
                    }
                }
            }, t.prototype.getGuidePosArr = function (e) {
                var t, i = [],
                    a = {},
                    n = {},
                    o = e;
                if (!this.checkPosList || !this.checkPosList[o]) return i;
                var r = .5 * (this.checkPosList[o].x_left + this.checkPosList[o].x_right),
                    s = .5 * (this.checkPosList[o].y_Atop + this.checkPosList[o].y_Abottom),
                    l = .5 * (this.checkPosList[o].y_Btop + this.checkPosList[o].y_Bbottom),
                    c = Math.abs(Math.floor(this.checkPosList[o].x_right - this.checkPosList[o].x_left)),
                    h = Math.abs(Math.floor(this.checkPosList[o].y_Abottom - this.checkPosList[o].y_Atop)),
                    d = Math.max(c, h);
                return t = Math.floor(.5 * d), a = {
                    posX: r,
                    posY: s,
                    type: "circle",
                    radius: t
                }, n = {
                    posX: r,
                    posY: l,
                    type: "circle",
                    radius: t
                }, i.push(a), i.push(n), i
            }, t.prototype.initGameJcdlData = function () {
                this.levelFreshJcdlNum = this.GameConfig.LevelFreshJcdlNum, this.levelFreshJcdlList = this.GameConfig.LevelFreshJcdlList, this.jcdlConfigData = u.default.instance.dicConfig[p.default.QCfgType.JCDL], this.levelFreshJcdlNum || (this.levelFreshJcdlNum = 1), this.levelFreshJcdlList && this.levelFreshJcdlList.length || (this.levelFreshJcdlList = [1, 2, 3, 4, 5, 6]), this.judgeListBorder() ? (this.curJcdlListIndex = d.default.instance.getGameJcdlNum(), this.nextTargetLevelTotalNum = d.default.instance.getNextTargetNum(), this.finishLevelTotalNum = d.default.instance.getFinishLevelNum(), this.addFinishLevelToJcdl()) : this.showJcdlBanner(0)
            }, t.prototype.addFinishLevelToJcdl = function () {
                if (this.nextTargetLevelTotalNum == this.finishLevelTotalNum) {
                    d.default.instance.setNextTargetNum(this.nextTargetLevelTotalNum + this.levelFreshJcdlNum);
                    var e = this.curJcdlListIndex;
                    ((e += 1) < 0 || e >= this.levelFreshJcdlList.length) && (e = 0), d.default.instance.setGameJcdlNum(e);
                    var t = this.levelFreshJcdlList[this.curJcdlListIndex];
                    this.showJcdlBanner(t)
                } else {
                    0 == this.curJcdlListIndex ? this.curJcdlListIndex = this.levelFreshJcdlList.length - 1 : this.curJcdlListIndex -= 1;
                    var i = this.levelFreshJcdlList[this.curJcdlListIndex];
                    this.showJcdlBanner(i)
                }
                d.default.instance.setFinishLevelNum(this.finishLevelTotalNum + 1)
            }, t.prototype.judgeListBorder = function () {
                for (var e = 0; e < this.levelFreshJcdlList.length; e++)
                    if (this.levelFreshJcdlList[e] < 0 || this.levelFreshJcdlList[e] >= this.jcdlConfigData.length) return !1;
                return !0
            }, t.prototype.showJcdlBanner = function (e) {}, t.prototype.onClickBtnJcdlIconByGame = function (e) {
                var t = this.jcdlConfigData[e].toappid;
                v.default.instance.clickAdIcon(t), f.default.biReport(y.default.JCDLClick, [t]), f.default.biReport(y.default.jcdl5)
            }, t.prototype.freshShowPos = function () {}, t.prototype.beginGameRecorder = function () {
                this.isLoadRecorder = !0, this.scene.addChild(this.scene.backGround), this.scene.addChild(this.scene.recorderDialog), this.scene.backGround.zOrder = 110, this.scene.recorderDialog.zOrder = 110, this.isConformVersion() && (this.scene.ShareVideoBtn.on(Laya.Event.CLICK, this, this.clickShowRecorderDialog), this.scene.backGround.on(Laya.Event.CLICK, this, this.closeRecorderDialog), v.default.instance.abortGameRecorder(), v.default.instance.initGameRecorder(), v.default.instance.JudgeIsCanRecorder() && (v.default.instance.startGameRecorder(), Laya.timer.once(1e3 * this.showShareBtnTime, this, function () {
                    this.scene.ShareVideoBtn.visible = !0
                })))
            }, t.prototype.clickShowRecorderDialog = function () {
                this.game_state_current < 3 && this.onChangeGameState(this.game_state.game_stop), v.default.instance.stopGameRecorder(), this.scene.backGround.visible = !0, this.scene.recorderDialog.visible = !0, v.default.instance.createRecorderShareButton(), v.default.instance.showRecorderButton(), this.isStopRecorder = !0
            }, t.prototype.closeRecorderDialog = function () {
                this.game_state_current < 3 && this.onChangeGameState(this.game_state.game_continue), this.scene.backGround.visible = !1, this.scene.recorderDialog.visible = !1, v.default.instance.hideRecorderButton()
            }, t.prototype.hideRecorderScene = function () {
                this.scene.backGround.visible = !1, this.scene.recorderDialog.visible = !1, v.default.instance.hideRecorderButton()
            }, t.prototype.isConformVersion = function () {
                return f.default.compareVersion(tywx.UserInfo.sdkVersion, "2.8.0")
            }, t
        }(h.default), o.QGameView = r, i.default = a.view.QGameView
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QSequence": 8,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QResMgr": 17,
        "../core/QSoundMgr": 18,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    48: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../core/QUIMgr"),
            h = e("../../framework/QUtil"),
            d = e("../data/QGameData"),
            p = e("../core/QWxSDK"),
            u = e("../../framework/QEventMgr"),
            g = e("../data/QEventType"),
            m = (e("../../framework/QDebug"), e("../data/QBIEvent"));
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.curTime = 0, t.needLevelTime = 10, t.state = 0, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                u.default.instance.register(g.default.GZH_LEVEL_GAME, this.refreshAwardBtnState, this), u.default.instance.register(g.default.AUTHORIZE_SUCCESS, this.onAuthorizeSuc, this), u.default.instance.register(g.default.REFRESH_WELFARE_STATE, this.refreshAwardState, this)
            }, t.prototype.unregisterEvent = function () {
                u.default.instance.unregister(g.default.GZH_LEVEL_GAME, this.refreshAwardBtnState, this), u.default.instance.unregister(g.default.AUTHORIZE_SUCCESS, this.onAuthorizeSuc, this), u.default.instance.unregister(g.default.REFRESH_WELFARE_STATE, this.refreshAwardState, this)
            }, t.prototype.init = function () {
                this.scene = new l.ui.view.GongZhongHaoDialogUI, d.default.instance.isOpenGZHDialog = !0, h.default.biReport(m.default.openGZHDialog), this.needLevelTime = 1e3 * d.default.instance.needLevelGameTime, d.default.instance.setIsClickBtnGongZhongHao(), 0 == d.default.instance.isGetGZHAward && 2 == d.default.instance.gzhSchemeType && p.default.instance.tryGetUserInfo(), console.log("gzhSchemeType:" + d.default.instance.gzhSchemeType + " isGetGZHAward : " + d.default.instance.isGetGZHAward), this.scene.lblGetText.text = "领取", 0 == d.default.instance.isGetGZHAward && (d.default.instance.attentionGZHFailTimes, d.default.instance.attentionGZHFailTimesCfg), 0 == d.default.instance.isGetGZHAward && d.default.instance.isGetPlayerUserInfoSuccess, d.default.instance.gzhSchemeType, console.log("策略：" + d.default.instance.gzhSchemeType + "isGetGZHAward:" + d.default.instance.isGetGZHAward + "isGetPlayerUserInfoSuccess:" + d.default.instance.isGetPlayerUserInfoSuccess), h.default.doUIPopAnim(this.scene.AnchorCenter), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), h.default.RegisterBtnClickWithAnim(this.scene.btnGet, this, this.onClickBtnGet), this.scene.btnGet.visible = !0
            }, t.prototype.refreshAwardState = function () {
                switch (this.state = d.default.instance.getWelfareState("gongzhonghao"), this.state) {
                    case 0:
                        break;
                    case 1:
                        c.default.instance.removeUI(c.default.UI_GongZhongHao)
                }
            }, t.prototype.refreshAwardBtnState = function () {
                if (console.log("策略：" + d.default.instance.gzhSchemeType + "isGetGZHAward:" + d.default.instance.isGetGZHAward + "isGetPlayerUserInfoSuccess:" + d.default.instance.isGetPlayerUserInfoSuccess), 1 == d.default.instance.gzhSchemeType) {
                    console.log(" fakeShareLeaveGameTime : " + d.default.instance.levelGameTime);
                    var e = Date.parse((new Date).toString());
                    console.log(" curTime : " + Date.parse((new Date).toString()) + " fakeShareLeaveGameTime : " + d.default.instance.levelGameTime + " this.needLevelTime : " + this.needLevelTime), (e - d.default.instance.levelGameTime >= this.needLevelTime || d.default.instance.attentionGZHFailTimes >= d.default.instance.attentionGZHFailTimesCfg) && 0 == d.default.instance.isGetGZHAward ? d.default.instance.setIsGetGZHAward(1) : d.default.instance.setAttentionGZHFailTimes()
                } else 2 == d.default.instance.gzhSchemeType && (1 == d.default.instance.isGetGZHAward || 0 == d.default.instance.isGetGZHAward && d.default.instance.isGetPlayerUserInfoSuccess)
            }, t.prototype.onClickBtnGet = function () {
                p.default.instance.openCustomerServiceConversation(1)
            }, t.prototype.onClickBtnClose = function () {
                c.default.instance.removeUI(c.default.UI_GongZhongHao)
            }, t.prototype.doDestroy = function () {
                d.default.instance.isOpenGZHDialog = !1, p.default.instance.destroyGetUserInfoBtn()
            }, t.prototype.onAuthorizeSuc = function (e) {
                console.log("授权成功回调"), this.refreshAwardBtnState(), 0 == e && p.default.instance.openCustomerServiceConversation(1)
            }, t
        }(s.default), o.QGongZhongHaoDialog = r, i.default = a.view.QGongZhongHaoDialog
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameData": 25
    }],
    49: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o = e("../../ui/layaMaxUI"),
            r = e("../core/QBaseUI"),
            s = e("../core/QUIMgr"),
            l = (e("../../framework/QDebug"), e("../core/QWxSDK")),
            c = e("../data/QGameData"),
            h = e("../../framework/QEventMgr"),
            d = e("../data/QEventType"),
            p = e("../../framework/QUtil"),
            u = e("../data/QBIEvent");
        n = a || (a = {}),
            function (e) {
                var t = function () {
                    function e() {}
                    return Object.defineProperty(e, "deltaY", {
                        get: function () {
                            return this.deltaYValue
                        },
                        set: function (e) {
                            this.deltaYValue = e, l.default.instance.sendMsgToSub(JSON.stringify({
                                tag: "InviteListScroll",
                                deltaY: e,
                                key: "Invite"
                            }))
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e
                }();
                e.ScrollInfo = t;
                var i = function (e) {
                    function i() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.isControl = !1, t.distance = 0, t.invitedCount = 0, t
                    }
                    return __extends(i, e), i.prototype.registerEvent = function () {
                        tywx.NotificationCenter.listen(tywx.EventType.INTERACTVESTORAGE_REFRESH_SUCCESS, this.updateInvitedCount, this), h.default.instance.register(d.default.UPDATE_INVITED_BOX, this.checkBoxState, this)
                    }, i.prototype.unregisterEvent = function () {
                        tywx.NotificationCenter.ignoreScope(this), h.default.instance.unregister(d.default.UPDATE_INVITED_BOX, this.checkBoxState, this)
                    }, i.prototype.init = function () {
                        p.default.biReport(u.default.showInviteFriendBox), tywx.TuyooSDK.initUserInteractiveStorage(), this.scene = new o.ui.view.InviteFriendBoxDialogUI, p.default.doUIPopAnim(this.scene.AnchorCenter), this.scene.btnClose.visible = !0, this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), this.scene.InvitePointNum.text = c.default.instance.InviteBoxCycleNum + "", this.scene.InviteTotalNum.text = c.default.instance.InviteTotalNum + "", this.checkBoxState(), this.scene.sprOpenDataViewByInvite.on(Laya.Event.MOUSE_DOWN, this, this.onSprOpenDataByInviteDown), this.scene.sprOpenDataViewByInvite.on(Laya.Event.MOUSE_MOVE, this, this.onSprOpenDataByInviteDrag), this.scene.sprOpenDataViewByInvite.on(Laya.Event.MOUSE_UP, this, this.onSprOpenDataByInviteUp), this.scene.sprOpenDataViewByInvite.on(Laya.Event.CLICK, this, this.onSprOpenDataClick), this.scene.dynamicBox.on(Laya.Event.CLICK, this, this.clickDrawBox), this.scene.sprOpenDataViewByInvite.disabled = !1, this.showInvitePlayerList(), Laya.Browser.window.wx.setMessageToFriendQuery && Laya.Browser.window.wx.setMessageToFriendQuery({
                            shareMessageToFriendScene: 1
                        })
                    }, i.prototype.onSprOpenDataClick = function (e) {
                        console.log("邀请界面点击 x:" + e.stageX + " y:" + e.stageY), p.default.biReport(u.default.onClickInviteFriend);
                        var t = this.scene.sprOpenDataViewByInvite.localToGlobal(new Laya.Point(0, 0));
                        l.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "clickInviteList",
                            point: {
                                x: e.stageX - t.x,
                                y: e.stageY - t.y
                            }
                        }))
                    }, i.prototype.updateInvitedCount = function () {
                        if (tywx.TuyooSDK.UserInteractiveInfo)
                            for (var e = 0; e < tywx.TuyooSDK.UserInteractiveInfo.length; e++) "1" == tywx.TuyooSDK.UserInteractiveInfo[e].key && (this.invitedCount = tywx.TuyooSDK.UserInteractiveInfo[e].value, this.scene.InviteTotalNum.text = this.invitedCount + "", console.log("检测宝箱状态 :" + this.invitedCount), c.default.instance.checkIsCanAddBox(this.invitedCount))
                    }, i.prototype.clickDrawBox = function () {
                        p.default.biReport(u.default.getInviteFriendReward), c.default.instance.InviteBoxState = 0, console.log("宝箱开启 invitedCount：" + this.invitedCount + " boxcount:" + c.default.instance.InviteBoxTimes), s.default.instance.createUI(s.default.UI_InvitePlayerRewardDialog, {
                            from: "Invite",
                            type: null
                        }), c.default.instance.changeInviteBoxTimes(1), c.default.instance.checkIsCanAddBox(this.invitedCount)
                    }, i.prototype.checkBoxState = function () {
                        console.log("检查宝箱状态 InviteBoxState：" + c.default.instance.InviteBoxState), c.default.instance.InviteBoxState ? this.freshBoxState("OPEN") : this.freshBoxState("CLOSE")
                    }, i.prototype.freshBoxState = function (e) {
                        console.log("宝箱开启状态 state：" + e);
                        var t = "OPEN" == e;
                        this.scene.staticBox.visible = !t, this.scene.dynamicBox.visible = t, this.scene.backLight.visible = t, this.scene.BoxLightAnimation.visible = t, t ? this.scene.OpenBoxAni.play(0, !0) : this.scene.OpenBoxAni.gotoAndStop(0)
                    }, i.prototype.onClickBtnClose = function () {
                        h.default.instance.sendEvent(d.default.FRESH_INVITE_RED_STATE), s.default.instance.removeUI(s.default.UI_InviteFriendBoxDialog), l.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "clearCanvas"
                        }))
                    }, i.prototype.doDestroy = function () {
                        this.scene.sprOpenDataViewByInvite.disabled = !0, p.default.isNullOrEmpty(this.scene.sprOpenDataViewByInvite.texture) || p.default.isNullOrEmpty(this.scene.sprOpenDataViewByInvite.texture.bitmap) || (this.scene.sprOpenDataViewByInvite.texture.bitmap.destroy(), this.scene.sprOpenDataViewByInvite.destroy()), tywx.TuyooSDK.initUserInteractiveStorage()
                    }, i.prototype.showInvitePlayerList = function () {
                        l.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "ShowInviteList",
                            type: 1,
                            key: "Invite",
                            shareTicket: ""
                        }))
                    }, i.prototype.onSprOpenDataByInviteDown = function (e) {
                        this.isControl = !0, this.controlStartY = e.stageY
                    }, i.prototype.onSprOpenDataByInviteDrag = function (e) {
                        if (this.isControl) {
                            var t = e.stageY;
                            this.distance = t - this.controlStartY, this.controlStartY = t, this.scrollRankList(this.distance)
                        }
                    }, i.prototype.onSprOpenDataByInviteUp = function (e) {
                        t.deltaY = this.distance, Laya.Tween.to(t, {
                            deltaY: 0
                        }, 1e3, Laya.Ease.strongOut), this.isControl = !1, this.controlStartY = null
                    }, i.prototype.scrollRankList = function (e) {
                        l.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "InviteListScroll",
                            deltaY: e,
                            key: "Invite"
                        }))
                    }, i
                }(r.default);
                e.QInviteFriendBoxDialog = i
            }(n.view || (n.view = {})), i.default = a.view.QInviteFriendBoxDialog
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameData": 25
    }],
    50: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../data/QGameData"),
            h = e("../data/QGameConst"),
            d = e("../logic/QShareParam"),
            p = e("../core/QWxSDK"),
            u = e("../../framework/QUtil"),
            g = e("../core/QUIMgr");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.ConfigAward = null, t.NodePosList = null, t.RankConfigAward = null, t.rewardParams = {}, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {}, t.prototype.unregisterEvent = function () {}, t.prototype.init = function () {
                this.scene = new l.ui.view.InvitePlayerRewardDialogUI, u.default.RegisterBtnClickWithAnim(this.scene.GainBtn, this, this.onClickBtnAward), u.default.RegisterBtnClickWithAnim(this.scene.ThanksBtn, this, this.onClickThanksBtn), u.default.doUIPopAnim(this.scene.AnchorCenter), this.scene.flashAni.play(0, !0)
            }, t.prototype.setParam = function (e) {
                this.param = e, this.NodePosList = {
                    Single: {
                        DiaImage: {
                            X: 385,
                            Y: 576
                        },
                        DiaLabel: {
                            X: 485,
                            Y: 674
                        },
                        StaImage: {
                            X: 367,
                            Y: 629
                        },
                        StaLabel: {
                            X: 438,
                            Y: 687
                        }
                    },
                    Double: {
                        LeftImage: {
                            X: 194,
                            Y: 628
                        },
                        LeftLabel: {
                            X: 259,
                            Y: 687
                        },
                        RightImage: {
                            X: 519,
                            Y: 600
                        },
                        RightLabel: {
                            X: 619,
                            Y: 687
                        }
                    }
                };
                var t = "";
                this.param && "Invite" == this.param.from && (t = "Invite", this.InitInviteReward()), this.param && "Rank" == this.param.from && (t = "Rank", this.InitGiftRankReward()), this.ChangeView(t)
            }, t.prototype.ChangeView = function (e) {
                e ? "Invite" == e ? (this.scene.ThanksBtn.visible = !1, this.scene.GainBtn.x = 369, this.scene.GainBtn.y = 1031) : "Rank" == e && (this.scene.ThanksBtn.visible = !0, this.scene.GainBtn.x = 369, this.scene.GainBtn.y = 1118) : this.scene.ThanksBtn.visible = !1
            }, t.prototype.InitGiftRankReward = function () {
                this.RankConfigAward = this.param.rewardParams, !this.RankConfigAward || this.RankConfigAward.length, 1 == this.RankConfigAward.length && this.AwardShowByNode("Single", "Rank"), 2 == this.RankConfigAward.length && this.AwardShowByNode("Double", "Rank")
            }, t.prototype.freshAwardDataByRank = function (e) {
                if ("Single" == e) "Diamond" == this.RankConfigAward[0].Type ? (this.setNodePosCommon("Single", "Diamond"), this.changeLabelNum("Single", "Diamond", this.RankConfigAward[0].Count), this.addAwardNum("Diamond", this.RankConfigAward[0].Count), this.HidePointNode("Stamina")) : "Stamina" == this.RankConfigAward[0].Type && (this.setNodePosCommon("Single", "Stamina"), this.changeLabelNum("Single", "Stamina", this.RankConfigAward[0].Count), this.addAwardNum("Stamina", this.RankConfigAward[0].Count), this.HidePointNode("Diamond"));
                else if ("Double" == e) {
                    var t = "" + this.RankConfigAward[0].Type,
                        i = this.RankConfigAward[0].Count,
                        a = "" + this.RankConfigAward[1].Type,
                        n = this.RankConfigAward[1].Count;
                    this.setNodePosCommon("Double"), this.changeLabelNum("Double", t, i, n), this.addAwardNum(t, i, a, n)
                } else "DataError" == e && (this.setNodePosCommon("Single", "Stamina"), this.changeLabelNum("Single", "Stamina", 1), this.addAwardNum("Stamina", 1), this.HidePointNode("Diamond"))
            }, t.prototype.onClickThanksBtn = function () {
                c.default.instance.isNoVideoAuditVersion ? this.shareSuccessHandle() : (this.shareValue = d.default.create(), "Diamond" == this.RankConfigAward[0].Type ? this.shareValue.shareType = h.default.QShareType.songzuanshi : "Stamina" == this.RankConfigAward[0].Type && (this.shareValue.shareType = h.default.QShareType.songtili), p.default.instance.fakeShare(this.shareValue, this, function (e) {
                    e.shareSuccessHandle()
                }, [this]))
            }, t.prototype.shareSuccessHandle = function () {
                this.onClickBtnAward()
            }, t.prototype.InitInviteReward = function () {
                this.ConfigAward = c.default.instance.InviteByBoxAward, this.ConfigAward && 0 != this.ConfigAward.length || this.AwardShowByNode("Double", "Panel", !0), 1 == this.ConfigAward.length && this.AwardShowByNode("Single", "Panel"), 2 == this.ConfigAward.length && this.AwardShowByNode("Double", "Panel")
            }, t.prototype.freshAwardDataByPanel = function (e) {
                if ("Single" == e) "Diamond" == this.ConfigAward[0].Type ? (this.setNodePosCommon("Single", "Diamond"), this.changeLabelNum("Single", "Diamond", this.ConfigAward[0].Count), this.addAwardNum("Diamond", this.ConfigAward[0].Count), this.HidePointNode("Stamina")) : "Stamina" == this.ConfigAward[0].Type && (this.setNodePosCommon("Single", "Stamina"), this.changeLabelNum("Single", "Stamina", this.ConfigAward[0].Count), this.addAwardNum("Stamina", this.ConfigAward[0].Count), this.HidePointNode("Diamond"));
                else if ("Double" == e) {
                    var t = "" + this.ConfigAward[0].Type,
                        i = this.ConfigAward[0].Count,
                        a = "" + this.ConfigAward[1].Type,
                        n = this.ConfigAward[1].Count;
                    this.setNodePosCommon("Double"), this.changeLabelNum("Double", t, i, n), this.addAwardNum(t, i, a, n)
                } else "DataError" == e && (this.setNodePosCommon("Double"), this.changeLabelNum("Double", "Diamond", 5, 5), this.addAwardNum("Diamond", 5, "Stamina", 5))
            }, t.prototype.HidePointNode = function (e) {
                "Diamond" == e ? (this.scene.diamondImage.visible = !1, this.scene.diamondCount.visible = !1) : "Stamina" == e && (this.scene.staminaImage.visible = !1, this.scene.staminaCount.visible = !1)
            }, t.prototype.AwardShowByNode = function (e, t, i) {
                void 0 === i && (i = !1), i ? "Panel" == t ? this.freshAwardDataByPanel("DataError") : "Rank" == t && this.freshAwardDataByRank("DataError") : "Single" == e ? "Panel" == t ? this.freshAwardDataByPanel("Single") : "Rank" == t && this.freshAwardDataByRank("Single") : "Double" == e && ("Panel" == t ? this.freshAwardDataByPanel("Double") : "Rank" == t && this.freshAwardDataByRank("Double"))
            }, t.prototype.addAwardNum = function (e, t, i, a) {
                void 0 === i && (i = ""), void 0 === a && (a = 0);
                var n = 0,
                    o = 0;
                "Diamond" == e && t > 0 ? (n = t, i && "Stamina" == i && a > 0 && (o = a)) : "Stamina" == e && t > 0 && (o = t, i && "Diamond" == i && a > 0 && (n = a)), o > 0 && c.default.instance.addStamina(o, !1), n > 0 && c.default.instance.addDiamond(n, !1)
            }, t.prototype.changeLabelNum = function (e, t, i, a) {
                void 0 === i && (i = 0), void 0 === a && (a = 0);
                var n = "",
                    o = "";
                "Single" == e ? n = "x" + i : "Double" == e && (n = "x" + i, o = "x" + a), "Single" == e ? "Diamond" == t ? this.scene.diamondCount.text = n : "Stamina" == t && (this.scene.staminaCount.text = n) : "Double" == e && ("Diamond" == t ? (this.scene.diamondCount.text = n, this.scene.staminaCount.text = o) : "Stamina" == t && (this.scene.diamondCount.text = o, this.scene.staminaCount.text = n))
            }, t.prototype.setNodePosCommon = function (e, t) {
                void 0 === t && (t = ""), "Single" == e ? "Diamond" == t ? (this.scene.diamondImage.x = this.NodePosList.Single.DiaImage.X, this.scene.diamondImage.y = this.NodePosList.Single.DiaImage.Y, this.scene.diamondCount.x = this.NodePosList.Single.DiaLabel.X, this.scene.diamondCount.y = this.NodePosList.Single.DiaLabel.Y) : "Stamina" == t && (this.scene.staminaImage.x = this.NodePosList.Single.StaImage.X, this.scene.staminaImage.y = this.NodePosList.Single.StaImage.Y, this.scene.staminaCount.x = this.NodePosList.Single.StaLabel.X, this.scene.staminaCount.y = this.NodePosList.Single.StaLabel.Y) : "Double" == e && (this.scene.diamondImage.x = this.NodePosList.Double.RightImage.X, this.scene.diamondImage.y = this.NodePosList.Double.RightImage.Y, this.scene.diamondCount.x = this.NodePosList.Double.RightLabel.X, this.scene.diamondCount.y = this.NodePosList.Double.RightLabel.Y, this.scene.staminaImage.x = this.NodePosList.Double.LeftImage.X, this.scene.staminaImage.y = this.NodePosList.Double.LeftImage.Y, this.scene.staminaCount.x = this.NodePosList.Double.LeftLabel.X, this.scene.staminaCount.y = this.NodePosList.Double.LeftLabel.Y)
            }, t.prototype.onClickBtnAward = function () {
                g.default.instance.removeUI(g.default.UI_InvitePlayerRewardDialog)
            }, t.prototype.doDestroy = function () {}, t
        }(s.default), o.QInvitePlayerRewardDialog = r, i.default = a.view.QInvitePlayerRewardDialog
    }, {
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    51: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../framework/QUtil"),
            c = e("../../framework/QEventMgr"),
            h = e("../data/QEventType"),
            d = e("../data/QBIEvent"),
            p = e("../../ui/layaMaxUI"),
            u = e("../core/QCfgMgr"),
            g = e("../data/QGameConst"),
            m = e("../core/QWxSDK"),
            f = e("../core/QUIMgr");
        e("../../framework/QDebug");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.showJcdlCfg = [], t.jcdlType = 0, t.controlStartX = 0, t.controlStartY = 0, t.controlEndX = 0, t.controlEndY = 0, t.value = 0, t.slideTime = 0, t.stopTime = 2500, t.maxValue = 0, t.sliderSpeed = 20, t.jcdlX = 0, t.jcdlY = 0, t.jcdlSingleIndexArr = [], t.noShowJcdl = 0, t.showJcdl = 1, t.noShowRedDot = 0, t.showRedDot = 1, t.pageJcdlPopupX = 0, t.mouseIsLeaveScreen = !0, t.isShowBannerJcdl = !1, t.jcdlRightIndexArr = [], t.endChooseBannerJcdlIndex = 0, t.buyFlowsjcdlType = 0, t.curJcdlIndex = 0, t.curOneTypeIndex = 0, t.curTwoTypeIndex = 0, t.curThreeTypeIndex = 0, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                c.default.instance.register(h.default.RANK_CHANGE_JCDL_SHOW, this.changeJcdlShowByRankList, this)
            }, t.prototype.unregisterEvent = function () {
                c.default.instance.unregister(h.default.RANK_CHANGE_JCDL_SHOW, this.changeJcdlShowByRankList, this)
            }, t.create = function (e) {
                void 0 === e && (e = null), l.default.isNullOrEmpty(this.jcdlView) && (this.jcdlView = new t(f.default.UI_JCDL), this.jcdlView.start(), this.jcdlView.iconTimestamp = Math.sqrt(Math.random()));
                var i = this.jcdlView.scene;
                i.visible = !0, l.default.isNullOrEmpty(e) ? Laya.stage.addChild(i) : e.addChild(i), this.jcdlView.setParam()
            }, t.showSlideListJcdl = function () {
                this.jcdlView.jcdlType = this.JcdlSliderType, this.jcdlView.initSlideListJcdl()
            }, t.showPageJcdl = function (e) {
                this.jcdlView.jcdlType = this.JcdlPageType, this.jcdlView.jcdlY = e.jcdlY, this.jcdlView.initPageListJcdl()
            }, t.showSingleJcdl = function (e) {
                this.jcdlView.jcdlType = this.JcdlSingleType;
                for (var t = 0; t < e.length; t++) this.jcdlView.jcdlSingleIndexArr.push(0), this.jcdlView.initSineleJcdl(e[t], t)
            }, t.showRightJcdl = function () {
                this.jcdlView.jcdlType = this.JcdlSingleType, this.jcdlView.initRightJcdl()
            }, t.showBannerJcdl = function () {
                this.jcdlView.initBannerJcdl()
            }, t.showBuyFlowsJcdl = function () {
                this.jcdlView.initBuyFlowsJcdl()
            }, t.remove = function () {
                l.default.isNullOrEmpty(this.jcdlView) || (this.jcdlView.scene.visible = !1, this.jcdlView.scene.removeSelf(), this.jcdlView.doDestroy())
            }, t.prototype.init = function () {
                this.scene = new p.ui.view.JcdTypelViewUI, this.jcdlCfg = u.default.instance.dicConfig[g.default.QCfgType.JCDL], this.gameConfig = u.default.instance.dicConfig[g.default.QCfgType.GameConfig];
                for (var e = 0; e < this.jcdlCfg.length; e++) this.jcdlCfg[e].is_show == this.showJcdl && this.showJcdlCfg.push(this.jcdlCfg[e])
            }, t.prototype.setParam = function () {
                this.scene.JcdlBannerBox.visible = !1, this.scene.JcdlSlideBox.visible = !1, this.scene.JcdlPageBox.visible = !1, this.scene.JcdlSingleBox.visible = !1, this.scene.JcdlRightBox.visible = !1
            }, t.prototype.initSlideListJcdl = function () {
                this.scene.JcdlSlideBox.visible = !0, Laya.Tween.clearTween(this.scene.JcdlSlideBox), this.scene.slideBoxInner.y = 1480, Laya.Tween.to(this.scene.slideBoxInner, {
                    y: 1334
                }, 500, Laya.Ease.linearOut), this.scene.listJcdl.hScrollBarSkin = "", this.scene.listJcdl.renderHandler = new Laya.Handler(this, this.slideListJcdlHandle), this.scene.listJcdl.array = this.showJcdlCfg, this.maxValue = this.scene.listJcdl.scrollBar.max, this.slideTime = this.maxValue * this.sliderSpeed, this.scene.listJcdl.on(Laya.Event.MOUSE_DOWN, this, this.onClickSlideListJcdlDown), this.scene.listJcdl.on(Laya.Event.MOUSE_UP, this, this.onClickSlideListJcdlUp), this.showJcdlCfg.length > 5 && Laya.timer.once(this.stopTime, this, this.slideListJcdlRightAni), 2 == tywx.UserInfo.systemType ? (l.default.isNullOrEmpty(this.defaultListJcdlY) && (this.defaultListBgY = this.scene.listBg.y, this.defaultListJcdlY = this.scene.listJcdl.y), this.scene.listBg.y = this.defaultListBgY - 20, this.scene.listJcdl.y = this.defaultListJcdlY - 20, this.scene.imgTitle.y = -12) : this.scene.imgTitle.y = 8
            }, t.prototype.onClickSlideListJcdlDown = function (e) {
                var t = this;
                this.controlStartX = e.stageX, this.controlStartY = e.stageY, Laya.timer.clearAll(this), Laya.timer.once(this.stopTime, this, function () {
                    if (t.mouseIsLeaveScreen) {
                        var e = t.scene.listJcdl.scrollBar.value;
                        if (e > .5 * t.maxValue) i = t.sliderSpeed * e, t.slideListJcdlLeftAni(i);
                        else {
                            var i = t.sliderSpeed * (t.maxValue - e);
                            t.slideListJcdlRightAni(i)
                        }
                    }
                })
            }, t.prototype.onClickSlideListJcdlUp = function (e) {
                this.mouseIsLeaveScreen = !1, this.controlEndX = e.stageX, this.controlEndY = e.stageY;
                var t = this.scene.listJcdl.scrollBar.value;
                if (this.controlStartX - this.controlEndX > 10) i = this.sliderSpeed * t, Laya.timer.once(this.stopTime, this, this.slideListJcdlLeftAni, [i]);
                else {
                    var i = this.sliderSpeed * (this.maxValue - t);
                    Laya.timer.once(this.stopTime, this, this.slideListJcdlRightAni, [i])
                }
            }, t.prototype.slideListJcdlRightAni = function (e) {
                void 0 === e && (e = this.slideTime), this.maxValue, this.scene.listJcdl.scrollBar.value, Laya.Tween.to(this.scene.listJcdl.scrollBar, {
                    value: this.maxValue
                }, e, Laya.Ease.linearInOut), Laya.timer.once(e + this.stopTime, this, this.slideListJcdlLeftAni)
            }, t.prototype.slideListJcdlLeftAni = function (e) {
                void 0 === e && (e = this.slideTime), Laya.Tween.to(this.scene.listJcdl.scrollBar, {
                    value: 0
                }, e, Laya.Ease.linearInOut), Laya.timer.once(e + this.stopTime, this, this.slideListJcdlRightAni)
            }, t.prototype.slideListJcdlHandle = function (e, t) {
                this.value = this.scene.listJcdl.scrollBar.value;
                var i = e.getChildByName("imgIcon"),
                    a = e.getChildByName("lblJcdlName"),
                    n = e.getChildByName("imgHintRedDot"),
                    o = i.getChildByName("imgJcdlIcon");
                o.skin = this.showJcdlCfg[t].icon_url[0] + "?v=" + this.iconTimestamp, a.text = this.showJcdlCfg[t].gameName;
                var r = this.showJcdlCfg[t].red_point == this.showRedDot;
                n.visible = r;
                var s = this.showJcdlCfg[t].toappid;
                l.default.biReport(d.default.JCDLShow, [s]), o.off(Laya.Event.CLICK, this, this.onClickBtnJcdlIcon, [
                    [t]
                ]), o.on(Laya.Event.CLICK, this, this.onClickBtnJcdlIcon, [
                    [t]
                ])
            }, t.prototype.initPageListJcdl = function () {
                this.scene.JcdlPageBox.visible = !0, this.scene.listPageJcdl.hScrollBarSkin = "", this.scene.listPageJcdl.renderHandler = new Laya.Handler(this, this.pageListJcdlHandle), this.scene.listPageJcdl.array = this.showJcdlCfg, this.pageJcdlPopupX = -this.scene.pageJcdl.width, this.scene.pageJcdl.x = this.pageJcdlPopupX, this.scene.pageJcdl.y = this.jcdlY, this.scene.btnShowJcdl.skin = "ui_common2/jcdl_chulai.png", this.scene.btnShowJcdl.on(Laya.Event.CLICK, this, this.onClickBtnShowJcdl)
            }, t.prototype.onClickBtnShowJcdl = function () {
                var e = this;
                this.scene.pageJcdl.x == this.pageJcdlPopupX ? Laya.Tween.to(this.scene.pageJcdl, {
                    x: 0
                }, 500, Laya.Ease.linearInOut, new Laya.Handler(this, function () {
                    e.scene.btnShowJcdl.skin = "ui_common2/jdcl_jinqu.png"
                })) : 0 == this.scene.pageJcdl.x && Laya.Tween.to(this.scene.pageJcdl, {
                    x: this.pageJcdlPopupX
                }, 500, Laya.Ease.linearInOut, new Laya.Handler(this, function () {
                    e.scene.btnShowJcdl.skin = "ui_common2/jcdl_chulai.png"
                }))
            }, t.prototype.pageListJcdlHandle = function (e, i) {
                var a = e.getChildByName("imgListJcdlIcon"),
                    n = e.getChildByName("lblListJcdlIcon");
                a.skin = this.showJcdlCfg[i].icon_url[0] + "?v=" + this.iconTimestamp, n.changeText(this.showJcdlCfg[i].gameName);
                var o = this.showJcdlCfg[i].toappid;
                l.default.biReport(d.default.JCDLShow, [o]), a.on(Laya.Event.CLICK, this, this.onClickBtnJcdlIcon, [
                    [i, t.JcdlPageType]
                ])
            }, t.prototype.initRightJcdl = function () {
                for (var e = 0; e < this.gameConfig.RightJcdlShow.length; e++) this.jcdlRightIndexArr.push(0), this.JcdlRightInfo(e), this.gameConfig.RightJcdlShow[e].length > 1 && Laya.timer.loop(1e3 * this.gameConfig.SineleJcdlShowTime, this, this.JcdlRightInfo, [e], !1);
                this.scene.JcdlRightBox.visible = !0, Laya.Tween.clearTween(this.scene.JcdlRightBox), this.scene.RightBox.x = 888, Laya.Tween.to(this.scene.RightBox, {
                    x: 750
                }, 500, Laya.Ease.linearOut)
            }, t.prototype.JcdlRightInfo = function (e) {
                Math.sqrt(Math.random()), this.scene["btnRightJcdlIcon" + e].off(Laya.Event.CLICK, this, this.onClickBtnJcdlIcon);
                var t = this.showJcdlCfg[this.gameConfig.RightJcdlShow[e][this.jcdlRightIndexArr[e]]].toappid;
                this.scene["btnRightJcdlIcon" + e].on(Laya.Event.CLICK, this, this.onClickBtnJcdlIcon, [this.gameConfig.RightJcdlShow[e][this.jcdlRightIndexArr[e]], 3]), this.scene["imgRightJcdlIcon" + e].skin = this.showJcdlCfg[this.gameConfig.RightJcdlShow[e][this.jcdlRightIndexArr[e]]].icon_url[0] + "?v=" + this.iconTimestamp, this.scene["lblRightJcdlName" + e].text = this.showJcdlCfg[this.gameConfig.RightJcdlShow[e][this.jcdlRightIndexArr[e]]].gameName, this.jcdlRightIndexArr[e] == this.gameConfig.RightJcdlShow[e].length - 1 ? this.jcdlRightIndexArr[e] = 0 : this.jcdlRightIndexArr[e]++, l.default.biReport(d.default.JCDLShow, [t])
            }, t.prototype.initSineleJcdl = function (e, t) {
                var i = this;
                this.scene.JcdlSingleBox.visible = !0, this.scene["btnSingleJcdlIcon" + t].scale(.85, .85), this.scene["btnSingleJcdlIcon" + t].pos(e.jcdlX, e.jcdlY), this.scene.singleRedDot.visible = !0, 0 == t && Laya.timer.loop(1e3 * this.gameConfig.jcdlAniDelayTime, this, function () {
                    i.scene.ani1.play(0, !1)
                }), this.JcdlSingleInfo(t), this.gameConfig.SineleJcdlShowArray[t].length > 1 && Laya.timer.loop(1e3 * this.gameConfig.SineleJcdlShowTime, this, this.JcdlSingleInfo, [t])
            }, t.prototype.JcdlSingleInfo = function (e) {
                this.scene["btnSingleJcdlIcon" + e].off(Laya.Event.CLICK, this, this.onClickBtnJcdlIcon), this.scene["btnSingleJcdlIcon" + e].on(Laya.Event.CLICK, this, this.onClickBtnJcdlIcon, [
                    [this.gameConfig.SineleJcdlShowArray[e][this.jcdlSingleIndexArr[e]]], e
                ]), this.scene["imgSingleJcdlIcon" + e].skin = this.showJcdlCfg[this.gameConfig.SineleJcdlShowArray[e][this.jcdlSingleIndexArr[e]]].icon_url[0] + "?v=" + this.iconTimestamp, this.scene["lblSingleJcdlName" + e].changeText(this.showJcdlCfg[this.gameConfig.SineleJcdlShowArray[e][this.jcdlSingleIndexArr[e]]].gameName), this.jcdlSingleIndexArr[e] == this.gameConfig.SineleJcdlShowArray[e].length - 1 ? this.jcdlSingleIndexArr[e] = 0 : this.jcdlSingleIndexArr[e]++
            }, t.prototype.initBannerJcdl = function () {
                this.isShowBannerJcdl = !0, this.getCurrentBannerJcdlIndex(), this.scene.JcdlBannerBox.visible = !0;
                for (var e = 0; e < 3; e++) {
                    this.scene["bannerJcdl" + e].skin = this.showJcdlCfg[this.needShowBannerJcdlIndex[e]].banner_url[0] + "?v=" + this.iconTimestamp, this.scene["bannerJcdl" + e].on(Laya.Event.CLICK, this, this.onClickBtnJcdlIcon, [
                        [this.needShowBannerJcdlIndex[e]]
                    ]);
                    var t = this.showJcdlCfg[this.needShowBannerJcdlIndex[e]].toappid;
                    l.default.biReport(d.default.JCDLShow, [t])
                }
                this.scene.btnMask.on(Laya.Event.CLICK, this, function () {}), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnBannerJcdlClose)
            }, t.prototype.getCurrentBannerJcdlIndex = function () {
                var e = 0;
                this.needShowBannerJcdlIndex = [];
                for (var t = 0; t < 3; t++) this.endChooseBannerJcdlIndex < this.gameConfig.BannerJcdlIndex.length ? e = this.endChooseBannerJcdlIndex : (this.endChooseBannerJcdlIndex = 0, e = 0), this.endChooseBannerJcdlIndex++, this.needShowBannerJcdlIndex.push(this.gameConfig.BannerJcdlIndex[e])
            }, t.prototype.onClickBtnBannerJcdlClose = function () {
                this.scene.JcdlBannerBox.visible = !1, this.isShowBannerJcdl = !1
            }, t.prototype.initBuyFlowsJcdl = function () {
                this.scene.JcdlSlideBox.visible = !0, this.scene.listJcdl.hScrollBarSkin = "", this.scene.listJcdl.renderHandler = new Laya.Handler(this, this.buyFlowsJcdlHandle), this.scene.listJcdl.array = this.gameConfig.buyflowsJcdlCfg, Laya.timer.loop(1e3 * this.gameConfig.buyFlowsJcdlTime, this, this.changeJcdl)
            }, t.prototype.changeJcdl = function () {
                this.buyFlowsjcdlType < 2 ? this.buyFlowsjcdlType++ : this.buyFlowsjcdlType = 0, this.curOneTypeIndex < this.gameConfig.buyflowsJcdlCfg[0].length - 1 ? this.curOneTypeIndex++ : this.curOneTypeIndex = 0, this.curTwoTypeIndex < this.gameConfig.buyflowsJcdlCfg[1].length - 1 ? this.curTwoTypeIndex++ : this.curTwoTypeIndex = 0, this.curThreeTypeIndex < this.gameConfig.buyflowsJcdlCfg[2].length - 1 ? this.curThreeTypeIndex++ : this.curThreeTypeIndex = 0, this.scene.listJcdl.refresh()
            }, t.prototype.buyFlowsJcdlHandle = function (e, t) {
                var i = e.getChildByName("imgIcon"),
                    a = e.getChildByName("lblJcdlName"),
                    n = e.getChildByName("imgHintRedDot"),
                    o = i.getChildByName("imgJcdlIcon");
                switch (t) {
                    case 0:
                        this.curJcdlIndex = this.curOneTypeIndex;
                        break;
                    case 1:
                        this.curJcdlIndex = this.curTwoTypeIndex;
                        break;
                    case 2:
                        this.curJcdlIndex = this.curThreeTypeIndex
                }
                o.skin = this.showJcdlCfg[this.gameConfig.buyflowsJcdlCfg[t][this.curJcdlIndex]].icon_url[0] + "?v=" + this.iconTimestamp, a.text = this.showJcdlCfg[this.gameConfig.buyflowsJcdlCfg[t][this.curJcdlIndex]].gameName;
                var r = this.showJcdlCfg[this.gameConfig.buyflowsJcdlCfg[t][this.curJcdlIndex]].toappid;
                l.default.biReport(d.default.JCDLShow, [r]);
                var s = this.showJcdlCfg[this.gameConfig.buyflowsJcdlCfg[t][this.curJcdlIndex]].red_point == this.showRedDot;
                n.visible = s, o.on(Laya.Event.CLICK, this, this.onClickBtnJcdlIcon, [
                    [this.gameConfig.buyflowsJcdlCfg[t][this.curJcdlIndex]]
                ])
            }, t.prototype.onClickBtnJcdlIcon = function (e, t) {
                void 0 === t && (t = -1), console.log("iconIndex : " + e);
                var i = this.showJcdlCfg[e].toappid;
                switch (m.default.instance.clickAdIcon(i), l.default.biReport(d.default.JCDLClick, [i]), t) {
                    case 0:
                        l.default.biReport(d.default.jcdl1);
                        break;
                    case 1:
                        l.default.biReport(d.default.jcdl2);
                        break;
                    case 2:
                        l.default.biReport(d.default.jcdl3);
                        break;
                    case 3:
                        l.default.biReport(d.default.jcdl4)
                }
            }, t.prototype.changeJcdlShowByRankList = function (e) {
                "SHOW" == e ? this.scene.JcdlSingleBox.visible = !0 : "HIDE" == e && (this.scene.JcdlSingleBox.visible = !1)
            }, t.prototype.doDestroy = function () {
                Laya.timer.clearAll(this)
            }, t.JcdlSliderType = 0, t.JcdlPageType = 1, t.JcdlSingleType = 2, t.JcdlRightType = 3, t
        }(s.default), o.QJcdlTypeView = r, i.default = a.view.QJcdlTypeView
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24
    }],
    52: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../core/QUIMgr"),
            h = e("../../framework/QUtil"),
            d = e("../data/QGameData"),
            p = e("../core/QWxSDK"),
            u = e("../../framework/QEventMgr"),
            g = e("../data/QEventType"),
            m = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.state = 0, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                u.default.instance.register(g.default.REFRESH_WELFARE_STATE, this.refreshAwardBtnState, this)
            }, t.prototype.unregisterEvent = function () {
                u.default.instance.unregister(g.default.REFRESH_WELFARE_STATE, this.refreshAwardBtnState, this)
            }, t.prototype.init = function () {
                this.scene = new l.ui.view.KeFuDialogUI, this.state = d.default.instance.getWelfareState("kefu"), h.default.doUIPopAnim(this.scene.AnchorCenter), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), h.default.RegisterBtnClickWithAnim(this.scene.btnGain, this, this.onClickBtnGet), this.scene.GainBtnAni.play(0, !0), h.default.biReport(m.default.openServiceDialog)
            }, t.prototype.refreshAwardBtnState = function () {
                switch (this.state = d.default.instance.getWelfareState("kefu"), this.state) {
                    case 0:
                        break;
                    case 1:
                        c.default.instance.removeUI(c.default.UI_KeFuDialog)
                }
            }, t.prototype.onClickBtnGet = function () {
                h.default.biReport(m.default.clickServiceBtn), p.default.instance.openCustomerServiceConversation(2)
            }, t.prototype.onClickBtnClose = function () {
                c.default.instance.removeUI(c.default.UI_KeFuDialog), c.default.instance.getUIShowState(c.default.UI_Result) && (d.default.instance.checkAchievementReward() || u.default.instance.sendEvent(g.default.GET_RESULT_AWARD))
            }, t.prototype.doDestroy = function () {}, t
        }(s.default), o.QKeFuDialog = r, i.default = a.view.QKeFuDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameData": 25
    }],
    53: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../../framework/QEventMgr"),
            h = e("../data/QEventType"),
            d = (e("../data/QGameConst"), e("../../framework/QDebug")),
            p = e("../core/QResMgr"),
            u = e("../core/QUIMgr"),
            g = e("../core/QGameMgr"),
            m = e("../data/QGameData");
        e("../../framework/QUtil"), e("../data/QBIEvent"), e("../core/QWxSDK");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.lastProgress = 0, t.frame = 0, t.frameCalc = 0, t.tryBindUserCount = 0, t.progress = 0, t.deltaTime = .01, t.progressLimit = .98, t.curLoadMaxPro = 0, t.waitStartTime = -1, t.hasRevServerData = !1, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                c.default.instance.register(h.default.REV_SERVER_DATA, this.revServerData, this), tywx.NotificationCenter.listen(tywx.EventType.INTERACTVESTORAGE_REFRESH_SUCCESS, this.checkShareGift, this)
            }, t.prototype.unregisterEvent = function () {
                c.default.instance.unregister(h.default.REV_SERVER_DATA, this.revServerData, this), tywx.NotificationCenter.ignoreScope(this)
            }, t.prototype.init = function () {
                this.scene = new s.ui.view.LoadingViewUI, this.scene.progressBar.x = 0, Laya.timer.frameLoop(1, this, this.doProgress), this.loadTime = Laya.Browser.now(), Laya.Browser.onMiniGame || (this.hasRevServerData = !0), this.scene.godain.play(0, !0)
            }, t.prototype.doProgress = function () {
                g.default.instance.allResLoadFinished ? (this.deltaTime = .1, this.progress += this.deltaTime, d.default.logError("游戏加载----资源动态加载完成")) : this.progress < this.progressLimit && (this.progress += this.deltaTime), this.progress <= 1 && (this.curLoadMaxPro = this.progress >= 1 ? .99 : this.progress, this.scene.lblProgress.changeText(Math.ceil(100 * this.curLoadMaxPro) + "%"), this.scene.progressBar.x = 460 * this.progress, this.scene.imgPro.x = 146 + 460 * this.progress), this.progress >= 1 && (this.waitStartTime < 0 && (this.waitStartTime = Laya.Browser.now()), (this.hasRevServerData || Laya.Browser.now() - this.waitStartTime > 2e3 || !m.default.instance.isSyncOnline) && (m.default.instance.isCurLevelLoadOk(m.default.instance.curTrackId) || m.default.instance.curTrackId > 1) ? platform.getInstance().yadstartup("Find-A-Difference", () => {
                    window.isonPreLoadFinish = !0,
                        this.scene.lblProgress.changeText("100%"), u.default.instance.removeUI(u.default.UI_Loading, !0), console.log("u.default.instance.curTrackId", m.default.instance.curTrackId), Adapter.hideLoading(), u.default.instance.createUI(u.default.UI_MainPage), m.default.instance.showLoadingView = 1
                }) : (d.default.logError("游戏加载-99%---同步数据：" + this.hasRevServerData + "时间：" + (Laya.Browser.now() - this.waitStartTime) + "关卡准备" + (m.default.instance.isCurLevelLoadOk(m.default.instance.curTrackId) || m.default.instance.curTrackId > 1)), this.scene.lblProgress.changeText("99%"))), this.progress >= 1 && (this.progress = 1), Adapter.percent(Math.floor(100 * this.progress))
            }, t.prototype.revServerData = function () {
                this.hasRevServerData = !0
            }, t.prototype.doDestroy = function () {
                this.scene.godain.stop(), Laya.timer.clearAll(this), p.default.instance.clearLoadingRes()
            }, t.prototype.checkShareGift = function () {
                m.default.instance.checkShareGiftLater = !0
            }, t
        }(l.default), o.QLoadingView = r, i.default = a.view.QLoadingView
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QGameMgr": 16,
        "../core/QResMgr": 17,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25
    }],
    54: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o = e("../core/QBaseUI"),
            r = e("../../ui/layaMaxUI"),
            s = e("../core/QUIMgr"),
            l = (e("../../framework/QDebug"), e("../data/QGameData")),
            c = e("../core/QCfgMgr"),
            h = e("../data/QGameConst"),
            d = e("../../framework/QEventMgr"),
            p = e("../data/QEventType"),
            u = e("../../framework/QUtil"),
            g = e("../core/QWxSDK"),
            m = Laya.Vector3,
            f = Laya.Image,
            y = Laya.Handler,
            v = e("../data/QBIEvent"),
            w = e("../core/QSoundMgr"),
            I = e("../logic/QSupplyMgr"),
            S = e("./QJcdlTypeView"),
            x = e("./QFlyRes"),
            _ = e("../logic/QShareParam"),
            C = e("../../framework/QHttp");
        n = a || (a = {}),
            function (e) {
                var t = _0x276c,
                    i = function () {
                        function e() {}
                        return Object.defineProperty(e, "deltaY", {
                            get: function () {
                                return this.deltaYValue
                            },
                            set: function (e) {
                                this.deltaYValue = e, g.default.instance.sendMsgToSub(JSON.stringify({
                                    tag: "GiftRankListScroll",
                                    deltaY: e,
                                    key: "levelCount"
                                }))
                            },
                            enumerable: !0,
                            configurable: !0
                        }), e
                    }();
                e.ScrollInfo = i;
                var a = function (e) {
                    function a() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.listImgBox = [], t.listItem = [], t.addTime = 0, t.curMaxLevel = 0, t.ScreenPosConvert = new m(0, 0, 0), t.LIST_BOX_WIDTH = 155, t.LIST_BOX_HEIGHT = 196, t.LIST_CENTER_Y_TO_TOP_DIS = 265, t.menuStartX = -115, t.isShowJcdlView = !1, t.boxInitPosX = 0, t.boxInitPosY = 0, t.fillAllSlots = !1, t.protectGetgunMode = !1, t.isVideoGainSupplyBox = !1, t.supplyClickTimes = 0, t.isPlayingAni = !1, t.hasEnterGame = !1, t.playTime = 0, t.handPosX = 0, t.handPosY = 0, t.count = 0, t.playBoxAniTimes = 0, t.needPlayParticleArray = [], t.mouseDownX = 0, t.mouseDownY = 0, t.mouseState = !1, t.isPlaying = !1, t.curAddCoinTimes = 0, t.supplyId = -1, t.residueTime = 0, t.recoveStaminaTime = 0, t.isControl = !1, t.distance = 0, t.isRankViewAni = !1, t.rankStartX = 1067, t.rankStartY = 647, t
                    }
                    var n = t;
                    return __extends(a, e), a.prototype.registerEvent = function () {}, a.prototype.unregisterEvent = function () {}, a.prototype.init = function () {
                        console.log("inininininininin"), this.scene = new r.ui.view.MainPageUI,
                            this.scene.BtnStart.on(Laya.Event.CLICK, this, this.onClickBtnStart), this.gameConfig = c.default.instance.dicConfig[h.default.QCfgType.GameConfig], Laya.timer.frameLoop(1, this, () => {
                            this.scene.lblStaminaNum.changeText(l.default.instance.stamina.toString())
                        }), window.isGameSound = Laya.LocalStorage.getItem("Find-A-Difference"), window.isGameSound ? (0 == window.isGameSound && (this.scene.btn_Sound.skin = "sound_offf.png"), 1 == window.isGameSound && (this.scene.btn_Sound.skin = "sound_onn.png", Laya.SoundManager.playMusic("bgm.mp3"))) : (window.isGameSound = 1, Laya.LocalStorage.setItem("Find-A-Difference", 1), Laya.SoundManager.playMusic("bgm.mp3"), this.scene.btn_Sound.skin = "sound_onn.png"), this.scene.btn_Sound.on(Laya.Event.CLICK, this, () => {
                            0 == window.isGameSound ? (window.isGameSound = 1, this.scene.btn_Sound.skin = "sound_onn.png", Laya.SoundManager.playMusic("bgm.mp3"), Laya.LocalStorage.setItem("Find-A-Difference", 1)) : 1 == window.isGameSound && (window.isGameSound = 0, this.scene.btn_Sound.skin = "sound_offf.png", Laya.SoundManager.stopMusic(), Laya.LocalStorage.setItem("Find-A-Difference", 0))
                        });
                        window.CY_SDK.gameLoadingCompleted();
                    }, a.prototype.setParam = function (e) {}, a.prototype.playNewBieHint = function () {
                        this.scene.imgHand2.visible = !0, this.scene.imgHand2.play(0, !0)
                    }, a.prototype.refreshMianBtnState = function () {
                        console.log(" isGetGZHAward : " + l.default.instance.isGetGZHAward), this.scene.btnGongZhongHao.visible = !0, this.scene.btnInviteFriend2.visible = !1, this.scene.btnInviteFriend.visible = !1
                    }, a.prototype.refreshSelfRanking = function () {}, a.prototype.refreshTopRoleInfo = function () {
                        this.scene.imgRoleIcon.skin = "ui_car/" + this.carConfig[l.default.instance.curMaxLevel].icon + ".png", this.scene.lblRoleName.text = this.carConfig[l.default.instance.curMaxLevel].name, this.scene.lblRoleLevel.text = this.carConfig[l.default.instance.curMaxLevel].level
                    }, a.prototype.refreshNewBieGudie = function () {
                        if (l.default.instance.tutorialState < l.default.instance.newUserGuideSteps) {
                            var e = 0,
                                t = 0;
                            switch (l.default.instance.tutorialState) {
                                case 0:
                                    e = this.scene.btnEasyBuy.x, t = this.scene.btnEasyBuy.y;
                                    break;
                                case 1:
                                case 2:
                                    break;
                                case 3:
                                    e = this.scene.startBtn0.x, t = this.scene.startBtn0.y
                            }
                            this.doPlayNewBieGuide(e, t, l.default.instance.tutorialState)
                        } else this.closeNewUserGuide()
                    }, a.prototype.closeNewUserGuide = function () {
                        this.scene.btnMaskBg.zOrder = 0, l.default.instance.finishTutorial(4), this.scene.AnchorLeft.visible = !0, this.scene.AnchorRight.visible = !0, this.scene.btnMaskBg.visible = !1, this.scene.boxNieBie1.visible = !1, this.scene.boxNieBie3.visible = !1, this.scene.btnMaskBg.off(Laya.Event.CLICK, this, function () {}), this.showJcdlView()
                    }, a.prototype.showJcdlView = function () {
                        this.isShowJcdlView || (this.isShowJcdlView = !0, S.default.create(this.scene.jcdlBox), S.default.showSingleJcdl([{
                            jcdlX: 54,
                            jcdlY: 498
                        }, {
                            jcdlX: 54,
                            jcdlY: 362
                        }, {
                            jcdlX: 54,
                            jcdlY: 228
                        }]))
                    }, a.prototype.doPlayNewBieGuide = function (e, t, i) {
                        void 0 === e && (e = 0), void 0 === t && (t = 0), this.scene.listGarage.zOrder = 0, this.scene.btnEasyBuy.zOrder = 0, this.scene.startBtn0.zOrder = 0, this.scene.startBtn.zOrder = 0, u.default.isNullOrEmpty(this.timeLine) || this.timeLine.destroy(), this.timeLine = new Laya.TimeLine, this.scene.btnMaskBg.zOrder = 1, this.scene.imgHand1.x = e, this.scene.imgHand1.y = t, this.scene.imgHand1.play(0, !0);
                        var a = this.boxInitPosX,
                            n = this.boxInitPosY,
                            o = a + .5 * this.LIST_BOX_WIDTH,
                            r = n + .5 * this.LIST_BOX_HEIGHT;
                        switch (this.scene.imgTips1.visible = 3 == i, this.scene.imgTips2.visible = 0 == i, this.scene.imgTips3.visible = 1 == i, this.scene.imgTips4.visible = 2 == i, i) {
                            case 0:
                                this.scene.boxNieBie1.visible = !0, this.scene.boxNieBie3.visible = !1, this.scene.btnEasyBuy.zOrder = 2, this.scene.imgHand1.rotation = 0;
                                break;
                            case 1:
                                this.scene.boxNieBie1.visible = !1, this.scene.boxNieBie3.visible = !0, this.scene.listGarage.zOrder = 2, this.scene.imgHand3.pos(o, r), this.timeLine.addLabel("ani1", 0).to(this.scene.imgHand3, {
                                    x: o + 150
                                }, 1e3, null, 0);
                                break;
                            case 2:
                                this.scene.boxNieBie1.visible = !1, this.scene.boxNieBie3.visible = !1, this.scene.imgHand3.visible = !1, this.scene.btnMaskBg.visible = !1;
                                break;
                            case 3:
                                this.scene.boxNieBie1.visible = !0, this.scene.boxNieBie3.visible = !1, this.scene.startBtn0.zOrder = 2, this.scene.startBtn.zOrder = 2, this.scene.imgHand1.rotation = -170
                        }
                        this.timeLine.play(0, !0)
                    }, a.prototype.showSupplyGun = function () {
                        console.log(" 路线 2: " + l.default.instance.supplyGunCount), l.default.instance.supplyGunCount <= 0 && (Laya.timer.clear(this, this._supplyBoxAni), l.default.instance.ResetSupply(), l.default.instance.setSupplyBoxInGarageIndex(-1), this.scene.supplyboxBtn.skin = "ui_home/home_img_typeBox_3.png", l.default.instance.checkIsShowSupplyCarOutsideGarage()), this.scene.supplyboxBtn.visible = l.default.instance.supplyGunCount > 0, this.scene.supplyboxBtnFly.visible = !1, this.scene.supplyHitPoint.visible = l.default.instance.supplyGunCount > 0, this.scene.supplyHitPointNum.changeText(l.default.instance.supplyGunCount.toString())
                    }, a.prototype.getGun = function () {
                        var e = this;
                        if (l.default.instance.isGetSupply) {
                            this.protectGetgunMode = !0, Laya.timer.once(1e3, this, function () {
                                e.protectGetgunMode = !1
                            });
                            var t = l.default.instance.supplyGunCount;
                            this.scene.supplyboxBtn.skin = "ui_dialog/supply_box_open.png", this.scene.supplyboxBtn.width = 128, this.scene.supplyboxBtn.height = 97, this.fillAllSlots = !1;
                            for (var i = function (i) {
                                    Laya.timer.once(300 * i, a, function () {
                                        if (l.default.instance.judgeGarageCarFull() && i <= t - 2) return e.fillAllSlots = !0, void(e.protectGetgunMode = !1);
                                        if (i + l.default.instance.supplyGunCount != t) return e.fillAllSlots = !0, void(e.protectGetgunMode = !1);
                                        if (!e.fillAllSlots) {
                                            var a = t - 1;
                                            if (l.default.instance.isShowSupplyOutsideGarage && (a = t), !l.default.instance.judgeGarageCarFull() && i < a) {
                                                if (e.supplyClickTimes++, h = l.default.instance.PopSupplyGun(), l.default.instance.judgeGarageOnlyOneEmpty()) {
                                                    var n = l.default.instance.judgeGarageNoCarToMerge();
                                                    n > 0 && (h = n)
                                                }
                                                l.default.instance.setBuyCarData(h, 1, !0), e.scene.listGarage.refresh(), e.showSupplyGun()
                                            }
                                            if (i == t - 1 && !l.default.instance.isShowSupplyOutsideGarage) {
                                                e.supplyClickTimes++;
                                                var o = e.scene.listGarage.x - .5 * e.scene.listGarage.width,
                                                    r = (e.scene.listGarage.y - e.LIST_CENTER_Y_TO_TOP_DIS) * (Laya.stage.height / 1334),
                                                    s = o + e.LIST_BOX_WIDTH / 2 + e.LIST_BOX_WIDTH * (l.default.instance.supplyBoxInGarageIndex % 4) + 20,
                                                    c = r + e.LIST_BOX_HEIGHT / 2 + e.LIST_BOX_HEIGHT * Math.floor(l.default.instance.supplyBoxInGarageIndex / 4) - 5;
                                                e.scene.boxCarAni.x = s, e.scene.boxCarAni.y = c, e.scene.boxCarAni.scale(1.3, 1.3), e.scene.ani1.play(0, !1);
                                                var h = l.default.instance.PopSupplyGun();
                                                l.default.instance.setBuyCarDataByIndex(l.default.instance.supplyBoxInGarageIndex, h, 0, !0), e.scene.listGarage.refresh(), e.showSupplyGun(), e.protectGetgunMode = !1
                                            }
                                        }
                                    }, null, !1)
                                }, a = this, n = 0; n < t; n++) i(n)
                        }
                    }, a.prototype.registerShowSupplyBox = function () {
                        var e = this;
                        l.default.instance.getShareTimesIsEnough(h.default.QShareType.Kongtou, !1) && (l.default.instance.showSupply || l.default.instance.tutorialState >= l.default.instance.newUserGuideSteps && (l.default.instance.isShowSupplyOutsideGarage ? (this.scene.boxMiddleRight.scale(.8, .8), Laya.timer.once(800, this, function () {
                            e.showSupplyBoxOutGarage()
                        })) : (this.scene.boxMiddleRight.scale(1, 1), this.checkAndShowSupplyBoxInGarage())))
                    }, a.prototype.checkAndShowSupplyBoxInGarage = function () {
                        for (var e = this, t = 0; t < this.listGarageCfg.length; t++)
                            if (0 == this.listGarageCfg[t].carId) {
                                l.default.instance.setSupplyBoxInGarageIndex(t), l.default.instance.showSupply = !0, this.protectGetgunMode = !0, Laya.timer.once(800, this, function () {
                                    e.showSupplyBoxInGarage()
                                });
                                break
                            }
                    }, a.prototype.showSupplyBoxInGarage = function () {
                        var e = this;
                        l.default.instance.showSupply = !0;
                        var t = this.scene.listGarage.cells[l.default.instance.supplyBoxInGarageIndex],
                            i = new Laya.Point(t.x, t.y),
                            a = this.scene.listGarage.localToGlobal(i),
                            n = a.x + 90,
                            o = a.y + 110,
                            r = new Laya.Point(n, o - 400),
                            s = new Laya.Point(n, o);
                        this.scene.supplyboxBtn.visible = !0, this.scene.supplyHitPoint.visible = !0, this.scene.boxMiddleRight.pos(r.x, r.y), Laya.Tween.to(this.scene.boxMiddleRight, {
                            x: s.x,
                            y: s.y
                        }, 300, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
                            e.showSupplyGun(), e.scene.supplyboxBtn.height = 101, e.scene.supplyboxBtn.width = 107, Laya.Tween.to(e.scene.supplyboxBtn, {
                                height: 80,
                                width: 120
                            }, 250, null, Laya.Handler.create(e, function () {
                                Laya.Tween.to(e.scene.supplyboxBtn, {
                                    height: 101,
                                    width: 107
                                }, 800, Laya.Ease.bounceOut, Laya.Handler.create(e, function () {
                                    Laya.timer.loop(3e3, e, e._supplyBoxAni), e.protectGetgunMode = !1
                                }), 0, !1, !0)
                            }), 0, !1, !0)
                        }))
                    }, a.prototype.showSupplyBoxOutGarage = function () {
                        var e = this;
                        l.default.instance.showSupply = !0, this.scene.btnModel.visible = !1;
                        var t = this.scene.btnModel,
                            i = new Laya.Point(t.x, t.y),
                            a = this.scene.AnchorCenter.localToGlobal(i),
                            n = a.x + 10,
                            o = a.y - 50,
                            r = new Laya.Point(n - 700, o - 350),
                            s = new Laya.Point(n, o);
                        this.scene.supplyboxBtnFly.alpha = 1, this.scene.supplyboxBtn.visible = !1, this.scene.supplyboxBtnFly.visible = !0, this.scene.supplyHitPoint.visible = !0, this.scene.boxMiddleRight.pos(r.x, r.y), Laya.Tween.to(this.scene.boxMiddleRight, {
                            x: s.x,
                            y: s.y
                        }, 1e3, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
                            Laya.Tween.to(e.scene.supplyboxBtnFly, {
                                alpha: 0
                            }, 200, null, Laya.Handler.create(e, function () {
                                e.showSupplyGun()
                            }), 0, !1, !0), e.scene.supplyboxBtn.visible = !0, e.scene.supplyboxBtn.height = 101, e.scene.supplyboxBtn.width = 107, Laya.Tween.to(e.scene.supplyboxBtn, {
                                height: 80,
                                width: 120
                            }, 250, null, Laya.Handler.create(e, function () {
                                Laya.Tween.to(e.scene.supplyboxBtn, {
                                    height: 101,
                                    width: 107
                                }, 800, Laya.Ease.bounceOut, Laya.Handler.create(e, function () {
                                    Laya.timer.loop(3e3, e, e._supplyBoxAni), e.protectGetgunMode = !1
                                }), 0, !1, !0)
                            }), 0, !1, !0)
                        }))
                    }, a.prototype.showSupplyBoxDirectly = function () {
                        l.default.instance.showSupply = !0;
                        var e = this.scene.listGarage.cells[l.default.instance.supplyBoxInGarageIndex],
                            t = new Laya.Point(e.x, e.y),
                            i = this.scene.listGarage.localToGlobal(t),
                            a = i.x + 90,
                            n = i.y + 110,
                            o = new Laya.Point(a, n);
                        this.scene.supplyboxBtn.visible = !0, this.scene.supplyboxBtnFly.visible = !1, this.scene.supplyHitPoint.visible = !0, this.scene.boxMiddleRight.pos(o.x, o.y), this.showSupplyGun(), this.getGun(), Laya.timer.loop(3e3, this, this._supplyBoxAni), this.protectGetgunMode = !1
                    }, a.prototype.showSupplyBoxDirectlyOutsideGarage = function () {
                        l.default.instance.showSupply = !0, this.scene.btnModel.visible = !1;
                        var e = this.scene.btnModel,
                            t = new Laya.Point(e.x, e.y),
                            i = this.scene.AnchorCenter.localToGlobal(t),
                            a = i.x + 10,
                            n = i.y - 50,
                            o = new Laya.Point(a, n);
                        this.scene.supplyboxBtn.visible = !0, this.scene.supplyboxBtnFly.visible = !1, this.scene.supplyHitPoint.visible = !0, this.scene.boxMiddleRight.pos(o.x, o.y), this.showSupplyGun(), this.getGun(), Laya.timer.loop(3e3, this, this._supplyBoxAni), this.protectGetgunMode = !1
                    }, a.prototype._supplyBoxAni = function () {
                        this.scene.ani3.play(0, !1)
                    }, a.prototype.OnClickSupplyBoxBtn = function () {
                        l.default.instance.isGetSupply || (this.gameConfig.isOpenSupplyDialog ? s.default.instance.createUI(s.default.UI_SupplyDialog) : this.clickOpenSupplyBox())
                    }, a.prototype.clickOpenSupplyBox = function () {
                        var e = this,
                            t = l.default.instance.getIsActiveSharePoint(h.default.QShareType.Kongtou) ? l.default.instance.getPlayerScoreVideoShareType() : l.default.instance.getPointVideoShareType(h.default.QShareType.Kongtou);
                        if (this.isVideoGainSupplyBox = l.default.instance.IsVideoGain(t), !l.default.instance.isGetSupply) {
                            if (u.default.biReport(v.default.tryToGetSupply), l.default.instance.isLifeFirstGame) return l.default.instance.setLifeFirstGame(!1), this.openSupplyBoxSuccessHanle(), void u.default.biReport(v.default.gotLifeTimeFreeSupply);
                            if (!l.default.instance.getShareTimesIsEnough(h.default.QShareType.Kongtou)) return;
                            if (l.default.instance.isNoVideoAuditVersion) this.openSupplyBoxSuccessHanle(), u.default.biReport(v.default.gotSupply);
                            else {
                                var i = _.default.create();
                                i.shareType = h.default.QShareType.Kongtou, this.isVideoGainSupplyBox ? g.default.instance.playVideoAd(i, Laya.Handler.create(this, function () {
                                    e.openSupplyBoxSuccessHanle(), u.default.biReport(v.default.gotSupply)
                                })) : g.default.instance.fakeShare(i, this, function () {
                                    e.openSupplyBoxSuccessHanle(), u.default.biReport(v.default.gotSupply)
                                })
                            }
                        }
                    }, a.prototype.openSupplyBoxSuccessHanle = function () {
                        s.default.instance.createUI(s.default.UI_Tip, {
                            text: "领取成功!"
                        }), l.default.instance.isGetSupply = !0, d.default.instance.sendEvent(p.default.SUPPLY_GUN), l.default.instance.setKongtouVideoShareTime()
                    }, a.prototype.videoInequacyToShare = function (e) {
                        var t = this,
                            i = _.default.create();
                        i.shareType = h.default.QShareType.Kongtou, e.shareType == i.shareType && g.default.instance.fakeShare(i, this, function () {
                            t.openSupplyBoxSuccessHanle(), u.default.biReport(v.default.gotSupply)
                        })
                    }, a.prototype.videoManualCloseSupplyBox = function () {
                        l.default.instance.isShowSupplyOutsideGarage || (l.default.instance.ResetSupply(), d.default.instance.sendEvent(p.default.HIDE_SUPPLY), l.default.instance.setLifeFirstGame(!1))
                    }, a.prototype.playSupplyGuide = function () {
                        this.supplyClickTimes < 1 || l.default.instance.setSupplyGuide(!0)
                    }, a.prototype.onClickBtnTop = function () {
                        var e = this;
                        this.isPlayingAni || (this.isPlayingAni = !0, this.scene.imgTop.x == this.menuStartX ? Laya.Tween.to(this.scene.imgTop, {
                            x: this.menuStartX + this.scene.imgTop.width
                        }, 300, null, Laya.Handler.create(this, function () {
                            e.isPlayingAni = !1
                        })) : Laya.Tween.to(this.scene.imgTop, {
                            x: this.menuStartX
                        }, 300, null, Laya.Handler.create(this, function () {
                            e.isPlayingAni = !1
                        })))
                    }, a.prototype.refreshEveryGiftRedPoint = function () {
                        var e = this.gameConfig.everyGiftShareOrVideoCfg.length - l.default.instance.diamondGiftGetTimes;
                        e < 0 && (e = 0), this.scene.lblResiduceTimes.changeText(e.toString()), this.scene.imgEveryGiftRedPoint.visible = l.default.instance.diamondGiftGetTimes < this.gameConfig.everyGiftShareOrVideoCfg.length, this.scene.lblResiduceTimes.visible = l.default.instance.diamondGiftGetTimes < this.gameConfig.everyGiftShareOrVideoCfg.length
                    }, a.prototype.refreshSignRedPoint = function () {
                        this.scene.imgSignRedPoint.visible = !l.default.instance.isGetSignInGift, this.scene.imgShopFree.visible = !1, this.scene.imgLotteryFree.visible = l.default.instance.availableLotteryCount > 0, this.refreshTopRedPoint()
                    }, a.prototype.refreshTopRedPoint = function () {
                        this.scene.imgTopRedPoint.visible = this.scene.imgSignRedPoint.visible || this.scene.btnCollection.visible
                    }, a.prototype.postInit = function () {}, a.prototype.stopPlayHandAni = function () {
                        this.scene.imgHand1.stop()
                    }, a.prototype.onTween1 = function () {
                        Laya.Tween.clearTween(this.onTween1), Laya.Tween.to(this.FlyBox, {
                            x: 210
                        }, 1500, Laya.Ease.linearIn, y.create(this, this.onTween2))
                    }, a.prototype.onTween2 = function () {
                        Laya.Tween.clearTween(this.onTween2), Laya.Tween.to(this.FlyBox, {
                            x: 550
                        }, 3e3, Laya.Ease.linearIn, y.create(this, this.onTween1))
                    }, a.prototype.checkGarageCarIsFull = function () {
                        this.garageCarFull()
                    }, a.prototype.onClickBtnSound = function () {
                        w.default.instance.setSoundState(!w.default.instance.isSoundOn), this.scene.btnSound.skin = w.default.instance.isSoundOn ? "ui_home/home_sound_btn.png" : "ui_home/home_sound_forbidBtn.png"
                    }, a.prototype.onClickBtnInviteFriend = function () {
                        var e = _.default.create();
                        e.shareType = h.default.QShareType.HomeInvite, g.default.instance.share(e), u.default.biReport(v.default.inviteFriend)
                    }, a.prototype.onClickBtnGongZhongHao = function () {
                        s.default.instance.createUI(s.default.UI_WelfareDialog)
                    }, a.prototype.onClickBtnEveryGift = function () {
                        s.default.instance.createUI(s.default.UI_EveryGift)
                    }, a.prototype.onClickBtnCollection = function () {
                        s.default.instance.createUI(s.default.UI_CollectDialog)
                    }, a.prototype.onClickBtnCoin = function () {
                        l.default.instance.addCoin(9 * Math.pow(10, 38))
                    }, a.prototype.onClickBtnDiamond = function () {
                        l.default.instance.addDiamond(9 * Math.pow(10, 38))
                    }, a.prototype.onClickBtnAddStamina = function () {
                        l.default.instance.addStamina(5, !1)
                    }, a.prototype.onClickBtnAddLevel = function () {
                        l.default.instance.testFinishTrack(10)
                    }, a.prototype.onClickBtnReduceLevel = function () {
                        l.default.instance.testFinishTrack(-10)
                    }, a.prototype.onClickBtnChooseLevel = function () {
                        this.textInputType = 1, this.text_singleLineInput()
                    }, a.prototype.text_singleLineInput = function () {
                        if (this.textInput) return this.textInput.visible = !0, this.textInput.editable = !0, void(this.textInputOkBtn.visible = !0);
                        var e = "";
                        switch (this.textInputType) {
                            case 1:
                                e = "目标关卡";
                                break;
                            case 2:
                                e = "输入要修改的key";
                                break;
                            case 3:
                                e = "输入value"
                        }
                        var t = new Laya.TextInput(e);
                        t.wordWrap = !0, t.width = 300, t.height = 100, t.anchorX = .5, t.anchorY = .5, t.pos(.5 * Laya.stage.width, .5 * Laya.stage.height), t.bgColor = "#007ACC", t.fontSize = 22, t.focus = !0, Laya.stage.addChild(t), this.textInput = t, this.textInputOkBtn = new Laya.Button("ui_home/home_btn_green.png", "确认"), this.textInputOkBtn.stateNum = 1, this.textInputOkBtn.toggle = !1, this.textInputOkBtn.labelSize = 40, this.textInputOkBtn.anchorX = .5, this.textInputOkBtn.anchorY = .5, this.textInputOkBtn.pos(.5 * Laya.stage.width, .5 * Laya.stage.height + 200), Laya.stage.addChild(this.textInputOkBtn), this.textInputOkBtn.on(Laya.Event.CLICK, this, this.onFinishedTextInput)
                    }, a.prototype.onFinishedTextInput = function () {
                        var e = parseInt(this.textInput.text);
                        switch (this.textInputType) {
                            case 1:
                                e && e <= l.default.instance.MAX_LEVEL_NUM ? (l.default.instance.testChooseTrack(e), s.default.instance.createUI(s.default.UI_Tip, {
                                    text: "选关成功"
                                }), this.textInput.visible = !1, this.textInput.editable = !1, this.textInputOkBtn.visible = !1) : s.default.instance.createUI(s.default.UI_Tip, {
                                    text: "请输入有效值"
                                });
                                break;
                            case 2:
                                e > 0 && e <= 50 ? (this.inputKey = e, s.default.instance.createUI(s.default.UI_Tip, {
                                    text: "设置key成功"
                                }), this.textInput.visible = !1, this.textInput.editable = !1, this.textInputOkBtn.visible = !1, this.textInputType = 3, this.text_singleLineInput()) : s.default.instance.createUI(s.default.UI_Tip, {
                                    text: "请输入有效值"
                                });
                                break;
                            case 3:
                                e >= 0 ? (this.inputValue = e, s.default.instance.createUI(s.default.UI_Tip, {
                                    text: "设置Value成功"
                                }), this.textInput.visible = !1, this.textInput.editable = !1, this.textInputOkBtn.visible = !1, this.setInteractionData({
                                    key: this.inputKey,
                                    value: this.inputValue
                                }), this.textInputType = 2) : s.default.instance.createUI(s.default.UI_Tip, {
                                    text: "请输入有效值"
                                })
                        }
                    }, a.prototype.onClickBtnClearData = function () {
                        Laya.LocalStorage.clear(), s.default.instance.createUI(s.default.UI_Tip, {
                            text: "重新开始游戏!"
                        }), l.default.instance.isSyncOnline && l.default.instance.clearOnlineData()
                    }, a.prototype.onClickBtnClearServe = function () {
                        var e = {
                                userId: tywx.UserInfo.userId
                            },
                            t = JSON.stringify(e);
                        C.default.instance.post(tywx.SystemInfo.loginUrl + "api/sxlzc/delData", t, null, null, this, this.GetDataSuccessHandle)
                    }, a.prototype.onClickBtnSetInteractionData = function () {
                        this.textInputType = 2, this.text_singleLineInput()
                    }, a.prototype.setInteractionData = function (e) {
                        var t = {
                                userId: tywx.UserInfo.userId,
                                sessionKey: tywx.UserInfo.wxgame_session_key,
                                openId: tywx.UserInfo.wxgame_openid,
                                key: e.key + "",
                                num: e.value
                            },
                            i = JSON.stringify(t);
                        console.log("修改玩家互动数据 ：" + i), C.default.instance.post(tywx.SystemInfo.loginUrl + "api/sxlzc/changeInteractionData", i, null, null, this, this.AddInteractionDataSuccessHandle)
                    }, a.prototype.AddInteractionDataSuccessHandle = function (e) {
                        200 == e.state && console.log("互动数据添加成功" + JSON.stringify(e))
                    }, a.prototype.ClearInteractionDataSuccessHandle = function (e) {
                        200 == e.state && console.log("互动数据清除成功" + JSON.stringify(e))
                    }, a.prototype.GetDataSuccessHandle = function (e) {
                        200 == e.state && (l.default.instance.isClickDeleteService = !0)
                    }, a.prototype.refreshViewHintData = function () {
                        this.doPlayTimerCut(), this.doPlayCarlblAni()
                    }, a.prototype.shopBuyCarSuccessRefresh = function () {
                        this.setCurNeedBuyCarInfo(), this.scene.listGarage.refresh()
                    }, a.prototype.refreshGoldData = function () {
                        this.scene.lblGoldNum.changeText(l.default.instance.getCoinNumType(l.default.instance.coin)), this.scene.lblAddGold.changeText("+" + l.default.instance.getCoinNumType(this.getGarageAllValue()) + "/s"), this.scene.lblAddGold2.changeText("+" + l.default.instance.getCoinNumType(this.getGarageAllValue()) + "/s"), this.scene.lblDiamondNum.changeText(l.default.instance.getCoinNumType(l.default.instance.diamond)), this.scene.lblStaminaNum.changeText(l.default.instance.stamina.toString()), this.refreshCountDownTime()
                    }, a.prototype.setDragLimit = function () {
                        var e = Laya.stage.width - 1e3 >> 1,
                            t = Laya.stage.height - 1800 >> 1;
                        this.dragRegion.setTo(e, t, 1e3, 1800), console.log("dragWidthLimit : 1000 -- dragHeightLimit : 1800 -- dragLimitX : " + e + " -- dragLimitY : " + t)
                    }, a.prototype.setCurNeedBuyCarInfo = function () {
                        this.curNeedBuyCarInfoCfg = this.carConfig[l.default.instance.curRecomCarLevel], this.scene.imgBuyCarIcon.skin = "ui_car/" + this.curNeedBuyCarInfoCfg.icon + ".png", this.scene.lblCoinNum.changeText(l.default.instance.getCoinNumType(l.default.instance.getCurRecomCarLevelCoinNum(l.default.instance.curRecomCarLevel)))
                    }, a.prototype.onClickBtnSign = function () {
                        s.default.instance.createUI(s.default.UI_DailyCheck)
                    }, a.prototype.onClickBtnDoubleAward = function () {
                        s.default.instance.createUI(s.default.UI_AddRevenueDialog)
                    }, a.prototype.onClickBtnStart = function () {
                        platform.getInstance().showInterstitial(() => {
                            console.log("l.default.instance.getShareTimesIsEnough(c.default.QShareType.AddRevenue)", l.default.instance.getShareTimesIsEnough(h.default.QShareType.AddRevenue)),
                                window.isStart = !0, this.gameConfig = c.default.instance.dicConfig[h.default.QCfgType.GameConfig], l.default.instance.stamina >= this.gameConfig.everyTimesUseStaminaNum ? s.default.instance.createUI(s.default.UI_Game) : (u.default.biReport(v.default.noEnoughStamina), l.default.instance.getShareTimesIsEnough(h.default.QShareType.AddRevenue) ? s.default.instance.createUI(s.default.UI_Stamina) : s.default.instance.createUI(s.default.UI_Tip, {
                                text: "体力不足!"
                            }))
                        })
                    }, a.prototype.onClickBtnRank = function () {
                        g.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "clearCanvas"
                        })), this.scene.imgRankRed.visible = !1, this.scene.sprOpenDataView.visible = !1, s.default.instance.createUI(s.default.UI_RankDialog)
                    }, a.prototype.onClickBtnShop = function () {
                        s.default.instance.createUI(s.default.UI_ShopDialog)
                    }, a.prototype.onClickLottery = function () {
                        s.default.instance.createUI(s.default.UI_Lottery, {
                            isMainEnter: !0
                        })
                    }, a.prototype.onClickEasyBuy = function () {
                        if (0 == l.default.instance.tutorialState && (l.default.instance.finishTutorial(1), this.refreshNewBieGudie()), l.default.instance.judgeGarageCarFull()) l.default.instance.coin < l.default.instance.getCurRecomCarLevelCoinNum(l.default.instance.curRecomCarLevel) && l.default.instance.getShareTimesIsEnough(h.default.QShareType.freeCoin, !1) ? s.default.instance.createUI(s.default.UI_CommonPage, {
                            viewType: h.default.QCommonViewType.FreeGet
                        }) : (s.default.instance.createUI(s.default.UI_Tip, {
                            text: l.default.instance.fullCarTipsDes
                        }), this.garageCarFull());
                        else {
                            var e = l.default.instance.curRecomCarLevel;
                            if (!l.default.instance.coseCoin(l.default.instance.getCurRecomCarLevelCoinNum(e))) return void(l.default.instance.getShareTimesIsEnough(h.default.QShareType.freeCoin, !1) ? s.default.instance.createUI(s.default.UI_CommonPage, {
                                viewType: h.default.QCommonViewType.FreeGet
                            }) : s.default.instance.createUI(s.default.UI_Tip, {
                                text: "金币不足,完成关卡获得更多金币!"
                            }));
                            u.default.biReport(v.default.onClickFastBuyCar), w.default.instance.playSfx(w.default.BuyCar), l.default.instance.setBuyCarData(e, 0, !0), l.default.instance.getFreeShareTimesIsEnough() && this.doFreeLevelUp(), l.default.instance.setRecordGainCarTimes(h.default.QMoneyType.Coin, e), this.curMaxLevel = l.default.instance.curMaxLevel, this.secondMainRecomCarPlan(), this.setCurNeedBuyCarInfo(), this.scene.listGarage.refresh()
                        }
                    }, a.prototype.doFreeLevelUp = function () {
                        if (!l.default.instance.IsLevelUpTimeLeave()) {
                            var e = l.default.instance.curRecomCarLevel,
                                t = -1;
                            for (var i in this.carConfig) this.carConfig[i].unlock_buy_gold_level == l.default.instance.curMaxLevel && (t = this.carConfig[i].level);
                            if (-1 != t)
                                for (var a = t - e, n = u.default.getRandomInt(0, 1e4), o = 0; o < this.gameConfig.freeLevelUp.length; o++)
                                    if (this.gameConfig.freeLevelUp[o].minus_level == a && n < this.gameConfig.freeLevelUp[o].freelevelup_chance) {
                                        var r = e,
                                            c = e + this.gameConfig.freeLevelUp[o].plus_level;
                                        s.default.instance.createUI(s.default.UI_FreeLevelUp, [r, c])
                                    }
                        }
                    }, a.prototype.garageCarFull = function () {
                        if (l.default.instance.judgeGarageCarFull()) {
                            for (var e = !1, t = 0; t < this.listGarageCfg.length; t++)
                                for (var i = t + 1; i < this.listGarageCfg.length; i++)
                                    if (this.listGarageCfg[t].level == this.listGarageCfg[i].level) {
                                        e = !0;
                                        break
                                    } e || (0 == l.default.instance.isFirstPlayRecycleCarAni && this.playRecycleCarAni(), this.playDustbinAni(), Laya.timer.loop(850, this, this.playDustbinAni))
                        }
                    }, a.prototype.playRecycleCarAni = function () {
                        for (var e = 1e4, t = 0, i = 0; i < this.listGarageCfg.length; i++) e > this.listGarageCfg[i].level && 0 != this.listGarageCfg[i].level && (e = this.listGarageCfg[i].level, t = i);
                        var a = this.scene.listGarage.x - .5 * this.scene.listGarage.width,
                            n = (this.scene.listGarage.y - this.LIST_CENTER_Y_TO_TOP_DIS) * (Laya.stage.height / 1334),
                            o = this.LIST_BOX_WIDTH,
                            r = this.LIST_BOX_HEIGHT,
                            s = Math.floor(t / 4),
                            l = t % 4;
                        switch (this.handPosX = a + l * o + .5 * o, this.handPosY = n + s * r + .5 * r, this.playTime = 0, t) {
                            case 8:
                                this.playTime = 1;
                                break;
                            case 4:
                            case 9:
                                this.playTime = 1.2;
                                break;
                            case 0:
                            case 5:
                            case 10:
                                this.playTime = 1.4;
                                break;
                            case 1:
                            case 6:
                            case 11:
                                this.playTime = 1.6;
                                break;
                            case 2:
                            case 7:
                                this.playTime = 1.8;
                                break;
                            case 3:
                                this.playTime = 2
                        }
                        u.default.isNullOrEmpty(this.hand) || this.hand.destroy(), this.hand = new Laya.Image, this.hand.skin = "ui_game/GuideGameHand.png", this.hand.scale(1.3, 1.3), this.hand.pos(this.handPosX, this.handPosY), Laya.stage.addChild(this.hand), this.playHandAni(), Laya.timer.loop(1e3 * this.playTime + 50, this, this.playHandAni)
                    }, a.prototype.playHandAni = function () {
                        this.count++, this.hand.pos(this.handPosX, this.handPosY);
                        var e = u.default.getIsNeedScreenAdaptive() ? this.LIST_CENTER_Y_TO_TOP_DIS : 0;
                        Laya.Tween.to(this.hand, {
                            x: this.scene.imgRecycleCar.x - 10,
                            y: this.scene.imgRecycleCar.y + e
                        }, 1e3 * this.playTime, Laya.Ease.strongOut), this.count >= 4 && (this.count = 0, this.hand.destroy(), Laya.timer.clear(this, this.playHandAni))
                    }, a.prototype.playDustbinAni = function () {
                        var e = this;
                        Laya.Tween.clearAll(this.scene.imgRecycleCar), this.scene.imgRecycleCar.alpha = .6, Laya.Tween.to(this.scene.imgRecycleCar, {
                            scaleX: 1.4,
                            scaleY: 1.4,
                            alpha: 1
                        }, 400, null, Laya.Handler.create(this, function () {
                            Laya.Tween.to(e.scene.imgRecycleCar, {
                                scaleX: 1,
                                scaleY: 1,
                                alpha: .6
                            }, 400, null)
                        }))
                    }, a.prototype.secondMainRecomCarPlan = function () {
                        this.curMaxLevel <= 5 ? l.default.instance.setCurRecomCarLevel(1) : l.default.instance.setCurRecomCarLevel(l.default.instance.getCurRecomCarLevelId())
                    }, a.prototype.listGarageHandle = function (e, t) {
                        var i = n,
                            a = this,
                            o = e.getChildByName("imgCarIcon"),
                            r = e.getChildByName("imgLevelBg"),
                            s = r.getChildByName("lblLevel"),
                            h = e.getChildByName("lblAddGoldNum"),
                            d = e.getChildByName("imgChoiceStar"),
                            p = e.getChildByName("imgBox");
                        0 == t && (this.listCarIconObj = [], this.listAddGoldLbLObj = [], this.listChoiceStartIcon = [], this.listImgBox = [], this.listItem = []), this.listAddGoldLbLObj.push(h), this.listCarIconObj.push(o), this.listChoiceStartIcon.push(d), this.listImgBox.push(p), this.listItem.push(e);
                        var u = this.listGarageCfg[t].carId,
                            g = this.listGarageCfg[t].level,
                            m = this.listGarageCfg[t].boxState;
                        if (o.visible = 0 != u && (0 == m || 1 == m), r.visible = 0 != u && (0 == m || 1 == m), p.visible = 0 != u && 2 == m, this.isPlaying || (h.alpha = 0), 0 != u) {
                            var y = l.default.instance.curCreateCarIndex,
                                v = c.default.instance.getCarInfoByLevelId(g);
                            if (-1 != y && y == t)
                                if (l.default.instance.curCreateCarIndex = -1, 0 == m) o.scale(0, 0), o.alpha = 0, Laya.Tween.to(o, {
                                    scaleX: 1,
                                    scaleY: 1,
                                    alpha: 1
                                }, 150);
                                else if (1 == m) {
                                if (o.scale(0, 0), o.alpha = 0, l.default.instance.isShowSupplyOutsideGarage) Laya.Tween.to(o, {
                                    scaleX: 1,
                                    scaleY: 1,
                                    alpha: 1
                                }, 150);
                                else {
                                    var w = new Laya.Point(this.scene.supplyboxBtn.x + 80, this.scene.supplyboxBtn.y),
                                        I = this.scene.supplyboxBtn.localToGlobal(w),
                                        S = new f;
                                    Laya.stage.addChild(S), S.skin = "ui_car/" + v.icon + ".png", S.pivot(200, 200), S.pos(I.x, I.y), S.scale(.2, .2);
                                    var x = new Laya.Point(o.x, o.y),
                                        _ = o.localToGlobal(x);
                                    Laya.Tween.to(S, {
                                        x: _.x,
                                        y: _.y,
                                        scaleX: .56,
                                        scaleY: .56,
                                        alpha: 1
                                    }, 300, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
                                        o.scale(1, 1), o.alpha = 1, S.destroy()
                                    }))
                                }
                                this.listGarageCfg[t].boxState = 0
                            } else if (2 == m) {
                                var C = new f;
                                Laya.stage.addChild(C), C.skin = "ui_home/typeBox_3.png", C.pivot(200, 200), o.scale(0, 0), o.alpha = 0, p.scale(0, 0), p.alpha = 0, x = new Laya.Point(p.x, p.y);
                                var T = e.localToGlobal(x),
                                    b = T.x - 10.5,
                                    k = T.y - 51;
                                I = new Laya.Point(b, k - 400), _ = new Laya.Point(b, k), C.pos(I.x, I.y), C.anchorX = .5, C.anchorY = .5, C.height = 101, C.width = 106, C.on(Laya.Event.CLICK, this, function () {
                                    Laya.Tween.clearAll(C), C.alpha = 0, o.scale(1, 1), o.alpha = 1, p.scale(1, 1), p.alpha = 1, Laya.timer.once(500, a, function () {
                                        C.destroy()
                                    }), a.boxClick(t)
                                });
                                var L = this;
                                Laya.Tween.to(C, {
                                    x: _.x,
                                    y: _.y
                                }, 300, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
                                    var e = i;
                                    Laya.Tween.to(C, {
                                        height: 80,
                                        width: 120
                                    }, 250, null, Laya.Handler.create(a, function () {
                                        var i = e;
                                        Laya.Tween.to(C, {
                                            height: 101,
                                            width: 106
                                        }, 800, Laya.Ease.bounceOut, Laya.Handler.create(a, function () {
                                            var e = i;
                                            Laya.Tween.to(C, {
                                                height: 80,
                                                width: 120
                                            }, 250, null, Laya.Handler.create(a, function () {
                                                var i = e;
                                                Laya.Tween.to(C, {
                                                    height: 101,
                                                    width: 106
                                                }, 800, Laya.Ease.bounceOut, Laya.Handler.create(a, function () {
                                                    var e = i;
                                                    Laya.Tween.to(C, {
                                                        height: 80,
                                                        width: 120
                                                    }, 250, null, Laya.Handler.create(a, function () {
                                                        var i = e;
                                                        Laya.Tween.to(C, {
                                                            height: 101,
                                                            width: 106
                                                        }, 800, Laya.Ease.bounceOut, Laya.Handler.create(a, function () {
                                                            var e = i;
                                                            C.destroy(), o.scale(1, 1), o.alpha = 1, p.scale(1, 1), p.alpha = 1, Laya.timer.once(500, a, function () {
                                                                var i = e;
                                                                L[i(2648)](t)
                                                            })
                                                        }), 0, !1, !0)
                                                    }), 0, !1, !0)
                                                }), 0, !1, !0)
                                            }), 0, !1, !0)
                                        }), 0, !1, !0)
                                    }), 0, !1, !0)
                                }))
                            }
                            o.skin = "ui_car/" + v.icon + ".png", s.text = this.listGarageCfg[t].level
                        }
                        1 == l.default.instance.tutorialState ? e.visible = 0 == t || 1 == t : e.visible = !0, p.on(Laya.Event.CLICK, this, this.boxClick, [t]), o.off(Laya.Event.MOUSE_DOWN, this, this.onStarDrag), o.on(Laya.Event.MOUSE_DOWN, this, this.onStarDrag, [t, o])
                    }, a.prototype.boxClick = function (e) {
                        Laya.Tween.clearAll(this.listImgBox[e]), w.default.instance.playSfx(w.default.Merge);
                        var t = 0;
                        u.default.getIsNeedScreenAdaptive() && (t = 20);
                        var i = this.scene.listGarage.x - .5 * this.scene.listGarage.width,
                            a = (this.scene.listGarage.y - this.LIST_CENTER_Y_TO_TOP_DIS - t) * (Laya.stage.height / 1334),
                            n = i + this.LIST_BOX_WIDTH / 2 + this.LIST_BOX_WIDTH * (e % 4) + 13,
                            o = a + this.LIST_BOX_HEIGHT / 2 + this.LIST_BOX_HEIGHT * Math.floor(e / 4) - 5;
                        this.particleAni(n, o), this.listGarageCfg[e].boxState = 0, l.default.instance.setGarageCarData(this.listGarageCfg), this.scene.listGarage.refresh()
                    }, a.prototype.particleAni = function (e, t) {
                        var i = new Laya.Animation;
                        i.scale(1.3, 1.3), i.blendMode = "lighter", i.pos(e, t), i.loadAnimation("res/ui_particle/aniOne.ani"), this.scene.addChild(i), i.play(0, !1), w.default.instance.playSfx(w.default.Merge)
                    }, a.prototype.playBoxAni = function () {
                        for (var e = this, t = 0, i = 0; i < this.listGarageCfg.length; i++) 0 != this.listGarageCfg[i].boxState && t++;
                        if (0 != this.listImgBox.length)
                            for (var a = function (i) {
                                    0 != n.listGarageCfg[i].boxState && (n.listImgBox[i].height = 101, n.listImgBox[i].width = 106, Laya.Tween.to(n.listImgBox[i], {
                                        height: 80,
                                        width: 120,
                                        y: 105
                                    }, 250, null, Laya.Handler.create(n, function () {
                                        Laya.Tween.to(e.listImgBox[i], {
                                            height: 101,
                                            width: 106,
                                            y: 105
                                        }, 800, Laya.Ease.bounceOut, Laya.Handler.create(e, function () {
                                            if (e.playBoxAniTimes++,
                                                e.playBoxAniTimes >= 3 * t) {
                                                e.needPlayParticleArray = e.listGarageCfg, e.playBoxAniTimes = 0, Laya.timer.clear(e, e.playBoxAni);
                                                for (var a = 0; a < e.listGarageCfg.length; a++) {
                                                    if (0 != e.listGarageCfg[a].boxState) {
                                                        var n = 0;
                                                        u.default.getIsNeedScreenAdaptive() && (n = 20);
                                                        var o = e.scene.listGarage.x - .5 * e.scene.listGarage.width,
                                                            r = (e.scene.listGarage.y - e.LIST_CENTER_Y_TO_TOP_DIS - n) * (Laya.stage.height / 1334),
                                                            s = o + e.LIST_BOX_WIDTH / 2 + e.LIST_BOX_WIDTH * (a % 4) + 13,
                                                            c = r + e.LIST_BOX_HEIGHT / 2 + e.LIST_BOX_HEIGHT * Math.floor(a / 4) - 5;
                                                        e.particleAni(s, c)
                                                    }
                                                    e.listGarageCfg[a].boxState = 0
                                                }
                                                l.default.instance.setGarageCarData(e.listGarageCfg), e.scene.listGarage.refresh()
                                            }
                                            Laya.Tween.clearAll(e.listImgBox[i])
                                        }), 0, !1, !0)
                                    }), 0, !1, !0))
                                }, n = this, o = 0; o < this.listImgBox.length; o++) a(o)
                    }, a.prototype.onStarDrag = function (e, t, i) {
                        if (!this.protectGetgunMode) {
                            u.default.isNullOrEmpty(this.hand) || this.hand.destroy();
                            var a = c.default.instance.getCarInfoByLevelId(this.listGarageCfg[e].level);
                            if (!u.default.isNullOrEmpty(a)) {
                                this.mouseDownX = i.stageX, this.mouseDownY = i.stageY, this.mouseState = !0, this.listSameCarLevel = [], this.curChoiceCarData = this.listGarageCfg[e], this.curChoiceIndex = e, t.alpha = .6;
                                var n = 0;
                                for (var o in this.carConfig) n++;
                                for (var r = this.listGarageCfg[this.curChoiceIndex].level, s = 0; s < this.listGarageCfg.length; s++) this.listGarageCfg[s].level == r && s != this.curChoiceIndex && 0 == this.listGarageCfg[s].boxState && r != n && this.listSameCarLevel.push(this.listChoiceStartIcon[s]);
                                for (s = 0; s < this.listSameCarLevel.length; s++) this.listSameCarLevel[s].visible = !0;
                                this.playChoiceStarAni(), u.default.isNullOrEmpty(this.curCarSprite) || this.curCarSprite.destroy(), this.curCarSprite = new f, this.curCarSprite.width = 272, this.curCarSprite.height = 329, this.scene.addChild(this.curCarSprite), this.listGarageCfg[e].carId, this.curCarSprite.skin = "ui_car/" + a.icon + ".png", this.curCarSprite.pivot(this.curCarSprite.width / 2, this.curCarSprite.height / 2), this.curCarSprite.x = this.mouseDownX, this.curCarSprite.y = this.mouseDownY, this.curCarSprite.scale(.56, .56);
                                var l = 1 == this.tutorialState ? 0 : 100;
                                this.curCarSprite.startDrag(this.dragRegion, !1, l), this.scene.on(Laya.Event.MOUSE_UP, this, this.onMouseUp, [t])
                            }
                        }
                    }, a.prototype.playChoiceStarAni = function () {
                        var e = this;
                        if (this.mouseState)
                            for (var t = function (t) {
                                    Laya.Tween.to(i.listSameCarLevel[t], {
                                        scaleX: 1.2,
                                        scaleY: 1.2
                                    }, 600, Laya.Ease.linearInOut, Laya.Handler.create(i, function () {
                                        Laya.Tween.to(e.listSameCarLevel[t], {
                                            scaleX: 1,
                                            scaleY: 1
                                        }, 600, Laya.Ease.linearInOut, Laya.Handler.create(e, function () {
                                            Laya.Tween.clearAll(e.listSameCarLevel[t]), e.playChoiceStarAni()
                                        }), 0, !1, !0)
                                    }), 0, !1, !0)
                                }, i = this, a = 0; a < this.listSameCarLevel.length; a++) t(a)
                    }, a.prototype.onMouseUp = function (e, t) {
                        var i = this;
                        if (this.mouseState) {
                            for (this.mouseState = !1, y = 0; y < this.listSameCarLevel.length; y++) Laya.Tween.clearAll(this.listSameCarLevel[y]), this.listSameCarLevel[y].scale(1, 1), this.listSameCarLevel[y].visible = !1;
                            u.default.getIsNeedScreenAdaptive();
                            for (var a = .5 * Laya.stage.width - .5 * this.scene.listGarage.width, n = this.scene.AnchorCenter.y - .5 * this.scene.AnchorCenter.height + (this.scene.listGarage.y - this.LIST_CENTER_Y_TO_TOP_DIS), o = this.LIST_BOX_WIDTH, r = this.LIST_BOX_HEIGHT, h = function (h) {
                                    if (1 == l.default.instance.tutorialState && h > 1) return s.default.instance.createUI(s.default.UI_Tip, {
                                        text: "请完成当前新手引导!"
                                    }), u.default.isNullOrEmpty(m.curCarSprite) || (e.alpha = 1, m.curCarSprite.destroy()), {
                                        value: void 0
                                    };
                                    var y = Math.floor(h / 4),
                                        I = h % 4;
                                    if (t.stageX > a + I * o && t.stageX < a + (I + 1) * o && t.stageY > n + y * r && t.stageY < n + (y + 1) * r) {
                                        if (2 == l.default.instance.tutorialState) {
                                            var S = I + 4 * y;
                                            if (6 != S && 2 != S) return s.default.instance.createUI(s.default.UI_Tip, {
                                                text: "请完成当前新手引导!"
                                            }), u.default.isNullOrEmpty(m.curCarSprite) || (e.alpha = 1, m.curCarSprite.destroy()), "break";
                                            console.log("执行交换!")
                                        }
                                        m.needReplaceCarData = m.listGarageCfg[h];
                                        var x = 0;
                                        for (var _ in m.carConfig) x++;
                                        if (m.curChoiceCarData.carId == m.needReplaceCarData.carId && m.curChoiceIndex != h && m.curChoiceCarData.level < x && 0 == m.needReplaceCarData.boxState) {
                                            w.default.instance.playSfx(w.default.Merge), 1 == l.default.instance.tutorialState && (l.default.instance.finishTutorial(2), m.refreshNewBieGudie());
                                            var C = !0;
                                            for (var _ in m.carConfig)
                                                if (m.needReplaceCarData.level + 1 == m.carConfig[_].level) {
                                                    if (m.needReplaceCarData.level + 1 > l.default.instance.curMaxLevel) {
                                                        switch (l.default.instance.isSyncOnline && l.default.instance.saveAllData(), l.default.instance.setMaxLevel(), g.default.instance.setUserCloudStorage("curMaxLevel", l.default.instance.curMaxLevel.toString()), m.refreshTopRoleInfo(), l.default.instance.curMaxLevel) {
                                                            case 2:
                                                                u.default.biReport(v.default.finishOneUsCar);
                                                                break;
                                                            case 3:
                                                                u.default.biReport(v.default.usCarThreeRank);
                                                                break;
                                                            case 5:
                                                                u.default.biReport(v.default.usCarFiveRank)
                                                        }
                                                        l.default.instance.secondPlanRecomCar = [], l.default.instance.curMaxLevel > 5 && (l.default.instance.setCurRecomCarLevel(l.default.instance.getCurRecomCarLevelId()), m.setCurNeedBuyCarInfo()), C = !1, Laya.timer.once(100, m, function () {
                                                            s.default.instance.createUI(s.default.UI_GainCar), l.default.instance.resetShopCurLeaveTime()
                                                        })
                                                    } else C = !0;
                                                    m.needReplaceCarData = l.default.instance.getGarageCarData(JSON.parse(_));
                                                    break
                                                } if (m.listCarIconObj[h].alpha = 0, m.listGarageCfg.splice(m.curChoiceIndex, 1, m.noCarData), m.listGarageCfg.splice(h, 1, m.needReplaceCarData), l.default.instance.setGarageCarData(m.listGarageCfg), d.default.instance.sendEvent(p.default.SUB_CAR_STOP), m.getGun(), m.scene.listGarage.refresh(), m.refreshGoldData(), C) {
                                                var T = new f,
                                                    b = new f;
                                                T.width = 272, T.height = 329, b.width = 272, b.height = 329;
                                                var k = c.default.instance.getCarInfoByLevelId(m.curChoiceCarData.level);
                                                T.skin = "ui_car/" + k.icon + ".png", b.skin = "ui_car/" + k.icon + ".png", T.pivot(T.width / 2, T.height / 2), b.pivot(b.width / 2, b.height / 2);
                                                var L = a + o / 2 + o * I,
                                                    D = n + r / 2 + r * y - 15,
                                                    G = a + o / 2 + o * I,
                                                    A = n + r / 2 + r * y - 15;
                                                T.x = L, T.y = D, b.x = G, b.y = A, T.scale(.58, .58), b.scale(.58, .58), Laya.stage.addChild(T), Laya.stage.addChild(b), Laya.Tween.to(T, {
                                                    x: L - 140
                                                }, 200, Laya.Ease.circOut, Laya.Handler.create(m, function () {
                                                    i.scene.boxCarAni.x = L, i.scene.boxCarAni.y = D, i.scene.boxCarAni.scale(1.3, 1.3), i.scene.ani1.play(0, !1), Laya.Tween.to(T, {
                                                        x: L
                                                    }, 100, Laya.Ease.quartInOut, Laya.Handler.create(i, function () {
                                                        g.default.instance.onStartVibrateShort(), T.destroy()
                                                    }), 0, !1, !1)
                                                }), 0, !1, !1), Laya.Tween.to(b, {
                                                    x: G + 140
                                                }, 200, Laya.Ease.circOut, Laya.Handler.create(m, function () {
                                                    Laya.Tween.to(b, {
                                                        x: L
                                                    }, 100, Laya.Ease.quartInOut, Laya.Handler.create(i, function () {
                                                        g.default.instance.onStartVibrateShort(), i.listCarIconObj[h].alpha = 1, b.destroy()
                                                    }), 0, !1, !1)
                                                }), 0, !1, !1)
                                            } else m.listCarIconObj[h].alpha = 1
                                        } else 0 == m.needReplaceCarData.boxState && l.default.instance.supplyBoxInGarageIndex != h && (m.listGarageCfg.splice(m.curChoiceIndex, 1, m.needReplaceCarData), m.listGarageCfg.splice(h, 1, m.curChoiceCarData), m.scene.listGarage.refresh(), l.default.instance.setGarageCarData(m.listGarageCfg));
                                        return "break"
                                    }
                                }, m = this, y = 0; y < 12; y++) {
                                var I = h(y);
                                if ("object" == typeof I) return I.value;
                                if ("break" === I) break
                            }
                            u.default.getIsNeedScreenAdaptive();
                            var S = this.scene.imgRecycleCar,
                                x = this.scene.AnchorCenter.x - .5 * this.scene.AnchorCenter.width + S.x,
                                _ = this.scene.AnchorCenter.y - .5 * this.scene.AnchorCenter.height + this.scene.imgRecycleCar.y;
                            this.scene.boxTop.x, this.scene.boxTop.x, this.scene.boxTop.width, this.scene.boxTop.y, this.scene.boxTop.y, this.scene.boxTop.height, t.stageX > x - 50 && t.stageX < x + 50 && t.stageY > _ - 50 && t.stageY < _ + 50 && (Laya.timer.clear(this, this.playDustbinAni), this.isLastestOne() ? s.default.instance.createUI(s.default.UI_Tip, {
                                text: "已经是最后一人了!"
                            }) : (l.default.instance.addCoin(this.curChoiceCarData.sell_gold), this.listGarageCfg.splice(this.curChoiceIndex, 1, this.noCarData), this.scene.listGarage.refresh(), l.default.instance.setGarageCarData(this.listGarageCfg), d.default.instance.sendEvent(p.default.SUB_CAR_STOP), this.getGun(), u.default.biReport(v.default.successSellCar))), u.default.isNullOrEmpty(this.curCarSprite) || (e.alpha = 1, this.curCarSprite.destroy())
                        }
                    }, a.prototype.isLastestOne = function () {
                        var e = 0;
                        for (var t in this.listGarageCfg) 0 != this.listGarageCfg[t].carId && (e += 1);
                        return e <= 1
                    }, a.prototype.doPlayTimerCut = function () {
                        this.lblTime.visible = l.default.instance.addSpeedTime > 0, this.scene.imgDouble.visible = !(l.default.instance.addSpeedTime > 0), this.scene.awardPoint.visible = !1, this.lblTime.changeText(u.default.formatTime(l.default.instance.addSpeedTime))
                    }, a.prototype.doPlayCarlblAni = function () {
                        var e = this;
                        if (this.addTime += 1, 0 != this.listGarageCfg.length)
                            for (var t = function (t) {
                                    var a = 0,
                                        n = l.default.instance.isOpenDoubleCoinAward ? i.gameConfig.CoinAwardMultiple : 1;
                                    a = Math.round(i.listGarageCfg[t].interval / n), 0 != i.listGarageCfg[t].carId && i.addTime % a == 0 && 0 == i.listGarageCfg[t].boxState && (i.listAddGoldLbLObj[t].changeText("+$" + l.default.instance.getCoinNumType(i.listGarageCfg[t].output_gold * l.default.instance.multiple)), Laya.timer.once(i.listGarageCfg[t].interval % a * 1e3, i, function () {
                                        e.curAddCoinTimes++, l.default.instance.addCoin(e.listGarageCfg[t].output_gold * l.default.instance.multiple, !1, 20 == e.curAddCoinTimes), 20 == e.curAddCoinTimes && (e.curAddCoinTimes = 0), e.isPlaying = !0, e.listAddGoldLbLObj[t].alpha = 0 != e.listGarageCfg[t].carId ? 1 : 0, e.listAddGoldLbLObj[t].y = -15, Laya.Tween.to(e.listAddGoldLbLObj[t], {
                                            y: -40
                                        }, 200, Laya.Ease.linearInOut, null, 0, !1, !0)
                                    }, null, !1), Laya.timer.once(1e3 * (i.listGarageCfg[t].interval % a + .6), i, function () {
                                        Laya.Tween.to(e.listAddGoldLbLObj[t], {
                                            y: -80,
                                            alpha: 0
                                        }, 300, Laya.Ease.linearInOut, Laya.Handler.create(e, function () {
                                            e.listAddGoldLbLObj[t].alpha = 0, e.isPlaying = !1
                                        }), 0, !1, !0)
                                    }, null, !1))
                                }, i = this, a = 0; a < this.listAddGoldLbLObj.length; a++) t(a)
                    }, a.prototype.getGarageAllValue = function () {
                        for (var e = 0, t = 0; t < this.listGarageCfg.length; t++) 0 == this.listGarageCfg[t].boxState && (l.default.instance.isOpenDoubleCoinAward ? e += this.listGarageCfg[t].income * this.gameConfig.CoinAwardMultiple : e += this.listGarageCfg[t].income);
                        return e * l.default.instance.multiple * 1
                    }, a.prototype.doDestroy = function () {
                        g.default.instance.destroyGetUserInfoBtn(), this.stopPlayHandAni(), Laya.timer.clearAll(this), u.default.isNullOrEmpty(this.particle) || this.particle.destroy(), u.default.isNullOrEmpty(this.hand) || this.hand.destroy(), u.default.isNullOrEmpty(this.FlyBox) || this.FlyBox.destroy(), l.default.instance.isNeedPerSecondEarnings = !0, u.default.isNullOrEmpty(this.guideContainer) || this.guideContainer.destroy(), u.default.isNullOrEmpty(this.tipContainer) || this.tipContainer.destroy(), u.default.isNullOrEmpty(this.tipContainerText) || this.tipContainerText.destroy(), w.default.instance.stopBgm(), S.default.remove(), u.default.isNullOrEmpty(this.scene.sprOpenDataView.texture) || u.default.isNullOrEmpty(this.scene.sprOpenDataView.texture.bitmap) || (this.scene.sprOpenDataView.texture.bitmap.destroy(), this.scene.sprOpenDataView.destroy()), l.default.instance.mainLevelScreenTime = 0, l.default.instance.isStartGame = !0, u.default.isNullOrEmpty(this.scene.sprOpenDataView.texture) || u.default.isNullOrEmpty(this.scene.sprOpenDataView.texture.bitmap) || (this.scene.sprOpenDataView.texture.bitmap.destroy(), this.scene.sprOpenDataView.destroy())
                    }, a.prototype.hideCollectBtn = function () {
                        this.scene.btnCollection.visible = !1, this.scene.lblAddGold.changeText("+" + l.default.instance.getCoinNumType(this.getGarageAllValue()) + "/s"), this.scene.lblAddGold2.changeText("+" + l.default.instance.getCoinNumType(this.getGarageAllValue()) + "/s"), this.refreshTopRedPoint()
                    }, a.prototype.onClickFlyBox = function () {
                        this.FlyBox.visible = !1
                    }, a.prototype.showSupply = function (e) {
                        this.supplyId = e, this.FlyBox.visible = !0, I.default.instance.isShowPage = !1
                    }, a.prototype.hideSupply = function () {
                        this.scene.supplyboxBtn.visible = !1, this.scene.supplyboxBtnFly.visible = !1, this.scene.supplyHitPoint.visible = !1, l.default.instance.setSupplyBoxInGarageIndex(-1), l.default.instance.isShowSupplyOutsideGarage
                    }, a.prototype.freshSupplyCar = function () {
                        this.scene.listGarage.refresh(), Laya.timer.clear(this, this.playBoxAni), Laya.timer.loop(1050, this, this.playBoxAni)
                    }, a.prototype.flyCoin = function (e) {
                        var t, i, a = new x.default,
                            n = {
                                x: .5 * Laya.stage.width,
                                y: .5 * Laya.stage.height
                            };
                        switch (e) {
                            case h.default.QMoneyType.Coin:
                                i = new Laya.Point(this.scene.GoldIcon.x, this.scene.GoldIcon.y), (i = this.scene.GoldIcon.parent.localToGlobal(i)).x -= 5, i.y -= 5;
                                break;
                            case h.default.QMoneyType.Diamond:
                                i = new Laya.Point(this.scene.DiamondIcon.x, this.scene.DiamondIcon.y), (i = this.scene.DiamondIcon.parent.localToGlobal(i)).x -= 5, i.y -= 5
                        }
                        t = {
                            fromPos: n,
                            toPos: i,
                            type: e,
                            countType: 1
                        }, a.playFlyResAni(t)
                    }, a.prototype.refreshCountDownTime = function () {
                        this.scene.lblStamTime.visible = !(l.default.instance.stamina >= this.gameConfig.MaxRegainStamina), this.residueTime = this.recoveStaminaTime - l.default.instance.timeDifference, this.scene.lblStamTime.changeText(u.default.formatTime(this.residueTime))
                    }, a.prototype.onCloseStaminaDialog = function () {
                        l.default.instance.stamina >= this.gameConfig.everyTimesUseStaminaNum && (l.default.instance.isCurLevelLoadOk(l.default.instance.curTrackId) ? (1 == l.default.instance.curTrackId ? (l.default.instance.setIsFirstNewBie(), u.default.biReport(v.default.onClickStartGame)) : 2 == l.default.instance.curTrackId && u.default.biReport(v.default.onClickSecondLevel), l.default.instance.setReviveTimes(!0), s.default.instance.removeUI(s.default.UI_MainPage), Laya.timer.frameOnce(1, this, function () {
                            s.default.instance.createUI(s.default.UI_Game)
                        })) : s.default.instance.createUI(s.default.UI_WaitLoadDialog))
                    }, a.prototype.freshAwardRedPointShow = function () {
                        this.scene.imgRedDiot.visible = !0;
                        var e = [];
                        for (var t in l.default.instance.welfareList) 0 == l.default.instance.welfareList[t].state && e.push(0);
                        0 == e.length && (this.scene.imgRedDiot.visible = !1)
                    }, a.prototype.onClickBtnInviteBox = function () {
                        l.default.instance.setInviteBoxRedPointShow(!0), s.default.instance.createUI(s.default.UI_InviteFriendBoxDialog)
                    }, a.prototype.freshInviteBoxRedPoint = function () {
                        console.log("zlk——--红点显示 InviteBoxState：" + l.default.instance.InviteBoxState + " InviteBoxRedPointShow:" + l.default.instance.InviteBoxRedPointShow), l.default.instance.InviteBoxState || !l.default.instance.InviteBoxRedPointShow ? (this.scene.imgInviteBoxRed.visible = !0, l.default.instance.setInviteBoxRedPointShow(!0)) : this.scene.imgInviteBoxRed.visible = !1
                    }, a.prototype.initRankView = function () {
                        this.scene.backGround.visible = !1, this.scene.RankGiftPanel.x = this.rankStartX, this.scene.RankGiftPanel.y = this.rankStartY, this.scene.RankArrow.rotation = 180, d.default.instance.sendEvent(p.default.RANK_CHANGE_JCDL_SHOW, "SHOW")
                    }, a.prototype.clickRankListBtn = function () {
                        var e = this;
                        this.isRankViewAni || (this.isRankViewAni = !0, this.scene.RankGiftPanel.x == this.rankStartX ? (this.scene.sprOpenDataViewByRank = new laya.ui.WXOpenDataViewer, this.scene.sprOpenDataViewByRank.width = 583, this.scene.sprOpenDataViewByRank.height = 876, this.scene.sprOpenDataViewByRank.pos(42, 142), this.RankEffectState("OPEN"), Laya.Tween.to(this.scene.RankGiftPanel, {
                            x: this.rankStartX - this.scene.RankGiftPanel.width + 5
                        }, 300, null, Laya.Handler.create(this, function () {
                            e.isRankViewAni = !1, u.default.biReport(v.default.showGiftRankList), e.showGiftRankPlayerList()
                        }))) : (this.scene.sprOpenDataViewByRank.removeSelf(), this.clearOpenDataView(), this.RankEffectState("CLOSE"), Laya.Tween.to(this.scene.RankGiftPanel, {
                            x: this.rankStartX
                        }, 300, null, Laya.Handler.create(this, function () {
                            e.isRankViewAni = !1
                        }))))
                    }, a.prototype.clearOpenDataView = function () {
                        g.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "clearCanvas"
                        }))
                    }, a.prototype.RankEffectState = function (e) {
                        var t = [{
                                bgShow: !0,
                                Rotation: 0,
                                State: "HIDE"
                            }, {
                                bgShow: !1,
                                Rotation: 180,
                                State: "SHOW"
                            }],
                            i = null;
                        "OPEN" == e ? i = t[0] : "CLOSE" == e && (i = t[1]), this.scene.backGround.visible = i.bgShow, this.scene.RankArrow.rotation = i.Rotation, d.default.instance.sendEvent(p.default.RANK_CHANGE_JCDL_SHOW, i.State)
                    }, a.prototype.clickBackGround = function () {
                        this.clickRankListBtn()
                    }, a.prototype.showGiftRankPlayerList = function () {
                        g.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "ShowGiftRankList",
                            type: 1,
                            key: "levelCount",
                            shareTicket: ""
                        }))
                    }, a.prototype.onSprOpenDataByRankDown = function (e) {
                        this.isControl = !0, this.controlStartY = e.stageY
                    }, a.prototype.onSprOpenDataByRankDrag = function (e) {
                        if (this.isControl) {
                            var t = e.stageY;
                            this.distance = t - this.controlStartY, this.controlStartY = t, this.scrollRankList(this.distance)
                        }
                    }, a.prototype.onSprOpenDataByRankUp = function (e) {
                        i.deltaY = this.distance, Laya.Tween.to(i, {
                            deltaY: 0
                        }, 1e3, Laya.Ease.strongOut), this.isControl = !1, this.controlStartY = null
                    }, a.prototype.scrollRankList = function (e) {
                        g.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "GiftRankListScroll",
                            deltaY: e,
                            key: "levelCount"
                        }))
                    }, a.prototype.onClickDiamondGift = function (e) {
                        u.default.biReport(v.default.sendDiamondGift), Laya.Browser.window.wx.setMessageToFriendQuery && Laya.Browser.window.wx.setMessageToFriendQuery({
                            shareMessageToFriendScene: 2
                        }), console.log("排行榜界面点击 x:" + e.stageX + " y:" + e.stageY);
                        var t = this.scene.DiamondPanel.localToGlobal(new Laya.Point(0, 0));
                        g.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "clickGiftRankList",
                            scene: 2,
                            point: {
                                x: e.stageX - t.x,
                                y: e.stageY - t.y
                            }
                        }))
                    }, a.prototype.onClickStaminaGift = function (e) {
                        u.default.biReport(v.default.sendStaminaGift), Laya.Browser.window.wx.setMessageToFriendQuery && Laya.Browser.window.wx.setMessageToFriendQuery({
                            shareMessageToFriendScene: 3
                        }), console.log("排行榜界面点击 x:" + e.stageX + " y:" + e.stageY);
                        var t = this.scene.StaminaPanel.localToGlobal(new Laya.Point(0, 0));
                        g.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "clickGiftRankList",
                            scene: 3,
                            point: {
                                x: e.stageX - t.x,
                                y: e.stageY - t.y
                            }
                        }))
                    }, a.prototype.checkShareGift = function () {
                        if (console.log("zlk__-领取赠送奖励:" + l.default.instance.receivedGiftOnce), tywx.TuyooSDK.UserInteractiveInfo && !l.default.instance.receivedGiftOnce) {
                            l.default.instance.receivedGiftOnce = 1;
                            for (var e = [], t = 0; t < tywx.TuyooSDK.UserInteractiveInfo.length; t++) {
                                var i = tywx.TuyooSDK.UserInteractiveInfo[t].key + "",
                                    a = parseInt(tywx.TuyooSDK.UserInteractiveInfo[t].value);
                                if ("1" != i && a > 0) {
                                    var n = null,
                                        o = 0,
                                        r = parseInt(l.default.instance.RankGiftAwardLimit[i]) || 0;
                                    switch (console.log("zlk__-领取赠送奖励  1 key:" + i + "value:" + a + "dailylimit:" + r), i) {
                                        case "2":
                                            console.log("zlk__-领取赠送奖励  2 todayDiamondGiftFromFriends:" + l.default.instance.todayDiamondGiftFromFriends), u.default.biReport(v.default.receiveDiamondGift), l.default.instance.todayDiamondGiftFromFriends < r && (o = a > (c = r - l.default.instance.todayDiamondGiftFromFriends) ? c : a) > 0 && (n = {
                                                Type: "Diamond",
                                                Count: o * l.default.instance.GiftRankDiamondAward
                                            }, e.push(n), h = parseInt(l.default.instance.todayDiamondGiftFromFriends + "") + parseInt(o + ""), l.default.instance.setTodayDiamondGiftFromFriends(h));
                                            break;
                                        case "3":
                                            if (console.log("zlk__-领取赠送奖励  2 todayStaminaGiftFromFriends:" + l.default.instance.todayStaminaGiftFromFriends), u.default.biReport(v.default.receiveStaminaGift), l.default.instance.todayStaminaGiftFromFriends < r) {
                                                var c = r - l.default.instance.todayStaminaGiftFromFriends;
                                                if ((o = a > c ? c : a) > 0) {
                                                    n = {
                                                        Type: "Stamina",
                                                        Count: o * l.default.instance.GiftRankStaminaAward
                                                    }, e.push(n);
                                                    var h = parseInt(l.default.instance.todayStaminaGiftFromFriends + "") + parseInt(o + "");
                                                    l.default.instance.setTodayStaminaGiftFromFriends(h)
                                                }
                                            }
                                    }
                                    o > 0 && this.setInteractionData({
                                        key: tywx.TuyooSDK.UserInteractiveInfo[t].key,
                                        value: a - o
                                    })
                                }
                            }
                            e.length > 0 && s.default.instance.createUI(s.default.UI_InvitePlayerRewardDialog, {
                                from: "Rank",
                                rewardParams: e
                            })
                        }
                    }, a
                }(o.default);
                e.QMainPageScene = a
            }(n.scene || (n.scene = {})), i.default = a.scene.QMainPageScene
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QHttp": 6,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QSoundMgr": 18,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28,
        "../logic/QSupplyMgr": 29,
        "./QFlyRes": 39,
        "./QJcdlTypeView": 51
    }],
    55: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../core/QUIMgr"),
            h = e("../core/QCfgMgr"),
            d = e("../data/QGameConst"),
            p = (e("../../framework/QDebug"), e("../data/QGameData")),
            u = e("../../framework/QUtil"),
            g = e("../../framework/QEventMgr"),
            m = e("../data/QBIEvent"),
            f = e("../logic/QShareParam"),
            y = e("../core/QWxSDK"),
            v = e("../data/QEventType");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.lotteryCfg = [], t.url = "ui_dialog/", t.type = ".png", t.resultIndex = 1, t.arrayLength = 8, t.lastMultiple = 1, t.arrCantContinuedIndex = new Array, t.arrWeight = new Array, t.playTimes = 0, t.needAddItemIndex = 0, t.isLotteryState = 0, t.lastIntervalValue = 0, t.lotteryTurnTimes = 0, t.MAX_TURN_TIMES = 3, t.curIndex = 0, t.curListMaxIndex = 0, t.OriginListNum = 4, t.isCirculationList = !0, t.cirShowList = [], t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                g.default.instance.register(v.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), g.default.instance.register(v.default.UPDATE_LOTTERY, this.refreshTip, this), g.default.instance.register(v.default.PUSH_VIDEO_AD_FAIL, this.noVideoToShare, this)
            }, t.prototype.unregisterEvent = function () {
                g.default.instance.unregister(v.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), g.default.instance.unregister(v.default.PUSH_VIDEO_AD_FAIL, this.noVideoToShare, this), g.default.instance.unregister(v.default.UPDATE_LOTTERY, this.refreshTip, this)
            }, t.prototype.init = function () {
                for (this.scene = new l.ui.view.NewLottyDialogUI, u.default.getIsNeedScreenAdaptive() && (this.scene.y += 50), this.gameConfig = h.default.instance.dicConfig[d.default.QCfgType.GameConfig], e = 0; e < this.gameConfig.newLotteryCfg.length; e++) this.lotteryCfg.push(this.gameConfig.newLotteryCfg[e]);
                this.resultIndex = p.default.instance.lastLotteryIndex, this.arrayLength = this.lotteryCfg.length, this.scene.listAward.hScrollBarSkin = "", this.scene.listAward.renderHandler = new Laya.Handler(this, this.listLotteryHandle), this.scene.listAward.array = this.lotteryCfg, this.scene.listAward.scrollBar.touchScrollEnable = !1, this.totalWeight = 0;
                for (var e = 0; e < this.arrayLength; e++) {
                    var t = this.lotteryCfg[e];
                    this.totalWeight += t.weight, this.arrWeight.push(this.totalWeight), 0 == t.moneyType && this.arrCantContinuedIndex.push(e)
                }
                this.scene.btnReturn.on(Laya.Event.CLICK, this, this.onClickBtnReturn), this.scene.BtnStart.on(Laya.Event.CLICK, this, this.onClickBtnStart, [!0]), u.default.RegisterBtnClickWithAnim(this.scene.BtnAddCount, this, this.onClickBtnAddCount), this.refreshData(), this.refreshRotating(), this.refreshGoldData(), Laya.timer.loop(1, this, this.onTimeHandle), this.showJcdlView()
            }, t.prototype.setParam = function (e) {
                this.isMainEnter = e.isMainEnter, this.isMainEnter ? u.default.biReport(m.default.lottrySuccessPop) : Laya.timer.frameOnce(1, this, function () {
                    c.default.instance.createUI(c.default.UI_Tip, {
                        text: "获得一次免费抽奖机会",
                        delay: 2
                    })
                })
            }, t.prototype.refreshGoldData = function () {
                this.scene.lblGoldNum.changeText(p.default.instance.getCoinNumType(p.default.instance.coin)), this.scene.lblAddGold2.changeText("+" + p.default.instance.getCoinNumType(p.default.instance.getGarageAllValue()) + "/s"), this.scene.lblDiamondNum.changeText(p.default.instance.getCoinNumType(p.default.instance.diamond)), this.scene.lblStaminaNum.changeText(p.default.instance.stamina.toString())
            }, t.prototype.onTimeHandle = function () {
                if (this.scene.listAward.scrollBar.value += 0 == this.isLotteryState ? 1 : 1 == this.isLotteryState ? 50 : 0, this.needAddItemIndex >= this.arrayLength && (this.needAddItemIndex = 0), this.scene.listAward.scrollBar.value - this.lastIntervalValue >= 250 && (this.lastIntervalValue = this.scene.listAward.scrollBar.value, 1 == this.isLotteryState && this.resultIndex == this.needAddItemIndex % 8 && this.lotteryTurnTimes++, this.scene.listAward.addItem(this.lotteryCfg[this.needAddItemIndex % 8]), this.needAddItemIndex++), this.lotteryTurnTimes >= this.MAX_TURN_TIMES) {
                    this.lotteryTurnTimes = 0, this.isLotteryState = 2;
                    var e = this.resultIndex;
                    0 == e && (e = 8), this.scene.listAward.scrollTo(e - 1), Laya.timer.once(300, this, this.TurningEnd)
                }
            }, t.prototype.listLotteryHandle = function (e, t) {
                this.curListMaxIndex = t, this.curIndex = t % 8;
                var i = e.getChildByName("imgBg"),
                    a = i.getChildByName("imgIcon"),
                    n = i.getChildByName("lblAwardNum");
                a.skin = this.url + this.lotteryCfg[this.curIndex].iconName + this.type, n.align = "center", n.changeText(this.lotteryCfg[this.curIndex].namepath)
            }, t.prototype.onClickBtnReturn = function () {
                c.default.instance.removeUI(c.default.UI_Lottery), c.default.instance.getUIShowState(c.default.UI_Result) && (p.default.instance.checkKeFuDialog() || p.default.instance.checkAchievementReward() || g.default.instance.sendEvent(v.default.GET_RESULT_AWARD))
            }, t.prototype.generateResultIndex = function () {
                if (p.default.instance.todayFirstLottery) return this.resultIndex = this.getRandomMultipleResult(), void p.default.instance.setTodayFirstLottery();
                if (this.IsLastResultInCantContinuedArray())
                    for (this.resultIndex = this.genRandomResult(); this.IsLastResultInCantContinuedArray();) this.resultIndex = this.genRandomResult();
                else this.resultIndex = this.genRandomResult()
            }, t.prototype.IsLastResultInCantContinuedArray = function () {
                for (var e = 0; e < this.arrCantContinuedIndex.length; e++)
                    if (this.arrCantContinuedIndex[e] == this.resultIndex) return !0;
                return !1
            }, t.prototype.getRandomMultipleResult = function () {
                var e = u.default.getRandomInt(0, this.arrCantContinuedIndex.length - 1);
                return this.arrCantContinuedIndex[e]
            }, t.prototype.genRandomResult = function () {
                for (var e = u.default.getRandomInt(0, this.totalWeight), t = 0; t < this.arrWeight.length; t++)
                    if (e <= this.arrWeight[t]) return t;
                return 0
            }, t.prototype.TurningEnd = function () {
                Laya.timer.clear(this, this.onTimeHandle), this.updateLotteryCount(), this.addMoney2Data(), p.default.instance.setLastLotteryIndex(this.resultIndex), this.refreshData();
                var e = this.lotteryCfg[this.resultIndex];
                console.log(" this.resultIndex 0000000000: " + this.resultIndex);
                var t = 1;
                e.moneyType == d.default.QMoneyType.Coin && (t = p.default.instance.garageEarnings);
                var i = {
                    name: e.name,
                    icon: e.icon,
                    count: e.count * this.lastMultiple * t,
                    moneyType: e.moneyType
                };
                c.default.instance.removeUI(c.default.UI_Lottery), c.default.instance.createUI(c.default.UI_CommonPage, {
                    viewType: d.default.QCommonViewType.Lattery,
                    dataView: i,
                    isLotteryEnter: !0
                })
            }, t.prototype.updateLotteryCount = function () {
                p.default.instance.availableLotteryCount--, p.default.instance.setAvailableLotteryCount(p.default.instance.availableLotteryCount)
            }, t.prototype.getLastMultiple = function () {
                var e = this.lotteryCfg[this.resultIndex];
                return console.log("当前是否分享:" + p.default.instance.isLotteryShare), null != e && 0 == e.moneyType && p.default.instance.isLotteryShare ? (p.default.instance.setIsLotteryShare(!1), e.count) : 1
            }, t.prototype.addMoney2Data = function () {
                var e = this.lotteryCfg[this.resultIndex],
                    t = e.count;
                e.moneyType == d.default.QMoneyType.Coin && (t = p.default.instance.garageEarnings * e.count);
                var i = t * this.lastMultiple;
                p.default.instance.addMoney(e.moneyType, i, !1)
            }, t.prototype.refreshData = function () {
                if (this.scene.BtnStart.visible = this.canStart(), this.scene.BtnAddCount.visible = !this.canStart(), !this.canStart()) {
                    var e = p.default.instance.getIsActiveSharePoint(d.default.QShareType.AddLotteryCount) ? p.default.instance.getPlayerScoreVideoShareType() : p.default.instance.getPointVideoShareType(d.default.QShareType.AddLotteryCount);
                    this.scene.imgVideo.visible = e == d.default.QAcquireWayType.Video, this.scene.imgShare.visible = !1, e == d.default.QAcquireWayType.Share && (this.scene.lblLotteryHint.x = 200)
                }
                g.default.instance.sendEvent(v.default.GAME_SIGN), this.scene.lblTimes.changeText("免费转盘次数: " + p.default.instance.availableLotteryCount), this.scene.lblLotteryHint.changeText("抽奖"), this.refreshTip()
            }, t.prototype.refreshTip = function () {
                this.lotteryCfg = p.default.instance.gameConfig.newLotteryCfg;
                var e = this.lotteryCfg[p.default.instance.lastLotteryIndex];
                console.log("是否要刷新：" + p.default.instance.isLotteryShare), null != e && 0 == e.moneyType && p.default.instance.isLotteryShare ? (this.scene.imgNext.visible = !0, this.scene.imgNextDes.skin = 2 == e.count ? "ui_dialog/lottery_text_six.png" : "ui_dialog/lottery_text_three.png") : this.scene.imgNext.visible = !1
            }, t.prototype.canStart = function () {
                return p.default.instance.availableLotteryCount > 0
            }, t.prototype.onClickBtnStart = function (e) {
                void 0 === e && (e = !1), 1 != this.isLotteryState && this.canStart() && (e && (console.log(" 免费获取 !"), u.default.biReport(m.default.freeStartTurnLottry)), this.lotteryTurnTimes = 0, this.isLotteryState = 1, this.playTimes++, this.lastMultiple = this.getLastMultiple(), this.generateResultIndex(), this.refreshRotating(), u.default.biReport(m.default.successTurnDial))
            }, t.prototype.refreshRotating = function () {
                this.scene.btnReturn.visible = !(1 == this.isLotteryState), this.scene.BtnStart.visible = 1 != this.isLotteryState && this.scene.BtnStart.visible, this.scene.BtnAddCount.visible = 1 != this.isLotteryState && this.scene.BtnAddCount.visible, this.scene.lblTimes.visible = !(1 == this.isLotteryState), this.scene.LotteryCountTips.visible = !(1 == this.isLotteryState)
            }, t.prototype.onClickBtnAddCount = function () {
                if (p.default.instance.getShareTimesIsEnough(d.default.QShareType.AddLotteryCount)) {
                    var e = p.default.instance.getIsActiveSharePoint(d.default.QShareType.AddLotteryCount) ? p.default.instance.getPlayerScoreVideoShareType() : p.default.instance.getPointVideoShareType(d.default.QShareType.AddLotteryCount),
                        t = p.default.instance.IsVideoGain(e);
                    this.param = f.default.create(), this.param.shareType = d.default.QShareType.AddLotteryCount, p.default.instance.isNoVideoAuditVersion ? this.addLotteryCount() : t ? y.default.instance.playVideoAd(this.param, Laya.Handler.create(this, function (e) {
                        e.addLotteryCount()
                    }, [this])) : y.default.instance.fakeShare(this.param, this, function (e) {
                        e.addLotteryCount()
                    }, [this])
                }
            }, t.prototype.addLotteryCount = function () {
                var e = p.default.instance.availableLotteryCount;
                e += p.default.instance.gameConfig.addLotteryCount, p.default.instance.setAvailableLotteryCount(e), this.refreshData(), u.default.biReport(m.default.successAddDialTimes), p.default.instance.getIsActiveSharePoint(d.default.QShareType.AddLotteryCount) ? p.default.instance.setplayerScoreVideoShareTime() : p.default.instance.setLotteryGetTimes(), u.default.biReport(m.default.shareOrVideoTurnLottry), this.onClickBtnStart()
            }, t.prototype.noVideoToShare = function (e) {
                var t = this;
                e.shareType == d.default.QShareType.AddLotteryCount && (u.default.isNullOrEmpty(this.param) && (this.param = f.default.create()), this.param.shareType = d.default.QShareType.AddLotteryCount, y.default.instance.fakeShare(this.param, this, function () {
                    t.addLotteryCount()
                }))
            }, t.prototype.doDestroy = function () {}, t.prototype.showJcdlView = function () {
                this.jcdlConfigDataByLotty = h.default.instance.dicConfig[d.default.QCfgType.JCDL], this.OriginJcdlList = this.gameConfig.LuckyOriginJcdlList, this.autoJcdlList = this.gameConfig.LuckyAutoJcdlList, this.nextTime = this.gameConfig.LuckyJcdlNextTime, this.curRollIndex = 0, this.gameConfig && this.jcdlConfigDataByLotty && this.OriginJcdlList && this.autoJcdlList && (this.autoJcdlList.length <= 2 ? (0 == this.autoJcdlList.length ? this.autoJcdlList = [0, 0] : 1 == this.autoJcdlList.length && this.autoJcdlList.push(0), this.isCirculationList = !1) : this.isCirculationList = !0, this.checkList(), this.showOriginJcdl(), this.showAutoJcdl())
            }, t.prototype.showAutoJcdl = function () {
                this.autoFreshJcdl(), this.isCirculationList && (Laya.timer.clear(this, this.autoFreshJcdl), Laya.timer.loop(this.nextTime, this, this.autoFreshJcdl))
            }, t.prototype.autoFreshJcdl = function () {
                this.curRollIndex < 0 && (this.curRollIndex = 0);
                var e = this.curRollIndex;
                e >= this.autoJcdlList.length && (e = 0, this.curRollIndex = 0), ++this.curRollIndex;
                var t = this.curRollIndex;
                t >= this.autoJcdlList.length && (t = 0, this.curRollIndex = 0), this.cirShowList.push(this.autoJcdlList[e]), this.cirShowList.push(this.autoJcdlList[t]);
                for (var i = 1; i <= 2; i++) {
                    var a = this.cirShowList[i - 1],
                        n = Math.sqrt(Math.random());
                    this.scene["btnRollJcdlIcon" + i].off(Laya.Event.CLICK, this, this.onClickBtnJcdlIconByResult);
                    var o = this.jcdlConfigDataByLotty[a].toappid;
                    this.scene["btnRollJcdlIcon" + i].on(Laya.Event.CLICK, this, this.onClickBtnJcdlIconByResult, [a]), this.scene["imgRollJcdlIcon" + i].skin = this.jcdlConfigDataByLotty[a].icon_url[0] + "?v=" + n, u.default.biReport(m.default.JCDLShow, [o])
                }
                this.cirShowList = []
            }, t.prototype.showOriginJcdl = function () {
                for (var e = 1; e <= this.OriginListNum; e++) {
                    var t = e + 2,
                        i = this.OriginJcdlList[t - 3],
                        a = Math.sqrt(Math.random());
                    this.scene["btnRollJcdlIcon" + t].off(Laya.Event.CLICK, this, this.onClickBtnJcdlIconByResult);
                    var n = this.jcdlConfigDataByLotty[i].toappid;
                    this.scene["btnRollJcdlIcon" + t].on(Laya.Event.CLICK, this, this.onClickBtnJcdlIconByResult, [i]), this.scene["imgRollJcdlIcon" + t].skin = this.jcdlConfigDataByLotty[i].icon_url[0] + "?v=" + a, u.default.biReport(m.default.JCDLShow, [n])
                }
            }, t.prototype.onClickBtnJcdlIconByResult = function (e) {
                var t = this.jcdlConfigDataByLotty[e].toappid;
                y.default.instance.clickAdIcon(t),
                    u.default.biReport(m.default.JCDLClick, [t]), u.default.biReport(m.default.jcdl7)
            }, t.prototype.checkList = function () {
                var e;
                if (this.OriginJcdlList.length < this.OriginListNum) {
                    e = this.OriginJcdlList.length - this.OriginListNum;
                    for (var t = 0; t < e; t++) this.OriginJcdlList.push(0)
                }
            }, t
        }(s.default), o.QNewLottyDialog = r, i.default = a.view.QNewLottyDialog
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    56: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../data/QGameData"),
            h = e("../core/QCfgMgr"),
            d = e("../data/QGameConst"),
            p = e("../../framework/QEventMgr"),
            u = e("../data/QEventType"),
            g = e("../logic/QShareParam"),
            m = e("../core/QWxSDK"),
            f = e("../../framework/QUtil"),
            y = e("../core/QUIMgr"),
            v = e("../data/QBIEvent"),
            w = e("./QJcdlTypeView"),
            I = e("./QFlyRes");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.awardType = 0, t.rewardGoldNum = 0, t.isVideoGain = !1, t.isStopAwardTrackId = !1, t.haveGotReward = !1, t.OriginListNum = 6, t.isCirculationList = !0, t.cirShowList = [], t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                p.default.instance.register(u.default.UPDATE_VIEW_DATA, this.refreshGoldData, this),
                    p.default.instance.register(u.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this),
                    p.default.instance.register(u.default.CLOSE_STAMINA_DIALOG, this.onCloseStaminaDialog, this),
                    p.default.instance.register(u.default.ADD_MONEY, this.flyCoin, this), p.default.instance.register(u.default.GET_RESULT_AWARD, this.getResultAward, this), p.default.instance.register(u.default.AUTO_START_GAME, this.onClickBtnContinue, this), p.default.instance.register(u.default.SHOW_AWARD_RESULT, this.getResultAward, this)
            }, t.prototype.unregisterEvent = function () {
                p.default.instance.unregister(u.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), p.default.instance.unregister(u.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this), p.default.instance.unregister(u.default.CLOSE_STAMINA_DIALOG, this.onCloseStaminaDialog, this), p.default.instance.unregister(u.default.ADD_MONEY, this.flyCoin, this), p.default.instance.unregister(u.default.GET_RESULT_AWARD, this.getResultAward, this), p.default.instance.unregister(u.default.AUTO_START_GAME, this.onClickBtnContinue, this), p.default.instance.unregister(u.default.SHOW_AWARD_RESULT, this.getResultAward, this)
            }, t.prototype.init = function () {
                window.isStart = !1, this.scene = new l.ui.view.NewResultViewUI, f.default.getIsNeedScreenAdaptive() && (this.scene.boxTopLeft.y += 50), this.carConfig = h.default.instance.dicConfig[d.default.QCfgType.Car], this.gameCfg = h.default.instance.dicConfig[d.default.QCfgType.GameConfig], this.listGarageCfg = c.default.instance.garageCarData;
                var e = c.default.instance.getIsActiveSharePoint(d.default.QShareType.resultDoubleAward) ? c.default.instance.getPlayerScoreVideoShareType() : c.default.instance.getPointVideoShareType(d.default.QShareType.resultDoubleAward);
                this.isVideoGain = c.default.instance.IsVideoGain(e), this.scene.lblStamiCount.text = this.gameCfg.everyTimesUseStaminaNum, c.default.instance.curMaxLevel, f.default.RegisterBtnClickWithAnim(this.scene.btnReturn, this, this.onClickBtnReturn), f.default.RegisterBtnClickWithAnim(this.scene.btnContinue, this, this.onClickBtnContinue), this.refreshGoldData(), this.showJcdlView(), (2 == tywx.UserInfo.systemType || y.default.instance.longScreen()) && (this.scene.btnContinue.y -= 50, this.scene.btnReturn.y -= 50), 2 == tywx.UserInfo.systemType ? (this.scene.btnReturn.y -= 40, this.scene.btnContinue.y -= 40) : 4 != tywx.UserInfo.systemType && 1 != tywx.UserInfo.systemType || (this.scene.boxWin.y -= 10, this.scene.lblPassNum.y -= 35), m.default.instance.sendMsgToSub(JSON.stringify({
                    tag: "resultRankStage",
                    levelCount: c.default.instance.curTrackId.toString(),
                    key: "levelCount"
                }));
            }, t.prototype.onClickBtnShare = function () {
                m.default.instance.sendMsgToSub(JSON.stringify({
                    tag: "ShareNextPerson",
                    levelCount: c.default.instance.curTrackId.toString(),
                    key: "levelCount"
                })), f.default.biReport(v.default.shareFriend)
            }, t.prototype.setParam = function (e) {
                var t = e.isWin,
                    i = e.gameTime,
                    a = e.curPass,
                    n = e.findUnComNum;
                this.scene.boxWin.visible = t, this.scene.boxLose.visible = !t;
                var o = t ? c.default.instance.curTrackId - 1 : c.default.instance.curTrackId,
                    r = d.default.QResultMoreAwardType.two,
                    s = d.default.QResultMoreAwardType.three,
                    l = d.default.QResultMoreAwardType.five;
                if (f.default.biReport(v.default.passTrack, [o, t]), t) switch (o) {
                    case 1:
                        f.default.biReport(v.default.finishFirstLevel);
                        break;
                    case 2:
                        f.default.biReport(v.default.finishSecondLevel);
                        break;
                    case 3:
                        f.default.biReport(v.default.finishThirdlyLevel);
                        break;
                    case 4:
                        f.default.biReport(v.default.finishFourthLevel);
                        break;
                    case 5:
                        f.default.biReport(v.default.finishFifthLevel);
                        break;
                    case 10:
                        f.default.biReport(v.default.finishTenLevel)
                } else 2 == o && f.default.biReport(v.default.secondLevelFail);
                if (t && c.default.instance.getShareTimesIsEnough(d.default.QShareType.resultDoubleAward, !1))
                    if (c.default.instance.resultNoGetThreeAwardTimes >= this.gameCfg.resuleThreeAwardShowTimes) this.awardType = l;
                    else {
                        switch (o - 1) {
                            case 1:
                                this.awardType = l;
                                break;
                            case 2:
                                this.awardType = s;
                                break;
                            case 3:
                                this.awardType = l;
                                break;
                            default:
                                this.awardType = c.default.instance.getResultMoreAwardType()
                        }
                        this.awardType == s && c.default.instance.setResultNoGetThreeAwardTimes()
                    }
                else this.awardType = r;
                c.default.instance.curMaxLevel >= 6 && c.default.instance.curMaxLevel;
                var h = c.default.instance.curMaxLevel <= this.gameCfg.resultAwardReduceLevel ? 0 : (c.default.instance.curMaxLevel - this.gameCfg.resultAwardReduceLevel) * this.gameCfg.resultAwardReduceCoe,
                    p = this.gameCfg.resultWinAwardBase - h >= this.gameCfg.resultAwardMinCoe ? this.gameCfg.resultWinAwardBase - h : this.gameCfg.resultAwardMinCoe;
                c.default.instance.isOpenTestFun ? this.rewardGoldNum = 100 : this.rewardGoldNum = i * this.getGarageAllValue() * p * c.default.instance.gameResultMultiple, t || (this.rewardGoldNum *= n / 5), this.rewardGoldNum < 0 && (this.rewardGoldNum = 0), this.rewardGoldNum < this.gameCfg.minAwardCoinNum && (this.rewardGoldNum = this.gameCfg.minAwardCoinNum), window.chaochu ? this.scene.lblPassNum.text = "Level " + (a + 1).toString() : this.scene.lblPassNum.text = "Level " + a.toString(), c.default.instance.PreloadLevel(c.default.instance.PreloadLevelCount)
            }, t.prototype.getResultAward = function () {
                this.haveGotReward || (this.haveGotReward = !0, c.default.instance.addCoin(this.rewardGoldNum), !c.default.instance.isShowDialogInResult && c.default.instance.stamina <= 0 && y.default.instance.createUI(y.default.UI_Stamina, [{
                    triggerClose: 0
                }]))
            }, t.prototype.refreshGoldData = function () {
                this.scene.lblStaminaNum.changeText(c.default.instance.stamina.toString())
            }, t.prototype.onClickBtnGet = function () {
                y.default.instance.removeUI(y.default.UI_Result), y.default.instance.removeUI(y.default.UI_Game), Laya.timer.frameOnce(1, this, function () {
                    y.default.instance.createUI(y.default.UI_MainPage), c.default.instance.addCoin(this.rewardGoldNum)
                })
            }, t.prototype.onClickBtnDoubleAward = function () {
                var e = this;
                if (c.default.instance.getShopShareTimesIsEnough())
                    if (c.default.instance.isNoVideoAuditVersion) this.onClickBtnDoubleAwardSuccessHandle();
                    else {
                        var t = g.default.create();
                        t.shareType = d.default.QShareType.resultDoubleAward, this.isVideoGain ? m.default.instance.playVideoAd(t, Laya.Handler.create(this, function () {
                            e.onClickBtnDoubleAwardSuccessHandle()
                        })) : m.default.instance.fakeShare(t, this, function () {
                            e.onClickBtnDoubleAwardSuccessHandle()
                        })
                    }
            }, t.prototype.onClickBtnDoubleAwardSuccessHandle = function () {
                switch (this.awardType) {
                    case 2:
                        f.default.biReport(v.default.resultDoubleAward);
                        break;
                    case 3:
                        f.default.biReport(v.default.successGetThreeAward);
                        break;
                    case 5:
                        f.default.biReport(v.default.successGetFiveAward)
                }
                y.default.instance.removeUI(y.default.UI_Result), y.default.instance.removeUI(y.default.UI_Game), Laya.timer.frameOnce(1, this, function () {
                    y.default.instance.createUI(y.default.UI_MainPage)
                }), c.default.instance.addCoin(this.rewardGoldNum * this.awardType), c.default.instance.getIsActiveSharePoint(d.default.QShareType.resultDoubleAward) ? c.default.instance.setplayerScoreVideoShareTime() : c.default.instance.setResultGetMoreAwardTimes()
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this,
                    i = g.default.create();
                i.shareType = d.default.QShareType.resultDoubleAward, e.shareType == i.shareType && m.default.instance.fakeShare(i, this, function () {
                    t.onClickBtnDoubleAwardSuccessHandle()
                })
            }, t.prototype.getGarageAllValue = function () {
                for (var e = 0, t = 0; t < this.listGarageCfg.length; t++) 0 == this.listGarageCfg[t].boxState && (c.default.instance.isOpenDoubleCoinAward ? e += this.listGarageCfg[t].income * this.gameCfg.CoinAwardMultiple : e += this.listGarageCfg[t].income);
                return e * c.default.instance.multiple * 1
            }, t.prototype.doDestroy = function () {
                w.default.remove(), Laya.timer.clear(this, this.autoFreshJcdl)
            }, t.prototype.onClickBtnReturn = function () {
                console.log("ononononon"), platform.getInstance().showInterstitial(() => {
                    y.default.instance.removeUI(y.default.UI_Result), y.default.instance.removeUI(y.default.UI_Game), Laya.timer.frameOnce(1, this, function () {
                        y.default.instance.createUI(y.default.UI_MainPage), c.default.instance.stamina <= 0 && c.default.instance.getWelfareState("kefu")
                    })
                })
            }, t.prototype.onClickBtnReturn1 = function () {
                console.log("onononono1n"), y.default.instance.removeUI(y.default.UI_Result), y.default.instance.removeUI(y.default.UI_Game), Laya.timer.frameOnce(1, this, function () {
                    y.default.instance.createUI(y.default.UI_MainPage), c.default.instance.stamina <= 0 && c.default.instance.getWelfareState("kefu");
                    window.HUHU_showInterstitialAd();
                })
            }, t.prototype.onClickManReturn = function () {
                f.default.biReport(v.default.ClickManToHome), this.onClickBtnReturn()
            }, t.prototype.onClickBtnContinue = function () {
                console.log("ononononon"), platform.getInstance().showInterstitial(() => {
                    c.default.instance.stamina >= this.gameCfg.everyTimesUseStaminaNum ? this.continueGame() : (f.default.biReport(v.default.noEnoughStamina), c.default.instance.getShareTimesIsEnough(d.default.QShareType.AddRevenue) ? y.default.instance.createUI(y.default.UI_Stamina) : y.default.instance.createUI(y.default.UI_Tip, {
                        text: "体力不足!"
                    }))
                })
            }, t.prototype.onCloseStaminaDialog = function () {
                c.default.instance.stamina >= this.gameCfg.everyTimesUseStaminaNum ? this.continueGame() : this.onClickBtnReturn1()
            }, t.prototype.continueGame = function () {
                c.default.instance.isCurLevelLoadOk(c.default.instance.curTrackId) ? (y.default.instance.removeUI(y.default.UI_Result), y.default.instance.createUI(y.default.UI_Game)) : y.default.instance.createUI(y.default.UI_WaitLoadDialog)
            }, t.prototype.showJcdlView = function () {
                this.gameConfig = h.default.instance.dicConfig[d.default.QCfgType.GameConfig], this.jcdlConfigDataByResult = h.default.instance.dicConfig[d.default.QCfgType.JCDL], this.OriginJcdlList = this.gameConfig.resultOriginJcdlList, this.autoJcdlList = this.gameConfig.resultAutoJcdlList, this.nextTime = this.gameConfig.resultJcdlNextTime, this.curRollIndex = 0, this.gameConfig && this.jcdlConfigDataByResult && this.OriginJcdlList && this.autoJcdlList && (this.autoJcdlList.length <= 2 ? (0 == this.autoJcdlList.length ? this.autoJcdlList = [0, 0] : 1 == this.autoJcdlList.length && this.autoJcdlList.push(0), this.isCirculationList = !1) : this.isCirculationList = !0, this.checkList(), this.showOriginJcdl(), this.showAutoJcdl())
            }, t.prototype.showAutoJcdl = function () {
                this.autoFreshJcdl(), this.isCirculationList && (Laya.timer.clear(this, this.autoFreshJcdl), Laya.timer.loop(this.nextTime, this, this.autoFreshJcdl))
            }, t.prototype.autoFreshJcdl = function () {
                this.curRollIndex < 0 && (this.curRollIndex = 0);
                var e = this.curRollIndex;
                e >= this.autoJcdlList.length && (e = 0, this.curRollIndex = 0), ++this.curRollIndex;
                var t = this.curRollIndex;
                t >= this.autoJcdlList.length && (t = 0, this.curRollIndex = 0), this.cirShowList.push(this.autoJcdlList[e]), this.cirShowList.push(this.autoJcdlList[t]);
                for (var i = 1; i <= 2; i++) {
                    var a = this.cirShowList[i - 1],
                        n = (Math.sqrt(Math.random()), this.jcdlConfigDataByResult[a].toappid);
                    f.default.biReport(v.default.JCDLShow, [n])
                }
                this.cirShowList = []
            }, t.prototype.showOriginJcdl = function () {
                for (var e = 1; e <= this.OriginListNum; e++) {
                    var t = e + 2,
                        i = this.OriginJcdlList[t - 3],
                        a = (Math.sqrt(Math.random()), this.jcdlConfigDataByResult[i].toappid);
                    f.default.biReport(v.default.JCDLShow, [a])
                }
            }, t.prototype.onClickBtnJcdlIconByResult = function (e) {
                var t = this.jcdlConfigDataByResult[e].toappid;
                m.default.instance.clickAdIcon(t), f.default.biReport(v.default.JCDLClick, [t]), f.default.biReport(v.default.jcdl7)
            }, t.prototype.checkList = function () {
                var e;
                if (this.OriginJcdlList.length < this.OriginListNum) {
                    e = this.OriginJcdlList.length - this.OriginListNum;
                    for (var t = 0; t < e; t++) this.OriginJcdlList.push(0)
                }
            }, t.prototype.flyCoin = function (e) {
                var t, i, a = new I.default,
                    n = f.default.getUIPos(this.scene.imgCarIcon),
                    o = {
                        x: n.x,
                        y: n.y
                    };
                switch (e) {
                    case d.default.QMoneyType.Coin:
                        i = new Laya.Point(this.scene.GoldIcon.x, this.scene.GoldIcon.y), (i = this.scene.GoldIcon.parent.localToGlobal(i)).x -= 5, i.y -= 5;
                        break;
                    case d.default.QMoneyType.Diamond:
                        i = new Laya.Point(this.scene.DiamondIcon.x, this.scene.DiamondIcon.y), (i = this.scene.DiamondIcon.parent.localToGlobal(i)).x -= 5, i.y -= 5
                }
                t = {
                    fromPos: o,
                    toPos: i,
                    type: e,
                    countType: 1
                }, a.playFlyResAni(t)
            }, t
        }(s.default), o.QNewResultView = r, i.default = a.view.QNewResultView
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28,
        "./QFlyRes": 39,
        "./QJcdlTypeView": 51
    }],
    57: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o = e("../../ui/layaMaxUI"),
            r = e("../core/QBaseUI"),
            s = e("../core/QUIMgr"),
            l = e("../data/QGameConst"),
            c = (e("../../framework/QDebug"), e("../../framework/QUtil")),
            h = e("../core/QWxSDK"),
            d = e("../logic/QShareParam");
        n = a || (a = {}),
            function (e) {
                var t = function () {
                    function e() {}
                    return Object.defineProperty(e, "deltaY", {
                        get: function () {
                            return this.deltaYValue
                        },
                        set: function (e) {
                            this.deltaYValue = e, console.log("this.deltaYValue:" + this.deltaYValue), h.default.instance.sendMsgToSub(JSON.stringify({
                                tag: "rankListScroll",
                                deltaY: e,
                                key: 1 == i.currentTab ? "levelCount" : "curMaxLevel"
                            }))
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e
                }();
                e.ScrollInfo = t;
                var i = function (e) {
                    function i() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.isControl = !1, t.distance = 0, t
                    }
                    return __extends(i, e), i.prototype.registerEvent = function () {}, i.prototype.unregisterEvent = function () {}, i.prototype.init = function () {
                        this.scene = new o.ui.view.RankDialogUI, this.scene.lblVersion.changeText("v" + l.default.GameVersion), c.default.doUIPopAnim(this.scene.AnchorCenter), this.changeBtnState(), this.scene.btnChoiceLevel.on(Laya.Event.CLICK, this, this.onClickBtnTab1), this.scene.btnChoiceCoin.on(Laya.Event.CLICK, this, this.onClickBtnTab2), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), this.onClickBtnTab1(), this.scene.sprOpenDataView.on(Laya.Event.MOUSE_DOWN, this, this.onSprOpenDataDown), this.scene.sprOpenDataView.on(Laya.Event.MOUSE_MOVE, this, this.onSprOpenDataDrag), this.scene.sprOpenDataView.on(Laya.Event.MOUSE_UP, this, this.onSprOpenDataUp)
                    }, i.prototype.onClickBtnClose = function () {
                        s.default.instance.removeUI(s.default.UI_RankDialog)
                    }, i.prototype.changeBtnState = function () {
                        this.scene.btnChoiceLevel.skin = 1 == i.currentTab ? "ui_dialog/rank_text_coin0.png" : "ui_dialog/rank_text_coin1.png", this.scene.btnChoiceCoin.skin = 1 == i.currentTab ? "ui_dialog/rank_text_coin1.png" : "ui_dialog/rank_text_coin0.png"
                    }, i.prototype.onClickBtnTab1 = function () {
                        i.currentTab = 1, this.changeBtnState(), h.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "showRankList",
                            key: "levelCount",
                            type: 1,
                            shareTicket: ""
                        }))
                    }, i.prototype.onClickBtnTab2 = function () {
                        i.currentTab = 2, this.changeBtnState(), h.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "showRankList",
                            key: "curMaxLevel",
                            type: 1,
                            shareTicket: ""
                        }))
                    }, i.prototype.onClickBtnShowoff = function () {
                        var e = d.default.create();
                        e.shareType = l.default.QShareType.HomePage, h.default.instance.share(e)
                    }, i.prototype.onSprOpenDataDown = function (e) {
                        this.isControl = !0, this.controlStartY = e.stageY
                    }, i.prototype.onSprOpenDataClick = function (e) {
                        h.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "clickRankList",
                            point: {
                                x: e.stageX - this.scene.sprOpenDataView.x,
                                y: e.stageY - this.scene.sprOpenDataView.y
                            }
                        }))
                    }, i.prototype.onSprOpenDataDrag = function (e) {
                        if (this.isControl) {
                            var t = e.stageY;
                            this.distance = t - this.controlStartY, this.controlStartY = t, console.log("distance:" + this.distance), this.scrollRankList(this.distance)
                        }
                    }, i.prototype.onSprOpenDataUp = function (e) {
                        t.deltaY = this.distance, Laya.Tween.to(t, {
                            deltaY: 0
                        }, 1e3, Laya.Ease.strongOut), this.isControl = !1, this.controlStartY = null
                    }, i.prototype.scrollRankList = function (e) {
                        h.default.instance.sendMsgToSub(JSON.stringify({
                            tag: "rankListScroll",
                            deltaY: e,
                            key: 1 == i.currentTab ? "levelCount" : "curMaxLevel"
                        }))
                    }, i.prototype.doDestroy = function () {
                        c.default.isNullOrEmpty(this.scene.sprOpenDataView.texture) || c.default.isNullOrEmpty(this.scene.sprOpenDataView.texture.bitmap) || (this.scene.sprOpenDataView.texture.bitmap.destroy(), this.scene.sprOpenDataView.destroy())
                    }, i.currentTab = 1, i
                }(r.default);
                e.QRankView = i
            }(n.view || (n.view = {})), i.default = a.view.QRankView
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QGameConst": 24,
        "../logic/QShareParam": 28
    }],
    58: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../data/QGameData"),
            h = e("../data/QGameConst"),
            d = e("../../framework/QUtil"),
            p = e("../logic/QShareParam"),
            u = e("../core/QWxSDK"),
            g = e("../core/QUIMgr"),
            m = e("../core/QCfgMgr"),
            f = e("../../framework/QEventMgr"),
            y = e("../data/QEventType"),
            v = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.isVideoGain = !1, t.residueTime = 0, t.recoveStaminaTime = 0, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                f.default.instance.register(y.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), f.default.instance.register(y.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this), f.default.instance.register(y.default.REFRESH_RECOVER_COUNT_DOWN, this.refreshCountDownTime, this), f.default.instance.register(y.default.CLOSE_STAMINA_DIALOG, this.onCloseStaminaDialog, this)
            }, t.prototype.unregisterEvent = function () {
                f.default.instance.unregister(y.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), f.default.instance.unregister(y.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this), f.default.instance.unregister(y.default.REFRESH_RECOVER_COUNT_DOWN, this.refreshCountDownTime, this), f.default.instance.unregister(y.default.CLOSE_STAMINA_DIALOG, this.onCloseStaminaDialog, this)
            }, t.prototype.init = function () {
                this.scene = new l.ui.view.ReviveDialogUI, this.gameConfig = m.default.instance.dicConfig[h.default.QCfgType.GameConfig], this.recoveStaminaTime = this.gameConfig.StaminaRegainTime;
                var e = c.default.instance.getIsActiveSharePoint(h.default.QShareType.gainStamina) ? c.default.instance.getPlayerScoreVideoShareType() : c.default.instance.getPointVideoShareType(h.default.QShareType.gainStamina);
                this.isVideoGain = c.default.instance.IsVideoGain(e), this.scene.imgVideo.visible = !0, this.isVideoGain || (this.scene.lblAddTime.x = 203),
                c.default.instance.winningStreakCount && c.default.instance.resetWinningStreakCount(),
                    this.scene.lblAddTime.changeText("Get " + this.gameConfig.reviveAddTime + " s"),
                    this.scene.lblStamiCount.text = this.gameConfig.everyTimesUseStaminaNum,
                    d.default.RegisterBtnClickWithAnim(this.scene.btnClose, this, this.onClickBtnClose),
                    d.default.RegisterBtnClickWithAnim(this.scene.btnLengthenTime, this, this.onClickBtnLengthenTime),
                    d.default.RegisterBtnClickWithAnim(this.scene.btnRestartGame, this, this.onClickBtnRestart), this.refreshGoldData(),
                    this.refreshCountDownTime(), window.isStart = !1;
            }, t.prototype.setParam = function (e) {
                this.data = e
            }, t.prototype.refreshGoldData = function () {
                console.log("this.scene", this.scene), this.scene.lblStaminaNum.changeText(c.default.instance.stamina.toString())
            }, t.prototype.onClickBtnRestart = function () {
                platform.getInstance().showInterstitial(() => {
                    c.default.instance.stamina >= this.gameConfig.everyTimesUseStaminaNum ? (d.default.biReport(v.default.onClickRestartGame), g.default.instance.removeUI(g.default.UI_Revive), f.default.instance.sendEvent(y.default.GAME_RESTART)) : (d.default.biReport(v.default.noEnoughStamina), c.default.instance.getShareTimesIsEnough(h.default.QShareType.AddRevenue) ? g.default.instance.createUI(g.default.UI_Stamina) : g.default.instance.createUI(g.default.UI_Tip, {
                        text: "体力不足!"
                    }))
                })
            }, t.prototype.onClickBtnLengthenTime = function () {
                platform.getInstance().showReward(() => {
                    if (c.default.instance.isNoVideoAuditVersion) this.reviveSuccessHandle();
                    else {
                        var e = p.default.create();
                        e.shareType = h.default.QShareType.revive, this.isVideoGain ? u.default.instance.playVideoAd(e, Laya.Handler.create(this, function (e) {
                            e.reviveSuccessHandle()
                        }, [this])) : u.default.instance.fakeShare(e, this, function (e) {
                            e.reviveSuccessHandle()
                        }, [this])
                    };
                })
            }, t.prototype.reviveSuccessHandle = function () {
                2 == c.default.instance.curTrackId && d.default.biReport(v.default.secondLevelRevive);
                var e = this.gameConfig.reviveAddTime;
                f.default.instance.sendEvent(y.default.GAME_REVIVE_SUC, e), c.default.instance.setReviveTimes(), c.default.instance.setReviveSuccessTimes(), g.default.instance.removeUI(g.default.UI_Revive), d.default.biReport(v.default.successRevive)
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this,
                    i = p.default.create();
                i.shareType = h.default.QShareType.revive, e.shareType == i.shareType && u.default.instance.fakeShare(i, this, function () {
                    t.reviveSuccessHandle()
                })
            }, t.prototype.onClickBtnClose = function () {
                platform.getInstance().showInterstitial(() => {
                    g.default.instance.removeUI(g.default.UI_Game), g.default.instance.removeUI(g.default.UI_Revive), g.default.instance.createUI(g.default.UI_MainPage)
                })
            }, t.prototype.onClickBtnClose1 = function () {
                g.default.instance.removeUI(g.default.UI_Game), g.default.instance.removeUI(g.default.UI_Revive), g.default.instance.createUI(g.default.UI_MainPage)
            }, t.prototype.refreshCountDownTime = function () {
                this.scene.lblStamTime.visible = !(c.default.instance.stamina >= this.gameConfig.MaxRegainStamina), this.residueTime = this.recoveStaminaTime - c.default.instance.timeDifference, this.scene.lblStamTime.changeText(d.default.formatTime(this.residueTime))
            }, t.prototype.onCloseStaminaDialog = function () {
                c.default.instance.stamina >= this.gameConfig.everyTimesUseStaminaNum ? (d.default.biReport(v.default.onClickRestartGame), g.default.instance.removeUI(g.default.UI_Revive), f.default.instance.sendEvent(y.default.GAME_RESTART)) : this.onClickBtnClose1()
            }, t
        }(s.default), o.QReviveView = r, i.default = a.view.QReviveView
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    59: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = e("../core/QCfgMgr"),
            d = e("../data/QGameConst"),
            p = e("../logic/QShareParam"),
            u = e("../core/QWxSDK"),
            g = e("../data/QGameData"),
            m = e("../../framework/QEventMgr"),
            f = e("../data/QEventType"),
            y = e("../../framework/QUtil"),
            v = e("../data/QBIEvent"),
            w = e("../core/QSoundMgr");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.propIconPath = "ui_car/", t.propIconType = ".png", t.diamondIconStr = "ui_com/com_img_diamond.png", t.coinIconStr = "ui_com/com_img_coin.png", t.defaultStr = "ui_com/com_img_coin.png", t.listCarData = new Array, t.curMaxLevel = 20, t.curUnlockLevel = 0, t.showCoin = 2, t.isVideoGain = !1, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                m.default.instance.register(f.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), m.default.instance.register(f.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this), m.default.instance.register(f.default.COMMON_DIALOG_TO_HOME, this.backHomeClose, this)
            }, t.prototype.unregisterEvent = function () {
                m.default.instance.unregister(f.default.UPDATE_VIEW_DATA, this.refreshGoldData, this), m.default.instance.unregister(f.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this), m.default.instance.unregister(f.default.COMMON_DIALOG_TO_HOME, this.backHomeClose, this)
            }, t.prototype.init = function () {
                this.scene = new s.ui.view.ShopDialogUI, this.gameConfig = h.default.instance.dicConfig[d.default.QCfgType.GameConfig], this.carConfig = h.default.instance.dicConfig[d.default.QCfgType.Car], this.listGarageCfg = g.default.instance.garageCarData;
                var e = g.default.instance.getIsActiveSharePoint(d.default.QShareType.ShopPropShare) ? g.default.instance.getPlayerScoreVideoShareType() : g.default.instance.getPointVideoShareType(d.default.QShareType.AddShop);
                for (var t in this.isVideoGain = g.default.instance.IsVideoGain(e), this.curMaxLevel = g.default.instance.getMaxLevel(), this.createFilter(), this.carConfig) this.carConfig[t].pos = t, this.listCarData.push(this.carConfig[t]);
                y.default.getIsNeedScreenAdaptive() && (this.scene.listCar.height = 1330, this.scene.y += 50), this.scene.listCar.vScrollBarSkin = "", this.scene.listCar.renderHandler = new Laya.Handler(this, this.listShopPropHandle), this.scene.listCar.array = this.listCarData, g.default.instance.IsShopShowFree() ? this.scene.listCar.tweenTo(this.listCarData[this.curMaxLevel - 1].bonusCar_level - 1, .1) : this.scene.listCar.tweenTo(g.default.instance.clickCarIndex, .1), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), this.refreshGoldData()
            }, t.prototype.refreshGoldData = function () {
                this.scene.lblGoldNum.changeText(g.default.instance.getCoinNumType(g.default.instance.coin)), this.scene.lblAddGold2.changeText("+" + g.default.instance.getCoinNumType(this.getGarageAllValue()) + "/s"), this.scene.lblDiamondNum.changeText(g.default.instance.getCoinNumType(g.default.instance.diamond)), this.scene.lblStaminaNum.changeText(g.default.instance.stamina.toString())
            }, t.prototype.createFilter = function () {
                this.blackFilter = new Laya.ColorFilter([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]), this.restoreColor = new Laya.ColorFilter
            }, t.prototype.listShopPropHandle = function (e, t) {
                var i = e.getChildByName("carCellBg"),
                    a = i.getChildByName("lblLevel"),
                    n = i.getChildByName("panel").getChildByName("imgCarIcon"),
                    o = i.getChildByName("lblCarName"),
                    r = i.getChildByName("btnBuy"),
                    s = r.getChildByName("imgCost"),
                    l = r.getChildByName("lblCost"),
                    c = i.getChildByName("btnShare"),
                    h = c.getChildByName("imgShare");
                n.skin = this.propIconPath + this.listCarData[t].icon + this.propIconType;
                var p = this.listCarData[t].level;
                a.changeText("lv: " + p), o.changeText(this.listCarData[t].name);
                var u, m, f = this.listCarData[t].unlock_buy_gold_level,
                    y = this.listCarData[t].unlock_buy_diamond_level;
                p <= this.curMaxLevel && (this.curMaxLevel >= f || this.curMaxLevel >= y) ? (r.gray = !1, this.curMaxLevel >= f ? (s.skin = this.coinIconStr, u = d.default.QMoneyType.Coin, m = this.listCarData[t].buy_gold * Math.pow(this.listCarData[t].add_gold, g.default.instance.getRecordGainCarTimes(u, this.listCarData[t].pos))) : this.curMaxLevel >= y && (s.skin = this.diamondIconStr, u = d.default.QMoneyType.Diamond, m = this.listCarData[t].buy_diamond + this.listCarData[t].add_diamond * g.default.instance.getRecordGainCarTimes(u, this.listCarData[t].pos)), l.changeText(g.default.instance.getCoinNumType(m)), n.filters = [this.restoreColor], l.visible = !0, s.visible = !0, r.disabled = !1) : (n.filters = [this.blackFilter], s.skin = this.defaultStr, r.gray = !0, l.changeText("???"));
                var v = !1;
                p == this.listCarData[this.curMaxLevel - 1].bonusCar_level && !g.default.instance.IsShopTimeLeave() && g.default.instance.getShopShareTimesIsEnough() && (v = !0), r.visible = !v, c.visible = v, h.skin = this.isVideoGain ? "com_icon_video1.png" : "ui_com/com_icon_share.png", r.off(Laya.Event.CLICK, this, this.onClickBtnBuy), r.on(Laya.Event.CLICK, this, this.onClickBtnBuy, [t, u, m, r]), c.off(Laya.Event.CLICK, this, this.onClickBtnShare), c.on(Laya.Event.CLICK, this, this.onClickBtnShare, [t, u, m, c])
            }, t.prototype.onClickBtnShare = function (e, t, i, a) {
                var n = this;
                if (this.curShareIndex = e, this.curShareType = t, this.curShareCost = i, this.curShareBtn = a, g.default.instance.setClickCarIndex(e), g.default.instance.judgeGarageCarFull()) c.default.instance.createUI(c.default.UI_Tip, {
                    text: g.default.instance.fullCarTipsDes
                });
                else {
                    if (!g.default.instance.getShopShareTimesIsEnough()) return;
                    g.default.instance.isNoVideoAuditVersion ? this.moreShareSuccessHandle(e, t, i, a) : (this.param = p.default.create(), this.param.shareType = d.default.QShareType.moreMultipleAward, this.isVideoGain ? u.default.instance.playVideoAd(this.param, Laya.Handler.create(this, function () {
                        n.moreShareSuccessHandle(e, t, i, a)
                    })) : u.default.instance.fakeShare(this.param, this, function () {
                        n.moreShareSuccessHandle(e, t, i, a)
                    }))
                }
            }, t.prototype.moreShareSuccessHandle = function (e, t, i, a) {
                w.default.instance.playSfx(w.default.BuyCar), this.listCarData[e].level == this.listCarData[this.curMaxLevel - 1].bonusCar_level && (g.default.instance.IsShopTimeLeave() || g.default.instance.setShopCurLeaveTime()), g.default.instance.setRecordGainCarTimes(t, this.listCarData[e].pos), g.default.instance.setBuyCarData(this.listCarData[e].level, 2), g.default.instance.setShopVideoShareTime(), this.scene.listCar.refresh(), m.default.instance.sendEvent(f.default.BUY_CAR_SUCCESS_REFRESH), y.default.biReport(v.default.shopGetFreeCar), c.default.instance.removeUI(c.default.UI_ShopDialog), c.default.instance.createUI(c.default.UI_Tip, {
                    text: "成功领取奖励!"
                })
            }, t.prototype.onClickBtnBuy = function (e, t, i, a) {
                g.default.instance.setClickCarIndex(e), g.default.instance.judgeGarageCarFull() ? c.default.instance.createUI(c.default.UI_Tip, {
                    text: g.default.instance.fullCarTipsDes
                }) : g.default.instance.coseMoney(t, i) ? (w.default.instance.playSfx(w.default.BuyCar), c.default.instance.removeUI(c.default.UI_Tip), c.default.instance.createUI(c.default.UI_Tip, {
                    text: "购买成功!"
                }), g.default.instance.setRecordGainCarTimes(t, this.listCarData[e].pos), g.default.instance.setBuyCarData(this.listCarData[e].level), this.scene.listCar.refresh(), m.default.instance.sendEvent(f.default.BUY_CAR_SUCCESS_REFRESH), y.default.biReport(v.default.inShopBuyCar)) : c.default.instance.createUI(c.default.UI_CommonPage, {
                    viewType: d.default.QCommonViewType.FreeGet
                })
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this;
                y.default.isNullOrEmpty(this.param) && (this.param = p.default.create()), this.param.shareType = d.default.QShareType.moreMultipleAward, e.shareType == this.param.shareType && u.default.instance.fakeShare(this.param, this, function () {
                    t.moreShareSuccessHandle(t.curShareIndex, t.curShareType, t.curShareCost, t.curShareBtn)
                })
            }, t.prototype.onClickBtnClose = function () {
                c.default.instance.removeUI(c.default.UI_ShopDialog)
            }, t.prototype.getGarageAllValue = function () {
                for (var e = 0, t = 0; t < this.listGarageCfg.length; t++) 0 == this.listGarageCfg[t].boxState && (g.default.instance.isOpenDoubleCoinAward ? e += this.listGarageCfg[t].income * this.gameConfig.CoinAwardMultiple : e += this.listGarageCfg[t].income);
                return e * g.default.instance.multiple * 1
            }, t.prototype.doDestroy = function () {}, t.prototype.backHomeClose = function () {
                c.default.instance.removeUI(c.default.UI_ShopDialog)
            }, t
        }(l.default), o.QShopDialog = r, i.default = a.view.QShopDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QCfgMgr": 15,
        "../core/QSoundMgr": 18,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    60: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = e("../data/QGameConst"),
            d = e("../logic/QShareParam"),
            p = e("../core/QWxSDK"),
            u = e("../data/QGameData"),
            g = e("../../framework/QEventMgr"),
            m = e("../data/QEventType"),
            f = e("../../framework/QUtil"),
            y = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.addNormalTime = 60, t.addShareTime = 200, t.isVideoGain = !1, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                g.default.instance.register(m.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.unregisterEvent = function () {
                g.default.instance.unregister(m.default.PUSH_VIDEO_AD_FAIL, this.videoInequacyToShare, this)
            }, t.prototype.init = function () {
                console.log("loadingdddddddddddddddddddddddd");
                var e = this;
                this.scene = new s.ui.view.SupplyDialogUI, this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), this.scene.btnShare.on(Laya.Event.CLICK, this, this.onClickBtnShare);
                var t = u.default.instance.getIsActiveSharePoint(h.default.QShareType.Kongtou) ? u.default.instance.getPlayerScoreVideoShareType() : u.default.instance.getPointVideoShareType(h.default.QShareType.Kongtou);
                this.isVideoGain = u.default.instance.IsVideoGain(t), this.scene.imgShare.visible = !1, this.scene.imgVideo.visible = this.isVideoGain, this.isVideoGain || (this.scene.imgOpenTxt.y = 81, this.scene.imgOpenTxt.scale(1.2, 1.2)), u.default.instance.isLifeFirstGame ? (this.scene.imgShare.visible = !1, this.scene.imgVideo.visible = !1, this.scene.imgOpenTxt.y = 81, this.scene.imgOpenTxt.x = 209, this.scene.boxNewbie.visible = !0, this.scene.imgHand.play(0, !0), this.scene.btnClose.visible = !1, Laya.timer.once(3e3, this, function () {
                    e.scene.btnClose.visible = !0
                })) : (this.scene.imgOpenTxt.y = 81, this.scene.imgOpenTxt.x = 252), this.scene.ani1.play(), f.default.doUIPopAnim(this.scene.AnchorCenter), f.default.biReport(y.default.onClickStartGame)
            }, t.prototype.onClickBtnClose = function () {
                u.default.instance.ResetSupply(), g.default.instance.sendEvent(m.default.HIDE_SUPPLY), c.default.instance.removeUI(c.default.UI_SupplyDialog), u.default.instance.setLifeFirstGame(!1)
            }, t.prototype.onClickBtnShare = function () {
                var e = this;
                if (f.default.biReport(y.default.tryToGetSupply), u.default.instance.isLifeFirstGame) return u.default.instance.setLifeFirstGame(!1), this.successHanle(), void f.default.biReport(y.default.gotLifeTimeFreeSupply);
                u.default.instance.getShareTimesIsEnough(h.default.QShareType.Kongtou) && (u.default.instance.isNoVideoAuditVersion ? (this.successHanle(), f.default.biReport(y.default.gotSupply)) : (this.param = d.default.create(), this.param.shareType = h.default.QShareType.Kongtou, this.isVideoGain ? p.default.instance.playVideoAd(this.param, Laya.Handler.create(this, function () {
                    e.successHanle(), f.default.biReport(y.default.gotSupply)
                })) : p.default.instance.fakeShare(this.param, this, function () {
                    e.successHanle(), f.default.biReport(y.default.gotSupply)
                })))
            }, t.prototype.videoInequacyToShare = function (e) {
                var t = this;
                f.default.isNullOrEmpty(this.param) && (this.param = d.default.create()), this.param.shareType = h.default.QShareType.Kongtou, e.shareType == this.param.shareType && p.default.instance.fakeShare(this.param, this, function () {
                    t.successHanle(), f.default.biReport(y.default.gotSupply)
                })
            }, t.prototype.successHanle = function () {
                c.default.instance.createUI(c.default.UI_Tip, {
                    text: "领取成功!"
                }), u.default.instance.isGetSupply = !0, g.default.instance.sendEvent(m.default.SUPPLY_GUN), f.default.doUICloseAnim(this.scene.AnchorCenter, Laya.Handler.create(this, function () {
                    c.default.instance.removeUI(c.default.UI_SupplyDialog)
                })), u.default.instance.setKongtouVideoShareTime()
            }, t.prototype.doDestroy = function () {
                this.scene.imgHand.stop()
            }, t
        }(l.default), o.QSupplyTipDialog = r, i.default = a.view.QSupplyTipDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../core/QWxSDK": 21,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameConst": 24,
        "../data/QGameData": 25,
        "../logic/QShareParam": 28
    }],
    61: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = e("../../framework/QUtil");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.textType = 0, t
            }
            return __extends(t, e), t.prototype.init = function () {
                this.scene = new s.ui.view.TipsViewUI, h.default.doUIPopAnim(this.scene.AnchorCenter), this.scene.zOrder = 10
            }, t.prototype.setParam = function (e) {
                var t, i = e.text;
                h.default.isNullOrEmpty(e.type) || (this.textType = e.type), this.scene.lblTipsText.visible = 0 == this.textType, this.scene.lblTipsText1.visible = 0 != this.textType, this.scene.lblTipsText.text = i, t = "number" == typeof e.delay ? e.delay : 1, Laya.timer.once(1e3 * t, this, function () {
                    c.default.instance.removeUI(c.default.UI_Tip)
                })
            }, t.prototype.doDestroy = function () {}, t
        }(l.default), o.QTipsView = r, i.default = a.view.QTipsView
    }, {
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20
    }],
    62: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = e("../data/QGameData"),
            d = e("../../framework/QEventMgr"),
            p = e("../data/QEventType");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.content = " 网络不稳定,\b请检查网络稍后再试,按确定重新连接,按取消返回主页", t.waitTime = 5, t.checkTime = 1, t
            }
            return __extends(t, e), t.prototype.init = function () {
                this.scene = new s.ui.view.WaitLoadMapUI, this.scene.backGround.on(Laya.Event.CLICK, this, this.onClickBackGround), this.scene.BigGlass.visible = !1, this.scene.tipLabel.visible = !1, this.isNetworkConnected() ? (this.scene.BigGlass.visible = !0, this.scene.tipLabel.visible = !0, this.scene.GlassCircle.play(), Laya.timer.clear(this, this.checkIsLoad), Laya.timer.loop(1e3 * this.checkTime, this, this.checkIsLoad), Laya.timer.once(1e3 * this.waitTime, this, function () {
                    Laya.timer.clear(this, this.checkIsLoad), this.showPopUpTips(), this.scene.BigGlass.visible = !1, this.scene.tipLabel.visible = !1, this.scene.GlassCircle.stop()
                })) : this.showPopUpTips()
            }, t.prototype.checkIsLoad = function () {
                var e = h.default.instance.curTrackId;
                e > p.default.instance.MAX_LEVEL_NUM && (e = p.default.instance.MAX_LEVEL_NUM), h.default.instance.isCurLevelLoadOk(e) && (d.default.instance.sendEvent(p.default.AUTO_START_GAME), c.default.instance.removeUI(c.default.UI_WaitLoadDialog))
            }, t.prototype.showPopUpTips = function () {
                Laya.Browser.onMiniGame && Laya.Browser.window.wx.showModal({
                    title: "提示",
                    content: this.content,
                    success: function (e) {},
                    fail: function () {},
                    complete: function () {
                        c.default.instance.removeUI(c.default.UI_WaitLoadDialog)
                    }
                })
            }, t.prototype.isNetworkConnected = function () {
                return !(Laya.Browser.onMiniGame && !tywx.StateInfo.networkConnected) || tywx.StateInfo.networkConnected
            }, t.prototype.doDestroy = function () {
                Laya.timer.clear(this, this.checkIsLoad)
            }, t.prototype.onClickBackGround = function () {}, t
        }(l.default), o.QWaitLoadDialog = r, i.default = a.view.QWaitLoadDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../data/QEventType": 23,
        "../data/QGameData": 25
    }],
    63: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../../ui/layaMaxUI"),
            l = e("../core/QBaseUI"),
            c = e("../core/QUIMgr"),
            h = e("../data/QGameData"),
            d = e("../../framework/QEventMgr"),
            p = e("../data/QEventType"),
            u = e("../../framework/QUtil");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.addNormalTime = 60, t.addShareTime = 200, t.isVideoGain = !1, t.welfareList = [], t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                d.default.instance.register(p.default.REFRESH_WELFARE_STATE, this.refreshWelfareList, this)
            }, t.prototype.unregisterEvent = function () {
                d.default.instance.unregister(p.default.REFRESH_WELFARE_STATE, this.refreshWelfareList, this)
            }, t.prototype.init = function () {
                this.scene = new s.ui.view.WelfareDialogUI, this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), this.refreshWelfareList(), u.default.doUIPopAnim(this.scene.AnchorCenter), (2 == tywx.UserInfo.systemType || c.default.instance.longScreen() || 5 == tywx.UserInfo.systemType) && (this.scene.bg.y += 50, this.scene.titlebg.y += 50, this.scene.btnClose.y += 50, this.scene.listBtn.y += 50)
            }, t.prototype.setParam = function (e) {}, t.prototype.refreshWelfareList = function () {
                for (var e in this.welfareList = [], h.default.instance.welfareList) 0 == h.default.instance.welfareList[e].state ? this.welfareList.unshift(h.default.instance.welfareList[e]) : this.welfareList.push(h.default.instance.welfareList[e]);
                this.scene.listBtn.vScrollBarSkin = "", this.scene.listBtn.renderHandler = new Laya.Handler(this, this.listHandle), this.scene.listBtn.array = this.welfareList
            }, t.prototype.listHandle = function (e, t) {
                var i = e.getChildByName("cellBg");
                i.getChildByName("lblTitle").text = this.welfareList[t].title;
                var a = i.getChildByName("lblgot"),
                    n = i.getChildByName("btnGet"),
                    o = n.getChildByName("lblcount");
                n.getChildByName("imgReward"), n.getChildByName("lblGo"), o.text = this.welfareList[t].count, 0 == this.welfareList[t].state ? (n.visible = !0, a.visible = !1, u.default.RegisterBtnClickWithAnim(n, this, this.onclickBtnGo, [this.welfareList[t].ui])) : (a.visible = !0, n.visible = !1)
            }, t.prototype.onclickBtnGo = function (e) {
                e && (c.default.instance.removeUI(c.default.UI_WelfareDialog), c.default.instance.createUI(e))
            }, t.prototype.onClickBtnClose = function () {
                c.default.instance.removeUI(c.default.UI_WelfareDialog)
            }, t.prototype.getReward = function (e) {
                var t = [];
                t.push({
                    type: "energy",
                    count: e
                }), c.default.instance.createUI(c.default.UI_WelfareReward, t)
            }, t.prototype.doDestroy = function () {}, t
        }(l.default), o.QWelfareDialog = r, i.default = a.view.QWelfareDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../data/QEventType": 23,
        "../data/QGameData": 25
    }],
    64: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../data/QGameData"),
            h = e("../../framework/QEventMgr"),
            d = e("../data/QEventType"),
            p = e("../../framework/QUtil"),
            u = e("../core/QUIMgr"),
            g = e("../data/QBIEvent");
        e("../../framework/QDebug");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.awardType = 0, t.rewardGoldNum = 0, t.isVideoGain = !1, t.rewardAniList = [], t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {}, t.prototype.unregisterEvent = function () {}, t.prototype.init = function () {
                this.scene = new l.ui.view.WelfareRewardViewUI, p.default.RegisterBtnClickWithAnim(this.scene.GainBtn, this, this.onClickBtnAward), p.default.doUIPopAnim(this.scene.AnchorCenter)
            }, t.prototype.setParam = function (e) {
                console.log("奖励弹出" + e), this.param = e, this.rewardInfo = c.default.instance.welfareList[e], this.scene.tipsTitle.skin = this.rewardInfo.skin, this.scene.lblCount.text = "x" + this.rewardInfo.count, "客服会话" == this.rewardInfo.title ? p.default.biReport(g.default.ServicePowerSuccess) : "启用浮窗" == this.rewardInfo.title ? p.default.biReport(g.default.FlaotWindowPowerSuccess) : "添加到小程序" == this.rewardInfo.title && p.default.biReport(g.default.XiaoChengXuPowerSuccess)
            }, t.prototype.onClickBtnAward = function () {
                c.default.instance.addStamina(this.rewardInfo.count, !1), u.default.instance.removeUI(u.default.UI_WelfareReward)
            }, t.prototype.doDestroy = function () {
                c.default.instance.showLoginBox ? c.default.instance.checkNextDialog() : u.default.instance.getUIShowState(u.default.UI_Result) && (c.default.instance.checkAchievementReward() || (c.default.instance.isShowDialogInResult = !1, h.default.instance.sendEvent(d.default.GET_RESULT_AWARD)))
            }, t
        }(s.default), o.QWelfareRewardDialog = r, i.default = a.view.QWelfareRewardDialog
    }, {
        "../../framework/QDebug": 4,
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameData": 25
    }],
    65: [function (e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a, n, o, r, s = e("../core/QBaseUI"),
            l = e("../../ui/layaMaxUI"),
            c = e("../core/QUIMgr"),
            h = e("../../framework/QUtil"),
            d = e("../data/QGameData"),
            p = e("../../framework/QEventMgr"),
            u = e("../data/QEventType"),
            g = e("../data/QBIEvent");
        n = a || (a = {}), o = n.view || (n.view = {}), r = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.state = 0, t
            }
            return __extends(t, e), t.prototype.registerEvent = function () {
                p.default.instance.register(u.default.REFRESH_WELFARE_STATE, this.refreshAwardBtnState, this)
            }, t.prototype.unregisterEvent = function () {
                p.default.instance.unregister(u.default.REFRESH_WELFARE_STATE, this.refreshAwardBtnState, this)
            }, t.prototype.init = function () {
                this.scene = new l.ui.view.XiaoChengXuDialogUI, this.state = d.default.instance.getWelfareState("xiaochengxu"), h.default.doUIPopAnim(this.scene.AnchorCenter), this.scene.btnClose.on(Laya.Event.CLICK, this, this.onClickBtnClose), d.default.instance.setShowXiaoChengXuDialog(1), h.default.biReport(g.default.openXiaoChengXuDialog)
            }, t.prototype.refreshAwardBtnState = function () {
                switch (this.state = d.default.instance.getWelfareState("xiaochengxu"), this.state) {
                    case 0:
                        break;
                    case 1:
                        c.default.instance.removeUI(c.default.UI_XiaoChengXuDialog)
                }
            }, t.prototype.onClickBtnClose = function () {
                c.default.instance.removeUI(c.default.UI_XiaoChengXuDialog), c.default.instance.getUIShowState(c.default.UI_Result) && p.default.instance.sendEvent(u.default.GET_RESULT_AWARD)
            }, t.prototype.doDestroy = function () {}, t
        }(s.default), o.QXiaoChengXuDialog = r, i.default = a.view.QXiaoChengXuDialog
    }, {
        "../../framework/QEventMgr": 5,
        "../../framework/QUtil": 13,
        "../../ui/layaMaxUI": 66,
        "../core/QBaseUI": 14,
        "../core/QUIMgr": 20,
        "../data/QBIEvent": 22,
        "../data/QEventType": 23,
        "../data/QGameData": 25
    }],
    66: [function (e, t, i) {
        "use strict";
        var a;
        Object.defineProperty(i, "__esModule", {
                value: !0
            }), a = i.ui || (i.ui = {}),
            function (e) {
                var t = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 15,
                            child: [{
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 16
                            }, {
                                type: "Image",
                                props: {
                                    y: 683,
                                    x: 375,
                                    width: 600,
                                    var: "speedupbg",
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "15,15,15,15",
                                    name: "speedupbg",
                                    height: 800,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 4,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 744,
                                        x: 300,
                                        var: "btnGiveUP",
                                        underlineColor: "#AAA299",
                                        underline: !0,
                                        text: "放弃",
                                        skin: "ui_achieve/give_up.png",
                                        name: "btnGiveUP",
                                        font: "font_2",
                                        color: "#AAA299",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 5
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 21,
                                        x: 579,
                                        visible: !1,
                                        var: "btnClose",
                                        underlineColor: "#AAA299",
                                        underline: !0,
                                        text: "放弃",
                                        skin: "ui_achieve/btn_close.png",
                                        name: "btnClose",
                                        font: "font_2",
                                        color: "#AAA299",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 51
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 296,
                                        x: 300,
                                        width: 379,
                                        var: "Iconbg",
                                        skin: "ui_achieve/icon_light.png",
                                        pivotY: 168,
                                        pivotX: 163,
                                        name: "Iconbg",
                                        height: 335
                                    },
                                    compId: 7
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 296,
                                        x: 300,
                                        var: "Icon",
                                        skin: "ui_achieve/achieve_1.png",
                                        name: "Icon",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 55
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 481,
                                        x: 300,
                                        width: 220,
                                        var: "lblbg",
                                        skin: "ui_achieve/lbl_bg.png",
                                        sizeGrid: "0,30,0,30",
                                        name: "lblbg",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 53,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 29,
                                            x: 110,
                                            var: "achievelbl",
                                            text: "找茬萌新",
                                            name: "achievelbl",
                                            fontSize: 36,
                                            color: "#2a3344",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 54
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 631,
                                        x: 300,
                                        width: 348,
                                        visible: !0,
                                        var: "btnGet",
                                        skin: "ui_achieve/btn_bg.png",
                                        sizeGrid: "30,30,40,30",
                                        name: "btnGet",
                                        height: 145,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 12,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 70.2,
                                            x: 53.2,
                                            var: "imgShare",
                                            skin: "ui_com/com_icon_share.png",
                                            scaleY: 1.2,
                                            scaleX: 1.2,
                                            name: "imgShare",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 47
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 70.2,
                                            x: 53.2,
                                            var: "imgVideo",
                                            skin: "com_icon_video1.png",
                                            scaleY: 1.2,
                                            scaleX: 1.2,
                                            name: "imgVideo",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 48
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 67,
                                            x: 207,
                                            width: 200,
                                            var: "btnLblBox",
                                            name: "btnLblBox",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 49,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 63,
                                                x: 34,
                                                var: "lblget",
                                                text: "领取",
                                                strokeColor: "#5AC76C",
                                                stroke: 6,
                                                skin: "ui_achieve/get_img.png",
                                                name: "\blblget",
                                                fontSize: 50,
                                                color: "#ffffff",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 41
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 63,
                                                x: 123,
                                                var: "imgReward",
                                                skin: "ui_com/com_img_stamina.png",
                                                scaleY: .8,
                                                scaleX: .8,
                                                name: "imgReward",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 42
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 61,
                                                x: 171,
                                                visible: !1,
                                                var: "lblx",
                                                valign: "middle",
                                                text: "x",
                                                strokeColor: "#5AC76C",
                                                stroke: 3,
                                                name: "\blblx",
                                                fontSize: 49,
                                                color: "#ffffff",
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "center"
                                            },
                                            compId: 44
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 60,
                                                x: 201,
                                                visible: !1,
                                                var: "lblcount",
                                                text: "2",
                                                strokeColor: "#5AC76C",
                                                stroke: 3,
                                                name: "\blblcount",
                                                fontSize: 52,
                                                color: "#ffffff",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 43
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 63,
                                                x: 183.25,
                                                var: "imgmultiple",
                                                skin: "ui_achieve/rewardx2.png",
                                                name: "imgmultiple",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 56
                                        }]
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 85,
                                        x: 300,
                                        var: "title",
                                        text: "获得成就",
                                        skin: "ui_achieve/title_bg.png",
                                        name: "title",
                                        font: "font_2",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 22,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 174,
                                            var: "title_lbl",
                                            skin: "ui_achieve/gain_lbl.png",
                                            name: "title_lbl",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 50
                                    }]
                                }, {
                                    type: "Box",
                                    props: {
                                        zOrder: 3,
                                        y: 765,
                                        x: 376,
                                        width: 362,
                                        visible: !1,
                                        var: "boxNewbie",
                                        name: "boxNewbie",
                                        mouseThrough: !0,
                                        height: 327,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 30,
                                    child: [{
                                        type: "Animation",
                                        props: {
                                            y: -47.99999303332655,
                                            x: 119,
                                            var: "imgHand",
                                            source: "res/ui_particle/hand.ani",
                                            scaleY: 1.3,
                                            scaleX: 1.3,
                                            rotation: -180,
                                            name: "imgHand"
                                        },
                                        compId: 36
                                    }]
                                }]
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/give_up.png", "ui_achieve/btn_close.png", "ui_achieve/icon_light.png", "ui_achieve/achieve_1.png", "ui_achieve/lbl_bg.png", "ui_achieve/btn_bg.png", "ui_com/com_icon_share.png", "com_icon_video1.png", "ui_achieve/get_img.png", "ui_com/com_img_stamina.png", "ui_achieve/rewardx2.png", "ui_achieve/title_bg.png", "ui_achieve/gain_lbl.png", "res/ui_particle/hand.ani"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.AchievementDialogUI = t;
                var i = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 15,
                            child: [{
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 16
                            }, {
                                type: "Image",
                                props: {
                                    y: 691,
                                    x: 374,
                                    width: 600,
                                    var: "speedupbg",
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "20,20,20,20",
                                    name: "speedupbg",
                                    height: 760,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 4,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 383,
                                        x: 300,
                                        width: 263,
                                        var: "Icon",
                                        skin: "ui_dialog/dia_img_book.png",
                                        name: "Icon",
                                        height: 263,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 7,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 101,
                                            x: 182,
                                            width: 180,
                                            skin: "ui_dialog/dia_img_pen.png",
                                            rotation: -3,
                                            height: 252,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 29
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 46,
                                        x: 128,
                                        width: 345,
                                        skin: "ui_achieve/title_bg.png",
                                        sizeGrid: "24,53,30,53",
                                        name: "headTitle"
                                    },
                                    compId: 30,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 46,
                                            x: 172,
                                            text: "收益加速",
                                            strokeColor: "#ca781f",
                                            stroke: 6,
                                            height: 66,
                                            fontSize: 53,
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 31
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 182,
                                        x: 300,
                                        width: 307,
                                        skin: "ui_dialog/dia_text_addsppedhint.png",
                                        height: 36,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 23
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 25,
                                        x: 578,
                                        var: "btnClose",
                                        skin: "ui_achieve/btn_close.png",
                                        name: "btnClose",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 5
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 636,
                                        x: 307,
                                        width: 418,
                                        visible: !1,
                                        var: "btnSpeedUp",
                                        skin: "ui_com/com_btn_green.png",
                                        sizeGrid: "47,64,66,78",
                                        name: "btnSpeedUp",
                                        height: 100,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 8,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 34.5,
                                            x: 36.5,
                                            width: 43,
                                            visible: !1,
                                            var: "imgSpeedUp",
                                            skin: "ui_home/home_img_gem.png",
                                            name: "imgSpeedUp",
                                            height: 35,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 9
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 48,
                                            x: 275.5,
                                            width: 188,
                                            skin: "ui_com/com_text_addspeedtime.png",
                                            height: 44,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 19
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 48,
                                            x: 78,
                                            width: 47,
                                            skin: "ui_home/home_img_gem.png",
                                            height: 45,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 21
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 15,
                                            x: 132,
                                            width: 200,
                                            visible: !1,
                                            var: "lblSpeedUp",
                                            text: "加速60秒",
                                            name: "lblSpeedUp",
                                            height: 50,
                                            fontSize: 40,
                                            font: "Helvetica",
                                            color: "#ffffff",
                                            bold: !0
                                        },
                                        compId: 11
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 49,
                                            x: 134,
                                            width: 65,
                                            visible: !0,
                                            var: "lblCost",
                                            text: "20",
                                            name: "lblCost",
                                            height: 50,
                                            fontSize: 48,
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 10
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 639,
                                        x: 309,
                                        width: 374,
                                        visible: !0,
                                        var: "btnShare",
                                        skin: "ui_achieve/btn_bg.png",
                                        sizeGrid: "50,50,50,50",
                                        name: "btnShare",
                                        height: 149,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 12,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 72.5,
                                            x: 71,
                                            width: 60,
                                            visible: !1,
                                            var: "imgShare",
                                            skin: "ui_com/com_icon_share.png",
                                            name: "imgShare",
                                            height: 60,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 13
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 73,
                                            x: 71,
                                            width: 60,
                                            var: "imgVideo",
                                            skin: "com_icon_video1.png",
                                            name: "imgVideo",
                                            height: 54,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 18
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 72.5,
                                            x: 222,
                                            width: 208,
                                            var: "lblImage",
                                            skin: "ui_com/com_text_addspeedtime.png",
                                            name: "lblImage",
                                            height: 51,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 20
                                    }]
                                }]
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_dialog/dia_img_book.png", "ui_dialog/dia_img_pen.png", "ui_achieve/title_bg.png", "ui_dialog/dia_text_addsppedhint.png", "ui_achieve/btn_close.png", "ui_com/com_btn_green.png", "ui_home/home_img_gem.png", "ui_com/com_text_addspeedtime.png", "ui_achieve/btn_bg.png", "ui_com/com_icon_share.png", "com_icon_video1.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.AddRevenueDialogUI = i;
                var a = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 666,
                                x: 375,
                                width: 2536,
                                var: "maskBg",
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "5,5,5,5",
                                name: "maskBg",
                                height: 2591,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 5
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3,
                            child: [{
                                type: "Script",
                                props: {
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 4
                            }, {
                                type: "Box",
                                props: {
                                    y: 666,
                                    x: 375,
                                    width: 750,
                                    var: "tweener_main",
                                    height: 1334,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 684,
                                        x: 375,
                                        width: 600,
                                        var: "imgCommonBG",
                                        skin: "ui_achieve/dialog_bg.png",
                                        sizeGrid: "20,20,20,20",
                                        height: 893,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 7,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 26,
                                            x: 578,
                                            var: "closeBtn",
                                            skin: "ui_achieve/btn_close.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 45
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 136,
                                            width: 345,
                                            skin: "ui_achieve/title_bg.png",
                                            sizeGrid: "24,53,30,53",
                                            name: "headTitle"
                                        },
                                        compId: 56,
                                        child: [{
                                            type: "Label",
                                            props: {
                                                y: 46,
                                                x: 172,
                                                text: "离线奖励",
                                                strokeColor: "#ca781f",
                                                stroke: 6,
                                                height: 66,
                                                fontSize: 53,
                                                color: "#ffffff",
                                                bold: !0,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 57
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 660,
                                            x: 308.5,
                                            width: 374,
                                            visible: !0,
                                            var: "btnGet",
                                            skin: "ui_achieve/btn_bg.png",
                                            sizeGrid: "47,82,64,61",
                                            name: "btnGet",
                                            height: 115,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 36,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 55,
                                                x: 188,
                                                width: 99,
                                                skin: "ui_com/com_text_Get.png",
                                                scaleY: 1,
                                                scaleX: 1,
                                                height: 47,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 39
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 797,
                                            x: 310,
                                            width: 373,
                                            var: "btnDouble",
                                            skin: "ui_com/com_btn_yellow.png",
                                            sizeGrid: "47,68,70,58",
                                            name: "btnDouble",
                                            height: 136,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 11,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 63,
                                                x: 81,
                                                width: 60,
                                                visible: !1,
                                                var: "imgShare",
                                                skin: "ui_com/com_icon_share.png",
                                                name: "imgShare",
                                                height: 60,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 34
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 63,
                                                x: 226,
                                                width: 201,
                                                var: "lblImage",
                                                skin: "ui_com/com_text_doubleGet.png",
                                                name: "lblImage",
                                                height: 48,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 38
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 63,
                                                x: 81,
                                                width: 60,
                                                var: "imgVideo",
                                                skin: "com_icon_video1.png",
                                                name: "imgVideo",
                                                height: 54,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 41
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 558,
                                            x: 300,
                                            var: "lblMaxDes",
                                            valign: "middle",
                                            text: "离线奖励上限为2小时",
                                            styleSkin: "ui_dialog/dia_text_offlinehint.png",
                                            name: "lblMaxDes",
                                            fontSize: 36,
                                            color: "#978370",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 33
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 500,
                                            x: 305,
                                            width: 276,
                                            var: "lblCoinCount",
                                            valign: "middle",
                                            text: "+320",
                                            scaleY: 1.2,
                                            scaleX: 1.2,
                                            height: 47,
                                            fontSize: 50,
                                            font: "font_1",
                                            color: "#000000",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 26,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 44
                                        }]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 229,
                                            x: 106,
                                            width: 400,
                                            height: 200
                                        },
                                        compId: 48,
                                        child: [{
                                            type: "Animation",
                                            props: {
                                                y: 88,
                                                x: 196,
                                                source: "res/ui_particle/gainTreasureCoin.ani",
                                                autoPlay: !0
                                            },
                                            compId: 49
                                        }]
                                    }]
                                }]
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/btn_close.png", "ui_achieve/title_bg.png", "ui_achieve/btn_bg.png", "ui_com/com_text_Get.png", "ui_com/com_btn_yellow.png", "ui_com/com_icon_share.png", "ui_com/com_text_doubleGet.png", "com_icon_video1.png", "ui_dialog/dia_text_offlinehint.png", "res/ui_particle/gainTreasureCoin.ani"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.BeOfflineDialogUI = a;
                var n = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 973,
                                x: 375,
                                width: 3063,
                                visible: !0,
                                skin: "ui_real_uncompress/com_bg.png",
                                height: 4084,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .9
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "AnchorTop",
                                name: "AnchorTop",
                                height: 1334
                            },
                            compId: 4,
                            child: [{
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 755,
                                    var: "boxTopLeft",
                                    name: "boxTopLeft",
                                    height: 80
                                },
                                compId: 36,
                                child: [{
                                    type: "Box",
                                    props: {
                                        y: 19,
                                        x: 15,
                                        width: 330,
                                        name: "Gold",
                                        height: 52
                                    },
                                    compId: 37,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 330,
                                            skin: "ui_com/com_img_databg1.png",
                                            sizeGrid: "0,39,0,43",
                                            height: 52
                                        },
                                        compId: 38,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 26,
                                                x: 30,
                                                width: 49,
                                                skin: "ui_com/com_img_coin.png",
                                                height: 50,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 39
                                        }]
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 20,
                                        x: 356,
                                        width: 174,
                                        skin: "ui_com/com_img_databg1.png",
                                        sizeGrid: "0,28,0,20",
                                        name: "Diamond",
                                        height: 50
                                    },
                                    compId: 40,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 26,
                                            x: 32,
                                            width: 44,
                                            skin: "ui_com/com_img_diamond.png",
                                            height: 44,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 41
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 90,
                                        x: 15,
                                        width: 119,
                                        skin: "ui_com/com_img_databg1.png",
                                        sizeGrid: "0,28,0,20",
                                        name: "Stamina",
                                        height: 50
                                    },
                                    compId: 42,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 26,
                                            x: 32,
                                            width: 31,
                                            skin: "ui_com/com_img_stamina.png",
                                            height: 42,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 43
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 45,
                                        x: 412,
                                        width: 155,
                                        var: "lblDiamondNum",
                                        valign: "middle",
                                        text: "888",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblDiamondNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "font_1",
                                        color: "#fdfdfd",
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    compId: 44
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 114,
                                        x: 65,
                                        width: 86,
                                        var: "lblStaminaNum",
                                        valign: "middle",
                                        text: "99",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblStaminaNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "font_1",
                                        color: "#fdfdfd",
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    compId: 45
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 42,
                                        x: 99,
                                        width: 160,
                                        var: "lblGoldNum",
                                        valign: "middle",
                                        text: "26.5M",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblGoldNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "font_1",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    compId: 46
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 43,
                                        x: 226,
                                        width: 127,
                                        visible: !1,
                                        var: "lblAddGold",
                                        valign: "middle",
                                        text: "+8.1k/s",
                                        scaleY: .5,
                                        scaleX: .5,
                                        name: "lblAddGold",
                                        height: 44,
                                        fontSize: 23,
                                        font: "font_1",
                                        color: "#ffffff",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    compId: 47,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#ffffff",
                                            brightness: -100,
                                            alpha: 0,
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 48
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 43,
                                        x: 226,
                                        width: 127,
                                        var: "lblAddGold2",
                                        valign: "middle",
                                        text: "+8.1k/s",
                                        scaleY: .5,
                                        scaleX: .5,
                                        name: "lblAddGold2",
                                        height: 44,
                                        fontSize: 23,
                                        font: "font_1",
                                        color: "#ffffff",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    compId: 49,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#ffff00",
                                            brightness: -100,
                                            alpha: 0,
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 50
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Top",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 12
                            }]
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334
                            },
                            compId: 5,
                            child: [{
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 14
                            }, {
                                type: "Box",
                                props: {
                                    y: 617,
                                    x: 375,
                                    width: 200,
                                    var: "rewardList",
                                    name: "rewardList",
                                    height: 250,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 55,
                                child: [{
                                    type: "Box",
                                    props: {
                                        y: 125,
                                        x: 100,
                                        width: 300,
                                        var: "rewardBox1",
                                        renderType: "render",
                                        name: "rewardBox1",
                                        height: 350,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 57,
                                    child: [{
                                        type: "Animation",
                                        props: {
                                            y: 150,
                                            x: 150,
                                            var: "rewardAni",
                                            source: "res/ui_particle/gainRewardCoins.ani",
                                            scaleY: .5,
                                            scaleX: .5,
                                            pivotY: .5,
                                            pivotX: .5,
                                            name: "rewardAni"
                                        },
                                        compId: 74
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 280,
                                            x: 150,
                                            var: "rewardCount",
                                            text: "x100",
                                            styleSkin: "comp/image.png",
                                            scaleY: 1.2,
                                            scaleX: 1.2,
                                            name: "rewardCount",
                                            fontSize: 60,
                                            font: "font_2",
                                            color: "#ffffff",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 72
                                    }]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 125,
                                        x: 100,
                                        width: 300,
                                        var: "rewardBox2",
                                        renderType: "render",
                                        name: "rewardBox2",
                                        height: 350,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 78,
                                    child: [{
                                        type: "Animation",
                                        props: {
                                            y: 150,
                                            x: 150,
                                            source: "res/ui_particle/gainRewardCoins.ani",
                                            scaleY: .5,
                                            scaleX: .5,
                                            pivotY: .5,
                                            pivotX: .5,
                                            name: "rewardAni"
                                        },
                                        compId: 79
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 280,
                                            x: 150,
                                            text: "x100",
                                            styleSkin: "comp/image.png",
                                            scaleY: 1.2,
                                            scaleX: 1.2,
                                            name: "rewardCount",
                                            fontSize: 60,
                                            font: "font_2",
                                            color: "#ffffff",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 80
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 918,
                                    x: 375,
                                    width: 406,
                                    var: "btnGetReward",
                                    skin: "ui_com/com_btn_yellow.png",
                                    sizeGrid: "60,80,60,80",
                                    name: "btnGetReward",
                                    height: 130,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 15,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 60,
                                        x: 96,
                                        width: 60,
                                        var: "imgVideo",
                                        skin: "com_icon_video1.png",
                                        name: "imgVideo",
                                        height: 54,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 16
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 60,
                                        x: 96,
                                        width: 60,
                                        var: "imgShare",
                                        skin: "ui_com/com_icon_share.png",
                                        name: "imgShare",
                                        height: 60,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 17
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 58,
                                        x: 245,
                                        width: 192,
                                        var: "lblReward",
                                        text: "翻倍领取",
                                        name: "lblReward",
                                        height: 54,
                                        fontSize: 50,
                                        font: "font_2",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "left"
                                    },
                                    compId: 51
                                }]
                            }, {
                                type: "Label",
                                props: {
                                    y: 1040,
                                    x: 375,
                                    var: "btnClose",
                                    underlineColor: "#ffffff",
                                    underline: !0,
                                    text: "直接领取",
                                    scaleY: .7,
                                    scaleX: .7,
                                    name: "btnClose",
                                    fontSize: 40,
                                    font: "font_2",
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 53
                            }, {
                                type: "Label",
                                props: {
                                    y: 232,
                                    x: 375,
                                    width: 192,
                                    var: "lblTitleName",
                                    valign: "middle",
                                    text: "恭喜获得",
                                    scaleY: 1.5,
                                    scaleX: 1.5,
                                    name: "lblTitleName",
                                    height: 60,
                                    font: "font_2",
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 32
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_com/com_img_databg1.png", "ui_com/com_img_coin.png", "ui_com/com_img_diamond.png", "ui_com/com_img_stamina.png", "res/ui_particle/gainRewardCoins.ani", "comp/image.png", "ui_com/com_btn_yellow.png", "com_icon_video1.png", "ui_com/com_icon_share.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.BoxRewardViewUI = n;
                var o = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 667,
                                x: 375,
                                width: 1196,
                                skin: "ui_real_uncompress/com_bg.png",
                                height: 2115,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 666,
                                    x: 375,
                                    width: 600,
                                    skin: "ui_com/com_img_bg.png",
                                    sizeGrid: "15,15,15,15",
                                    name: "bg",
                                    height: 825,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 40,
                                        x: 559,
                                        var: "btnClose",
                                        skin: "ui_com/com_btn_close.png",
                                        name: "btnClose",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 8
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 744,
                                        x: 300,
                                        width: 376,
                                        var: "btnGet",
                                        skin: "ui_com/com_btn_yellow.png",
                                        sizeGrid: "30,30,50,30",
                                        name: "btnGet",
                                        height: 120,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 15,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 52,
                                            x: 188,
                                            width: 114,
                                            skin: "ui_com/com_text_Get.png",
                                            height: 53,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 26
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 40,
                                        x: 300,
                                        width: 218,
                                        skin: "ui_dialog/dia_text_freedia.png",
                                        height: 45,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 19,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#000000",
                                            brightness: -100,
                                            alpha: "0",
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 29
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 382,
                                        x: 300,
                                        width: 551,
                                        height: 543,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 20
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_com/com_img_bg.png", "ui_com/com_btn_close.png", "ui_com/com_btn_yellow.png", "ui_com/com_text_Get.png", "ui_dialog/dia_text_freedia.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.CollectDialogUI = o;
                var r = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 667,
                                x: 375,
                                width: 2e3,
                                var: "maskBg",
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "5,5,5,5",
                                name: "maskBg",
                                height: 2892,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 5
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3,
                            child: [{
                                type: "Script",
                                props: {
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 4
                            }, {
                                type: "Box",
                                props: {
                                    y: 667,
                                    x: 375,
                                    width: 750,
                                    var: "tweener_main",
                                    height: 1334,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 237,
                                        x: 74,
                                        width: 602,
                                        var: "imgCommonBG",
                                        skin: "ui_achieve/dialog_bg.png",
                                        sizeGrid: "15,15,15,15",
                                        height: 893
                                    },
                                    compId: 7,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 43,
                                            x: 136,
                                            width: 345,
                                            skin: "ui_achieve/title_bg.png",
                                            sizeGrid: "24,53,30,53",
                                            name: "headTitle"
                                        },
                                        compId: 193,
                                        child: [{
                                            type: "Label",
                                            props: {
                                                y: 46,
                                                x: 172,
                                                var: "lbltitle",
                                                text: "免费金币",
                                                strokeColor: "#ca781f",
                                                stroke: 6,
                                                name: "lbltitle",
                                                height: 66,
                                                fontSize: 53,
                                                color: "#ffffff",
                                                bold: !0,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 194
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 793.5,
                                            x: 310,
                                            width: 376,
                                            var: "btnHelp",
                                            skin: "ui_com/com_btn_yellow.png",
                                            sizeGrid: "24,25,26,24",
                                            height: 135,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 11,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 66,
                                                x: 85,
                                                width: 60,
                                                visible: !0,
                                                var: "imgShare0",
                                                skin: "ui_com/com_icon_share.png",
                                                name: "imgShare0",
                                                height: 60,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 34
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 64.5,
                                                x: 85,
                                                width: 60,
                                                visible: !0,
                                                var: "imgVideo0",
                                                skin: "com_icon_video1.png",
                                                name: "imgVideo0",
                                                height: 54,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 47
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 65,
                                                x: 223,
                                                width: 96,
                                                var: "lblimage",
                                                skin: "ui_com/com_text_Get.png",
                                                name: "lblimage",
                                                height: 45,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 43
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 63,
                                                x: 188,
                                                width: 127,
                                                visible: !1,
                                                var: "imgHelpGet",
                                                skin: "ui_com/com_text_Get.png",
                                                skewY: 2,
                                                skewX: 2,
                                                name: "imgHelpGet",
                                                height: 59,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 188
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 793.5,
                                            x: 310,
                                            width: 376,
                                            var: "btnPrize",
                                            skin: "ui_com/com_btn_yellow.png",
                                            sizeGrid: "30,30,50,30",
                                            name: "btnPrize",
                                            height: 135,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 39,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 62,
                                                x: 83,
                                                width: 60,
                                                var: "imgVideo",
                                                skin: "com_icon_video1.png",
                                                name: "imgVideo",
                                                height: 60,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 48
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 62,
                                                x: 83,
                                                width: 60,
                                                var: "imgShare",
                                                skin: "ui_com/com_icon_share.png",
                                                name: "imgShare",
                                                height: 60,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 49
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 85,
                                                x: 226,
                                                width: 96,
                                                var: "imgGetShare",
                                                skin: "ui_com/com_text_Get.png",
                                                pivotY: 45,
                                                pivotX: 48,
                                                name: "imgGetShare",
                                                height: 45
                                            },
                                            compId: 54
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 63,
                                                x: 188,
                                                width: 127,
                                                var: "imgGet",
                                                skin: "ui_com/com_text_Get.png",
                                                name: "imgGet",
                                                height: 59,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 45
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 25,
                                            x: 580,
                                            var: "btnClose",
                                            skin: "ui_achieve/btn_close.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 32
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 659,
                                            x: 312,
                                            width: 374,
                                            visible: !1,
                                            var: "startBtn",
                                            skin: "ui_com/com_btn_blue.png",
                                            sizeGrid: "38,74,37,74",
                                            name: "startBtn",
                                            height: 114,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 191,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 57,
                                                x: 187,
                                                width: 156,
                                                skin: "ui_home/home_img_quzhaocha.png",
                                                height: 57,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 192
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 39,
                                            x: 313,
                                            width: 204,
                                            visible: !1,
                                            var: "lblContent",
                                            valign: "middle",
                                            text: "免费金币",
                                            skin: "ui_dialog/dia_text_freecoin.png",
                                            height: 53,
                                            fontSize: 50,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 31,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 186
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 555.5,
                                            x: 313,
                                            width: 326,
                                            var: "imgDes",
                                            skin: "ui_dialog/lottery_next_six_des.png",
                                            height: 51,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 53
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 561,
                                            x: 315,
                                            width: 302,
                                            var: "lblCoinCount",
                                            text: "+240M",
                                            scaleY: 1.2,
                                            scaleX: 1.2,
                                            height: 50,
                                            fontSize: 50,
                                            font: "font_1",
                                            color: "#525151",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 26,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 51
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 175,
                                            x: 302,
                                            var: "lblGetFreeDes",
                                            text: "快来领取免费金币吧!",
                                            name: "lblGetFreeDes",
                                            fontSize: 33,
                                            font: "SimHei",
                                            color: "#978370",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 33
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 355,
                                            x: 313,
                                            width: 267,
                                            visible: !1,
                                            var: "imgIcon",
                                            skin: "ui_dialog/dia_img_six.png",
                                            name: "imgIcon",
                                            height: 237,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 30
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 355,
                                            x: 317,
                                            width: 400,
                                            visible: !1,
                                            var: "prizeBox",
                                            height: 200,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 57,
                                        child: [{
                                            type: "Animation",
                                            props: {
                                                y: 103,
                                                x: 200,
                                                var: "aniPrizeCoin",
                                                source: "res/ui_particle/gainTreasureCoin.ani",
                                                autoPlay: !0
                                            },
                                            compId: 58
                                        }, {
                                            type: "Animation",
                                            props: {
                                                y: 103,
                                                x: 200,
                                                var: "aniPrizeDiamond",
                                                source: "res/ui_particle/gainTreasureEnergy.ani"
                                            },
                                            compId: 187
                                        }]
                                    }]
                                }]
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/title_bg.png", "ui_com/com_btn_yellow.png", "ui_com/com_icon_share.png", "com_icon_video1.png", "ui_com/com_text_Get.png", "ui_achieve/btn_close.png", "ui_com/com_btn_blue.png", "ui_home/home_img_quzhaocha.png", "ui_dialog/dia_text_freecoin.png", "ui_dialog/lottery_next_six_des.png", "ui_dialog/dia_img_six.png", "res/ui_particle/gainTreasureCoin.ani", "res/ui_particle/gainTreasureEnergy.ani"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.CommonDialogPageUI = r;
                var s = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 584,
                                x: 375,
                                width: 2175,
                                skin: "ui_real_uncompress/com_bg.png",
                                height: 2569,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 61
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 62,
                            child: [{
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 63
                            }, {
                                type: "Image",
                                props: {
                                    y: 681,
                                    x: 375,
                                    width: 666,
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "20,20,20,20",
                                    name: "Center",
                                    height: 1053,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 3
                            }, {
                                type: "Image",
                                props: {
                                    y: 178,
                                    x: 685,
                                    var: "btnClose",
                                    skin: "ui_achieve/btn_close.png",
                                    name: "btnClose",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6
                            }, {
                                type: "Image",
                                props: {
                                    y: 181,
                                    x: 204,
                                    width: 342,
                                    skin: "ui_achieve/title_bg.png",
                                    sizeGrid: "24,53,30,53",
                                    name: "headTitle"
                                },
                                compId: 208,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 49,
                                        x: 172,
                                        text: "签到奖励",
                                        strokeColor: "#ca781f",
                                        stroke: 6,
                                        height: 66,
                                        fontSize: 53,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 209
                                }]
                            }, {
                                type: "Box",
                                props: {
                                    y: 52,
                                    x: 0,
                                    width: 750,
                                    var: "DayBox",
                                    name: "DayBox",
                                    height: 1334
                                },
                                compId: 64,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 351,
                                        x: 168,
                                        width: 154,
                                        skin: "ui_dialog/dia_img_signawardbg.png",
                                        sizeGrid: "60,22,23,22",
                                        name: "Day1",
                                        height: 154,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 7,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -23.5,
                                            x: 78,
                                            width: 78,
                                            skin: "ui_dialog/dia_text_day.png",
                                            height: 27,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 65,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 191
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -27,
                                            x: 76,
                                            width: 62,
                                            text: "1",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "day",
                                            height: 28,
                                            fontSize: 30,
                                            font: "font_1",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 8,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 192
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 36,
                                            x: 76,
                                            width: 134,
                                            skin: "ui_dialog/dia_img_bigdia.png",
                                            name: "icon",
                                            height: 134,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 9
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 133,
                                            x: 77,
                                            width: 96,
                                            text: "x100",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "num",
                                            height: 40,
                                            fontSize: 33,
                                            font: "font_1",
                                            color: "#525151",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 10
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 76,
                                            x: 76,
                                            width: 154,
                                            skin: "ui_dialog/dia_img_bgMask.png",
                                            sizeGrid: "24,16,22,19",
                                            name: "mark",
                                            height: 154,
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: .6
                                        },
                                        compId: 11
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 68,
                                            x: 76,
                                            width: 79,
                                            skin: "ui_dialog/dia_icon_gou.png",
                                            name: "check",
                                            height: 65,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 12
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 350,
                                        x: 375,
                                        width: 154,
                                        skin: "ui_dialog/dia_img_signawardbg.png",
                                        sizeGrid: "41,22,23,18",
                                        name: "Day2",
                                        height: 154,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 138,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -22.799999999999997,
                                            x: 78,
                                            width: 78,
                                            skin: "ui_dialog/dia_text_day.png",
                                            height: 27,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 139,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 193
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -27,
                                            x: 76,
                                            width: 62,
                                            text: "1",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "day",
                                            height: 28,
                                            fontSize: 30,
                                            font: "font_1",
                                            color: "#ffffff",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 140,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 194
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 36,
                                            x: 73,
                                            width: 134,
                                            skin: "ui_dialog/dia_img_bigdia.png",
                                            name: "icon",
                                            height: 134,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 142
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 133,
                                            x: 77,
                                            width: 96,
                                            text: "x100",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "num",
                                            height: 40,
                                            fontSize: 33,
                                            font: "font_1",
                                            color: "#525151",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 143
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 76,
                                            x: 76,
                                            width: 154,
                                            skin: "ui_dialog/dia_img_bgMask.png",
                                            sizeGrid: "24,16,22,19",
                                            name: "mark",
                                            height: 154,
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: .6
                                        },
                                        compId: 145
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 68,
                                            x: 76,
                                            width: 79,
                                            skin: "ui_dialog/dia_icon_gou.png",
                                            name: "check",
                                            height: 65,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 146
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 350,
                                        x: 585,
                                        width: 154,
                                        skin: "ui_dialog/dia_img_signawardbg.png",
                                        sizeGrid: "41,22,23,18",
                                        name: "Day3",
                                        height: 154,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 148,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -22.799999999999997,
                                            x: 77,
                                            width: 78,
                                            skin: "ui_dialog/dia_text_day.png",
                                            height: 27,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 149,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 195
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -27,
                                            x: 75,
                                            width: 62,
                                            text: "1",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "day",
                                            height: 28,
                                            fontSize: 30,
                                            font: "font_1",
                                            color: "#ffffff",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 150,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 196
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 36,
                                            x: 73,
                                            width: 134,
                                            skin: "ui_dialog/dia_img_bigdia.png",
                                            name: "icon",
                                            height: 134,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 152
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 133,
                                            x: 77,
                                            width: 96,
                                            text: "x100",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "num",
                                            height: 40,
                                            fontSize: 33,
                                            font: "font_1",
                                            color: "#525151",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 153
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 76,
                                            x: 76,
                                            width: 154,
                                            skin: "ui_dialog/dia_img_bgMask.png",
                                            sizeGrid: "24,16,22,19",
                                            name: "mark",
                                            height: 154,
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: .6
                                        },
                                        compId: 155
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 68,
                                            x: 76,
                                            width: 79,
                                            skin: "ui_dialog/dia_icon_gou.png",
                                            name: "check",
                                            height: 65,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 156
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 555,
                                        x: 168,
                                        width: 154,
                                        skin: "ui_dialog/dia_img_signawardbg.png",
                                        sizeGrid: "41,22,23,18",
                                        name: "Day4",
                                        height: 154,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 158,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -22.799999999999997,
                                            x: 78,
                                            width: 78,
                                            skin: "ui_dialog/dia_text_day.png",
                                            height: 27,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 161,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 197
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -27,
                                            x: 76,
                                            width: 62,
                                            text: "1",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "day",
                                            height: 28,
                                            fontSize: 30,
                                            font: "font_1",
                                            color: "#ffffff",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 162,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 198
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 36,
                                            x: 73,
                                            width: 134,
                                            skin: "ui_dialog/dia_img_bigdia.png",
                                            name: "icon",
                                            height: 134,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 164
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 133,
                                            x: 77,
                                            width: 96,
                                            text: "x100",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "num",
                                            height: 40,
                                            fontSize: 33,
                                            font: "font_1",
                                            color: "#525151",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 165
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 76,
                                            x: 76,
                                            width: 154,
                                            skin: "ui_dialog/dia_img_bgMask.png",
                                            sizeGrid: "24,16,22,19",
                                            name: "mark",
                                            height: 154,
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: .6
                                        },
                                        compId: 167
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 68,
                                            x: 76,
                                            width: 79,
                                            skin: "ui_dialog/dia_icon_gou.png",
                                            name: "check",
                                            height: 65,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 168
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 555,
                                        x: 375,
                                        width: 154,
                                        skin: "ui_dialog/dia_img_signawardbg.png",
                                        sizeGrid: "41,22,23,18",
                                        name: "Day5",
                                        height: 154,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 159,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -22.799999999999997,
                                            x: 78,
                                            width: 78,
                                            skin: "ui_dialog/dia_text_day.png",
                                            height: 27,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 170,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 199
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -27,
                                            x: 76,
                                            width: 62,
                                            text: "1",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "day",
                                            height: 28,
                                            fontSize: 30,
                                            font: "font_1",
                                            color: "#ffffff",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 171,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 200
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 36,
                                            x: 73,
                                            width: 134,
                                            skin: "ui_dialog/dia_img_bigdia.png",
                                            name: "icon",
                                            height: 134,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 173
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 133,
                                            x: 77,
                                            width: 96,
                                            text: "x100",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "num",
                                            height: 40,
                                            fontSize: 33,
                                            font: "font_1",
                                            color: "#525151",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 174
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 76,
                                            x: 76,
                                            width: 154,
                                            skin: "ui_dialog/dia_img_bgMask.png",
                                            sizeGrid: "24,16,22,19",
                                            name: "mark",
                                            height: 154,
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: .6
                                        },
                                        compId: 176
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 68,
                                            x: 76,
                                            width: 79,
                                            skin: "ui_dialog/dia_icon_gou.png",
                                            name: "check",
                                            height: 65,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 177
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 555,
                                        x: 586,
                                        width: 154,
                                        skin: "ui_dialog/dia_img_signawardbg.png",
                                        sizeGrid: "41,22,23,18",
                                        name: "Day6",
                                        height: 154,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 160,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -22.799999999999997,
                                            x: 78,
                                            width: 78,
                                            skin: "ui_dialog/dia_text_day.png",
                                            height: 27,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 179,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 201
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -27,
                                            x: 76,
                                            width: 62,
                                            text: "1",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "day",
                                            height: 28,
                                            fontSize: 30,
                                            font: "font_1",
                                            color: "#ffffff",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 180,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 202
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 36,
                                            x: 73,
                                            width: 134,
                                            skin: "ui_dialog/dia_img_bigdia.png",
                                            name: "icon",
                                            height: 134,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 182
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 133,
                                            x: 77,
                                            width: 96,
                                            text: "x100",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "num",
                                            height: 40,
                                            fontSize: 33,
                                            font: "font_1",
                                            color: "#525151",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 183
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 76,
                                            x: 76,
                                            width: 154,
                                            skin: "ui_dialog/dia_img_bgMask.png",
                                            sizeGrid: "24,16,22,19",
                                            name: "mark",
                                            height: 154,
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: .6
                                        },
                                        compId: 185
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 68,
                                            x: 76,
                                            width: 79,
                                            skin: "ui_dialog/dia_icon_gou.png",
                                            name: "check",
                                            height: 65,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 186
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 760,
                                        x: 376,
                                        width: 618,
                                        skin: "ui_dialog/dia_img_signawardbg.png",
                                        sizeGrid: "50,35,35,35",
                                        scaleY: .93,
                                        scaleX: .93,
                                        name: "Day7",
                                        height: 150,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 43,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -21.599999999999994,
                                            x: 308,
                                            width: 78,
                                            skin: "ui_dialog/dia_text_day.png",
                                            scaleY: 1.2,
                                            scaleX: 1.1,
                                            name: "",
                                            height: 27,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 102,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 203
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -25.799999999999997,
                                            x: 308,
                                            width: 62,
                                            text: "1",
                                            scaleY: .9,
                                            scaleX: .9,
                                            name: "day",
                                            height: 28,
                                            fontSize: 30,
                                            font: "font_1",
                                            color: "#ffffff",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 137,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 204
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 35,
                                            x: 312.5,
                                            width: 115,
                                            skin: "ui_dialog/dia_img_bigdia.png",
                                            scaleY: 1.2,
                                            scaleX: 1.2,
                                            name: "icon",
                                            height: 115,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 45
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 35,
                                            x: 153,
                                            width: 115,
                                            skin: "ui_dialog/dia_img_bigdia.png",
                                            scaleY: 1.2,
                                            scaleX: 1.2,
                                            name: "icon",
                                            height: 115,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 206
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 35,
                                            x: 468,
                                            width: 115,
                                            skin: "ui_dialog/dia_img_bigdia.png",
                                            scaleY: 1.2,
                                            scaleX: 1.2,
                                            name: "icon",
                                            height: 115,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 205
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 130,
                                            x: 310,
                                            width: 129,
                                            text: "x1000",
                                            scaleY: .75,
                                            scaleX: .75,
                                            name: "num",
                                            height: 44,
                                            fontSize: 44,
                                            font: "font_1",
                                            color: "#525151",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 46
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 618,
                                            skin: "ui_dialog/dia_img_bgMask.png",
                                            sizeGrid: "39,32,25,26",
                                            name: "mark",
                                            height: 150,
                                            alpha: .6
                                        },
                                        compId: 47
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 66,
                                            x: 308,
                                            width: 79,
                                            skin: "ui_dialog/dia_icon_gou.png",
                                            name: "check",
                                            height: 65,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 48
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 1e3,
                                    x: 380,
                                    width: 301,
                                    var: "lblReceived",
                                    text: "明天再来吧！",
                                    skin: "ui_dialog/dia_text_getFinish.png",
                                    name: "lblReceived",
                                    height: 108,
                                    fontSize: 53,
                                    font: "Helvetica",
                                    color: "#929292",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 60
                            }, {
                                type: "Box",
                                props: {
                                    y: 906,
                                    x: 221,
                                    width: 308,
                                    var: "Receive",
                                    name: "Receive",
                                    height: 51
                                },
                                compId: 59,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 200,
                                        x: 158,
                                        width: 371,
                                        var: "DoubleBtn",
                                        skin: "ui_com/com_btn_yellow.png",
                                        sizeGrid: "50,50,50,50",
                                        name: "DoubleBtn",
                                        height: 138,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 52,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 64,
                                            x: 81,
                                            width: 60,
                                            var: "imgShare",
                                            skin: "ui_com/com_icon_share.png",
                                            name: "imgShare",
                                            height: 60,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 53
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 65,
                                            x: 81,
                                            width: 60,
                                            var: "imgVideo",
                                            skin: "com_icon_video1.png",
                                            name: "imgVideo",
                                            height: 54,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 104
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 65,
                                            x: 225,
                                            width: 198,
                                            var: "lblImage",
                                            skin: "ui_com/com_text_doubleGet.png",
                                            height: 48,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 106
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 65,
                                        x: 158,
                                        width: 376,
                                        var: "ReceiveBtn",
                                        skin: "ui_achieve/btn_bg.png",
                                        sizeGrid: "50,50,50,50",
                                        name: "ReceiveBtn",
                                        height: 116,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 50,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 54,
                                            x: 188,
                                            width: 96,
                                            skin: "ui_com/com_text_Get.png",
                                            height: 48,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 105
                                    }]
                                }]
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/btn_close.png", "ui_achieve/title_bg.png", "ui_dialog/dia_img_signawardbg.png", "ui_dialog/dia_text_day.png", "ui_dialog/dia_img_bigdia.png", "ui_dialog/dia_img_bgMask.png", "ui_dialog/dia_icon_gou.png", "ui_dialog/dia_text_getFinish.png", "ui_com/com_btn_yellow.png", "ui_com/com_icon_share.png", "com_icon_video1.png", "ui_com/com_text_doubleGet.png", "ui_achieve/btn_bg.png", "ui_com/com_text_Get.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.DailycheckUI = s;
                var l = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 666,
                                x: 375,
                                width: 2536,
                                var: "maskBg",
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "5,5,5,5",
                                name: "maskBg",
                                height: 2591,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 5
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3,
                            child: [{
                                type: "Box",
                                props: {
                                    y: 666,
                                    x: 375,
                                    width: 750,
                                    var: "box",
                                    height: 1334,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 645,
                                        x: 375,
                                        width: 626,
                                        var: "imgCommonBG",
                                        skin: "ui_com/com_img_bg.png",
                                        sizeGrid: "15,15,15,15",
                                        height: 766,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 7,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 223.5,
                                            x: 323,
                                            width: 319,
                                            var: "imgAwardIcon",
                                            skin: "ui_dialog/dia_img_bigdia.png",
                                            name: "imgAwardIcon",
                                            height: 319,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 30
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 620,
                                            x: 313,
                                            width: 418,
                                            var: "btnGet",
                                            skin: "ui_com/com_btn_yellow.png",
                                            sizeGrid: "30,30,50,30",
                                            name: "btnGet",
                                            height: 170,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 11,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 50,
                                                x: 214,
                                                visible: !1,
                                                var: "imgShare",
                                                skin: "ui_com/com_icon_share.png",
                                                scaleY: 1.5,
                                                scaleX: 1.5,
                                                name: "imgShare",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 34
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 111,
                                                x: 214,
                                                var: "lblImage",
                                                skin: "ui_com/com_text_Get.png",
                                                name: "lblImage",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 38
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 50,
                                                x: 214,
                                                var: "imgVideo",
                                                skin: "com_icon_video1.png",
                                                scaleY: 1.5,
                                                scaleX: 1.5,
                                                name: "imgVideo",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 41
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 452,
                                            x: 203,
                                            width: 220,
                                            skin: "ui_com/com_img_databg1.png",
                                            sizeGrid: "10,20,10,20",
                                            height: 51
                                        },
                                        compId: 49,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 26,
                                                x: 68,
                                                width: 45,
                                                skin: "ui_com/com_img_diamond.png",
                                                height: 47,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 50
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 2,
                                                x: 94,
                                                width: 86,
                                                var: "lblAwardCount",
                                                valign: "middle",
                                                text: "+50",
                                                scaleY: .8,
                                                scaleX: .8,
                                                name: "lblAwardCount",
                                                height: 47,
                                                fontSize: 50,
                                                font: "font_1",
                                                color: "#000000",
                                                bold: !0,
                                                anchorY: 0,
                                                anchorX: 0,
                                                align: "center"
                                            },
                                            compId: 26,
                                            child: [{
                                                type: "Script",
                                                props: {
                                                    saturation: -100,
                                                    hue: -180,
                                                    contrast: -100,
                                                    color: "#000000",
                                                    brightness: -100,
                                                    alpha: "0",
                                                    runtime: "laya.effect.ColorFilterSetter"
                                                },
                                                compId: 44
                                            }]
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 137,
                                            x: 313,
                                            visible: !1,
                                            var: "lblMaxDes",
                                            text: "离线奖励上限为2小时",
                                            skin: "ui_main/gift_text_hintAward.png",
                                            name: "lblMaxDes",
                                            fontSize: 30,
                                            font: "SimHei",
                                            color: "#817c7c",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 33
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 56,
                                            x: 312,
                                            skin: "ui_dialog/gift_text_title.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 43,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 53
                                        }]
                                    }, {
                                        type: "Sprite",
                                        props: {
                                            y: 714,
                                            x: 219,
                                            texture: "ui_dialog/gift_text_hintTimes.png"
                                        },
                                        compId: 45,
                                        child: [{
                                            type: "Label",
                                            props: {
                                                y: -3,
                                                x: 154,
                                                width: 33,
                                                var: "lblResidueTimes",
                                                text: "5",
                                                scaleY: 1,
                                                scaleX: 1,
                                                name: "lblResidueTimes",
                                                height: 33,
                                                font: "font_1"
                                            },
                                            compId: 46,
                                            child: [{
                                                type: "Script",
                                                props: {
                                                    saturation: -100,
                                                    hue: -180,
                                                    contrast: -100,
                                                    color: "#5f5c5c",
                                                    brightness: -100,
                                                    alpha: "0",
                                                    runtime: "laya.effect.ColorFilterSetter"
                                                },
                                                compId: 47
                                            }]
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 55,
                                            x: 575,
                                            var: "btnReturn",
                                            skin: "ui_com/com_btn_close.png",
                                            name: "btnReturn",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 48
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 4
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_com/com_img_bg.png", "ui_dialog/dia_img_bigdia.png", "ui_com/com_btn_yellow.png", "ui_com/com_icon_share.png", "ui_com/com_text_Get.png", "com_icon_video1.png", "ui_com/com_img_databg1.png", "ui_com/com_img_diamond.png", "ui_main/gift_text_hintAward.png", "ui_dialog/gift_text_title.png", "ui_dialog/gift_text_hintTimes.png", "ui_com/com_btn_close.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.EveryGiftDialogUI = l;
                var c = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Dialog",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 973,
                                x: 375,
                                width: 2357,
                                visible: !1,
                                skin: "ui_real_uncompress/com_bg.png",
                                height: 3786,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3
                        }, {
                            type: "Image",
                            props: {
                                y: 973,
                                x: 375,
                                width: 2357,
                                skin: "ui_real_uncompress/com_bg.png",
                                height: 3786,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .85
                            },
                            compId: 45
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 501,
                                    x: 191,
                                    width: 209,
                                    var: "imgOriCarIcon",
                                    skin: "ui_car/1007.png",
                                    height: 253,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 7
                            }, {
                                type: "Image",
                                props: {
                                    y: 501,
                                    x: 537.5,
                                    width: 209,
                                    var: "imgUpCarIcon",
                                    skin: "ui_car/1007.png",
                                    height: 253,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 28
                            }, {
                                type: "Label",
                                props: {
                                    y: 661,
                                    x: 528,
                                    width: 308,
                                    var: "lblUpCarName",
                                    valign: "middle",
                                    text: "皇冠维多利亚改 LV.25",
                                    height: 40,
                                    fontSize: 35,
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 29
                            }, {
                                type: "Label",
                                props: {
                                    y: 706,
                                    x: 528,
                                    width: 333,
                                    var: "lblUpCarControl",
                                    text: "操作 +15%",
                                    scaleY: .8,
                                    scaleX: .8,
                                    height: 39,
                                    fontSize: 35,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 31
                            }, {
                                type: "Label",
                                props: {
                                    y: 665,
                                    x: 190,
                                    width: 370,
                                    var: "lblOriCarName",
                                    valign: "middle",
                                    text: "摩根",
                                    height: 40,
                                    fontSize: 35,
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 8
                            }, {
                                type: "Label",
                                props: {
                                    y: 710,
                                    x: 190,
                                    width: 393,
                                    var: "lblOriCarControl",
                                    text: "操作 +15%",
                                    scaleY: .8,
                                    scaleX: .8,
                                    height: 39,
                                    fontSize: 35,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 19
                            }, {
                                type: "Image",
                                props: {
                                    y: 456,
                                    x: 307.2,
                                    width: 106,
                                    skin: "ui_dialog/dia_img_arrow.png",
                                    height: 112
                                },
                                compId: 33
                            }, {
                                type: "Image",
                                props: {
                                    y: 160,
                                    x: 286,
                                    width: 177,
                                    skin: "ui_dialog/dia_text_freeLevel.png",
                                    height: 43
                                },
                                compId: 34
                            }, {
                                type: "Label",
                                props: {
                                    y: 263,
                                    x: 199,
                                    width: 351,
                                    text: "马上将你刚买的角色升级!",
                                    styleSkin: "ui_dialog/dia_text_addlevel.png",
                                    height: 41,
                                    fontSize: 30,
                                    font: "Microsoft YaHei",
                                    color: "#ffdb59",
                                    bold: !0
                                },
                                compId: 35
                            }, {
                                type: "Image",
                                props: {
                                    y: 158,
                                    x: 599.5,
                                    width: 47,
                                    var: "btnClose",
                                    skin: "ui_com/com_btn_close.png",
                                    height: 47
                                },
                                compId: 36
                            }, {
                                type: "Image",
                                props: {
                                    y: 859,
                                    x: 375,
                                    width: 446,
                                    visible: !1,
                                    var: "btnCost",
                                    skin: "ui_com/com_btn_green.png",
                                    sizeGrid: "42,50,66,68",
                                    height: 114,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 37,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 53,
                                        x: 263,
                                        width: 42,
                                        var: "lblCost",
                                        text: "12",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        height: 36,
                                        font: "font_1",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 39
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 54,
                                        x: 197,
                                        width: 59,
                                        skin: "ui_com/com_img_diamond.png",
                                        height: 62,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 40
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 891,
                                    x: 375,
                                    width: 450,
                                    var: "btnConfirm",
                                    skin: "ui_com/com_btn_yellow.png",
                                    sizeGrid: "46,56,50,74",
                                    name: "btnConfirm",
                                    height: 159,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 9,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 280,
                                        width: 128,
                                        var: "lblImage",
                                        skin: "ui_com/com_text_free.png",
                                        height: 64,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 25
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 149,
                                        width: 82,
                                        var: "imgShare",
                                        skin: "ui_com/com_icon_share.png",
                                        height: 74,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 41
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80.5,
                                        x: 149,
                                        width: 82,
                                        var: "imgVideo",
                                        skin: "com_icon_video1.png",
                                        height: 74,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 42
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 3,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        animations: [{
                            nodes: [{
                                target: 33,
                                keyframes: {
                                    x: [{
                                        value: 296,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 314,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "x",
                                        index: 15
                                    }, {
                                        value: 332,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "x",
                                        index: 30
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "alpha",
                                        index: 30
                                    }]
                                }
                            }],
                            name: "ani1",
                            id: 1,
                            frameRate: 30,
                            action: 0
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_car/1007.png", "ui_dialog/dia_img_arrow.png", "ui_dialog/dia_text_freeLevel.png", "ui_dialog/dia_text_addlevel.png", "ui_com/com_btn_close.png", "ui_com/com_btn_green.png", "ui_com/com_img_diamond.png", "ui_com/com_btn_yellow.png", "ui_com/com_text_free.png", "ui_com/com_icon_share.png", "com_icon_video1.png"],
                        loadList3D: []
                    }, t
                }(Laya.Dialog);
                e.FreeLevelUpDialogUI = c;
                var h = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 667,
                                x: 375,
                                width: 2e3,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "5,5,5,5",
                                name: "maskBg",
                                height: 2870,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 580,
                                    x: 375,
                                    width: 626,
                                    visible: !0,
                                    skin: "ui_com/com_img_bg.png",
                                    sizeGrid: "15,15,15,15",
                                    height: 676,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 572,
                                        x: 313,
                                        width: 418,
                                        var: "btnGet",
                                        skin: "ui_com/com_btn_yellow.png",
                                        sizeGrid: "30,30,50,30",
                                        name: "btnGet",
                                        height: 170,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 7,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 78,
                                            x: 209,
                                            width: 146,
                                            var: "imgGet",
                                            skin: "ui_com/com_text_Get.png",
                                            name: "imgGet",
                                            height: 68,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 18
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 50,
                                        x: 313,
                                        width: 363,
                                        text: "关注奖励",
                                        name: "lblTitle",
                                        height: 60,
                                        fontSize: 50,
                                        font: "font_2",
                                        color: "#000000",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 12,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#000000",
                                            brightness: -100,
                                            alpha: "0",
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 200
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }, {
                                type: "Box",
                                props: {
                                    y: 355,
                                    x: 314,
                                    width: 510,
                                    var: "boxDouble",
                                    scaleY: .8,
                                    scaleX: .8,
                                    name: "boxDouble",
                                    height: 259
                                },
                                compId: 187,
                                child: [{
                                    type: "Animation",
                                    props: {
                                        y: 157,
                                        x: -92,
                                        var: "diamondAni2",
                                        source: "res/ui_particle/gainTreasureDiamond.ani",
                                        scaleY: .8,
                                        scaleX: .8,
                                        rotation: 0,
                                        name: "diamondAni2",
                                        autoPlay: !0
                                    },
                                    compId: 189
                                }, {
                                    type: "Animation",
                                    props: {
                                        y: 157,
                                        x: 259,
                                        var: "hintAni2",
                                        source: "res/ui_particle/gainTreasureEnergy.ani",
                                        scaleY: .8,
                                        scaleX: .8,
                                        rotation: 0,
                                        name: "hintAni2",
                                        autoPlay: !0
                                    },
                                    compId: 188
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 351,
                                        x: -93.80000000000001,
                                        width: 226,
                                        skin: "ui_dialog/dia_img_numInfoBg.png",
                                        name: "0",
                                        height: 75,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 190
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 351,
                                        x: 268,
                                        width: 226,
                                        skin: "ui_dialog/dia_img_numInfoBg.png",
                                        name: "1",
                                        height: 75,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 193
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 352,
                                        x: -93.80000000000001,
                                        width: 302,
                                        var: "lblDiamondNum2",
                                        text: "123",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lblDiamondNum2",
                                        height: 39,
                                        fontSize: 50,
                                        font: "font_1",
                                        color: "#525151",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 191,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#000000",
                                            brightness: -100,
                                            alpha: "0",
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 192
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 352,
                                        x: 268,
                                        width: 302,
                                        var: "lblStaminaNum2",
                                        text: "123",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lblStaminaNum2",
                                        height: 39,
                                        fontSize: 50,
                                        font: "font_1",
                                        color: "#525151",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 194,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#000000",
                                            brightness: -100,
                                            alpha: "0",
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 195
                                    }]
                                }]
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_com/com_img_bg.png", "ui_com/com_btn_yellow.png", "ui_com/com_text_Get.png", "res/ui_particle/gainTreasureDiamond.ani", "res/ui_particle/gainTreasureEnergy.ani", "ui_dialog/dia_img_numInfoBg.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.GZHAwardDialogUI = h;
                var d = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Dialog",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 973,
                                x: 375,
                                width: 3063,
                                visible: !1,
                                skin: "ui_real_uncompress/com_bg.png",
                                height: 4084,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .85
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 614,
                                    x: 372,
                                    width: 689,
                                    visible: !1,
                                    skin: "ui_dialog/garage_guangxiao1.png",
                                    rotation: 360,
                                    height: 677,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 1
                                },
                                compId: 12
                            }, {
                                type: "Sprite",
                                props: {
                                    y: 727,
                                    x: 246.5,
                                    width: 39,
                                    visible: !1,
                                    texture: "ui_dialog/image03.png",
                                    scaleX: 1,
                                    pivotY: 24,
                                    pivotX: 20,
                                    name: "image",
                                    height: 47,
                                    alpha: 0
                                },
                                compId: 22
                            }, {
                                type: "Image",
                                props: {
                                    y: 612,
                                    x: 369,
                                    width: 378,
                                    visible: !1,
                                    skin: "ui_dialog/image.png",
                                    scaleY: 1.2,
                                    scaleX: 1.2,
                                    rotation: 0,
                                    pivotY: 189,
                                    pivotX: 189,
                                    height: 378,
                                    alpha: 0
                                },
                                compId: 24
                            }, {
                                type: "Image",
                                props: {
                                    y: 615,
                                    x: 375,
                                    width: 272,
                                    var: "imgCarIcon",
                                    skin: "ui_car/1007.png",
                                    name: "imgCarIcon",
                                    height: 329,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 7
                            }, {
                                type: "Image",
                                props: {
                                    y: 108,
                                    x: 606,
                                    var: "btnClose",
                                    skin: "ui_com/com_btn_close.png"
                                },
                                compId: 28
                            }, {
                                type: "Image",
                                props: {
                                    y: 1013,
                                    x: 375,
                                    width: 447,
                                    var: "btnConfirm",
                                    skin: "ui_com/com_btn_green.png",
                                    sizeGrid: "47,43,59,77",
                                    name: "btnConfirm",
                                    height: 124,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 9,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 56,
                                        x: 223,
                                        var: "txtConfirm",
                                        skin: "ui_dialog/dia_show_txt.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 25
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 517,
                                    x: 277,
                                    width: 27,
                                    visible: !1,
                                    skin: "ui_dialog/dia_icon_star.png",
                                    scaleX: 1,
                                    height: 35,
                                    alpha: 0
                                },
                                compId: 13
                            }, {
                                type: "Image",
                                props: {
                                    y: 792,
                                    x: 533,
                                    width: 29,
                                    visible: !1,
                                    skin: "ui_dialog/dia_icon_star.png",
                                    scaleX: 1,
                                    pivotY: 18,
                                    pivotX: 15,
                                    height: 35,
                                    alpha: 0
                                },
                                compId: 14
                            }, {
                                type: "Image",
                                props: {
                                    y: 518,
                                    x: 519,
                                    width: 19,
                                    visible: !1,
                                    skin: "ui_dialog/dia_icon_star.png",
                                    scaleX: 0,
                                    pivotY: 12,
                                    pivotX: 10,
                                    height: 24,
                                    alpha: 0
                                },
                                compId: 15
                            }, {
                                type: "Image",
                                props: {
                                    y: 344,
                                    x: 501,
                                    width: 20,
                                    visible: !1,
                                    skin: "ui_dialog/dia_icon_star.png",
                                    scaleX: 0,
                                    pivotY: 13,
                                    pivotX: 10,
                                    height: 26,
                                    alpha: 0
                                },
                                compId: 16
                            }, {
                                type: "Label",
                                props: {
                                    y: 294,
                                    x: 375,
                                    width: 318,
                                    visible: !0,
                                    text: "解锁角色",
                                    styleSkin: "ui_dialog/dia_unlockNewCar.png",
                                    scaleY: 1.5,
                                    scaleX: 1.5,
                                    height: 59,
                                    font: "font_2",
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 26
                            }, {
                                type: "Label",
                                props: {
                                    y: 810,
                                    x: 375,
                                    width: 434,
                                    var: "lblCarName",
                                    valign: "middle",
                                    text: "摩根",
                                    name: "lblCarName",
                                    height: 40,
                                    fontSize: 35,
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 8
                            }, {
                                type: "Label",
                                props: {
                                    y: 805.5,
                                    x: 429,
                                    width: 75,
                                    visible: !1,
                                    var: "lblCarLevel",
                                    text: "LV.8",
                                    name: "lblCarLevel",
                                    italic: !1,
                                    height: 28,
                                    fontSize: 35,
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 17
                            }, {
                                type: "Label",
                                props: {
                                    y: 852,
                                    x: 375,
                                    width: 440,
                                    visible: !1,
                                    text: "操控",
                                    height: 33,
                                    fontSize: 35,
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 18
                            }, {
                                type: "Label",
                                props: {
                                    y: 853,
                                    x: 375,
                                    width: 393,
                                    var: "lblCarControl",
                                    text: "+15%",
                                    scaleY: .8,
                                    scaleX: .8,
                                    name: "lblCarControl",
                                    height: 39,
                                    fontSize: 35,
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 19
                            }, {
                                type: "Box",
                                props: {
                                    y: 956,
                                    x: 118,
                                    width: 451,
                                    visible: !1,
                                    var: "newBieGuide",
                                    scaleY: 1.15,
                                    scaleX: 1.15,
                                    name: "newBieGuide",
                                    height: 303
                                },
                                compId: 164,
                                child: [{
                                    type: "Animation",
                                    props: {
                                        y: 44,
                                        x: 222,
                                        var: "imgHand",
                                        source: "res/ui_particle/hand.ani",
                                        scaleY: 1.3,
                                        scaleX: 1.3,
                                        rotation: -180,
                                        name: "imgHand"
                                    },
                                    compId: 176
                                }]
                            }, {
                                type: "Box",
                                props: {
                                    y: 593,
                                    x: 366,
                                    width: 337,
                                    name: "boxCar",
                                    height: 164,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 179,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 79,
                                        x: 180,
                                        width: 272,
                                        var: "imgCar1",
                                        skin: "ui_car/1001.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        rotation: 10,
                                        name: "imgCar1",
                                        height: 329,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 180
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 79,
                                        x: 174,
                                        width: 272,
                                        var: "imgCar2",
                                        skin: "ui_car/1001.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        rotation: -10,
                                        name: "imgCar2",
                                        height: 329,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 181
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 82,
                                        x: 178,
                                        width: 272,
                                        var: "imgCar3",
                                        skin: "ui_car/1002.png",
                                        scaleY: 1,
                                        scaleX: 1,
                                        name: "imgCar3",
                                        height: 329,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 182
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 174,
                                        width: 256,
                                        skin: "ui_car_combine/1_00000.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt1",
                                        height: 64,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 183
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 184,
                                        width: 256,
                                        skin: "ui_car_combine/1_00001.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt2",
                                        height: 64,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 184
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 184,
                                        width: 256,
                                        skin: "ui_car_combine/1_00002.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt3",
                                        height: 64,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 185
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 184,
                                        width: 256,
                                        skin: "ui_car_combine/1_00003.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt4",
                                        height: 64,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 186
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 174,
                                        width: 256,
                                        skin: "ui_car_combine/1_00004.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt5",
                                        height: 64,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 187
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 184,
                                        width: 256,
                                        skin: "ui_car_combine/1_00005.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt6",
                                        height: 64,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 188
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 184,
                                        width: 256,
                                        skin: "ui_car_combine/1_00006.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt7",
                                        height: 64,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 189
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 184,
                                        width: 256,
                                        skin: "ui_car_combine/1_00007.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt8",
                                        height: 64,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 190
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 121,
                                        x: 150,
                                        width: 240,
                                        skin: "ui_car_combine/1_00000.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt9",
                                        height: 50,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 191
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 121,
                                        x: 150,
                                        width: 240,
                                        skin: "ui_car_combine/1_00001.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt10",
                                        height: 50,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 192
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 120,
                                        x: 150,
                                        width: 240,
                                        skin: "ui_car_combine/1_00002.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt11",
                                        height: 50,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 193
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 121,
                                        x: 150,
                                        width: 240,
                                        skin: "ui_car_combine/1_00003.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt12",
                                        height: 50,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 194
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 121,
                                        x: 150,
                                        width: 240,
                                        skin: "ui_car_combine/1_00004.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt13",
                                        height: 50,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 195
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 121,
                                        x: 150,
                                        width: 240,
                                        skin: "ui_car_combine/1_00005.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt14",
                                        height: 50,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 196
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 121,
                                        x: 150,
                                        width: 240,
                                        skin: "ui_car_combine/1_00006.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt15",
                                        height: 50,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 197
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 121,
                                        x: 150,
                                        width: 240,
                                        skin: "ui_car_combine/1_00007.png",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lt16",
                                        height: 50,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 198
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 51,
                                        x: -64,
                                        skin: "ui_car_combine/zhongxinliang.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        name: "baodian_l",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 199
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 97,
                                        x: 0,
                                        skin: "ui_car_combine/zhongxinliang.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        name: "baodain_l2",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 200
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 106,
                                        x: -96,
                                        skin: "ui_car_combine/zhongxinliang.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        name: "baodian_l3",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: .5
                                    },
                                    compId: 201
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 50,
                                        x: 408,
                                        skin: "ui_car_combine/zhongxinliang.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        name: "baodian_r1",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 202
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 111,
                                        x: 302,
                                        skin: "ui_car_combine/zhongxinliang.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        name: "baodian_r2",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 203
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 42,
                                        x: 312,
                                        skin: "ui_car_combine/zhongxinliang.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        name: "baodian_r3",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 204
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 93,
                                        x: -50,
                                        skin: "ui_car_combine/lighting_small1.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s1",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 205
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 74,
                                        x: -22,
                                        skin: "ui_car_combine/lighting_small2.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s2",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 206
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 106,
                                        x: -32,
                                        skin: "ui_car_combine/lighting_small3.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s3",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 207
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 106,
                                        x: -50,
                                        skin: "ui_car_combine/lighting_small4.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s4",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 208
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 86.5,
                                        x: -22,
                                        skin: "ui_car_combine/lighting_small5.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s5",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 209
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 99,
                                        x: -32,
                                        skin: "ui_car_combine/lighting_small6.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s6",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 210
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 74,
                                        x: -64,
                                        skin: "ui_car_combine/lighting_small7.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s7",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 211
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 100,
                                        x: -64,
                                        skin: "ui_car_combine/lighting_small8.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s8",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 212
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 99,
                                        x: 358,
                                        skin: "ui_car_combine/lighting_small1.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s9",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 213
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 74,
                                        x: 366,
                                        skin: "ui_car_combine/lighting_small2.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s10",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 214
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 127,
                                        x: 344,
                                        skin: "ui_car_combine/lighting_small3.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s11",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 215
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 65,
                                        x: 376,
                                        skin: "ui_car_combine/lighting_small4.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s12",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 216
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 93,
                                        x: 323,
                                        skin: "ui_car_combine/lighting_small5.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s13",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 217
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 93,
                                        x: 294,
                                        skin: "ui_car_combine/lighting_small6.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s14",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 218
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 56,
                                        x: 323,
                                        skin: "ui_car_combine/lighting_small7.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s15",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 219
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 102,
                                        x: 312,
                                        skin: "ui_car_combine/lighting_small8.png",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lt_s16",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 220
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 1,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        animations: [{
                            nodes: [{
                                target: 12,
                                keyframes: {
                                    x: [{
                                        value: 372,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 12,
                                        key: "x",
                                        index: 0
                                    }],
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 12,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 12,
                                        key: "rotation",
                                        index: 70
                                    }],
                                    alpha: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 12,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 12,
                                        key: "alpha",
                                        index: 70
                                    }]
                                }
                            }, {
                                target: 13,
                                keyframes: {
                                    x: [{
                                        value: 277,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 13,
                                        key: "x",
                                        index: 0
                                    }],
                                    scaleX: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 13,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 13,
                                        key: "scaleX",
                                        index: 25
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 13,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 13,
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 13,
                                        key: "alpha",
                                        index: 35
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 13,
                                        key: "alpha",
                                        index: 45
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 13,
                                        key: "alpha",
                                        index: 55
                                    }]
                                }
                            }, {
                                target: 14,
                                keyframes: {
                                    y: [{
                                        value: 791,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "y",
                                        index: 0
                                    }],
                                    x: [{
                                        value: 533,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "x",
                                        index: 0
                                    }],
                                    scaleX: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "scaleX",
                                        index: 20
                                    }],
                                    pivotY: [{
                                        value: 18,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "pivotY",
                                        index: 0
                                    }],
                                    pivotX: [{
                                        value: 15,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "pivotX",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "alpha",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 14,
                                        key: "alpha",
                                        index: 20
                                    }]
                                }
                            }, {
                                target: 15,
                                keyframes: {
                                    x: [{
                                        value: 519,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "x",
                                        index: 0
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "scaleX",
                                        index: 25
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "scaleX",
                                        index: 35
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "scaleX",
                                        index: 45
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "alpha",
                                        index: 35
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 15,
                                        key: "alpha",
                                        index: 45
                                    }]
                                }
                            }, {
                                target: 16,
                                keyframes: {
                                    x: [{
                                        value: 501,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 16,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 501,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 16,
                                        key: "x",
                                        index: 46
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 16,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 16,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 1.7,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 16,
                                        key: "scaleX",
                                        index: 30
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 16,
                                        key: "scaleX",
                                        index: 65
                                    }],
                                    alpha: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 16,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 16,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 16,
                                        key: "alpha",
                                        index: 30
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 16,
                                        key: "alpha",
                                        index: 65
                                    }]
                                }
                            }, {
                                target: 22,
                                keyframes: {
                                    x: [{
                                        value: 246.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 246.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "x",
                                        index: 20
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "scaleX",
                                        index: 30
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "scaleX",
                                        index: 40
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "scaleX",
                                        index: 50
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "alpha",
                                        index: 30
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "alpha",
                                        index: 40
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "alpha",
                                        index: 50
                                    }]
                                }
                            }, {
                                target: 24,
                                keyframes: {
                                    x: [{
                                        value: 369,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "x",
                                        index: 0
                                    }],
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .7,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "scaleY",
                                        index: 20
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "scaleY",
                                        index: 40
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "scaleY",
                                        index: 60
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .7,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "scaleX",
                                        index: 20
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "scaleX",
                                        index: 40
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "scaleX",
                                        index: 60
                                    }],
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "rotation",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "alpha",
                                        index: 40
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 24,
                                        key: "alpha",
                                        index: 60
                                    }]
                                }
                            }, {
                                target: 25,
                                keyframes: {
                                    var: [{
                                        value: "txtConfirm",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 25,
                                        key: "var",
                                        index: 0
                                    }],
                                    skin: [{
                                        value: "ui_main/dia_show_txt.png",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 25,
                                        key: "skin",
                                        index: 0
                                    }]
                                }
                            }],
                            name: "ani1",
                            id: 1,
                            frameRate: 18,
                            action: 0
                        }, {
                            nodes: [{
                                target: 180,
                                keyframes: {
                                    x: [{
                                        value: 78,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: -38,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "x",
                                        index: 4
                                    }, {
                                        value: -33,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "x",
                                        index: 8
                                    }, {
                                        value: -33,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "x",
                                        index: 14
                                    }, {
                                        value: -33,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        label: null,
                                        key: "x",
                                        index: 20
                                    }, {
                                        value: -25,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "x",
                                        index: 22
                                    }, {
                                        value: -25,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        label: null,
                                        key: "x",
                                        index: 24
                                    }, {
                                        value: -25,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        label: null,
                                        key: "x",
                                        index: 27
                                    }, {
                                        value: 180,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "x",
                                        index: 32
                                    }],
                                    scaleY: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "scaleY",
                                        index: 27
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "scaleY",
                                        index: 32
                                    }],
                                    scaleX: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "scaleX",
                                        index: 27
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "scaleX",
                                        index: 32
                                    }],
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "rotation",
                                        index: 14
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "rotation",
                                        index: 16
                                    }, {
                                        value: 15,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "rotation",
                                        index: 18
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "rotation",
                                        index: 20
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        label: null,
                                        key: "rotation",
                                        index: 22
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        key: "rotation",
                                        index: 24
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 180,
                                        label: null,
                                        key: "rotation",
                                        index: 27
                                    }]
                                }
                            }, {
                                target: 181,
                                keyframes: {
                                    x: [{
                                        value: 244,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 357,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "x",
                                        index: 4
                                    }, {
                                        value: 352,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "x",
                                        index: 8
                                    }, {
                                        value: 352,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "x",
                                        index: 14
                                    }, {
                                        value: 352,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        label: null,
                                        key: "x",
                                        index: 20
                                    }, {
                                        value: 344,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "x",
                                        index: 22
                                    }, {
                                        value: 347,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        label: null,
                                        key: "x",
                                        index: 24
                                    }, {
                                        value: 347,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        label: null,
                                        key: "x",
                                        index: 27
                                    }, {
                                        value: 174,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "x",
                                        index: 32
                                    }],
                                    scaleY: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "scaleY",
                                        index: 27
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "scaleY",
                                        index: 32
                                    }],
                                    scaleX: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "scaleX",
                                        index: 27
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "scaleX",
                                        index: 32
                                    }],
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "rotation",
                                        index: 14
                                    }, {
                                        value: 15,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "rotation",
                                        index: 16
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "rotation",
                                        index: 18
                                    }, {
                                        value: 12,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        key: "rotation",
                                        index: 20
                                    }, {
                                        value: 12,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        label: null,
                                        key: "rotation",
                                        index: 22
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 181,
                                        label: null,
                                        key: "rotation",
                                        index: 24
                                    }]
                                }
                            }, {
                                target: 182,
                                keyframes: {
                                    x: [{
                                        value: 160,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 182,
                                        key: "x",
                                        index: 0
                                    }],
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 182,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 182,
                                        key: "scaleY",
                                        index: 30
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 182,
                                        key: "scaleY",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 182,
                                        key: "scaleY",
                                        index: 37
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 182,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 182,
                                        key: "scaleX",
                                        index: 30
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 182,
                                        key: "scaleX",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 182,
                                        key: "scaleX",
                                        index: 37
                                    }]
                                }
                            }, {
                                target: 183,
                                keyframes: {
                                    scaleY: [{
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 183,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 183,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 183,
                                        label: null,
                                        key: "scaleY",
                                        index: 6
                                    }],
                                    scaleX: [{
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 183,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 183,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 183,
                                        label: null,
                                        key: "scaleX",
                                        index: 6
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 183,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 183,
                                        key: "alpha",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 183,
                                        label: null,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 183,
                                        key: "alpha",
                                        index: 7
                                    }]
                                }
                            }, {
                                target: 184,
                                keyframes: {
                                    y: [{
                                        value: 80,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 184,
                                        key: "y",
                                        index: 0
                                    }],
                                    x: [{
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 184,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 184,
                                        key: "x",
                                        index: 6
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 184,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 184,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 184,
                                        key: "alpha",
                                        index: 7
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 184,
                                        label: null,
                                        key: "alpha",
                                        index: 8
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 184,
                                        key: "alpha",
                                        index: 9
                                    }]
                                }
                            }, {
                                target: 185,
                                keyframes: {
                                    y: [{
                                        value: 80,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 185,
                                        key: "y",
                                        index: 0
                                    }],
                                    x: [{
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 185,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 185,
                                        key: "x",
                                        index: 8
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 185,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 185,
                                        key: "alpha",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 185,
                                        key: "alpha",
                                        index: 9
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 185,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 185,
                                        key: "alpha",
                                        index: 11
                                    }]
                                }
                            }, {
                                target: 186,
                                keyframes: {
                                    y: [{
                                        value: 80,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 186,
                                        key: "y",
                                        index: 0
                                    }],
                                    x: [{
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 186,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 186,
                                        key: "x",
                                        index: 10
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 186,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 186,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 186,
                                        key: "alpha",
                                        index: 11
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 186,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 186,
                                        key: "alpha",
                                        index: 13
                                    }]
                                }
                            }, {
                                target: 187,
                                keyframes: {
                                    y: [{
                                        value: 80,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 187,
                                        key: "y",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 187,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 187,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 187,
                                        key: "alpha",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 187,
                                        key: "alpha",
                                        index: 14
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 187,
                                        key: "alpha",
                                        index: 15
                                    }]
                                }
                            }, {
                                target: 188,
                                keyframes: {
                                    y: [{
                                        value: 80,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 188,
                                        key: "y",
                                        index: 0
                                    }],
                                    x: [{
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 188,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 188,
                                        key: "x",
                                        index: 14
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 188,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 188,
                                        key: "alpha",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 188,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 188,
                                        key: "alpha",
                                        index: 16
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 188,
                                        key: "alpha",
                                        index: 17
                                    }]
                                }
                            }, {
                                target: 189,
                                keyframes: {
                                    y: [{
                                        value: 80,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 189,
                                        key: "y",
                                        index: 0
                                    }],
                                    x: [{
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 189,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 189,
                                        key: "x",
                                        index: 16
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 189,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 189,
                                        key: "alpha",
                                        index: 16
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 189,
                                        key: "alpha",
                                        index: 17
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 189,
                                        key: "alpha",
                                        index: 18
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 189,
                                        key: "alpha",
                                        index: 19
                                    }]
                                }
                            }, {
                                target: 190,
                                keyframes: {
                                    y: [{
                                        value: 80,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 190,
                                        key: "y",
                                        index: 0
                                    }],
                                    x: [{
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 190,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 184,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 190,
                                        key: "x",
                                        index: 18
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 190,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 190,
                                        key: "alpha",
                                        index: 18
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 190,
                                        key: "alpha",
                                        index: 19
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 190,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 190,
                                        key: "alpha",
                                        index: 22
                                    }]
                                }
                            }, {
                                target: 191,
                                keyframes: {
                                    scaleY: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "scaleY",
                                        index: 9
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "scaleY",
                                        index: 11
                                    }],
                                    scaleX: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "scaleX",
                                        index: 9
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "scaleX",
                                        index: 11
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "alpha",
                                        index: 9
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "alpha",
                                        index: 11
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 191,
                                        key: "alpha",
                                        index: 13
                                    }]
                                }
                            }, {
                                target: 192,
                                keyframes: {
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 192,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 192,
                                        key: "alpha",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 192,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 192,
                                        key: "alpha",
                                        index: 16
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 192,
                                        key: "alpha",
                                        index: 17
                                    }]
                                }
                            }, {
                                target: 194,
                                keyframes: {
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 194,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 194,
                                        key: "alpha",
                                        index: 16
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 194,
                                        key: "alpha",
                                        index: 17
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 194,
                                        key: "alpha",
                                        index: 18
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 194,
                                        key: "alpha",
                                        index: 19
                                    }]
                                }
                            }, {
                                target: 195,
                                keyframes: {
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 195,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 195,
                                        key: "alpha",
                                        index: 18
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 195,
                                        key: "alpha",
                                        index: 19
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 195,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 195,
                                        key: "alpha",
                                        index: 21
                                    }]
                                }
                            }, {
                                target: 196,
                                keyframes: {
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 196,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 196,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 196,
                                        key: "alpha",
                                        index: 21
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 196,
                                        key: "alpha",
                                        index: 22
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 196,
                                        key: "alpha",
                                        index: 23
                                    }]
                                }
                            }, {
                                target: 197,
                                keyframes: {
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 197,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 197,
                                        key: "alpha",
                                        index: 22
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 197,
                                        key: "alpha",
                                        index: 23
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 197,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 197,
                                        key: "alpha",
                                        index: 25
                                    }]
                                }
                            }, {
                                target: 198,
                                keyframes: {
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 198,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 198,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 198,
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 198,
                                        key: "alpha",
                                        index: 26
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 198,
                                        key: "alpha",
                                        index: 27
                                    }]
                                }
                            }, {
                                target: 199,
                                keyframes: {
                                    x: [{
                                        value: -64,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 199,
                                        key: "x",
                                        index: 0
                                    }],
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 199,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 199,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 199,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 199,
                                        key: "scaleY",
                                        index: 13
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 199,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 199,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 199,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 199,
                                        key: "scaleX",
                                        index: 13
                                    }]
                                }
                            }, {
                                target: 200,
                                keyframes: {
                                    x: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 200,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 200,
                                        key: "x",
                                        index: 14
                                    }],
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 200,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 200,
                                        key: "scaleY",
                                        index: 11
                                    }, {
                                        value: 2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 200,
                                        key: "scaleY",
                                        index: 14
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 200,
                                        key: "scaleY",
                                        index: 17
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 200,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 200,
                                        key: "scaleX",
                                        index: 11
                                    }, {
                                        value: 2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 200,
                                        key: "scaleX",
                                        index: 14
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 200,
                                        key: "scaleX",
                                        index: 17
                                    }]
                                }
                            }, {
                                target: 201,
                                keyframes: {
                                    x: [{
                                        value: -96,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 201,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: -96,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 201,
                                        key: "x",
                                        index: 18
                                    }],
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 201,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 201,
                                        key: "scaleY",
                                        index: 15
                                    }, {
                                        value: 2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 201,
                                        key: "scaleY",
                                        index: 18
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 201,
                                        key: "scaleY",
                                        index: 22
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 201,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 201,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 201,
                                        key: "scaleX",
                                        index: 18
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 201,
                                        key: "scaleX",
                                        index: 22
                                    }]
                                }
                            }, {
                                target: 202,
                                keyframes: {
                                    x: [{
                                        value: 408,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 202,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 408,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 202,
                                        key: "x",
                                        index: 9
                                    }],
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 202,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 202,
                                        key: "scaleY",
                                        index: 11
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 202,
                                        key: "scaleY",
                                        index: 14
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 202,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 202,
                                        key: "scaleX",
                                        index: 9
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 202,
                                        key: "scaleX",
                                        index: 11
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 202,
                                        key: "scaleX",
                                        index: 14
                                    }]
                                }
                            }, {
                                target: 203,
                                keyframes: {
                                    x: [{
                                        value: 302,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 203,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 302,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 203,
                                        key: "x",
                                        index: 12
                                    }],
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 203,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 203,
                                        key: "scaleY",
                                        index: 12
                                    }, {
                                        value: 2.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 203,
                                        key: "scaleY",
                                        index: 14
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 203,
                                        key: "scaleY",
                                        index: 17
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 203,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 203,
                                        key: "scaleX",
                                        index: 12
                                    }, {
                                        value: 2.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 203,
                                        key: "scaleX",
                                        index: 14
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 203,
                                        key: "scaleX",
                                        index: 17
                                    }]
                                }
                            }, {
                                target: 204,
                                keyframes: {
                                    x: [{
                                        value: 312,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 204,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 312,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 204,
                                        key: "x",
                                        index: 18
                                    }],
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 204,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 204,
                                        key: "scaleY",
                                        index: 15
                                    }, {
                                        value: 2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 204,
                                        key: "scaleY",
                                        index: 18
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 204,
                                        key: "scaleY",
                                        index: 21
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 204,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 204,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 204,
                                        key: "scaleX",
                                        index: 18
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 204,
                                        key: "scaleX",
                                        index: 21
                                    }]
                                }
                            }, {
                                target: 205,
                                keyframes: {
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 205,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 205,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 205,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 205,
                                        key: "alpha",
                                        index: 13
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 205,
                                        key: "alpha",
                                        index: 14
                                    }]
                                }
                            }, {
                                target: 206,
                                keyframes: {
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 206,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 206,
                                        key: "alpha",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 206,
                                        key: "alpha",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 206,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 206,
                                        key: "alpha",
                                        index: 16
                                    }]
                                }
                            }, {
                                target: 207,
                                keyframes: {
                                    y: [{
                                        value: 106,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 207,
                                        key: "y",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 207,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 207,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 207,
                                        key: "alpha",
                                        index: 16
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 207,
                                        key: "alpha",
                                        index: 17
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 207,
                                        key: "alpha",
                                        index: 18
                                    }]
                                }
                            }, {
                                target: 208,
                                keyframes: {
                                    y: [{
                                        value: 106,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 208,
                                        key: "y",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 208,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 208,
                                        key: "alpha",
                                        index: 17
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 208,
                                        key: "alpha",
                                        index: 18
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 208,
                                        key: "alpha",
                                        index: 19
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 208,
                                        key: "alpha",
                                        index: 20
                                    }]
                                }
                            }, {
                                target: 209,
                                keyframes: {
                                    y: [{
                                        value: 86.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 209,
                                        key: "y",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 209,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 209,
                                        key: "alpha",
                                        index: 19
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 209,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 209,
                                        key: "alpha",
                                        index: 21
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 209,
                                        key: "alpha",
                                        index: 22
                                    }]
                                }
                            }, {
                                target: 210,
                                keyframes: {
                                    y: [{
                                        value: 99,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 210,
                                        key: "y",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 210,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 210,
                                        key: "alpha",
                                        index: 21
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 210,
                                        key: "alpha",
                                        index: 22
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 210,
                                        key: "alpha",
                                        index: 23
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 210,
                                        key: "alpha",
                                        index: 24
                                    }]
                                }
                            }, {
                                target: 211,
                                keyframes: {
                                    y: [{
                                        value: 74,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 211,
                                        key: "y",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 211,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 211,
                                        key: "alpha",
                                        index: 23
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 211,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 211,
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 211,
                                        key: "alpha",
                                        index: 26
                                    }]
                                }
                            }, {
                                target: 212,
                                keyframes: {
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 212,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 212,
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 212,
                                        key: "alpha",
                                        index: 26
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 212,
                                        key: "alpha",
                                        index: 27
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 212,
                                        key: "alpha",
                                        index: 28
                                    }]
                                }
                            }, {
                                target: 213,
                                keyframes: {
                                    x: [{
                                        value: 358,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 213,
                                        key: "x",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 213,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 213,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 213,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 213,
                                        key: "alpha",
                                        index: 13
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 213,
                                        key: "alpha",
                                        index: 14
                                    }]
                                }
                            }, {
                                target: 214,
                                keyframes: {
                                    x: [{
                                        value: 366,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 214,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 366,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 214,
                                        key: "x",
                                        index: 13
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 214,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 214,
                                        key: "alpha",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 214,
                                        key: "alpha",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 214,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 214,
                                        key: "alpha",
                                        index: 16
                                    }]
                                }
                            }, {
                                target: 215,
                                keyframes: {
                                    x: [{
                                        value: 344,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 215,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 344,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 215,
                                        key: "x",
                                        index: 15
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 215,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 215,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 215,
                                        key: "alpha",
                                        index: 16
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 215,
                                        key: "alpha",
                                        index: 17
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 215,
                                        key: "alpha",
                                        index: 18
                                    }]
                                }
                            }, {
                                target: 216,
                                keyframes: {
                                    x: [{
                                        value: 376,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 216,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 376,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 216,
                                        key: "x",
                                        index: 17
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 216,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 216,
                                        key: "alpha",
                                        index: 17
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 216,
                                        key: "alpha",
                                        index: 18
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 216,
                                        key: "alpha",
                                        index: 19
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 216,
                                        key: "alpha",
                                        index: 20
                                    }]
                                }
                            }, {
                                target: 217,
                                keyframes: {
                                    x: [{
                                        value: 323,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 217,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 323,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 217,
                                        key: "x",
                                        index: 19
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 217,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 217,
                                        key: "alpha",
                                        index: 19
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 217,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 217,
                                        key: "alpha",
                                        index: 21
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 217,
                                        key: "alpha",
                                        index: 22
                                    }]
                                }
                            }, {
                                target: 218,
                                keyframes: {
                                    x: [{
                                        value: 294,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 218,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 294,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 218,
                                        key: "x",
                                        index: 21
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 218,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 218,
                                        key: "alpha",
                                        index: 21
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 218,
                                        key: "alpha",
                                        index: 22
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 218,
                                        key: "alpha",
                                        index: 23
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 218,
                                        key: "alpha",
                                        index: 24
                                    }]
                                }
                            }, {
                                target: 219,
                                keyframes: {
                                    x: [{
                                        value: 323,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 219,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 323,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 219,
                                        key: "x",
                                        index: 23
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 219,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 219,
                                        key: "alpha",
                                        index: 23
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 219,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 219,
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 219,
                                        key: "alpha",
                                        index: 26
                                    }]
                                }
                            }, {
                                target: 220,
                                keyframes: {
                                    x: [{
                                        value: 312,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 220,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 312,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 220,
                                        key: "x",
                                        index: 25
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 220,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 220,
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 220,
                                        key: "alpha",
                                        index: 26
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 220,
                                        key: "alpha",
                                        index: 27
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 220,
                                        key: "alpha",
                                        index: 28
                                    }]
                                }
                            }],
                            name: "hebing",
                            id: 6,
                            frameRate: 30,
                            action: 0
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_dialog/garage_guangxiao1.png", "ui_dialog/image03.png", "ui_dialog/image.png", "ui_car/1007.png", "ui_com/com_btn_close.png", "ui_com/com_btn_green.png", "ui_dialog/dia_show_txt.png", "ui_dialog/dia_icon_star.png", "ui_dialog/dia_unlockNewCar.png", "res/ui_particle/hand.ani", "ui_car/1001.png", "ui_car/1002.png", "ui_car_combine/1_00000.png", "ui_car_combine/1_00001.png", "ui_car_combine/1_00002.png", "ui_car_combine/1_00003.png", "ui_car_combine/1_00004.png", "ui_car_combine/1_00005.png", "ui_car_combine/1_00006.png", "ui_car_combine/1_00007.png", "ui_car_combine/zhongxinliang.png", "ui_car_combine/lighting_small1.png", "ui_car_combine/lighting_small2.png", "ui_car_combine/lighting_small3.png", "ui_car_combine/lighting_small4.png", "ui_car_combine/lighting_small5.png", "ui_car_combine/lighting_small6.png", "ui_car_combine/lighting_small7.png", "ui_car_combine/lighting_small8.png", "ui_main/dia_show_txt.png"],
                        loadList3D: []
                    }, t
                }(Laya.Dialog);
                e.GainCarDiaogUI = d;
                var p = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 667,
                                x: 375,
                                width: 2e3,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "5,5,5,5",
                                name: "maskBg",
                                height: 2870,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 692,
                                    x: 375,
                                    width: 607,
                                    visible: !0,
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "20,20,20,20",
                                    height: 760,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 46,
                                        x: 117,
                                        width: 388,
                                        skin: "ui_achieve/title_bg.png",
                                        sizeGrid: "24,53,30,53",
                                        name: "headTitle"
                                    },
                                    compId: 201,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 45,
                                            x: 194,
                                            text: "解锁额外奖励",
                                            strokeColor: "#ca781f",
                                            stroke: 6,
                                            height: 66,
                                            fontSize: 53,
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 202
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 638,
                                        x: 313,
                                        width: 374,
                                        var: "btnGainDiamond",
                                        skin: "ui_achieve/btn_bg.png",
                                        sizeGrid: "30,30,50,30",
                                        name: "btnGainDiamond",
                                        height: 146,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 7,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 66,
                                            x: 131,
                                            width: 60,
                                            var: "imgShare",
                                            skin: "ui_com/com_icon_share.png",
                                            name: "imgShare",
                                            height: 60,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 8
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 69,
                                            x: 132,
                                            width: 60,
                                            var: "imgVideo",
                                            skin: "com_icon_video1.png",
                                            name: "imgVideo",
                                            height: 54,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 15
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 69,
                                            x: 229,
                                            width: 95,
                                            var: "imgGet",
                                            skin: "ui_com/com_text_Get.png",
                                            name: "imgGet",
                                            height: 47,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 18
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 24,
                                        x: 582,
                                        var: "btnClose",
                                        skin: "ui_achieve/btn_close.png",
                                        name: "btnClose",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 13
                                }]
                            }, {
                                type: "Box",
                                props: {
                                    y: 474,
                                    x: 314,
                                    width: 510,
                                    var: "boxDouble",
                                    scaleY: .8,
                                    scaleX: .8,
                                    name: "boxDouble",
                                    height: 259
                                },
                                compId: 187,
                                child: [{
                                    type: "Animation",
                                    props: {
                                        y: 157,
                                        x: -92,
                                        var: "diamondAni2",
                                        source: "res/ui_particle/gainTreasureDiamond.ani",
                                        scaleY: .8,
                                        scaleX: .8,
                                        rotation: 0,
                                        name: "diamondAni2",
                                        autoPlay: !0
                                    },
                                    compId: 189
                                }, {
                                    type: "Animation",
                                    props: {
                                        y: 157,
                                        x: 259,
                                        var: "hintAni2",
                                        source: "res/ui_particle/gainTreasureStamina.ani",
                                        scaleY: .8,
                                        scaleX: .8,
                                        rotation: 0,
                                        name: "hintAni2",
                                        autoPlay: !0
                                    },
                                    compId: 188
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 352,
                                        x: -93.80000000000001,
                                        width: 302,
                                        var: "lblDiamondNum2",
                                        text: "123",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lblDiamondNum2",
                                        height: 39,
                                        fontSize: 50,
                                        font: "font_1",
                                        color: "#525151",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 191,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#000000",
                                            brightness: -100,
                                            alpha: "0",
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 192
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 352,
                                        x: 268,
                                        width: 302,
                                        var: "lblHintNum2",
                                        text: "123",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lblHintNum2",
                                        height: 39,
                                        fontSize: 50,
                                        font: "font_1",
                                        color: "#525151",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 194,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#000000",
                                            brightness: -100,
                                            alpha: "0",
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 195
                                    }]
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 406,
                                        x: -133.8,
                                        width: 40,
                                        texture: "ui_dialog/dia_img_hint.png",
                                        height: 49
                                    },
                                    compId: 197,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 24.5,
                                            x: 241,
                                            width: 645,
                                            var: "lblHintInfo",
                                            text: ": 增加游戏内免费提示次数道具",
                                            scaleY: .6,
                                            scaleX: .6,
                                            name: "lblHintInfo",
                                            height: 57,
                                            fontSize: 30,
                                            font: "font_2",
                                            color: "#3b2f2e",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 198,
                                        child: [{
                                            type: "Script",
                                            props: {
                                                saturation: -100,
                                                hue: -180,
                                                contrast: -100,
                                                color: "#000000",
                                                brightness: -100,
                                                alpha: "0",
                                                runtime: "laya.effect.ColorFilterSetter"
                                            },
                                            compId: 199
                                        }]
                                    }]
                                }]
                            }, {
                                type: "Box",
                                props: {
                                    y: 472,
                                    x: 112,
                                    width: 510,
                                    var: "boxSingle",
                                    name: "boxSingle",
                                    height: 259
                                },
                                compId: 177,
                                child: [{
                                    type: "Animation",
                                    props: {
                                        y: 157,
                                        x: 259,
                                        var: "diamondAni",
                                        source: "res/ui_particle/gainTreasureDiamond.ani",
                                        scaleY: 1,
                                        scaleX: 1,
                                        rotation: 0,
                                        name: "diamondAni",
                                        autoPlay: !0
                                    },
                                    compId: 178
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 350,
                                        x: 268,
                                        width: 302,
                                        var: "lblDiamondNum",
                                        text: "+140",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lblDiamondNum",
                                        height: 39,
                                        fontSize: 50,
                                        font: "font_1",
                                        color: "#525151",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 10,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#000000",
                                            brightness: -100,
                                            alpha: "0",
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 19
                                    }]
                                }]
                            }, {
                                type: "Box",
                                props: {
                                    y: 801,
                                    x: 118,
                                    width: 451,
                                    visible: !1,
                                    var: "newBieGuide",
                                    scaleY: 1.15,
                                    scaleX: 1.15,
                                    name: "newBieGuide",
                                    height: 303
                                },
                                compId: 164,
                                child: [{
                                    type: "Animation",
                                    props: {
                                        y: 44,
                                        x: 222,
                                        var: "imgHand",
                                        source: "res/ui_particle/hand.ani",
                                        scaleY: 1.3,
                                        scaleX: 1.3,
                                        rotation: -180,
                                        name: "imgHand"
                                    },
                                    compId: 176
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/title_bg.png", "ui_achieve/btn_bg.png", "ui_com/com_icon_share.png", "com_icon_video1.png", "ui_com/com_text_Get.png", "ui_achieve/btn_close.png", "res/ui_particle/gainTreasureDiamond.ani", "res/ui_particle/gainTreasureStamina.ani", "ui_dialog/dia_img_hint.png", "res/ui_particle/hand.ani"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.GainDiamondDialogUI = p;
                var u = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        x: 0,
                        type: "Scene",
                        selectedBox: 19,
                        selecteID: 26,
                        searchKey: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        nodeParent: -1,
                        maxID: 32,
                        loadList3D: [],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_com/com_img_bg.png", "ui_com/com_btn_close.png", "ui_com/com_btn_green.png", "ui_com/com_icon_share.png", "ui_com/com_icon_video.png", "ui_dialog/lotty_img_stamina.png"],
                        label: "Scene",
                        isOpen: !0,
                        isDirectory: !0,
                        isAniNode: !0,
                        hasChild: !0,
                        compId: 2,
                        child: [{
                            x: 15,
                            type: "Image",
                            searchKey: "Image,bg",
                            props: {
                                width: 750,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 1334,
                                anchorY: 0,
                                anchorX: 0,
                                alpha: .8
                            },
                            nodeParent: 2,
                            label: "bg",
                            isDirectory: !1,
                            isAniNode: !0,
                            hasChild: !1,
                            compId: 3,
                            child: []
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorCenter,AnchorCenter",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            nodeParent: 2,
                            label: "AnchorCenter",
                            isOpen: !0,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 4,
                            child: [{
                                x: 30,
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 10,
                                    x: 10,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Center"
                                },
                                nodeParent: 4,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 5,
                                child: []
                            }, {
                                x: 30,
                                type: "Image",
                                searchKey: "Image,bg",
                                props: {
                                    y: 667,
                                    x: 375,
                                    width: 600,
                                    skin: "ui_com/com_img_bg.png",
                                    sizeGrid: "52,26,48,27",
                                    name: "bg",
                                    height: 825,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 4,
                                label: "bg",
                                isOpen: !0,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 6,
                                child: [{
                                    x: 45,
                                    type: "Image",
                                    searchKey: "Image,btnGetStamina,btnGetStamina",
                                    props: {
                                        y: 688,
                                        x: 300,
                                        width: 418,
                                        visible: !0,
                                        var: "btnGetStamina",
                                        skin: "ui_com/com_btn_green.png",
                                        sizeGrid: "51,50,50,57",
                                        name: "btnGetStamina",
                                        height: 124,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    nodeParent: 6,
                                    label: "btnGetStamina",
                                    isOpen: !0,
                                    isDirectory: !0,
                                    isAniNode: !0,
                                    hasChild: !0,
                                    compId: 19,
                                    child: [{
                                        x: 60,
                                        type: "Image",
                                        searchKey: "Image,imgVideo,imgVideo",
                                        props: {
                                            y: 62,
                                            x: 72,
                                            var: "imgVideo",
                                            skin: "com_icon_video1.png",
                                            name: "imgVideo",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        nodeParent: 19,
                                        label: "imgVideo",
                                        isDirectory: !1,
                                        isAniNode: !0,
                                        hasChild: !1,
                                        compId: 21,
                                        child: []
                                    }, {
                                        x: 60,
                                        type: "Label",
                                        searchKey: "Label,lblTextHint,lblTextHint",
                                        props: {
                                            y: 66,
                                            x: 243,
                                            width: 261,
                                            var: "lblTextHint",
                                            valign: "middle",
                                            text: "Get × 1",
                                            name: "lblTextHint",
                                            height: 58,
                                            fontSize: 45,
                                            font: "Microsoft YaHei",
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        nodeParent: 19,
                                        label: "lblTextHint",
                                        isDirectory: !1,
                                        isAniNode: !0,
                                        hasChild: !1,
                                        compId: 26,
                                        child: []
                                    }]
                                }, {
                                    x: 45,
                                    type: "Label",
                                    searchKey: "Label,lblTitle",
                                    props: {
                                        y: 123,
                                        x: 300,
                                        width: 600,
                                        valign: "middle",
                                        text: " Not enough energy",
                                        name: "lblTitle",
                                        height: 83,
                                        fontSize: 45,
                                        font: "Microsoft YaHei",
                                        color: "#3B3B3B",
                                        bold: !0,
                                        bgColor: "#f1bc38",
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    nodeParent: 6,
                                    label: "lblTitle",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 30,
                                    child: []
                                }, {
                                    x: 45,
                                    type: "Label",
                                    searchKey: "Label,lblTime,lblTime",
                                    props: {
                                        y: 546,
                                        x: 300,
                                        width: 385,
                                        var: "lblTime",
                                        text: "Resume: 08:11",
                                        name: "lblTime",
                                        height: 37,
                                        fontSize: 30,
                                        font: "Microsoft YaHei",
                                        color: "#3B3B3B",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    nodeParent: 6,
                                    label: "lblTime",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 27,
                                    child: []
                                }, {
                                    x: 45,
                                    type: "Image",
                                    searchKey: "Image",
                                    props: {
                                        y: 350,
                                        x: 300,
                                        skin: "ui_dialog/lotty_img_stamina.png",
                                        scaleY: 1.6,
                                        scaleX: 1.6,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    nodeParent: 6,
                                    label: "Image",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 23,
                                    child: []
                                }]
                            }]
                        }, {
                            x: 15,
                            type: "Image",
                            searchKey: "Image,btnClose,btnClose",
                            props: {
                                y: 291,
                                x: 642,
                                var: "btnClose",
                                skin: "ui_com/com_btn_close.png",
                                name: "btnClose",
                                anchorY: .5,
                                anchorX: .5
                            },
                            nodeParent: 2,
                            label: "btnClose",
                            isDirectory: !1,
                            isAniNode: !0,
                            hasChild: !1,
                            compId: 12,
                            child: []
                        }],
                        animations: [{
                            nodes: [],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }]
                    }, t
                }(Laya.Scene);
                e.GainStaminaDialogUI = u;
                var g = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Dialog",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 973,
                                x: 375,
                                width: 3063,
                                visible: !0,
                                skin: "ui_real_uncompress/com_bg.png",
                                height: 4084,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 138,
                                    x: 110,
                                    var: "boxTitle",
                                    skin: "ui_com/result_img_titlebg.png",
                                    name: "boxTitle"
                                },
                                compId: 221,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 46,
                                        x: 265,
                                        var: "titleLabel",
                                        text: "幸运宝箱",
                                        name: "titleLabel",
                                        fontSize: 42,
                                        font: "font_2",
                                        color: "#ffffff",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 224
                                }]
                            }, {
                                type: "Label",
                                props: {
                                    y: 271,
                                    x: 383,
                                    visible: !1,
                                    var: "titletip",
                                    text: "开启宝箱获得奖励",
                                    scaleY: .7,
                                    scaleX: .7,
                                    name: "titletip",
                                    fontSize: 30,
                                    font: "font_2",
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 225
                            }, {
                                type: "Animation",
                                props: {
                                    y: 556,
                                    x: 375,
                                    visible: !1,
                                    var: "gameBoxAni",
                                    source: "res/ui_particle/gainGameBox.ani",
                                    name: "gameBoxAni"
                                },
                                compId: 236
                            }, {
                                type: "Image",
                                props: {
                                    y: 556,
                                    x: 375,
                                    var: "boxPic",
                                    skin: "ui_dialog/signbox.png",
                                    name: "boxPic",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 226
                            }, {
                                type: "Image",
                                props: {
                                    y: 771,
                                    x: 383,
                                    width: 591,
                                    var: "boxtip",
                                    text: "宝箱内含有大量金币和体力",
                                    skin: "ui_dialog/dia_img_openBoxText.png",
                                    scaleY: .6,
                                    scaleX: .6,
                                    name: "boxtip",
                                    height: 85,
                                    fontSize: 30,
                                    font: "font_2",
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 237
                            }, {
                                type: "Image",
                                props: {
                                    y: 918,
                                    x: 375,
                                    width: 406,
                                    var: "btnConfirm",
                                    skin: "ui_com/com_btn_yellow.png",
                                    sizeGrid: "60,80,51,80",
                                    name: "btnConfirm",
                                    height: 130,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 9,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 58,
                                        x: 94,
                                        width: 60,
                                        var: "imgShare",
                                        skin: "ui_com/com_icon_share.png",
                                        scaleY: 1.1,
                                        scaleX: 1.1,
                                        name: "imgShare",
                                        height: 60,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 228
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 56,
                                        x: 94,
                                        width: 60,
                                        var: "imgVideo",
                                        skin: "com_icon_video1.png",
                                        scaleY: 1.1,
                                        scaleX: 1.1,
                                        name: "imgVideo",
                                        height: 54,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 234
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 58,
                                        x: 232,
                                        var: "txtConfirm",
                                        text: "打开宝箱",
                                        styleSkin: "ui_dialog/dia_show_txt.png",
                                        name: "txtConfirm",
                                        fontSize: 36,
                                        font: "font_2",
                                        color: "#ffffff",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 25
                                }]
                            }, {
                                type: "Label",
                                props: {
                                    y: 1040,
                                    x: 375,
                                    var: "btnClose",
                                    underlineColor: "#ffffff",
                                    underline: !0,
                                    text: "放弃领取",
                                    styleSkin: "comp/image.png",
                                    scaleY: .7,
                                    scaleX: .7,
                                    name: "btnClose",
                                    label: "放弃领取",
                                    fontSize: 30,
                                    font: "font_2",
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 229
                            }, {
                                type: "Script",
                                props: {
                                    y: 1,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_com/result_img_titlebg.png", "res/ui_particle/gainGameBox.ani", "ui_dialog/signbox.png", "ui_dialog/dia_img_openBoxText.png", "ui_com/com_btn_yellow.png", "ui_com/com_icon_share.png", "com_icon_video1.png", "ui_dialog/dia_show_txt.png", "comp/image.png"],
                        loadList3D: []
                    }, t
                }(Laya.Dialog);
                e.GameBoxDiaogUI = g;
                var m = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Dialog",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 973,
                                x: 375,
                                width: 3063,
                                visible: !0,
                                skin: "ui_real_uncompress/com_bg.png",
                                height: 4084,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 658,
                                    x: 375,
                                    width: 601,
                                    var: "bg",
                                    text: "开启宝箱获得奖励",
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "20,20,20,20",
                                    name: "bg",
                                    height: 835,
                                    fontSize: 30,
                                    font: "font_2",
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 225
                            }, {
                                type: "Image",
                                props: {
                                    y: 521,
                                    x: 385,
                                    visible: !0,
                                    var: "light",
                                    skin: "ui_dialog/bgLight.png",
                                    name: "light",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 12
                            }, {
                                type: "Image",
                                props: {
                                    y: 521,
                                    x: 385,
                                    var: "god",
                                    skin: "ui_dialog/god.png",
                                    name: "god",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 226
                            }, {
                                type: "Box",
                                props: {
                                    y: 271,
                                    x: 157,
                                    width: 50,
                                    height: 500
                                },
                                compId: 238,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 256,
                                        x: 25,
                                        width: 50,
                                        var: "tipbg",
                                        text: "宝箱内含有大量金币和体力",
                                        skin: "ui_dialog/tipbg.png",
                                        sizeGrid: "60,0,0,0",
                                        name: "tipbg",
                                        height: 255,
                                        fontSize: 30,
                                        font: "font_2",
                                        color: "#ffffff",
                                        anchorY: 1,
                                        anchorX: .5
                                    },
                                    compId: 237
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 256,
                                        x: 25,
                                        width: 50,
                                        text: "宝箱内含有大量金币和体力",
                                        skin: "ui_dialog/tipbg.png",
                                        sizeGrid: "60,0,0,0",
                                        rotation: 180,
                                        name: "tipbg",
                                        height: 253,
                                        fontSize: 30,
                                        font: "font_2",
                                        color: "#ffffff",
                                        anchorY: 1,
                                        anchorX: .5
                                    },
                                    compId: 239
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 150,
                                        x: 25,
                                        width: 50,
                                        renderType: "render",
                                        height: 200,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 252,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 31,
                                            x: 25,
                                            width: 50,
                                            var: "tip",
                                            valign: "middle",
                                            text: "找",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 240
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 77,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "茬",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 265
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 125,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "赚",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 266
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 170,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "钱",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 267
                                    }]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 356,
                                        x: 25,
                                        width: 50,
                                        renderType: "render",
                                        height: 200,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 268,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 31,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "合",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 269
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 77,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "成",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 270
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 125,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "升",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 271
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 170,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "阶",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 272
                                    }]
                                }]
                            }, {
                                type: "Box",
                                props: {
                                    y: 271,
                                    x: 558,
                                    width: 50,
                                    height: 500
                                },
                                compId: 273,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 256,
                                        x: 25,
                                        width: 50,
                                        text: "宝箱内含有大量金币和体力",
                                        skin: "ui_dialog/tipbg.png",
                                        sizeGrid: "60,0,0,0",
                                        scaleX: -1,
                                        name: "tipbg",
                                        height: 255,
                                        fontSize: 30,
                                        font: "font_2",
                                        color: "#ffffff",
                                        anchorY: 1,
                                        anchorX: .5
                                    },
                                    compId: 274
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 256,
                                        x: 25,
                                        width: 50,
                                        text: "宝箱内含有大量金币和体力",
                                        skin: "ui_dialog/tipbg.png",
                                        sizeGrid: "60,0,0,0",
                                        scaleX: -1,
                                        rotation: 180,
                                        name: "tipbg",
                                        height: 253,
                                        fontSize: 30,
                                        font: "font_2",
                                        color: "#ffffff",
                                        anchorY: 1,
                                        anchorX: .5
                                    },
                                    compId: 275
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 150,
                                        x: 25,
                                        width: 50,
                                        renderType: "render",
                                        height: 200,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 276,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 28,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "二",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 277
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 74,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "者",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 278
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 121,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "结",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 279
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 168,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "合",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 280
                                    }]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 356,
                                        x: 25,
                                        width: 50,
                                        renderType: "render",
                                        height: 200,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 281,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 31,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "早",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 282
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 77,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "日",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 283
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 125,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "成",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 284
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 170,
                                            x: 25,
                                            width: 50,
                                            valign: "middle",
                                            text: "仙",
                                            styleSkin: "comp/image.png",
                                            name: "tip",
                                            height: 50,
                                            fontSize: 33,
                                            color: "#FFCF6B",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 285
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 976,
                                    x: 383,
                                    width: 372,
                                    var: "btnConfirm",
                                    skin: "ui_com/com_btn_yellow.png",
                                    sizeGrid: "60,80,51,80",
                                    name: "btnConfirm",
                                    height: 120,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 9,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 54,
                                        x: 180,
                                        var: "txtConfirm",
                                        text: "去找茬",
                                        styleSkin: "ui_dialog/dia_show_txt.png",
                                        name: "txtConfirm",
                                        fontSize: 50,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 25
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 849,
                                    x: 383,
                                    width: 372,
                                    var: "btnClose",
                                    skin: "ui_achieve/btn_bg.png",
                                    sizeGrid: "60,80,51,80",
                                    name: "btnClose",
                                    height: 116,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 286,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 51,
                                        x: 178,
                                        text: "去修仙",
                                        styleSkin: "ui_dialog/dia_show_txt.png",
                                        name: "txtClose",
                                        fontSize: 50,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 287
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 1,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        animations: [{
                            nodes: [{
                                target: 12,
                                keyframes: {
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 12,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 12,
                                        key: "rotation",
                                        index: 30
                                    }],
                                    name: [{
                                        value: "boxlight",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 12,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }],
                            name: "lightani",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_dialog/bgLight.png", "ui_dialog/god.png", "ui_dialog/tipbg.png", "comp/image.png", "ui_com/com_btn_yellow.png", "ui_dialog/dia_show_txt.png", "ui_achieve/btn_bg.png"],
                        loadList3D: []
                    }, t
                }(Laya.Dialog);
                e.GameGuideDiaogUI = m;
                var f = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        x: 0,
                        type: "Scene",
                        selectedBox: 131,
                        selecteID: 157,
                        searchKey: "Scene",
                        props: {
                            width: 750,
                            runtime: "game/view/QGameView.ts",
                            height: 1334
                        },
                        nodeParent: -1,
                        maxID: 207,
                        loadList3D: [],
                        loadList: ["ui_real_uncompress/dia_img_bg2.png", "ui_real_uncompress/bottom_img.png", "ui_com/com_img_bg.png", "ui_game/back.png", "ui_game/game_img_rankBg1.png", "ui_game/point0.png", "ui_game/reward_type_box.png", "ui_home/home_btn_green.png", "ui_common2/Icon_mask.png", "ui_common2/remen.png", "ui_common2/zhezhao.png"],
                        label: "Scene",
                        isOpen: !0,
                        isDirectory: !0,
                        isAniNode: !0,
                        hasChild: !0,
                        compId: 2,
                        child: [{
                            x: 15,
                            type: "Image",
                            searchKey: "Image,BG,BG",
                            props: {
                                y: -233,
                                x: -225,
                                width: 1200,
                                var: "BG",
                                skin: "ui_real_uncompress/dia_img_bg2.png",
                                sizeGrid: "0,0,0,0",
                                name: "BG",
                                height: 1800
                            },
                            nodeParent: 2,
                            label: "BG",
                            isDirectory: !1,
                            isAniNode: !0,
                            hasChild: !1,
                            compId: 137,
                            child: []
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorBottom",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                name: "AnchorBottom",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorBottom",
                            isOpen: null,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 182,
                            child: [{
                                type: "List",
                                searchKey: "List",
                                props: {
                                    y: 1274,
                                    x: 0,
                                    width: 750,
                                    spaceX: 0,
                                    repeatY: 1,
                                    repeatX: 10,
                                    height: 60
                                },
                                nodeParent: 182,
                                label: "List",
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 195,
                                child: [{
                                    type: "Box",
                                    searchKey: "Box",
                                    props: {
                                        y: 0,
                                        x: -20,
                                        width: 78,
                                        renderType: "render",
                                        height: 58
                                    },
                                    nodeParent: 195,
                                    label: "Box",
                                    isDirectory: !0,
                                    isAniNode: !1,
                                    hasChild: !0,
                                    compId: 196,
                                    child: [{
                                        type: "Image",
                                        searchKey: "Image",
                                        props: {
                                            y: 29,
                                            x: 39,
                                            skin: "ui_real_uncompress/bottom_img.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        nodeParent: 196,
                                        label: "Image",
                                        isDirectory: !1,
                                        isAniNode: !1,
                                        hasChild: !1,
                                        compId: 197,
                                        child: []
                                    }]
                                }]
                            }, {
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Bottom"
                                },
                                nodeParent: 182,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 194,
                                child: []
                            }]
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorTop,AnchorTop",
                            props: {
                                y: 2,
                                x: 0,
                                width: 750,
                                visible: !0,
                                var: "AnchorTop",
                                name: "AnchorTop",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorTop",
                            isOpen: null,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 46,
                            child: [{
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 2,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "TopLeft"
                                },
                                nodeParent: 46,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 70,
                                child: []
                            }, {
                                type: "Image",
                                searchKey: "Image,recorderDialog,recorderDialog",
                                props: {
                                    y: 487,
                                    x: 29,
                                    width: 634,
                                    var: "recorderDialog",
                                    skin: "ui_com/com_img_bg.png",
                                    sizeGrid: "51,34,46,54",
                                    pivotY: -22,
                                    pivotX: -34,
                                    name: "recorderDialog",
                                    height: 338
                                },
                                nodeParent: 46,
                                label: "recorderDialog",
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 200,
                                child: [{
                                    type: "Label",
                                    searchKey: "Label",
                                    props: {
                                        y: 371,
                                        x: 146,
                                        width: 413,
                                        text: "点击空白区域关闭",
                                        height: 92,
                                        fontSize: 40,
                                        color: "#ffffff"
                                    },
                                    nodeParent: 200,
                                    label: "Label",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 201,
                                    child: []
                                }, {
                                    type: "Label",
                                    searchKey: "Label,Tips",
                                    props: {
                                        y: 31,
                                        x: 57,
                                        width: 89,
                                        text: "提示",
                                        name: "Tips",
                                        height: 46,
                                        fontSize: 45
                                    },
                                    nodeParent: 200,
                                    label: "Tips",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 202,
                                    child: []
                                }, {
                                    type: "Label",
                                    searchKey: "Label,content",
                                    props: {
                                        y: 84,
                                        x: 88,
                                        width: 420,
                                        text: "将您本局的操作以视",
                                        name: "content",
                                        height: 41,
                                        fontSize: 40
                                    },
                                    nodeParent: 200,
                                    label: "content",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 203,
                                    child: []
                                }, {
                                    type: "Label",
                                    searchKey: "Label,content1",
                                    props: {
                                        y: 127,
                                        x: 92,
                                        width: 389,
                                        text: "频的形式发送给你的",
                                        name: "content1",
                                        height: 43,
                                        fontSize: 40
                                    },
                                    nodeParent: 200,
                                    label: "content1",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 204,
                                    child: []
                                }, {
                                    type: "Label",
                                    searchKey: "Label,content2",
                                    props: {
                                        y: 169,
                                        x: 90,
                                        width: 269,
                                        text: "好友",
                                        name: "content2",
                                        height: 44,
                                        fontSize: 40
                                    },
                                    nodeParent: 200,
                                    label: "content2",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 205,
                                    child: []
                                }]
                            }]
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorCenter,AnchorCenter",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorCenter",
                            isOpen: !0,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 131,
                            child: [{
                                x: 30,
                                type: "Button",
                                searchKey: "Button,backBtn,backBtn",
                                props: {
                                    y: 546,
                                    var: "backBtn",
                                    stateNum: 1,
                                    skin: "ui_game/back.png",
                                    name: "backBtn",
                                    left: -907
                                },
                                nodeParent: 131,
                                label: "backBtn",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 138,
                                child: [],
                                $HIDDEN: !1
                            }, {
                                x: 30,
                                type: "Box",
                                searchKey: "Box,checkPointBox,checkPointBox",
                                props: {
                                    y: 175,
                                    x: 375,
                                    width: 260,
                                    var: "checkPointBox",
                                    spaceX: 50,
                                    name: "checkPointBox",
                                    centerX: 0,
                                    anchorX: .5
                                },
                                nodeParent: 131,
                                label: "checkPointBox",
                                isOpen: null,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 139,
                                child: [{
                                    type: "Image",
                                    searchKey: "Image,point0,point0",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        visible: !1,
                                        var: "point0",
                                        skin: "ui_game/point0.png",
                                        name: "point0"
                                    },
                                    nodeParent: 139,
                                    label: "point0",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 140,
                                    child: []
                                }, {
                                    type: "Image",
                                    searchKey: "Image,point1,point1",
                                    props: {
                                        y: 0,
                                        x: 50,
                                        visible: !1,
                                        var: "point1",
                                        skin: "ui_game/point0.png",
                                        name: "point1"
                                    },
                                    nodeParent: 139,
                                    label: "point1",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 142,
                                    child: []
                                }, {
                                    type: "Image",
                                    searchKey: "Image,point2,point2",
                                    props: {
                                        y: 0,
                                        x: 100,
                                        visible: !1,
                                        var: "point2",
                                        skin: "ui_game/point0.png",
                                        name: "point2"
                                    },
                                    nodeParent: 139,
                                    label: "point2",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 143,
                                    child: []
                                }, {
                                    type: "Image",
                                    searchKey: "Image,point3,point3",
                                    props: {
                                        y: 0,
                                        x: 150,
                                        visible: !1,
                                        var: "point3",
                                        skin: "ui_game/point0.png",
                                        name: "point3"
                                    },
                                    nodeParent: 139,
                                    label: "point3",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 144,
                                    child: []
                                }, {
                                    type: "Image",
                                    searchKey: "Image,point4,point4",
                                    props: {
                                        y: 0,
                                        x: 200,
                                        visible: !1,
                                        var: "point4",
                                        skin: "ui_game/point0.png",
                                        name: "point4"
                                    },
                                    nodeParent: 139,
                                    label: "point4",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 145,
                                    child: []
                                }],
                                $HIDDEN: !1
                            }, {
                                x: 30,
                                type: "Label",
                                searchKey: "Label,timeLabel,timeLabel",
                                props: {
                                    y: 125,
                                    x: 375,
                                    var: "timeLabel",
                                    valign: "middle",
                                    text: "00:00",
                                    name: "timeLabel",
                                    fontSize: 50,
                                    color: "#000000",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                nodeParent: 131,
                                label: "timeLabel",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 146,
                                child: [],
                                $HIDDEN: !1
                            }, {
                                x: 30,
                                type: "Label",
                                searchKey: "Label,levelLabel,levelLabel",
                                props: {
                                    y: 37,
                                    var: "levelLabel",
                                    valign: "middle",
                                    text: "第00关",
                                    right: 311,
                                    name: "levelLabel",
                                    fontSize: 40,
                                    color: "#4e4b4b",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: 1,
                                    align: "right"
                                },
                                nodeParent: 131,
                                label: "levelLabel",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 147,
                                child: [],
                                $HIDDEN: !1
                            }, {
                                x: 30,
                                type: "Image",
                                searchKey: "Image",
                                props: {
                                    y: 300,
                                    x: 20,
                                    visible: !1,
                                    scaleY: .44,
                                    scaleX: .44
                                },
                                nodeParent: 131,
                                label: "Image",
                                isOpen: null,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 134,
                                child: [{
                                    type: "Image",
                                    searchKey: "Image",
                                    props: {
                                        y: 160,
                                        x: 683,
                                        visible: !1
                                    },
                                    nodeParent: 134,
                                    label: "Image",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 136,
                                    child: []
                                }],
                                $HIDDEN: !0
                            }, {
                                x: 30,
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Center"
                                },
                                nodeParent: 131,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 132,
                                child: []
                            }, {
                                x: 30,
                                type: "Button",
                                searchKey: "Button,reStartBtn,reStartBtn",
                                props: {
                                    y: 117,
                                    x: 87,
                                    width: 170,
                                    visible: !1,
                                    var: "reStartBtn",
                                    stateNum: 1,
                                    skin: "ui_home/home_btn_green.png",
                                    name: "reStartBtn"
                                },
                                nodeParent: 131,
                                label: "reStartBtn",
                                isOpen: null,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 148,
                                child: [{
                                    type: "Label",
                                    searchKey: "Label",
                                    props: {
                                        y: 34,
                                        x: 5,
                                        text: "重新开始",
                                        fontSize: 40
                                    },
                                    nodeParent: 148,
                                    label: "Label",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 150,
                                    child: []
                                }],
                                $HIDDEN: !0
                            }, {
                                x: 30,
                                type: "Button",
                                searchKey: "Button,addTimeBtn,addTimeBtn",
                                props: {
                                    y: 112,
                                    x: 523,
                                    visible: !1,
                                    var: "addTimeBtn",
                                    stateNum: 1,
                                    skin: "ui_home/home_btn_green.png",
                                    name: "addTimeBtn"
                                },
                                nodeParent: 131,
                                label: "addTimeBtn",
                                isOpen: null,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 151,
                                child: [{
                                    type: "Label",
                                    searchKey: "Label",
                                    props: {
                                        y: 34,
                                        x: 20,
                                        text: "+60s",
                                        fontSize: 40
                                    },
                                    nodeParent: 151,
                                    label: "Label",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 152,
                                    child: []
                                }],
                                $HIDDEN: !0
                            }, {
                                x: 30,
                                type: "Button",
                                searchKey: "Button,nextLevelBtn,nextLevelBtn",
                                props: {
                                    y: 77,
                                    x: 298,
                                    visible: !1,
                                    var: "nextLevelBtn",
                                    stateNum: 1,
                                    skin: "ui_home/home_btn_green.png",
                                    name: "nextLevelBtn"
                                },
                                nodeParent: 131,
                                label: "nextLevelBtn",
                                isOpen: null,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 153,
                                child: [{
                                    type: "Label",
                                    searchKey: "Label",
                                    props: {
                                        y: 34,
                                        x: 4,
                                        text: "下一关",
                                        fontSize: 40
                                    },
                                    nodeParent: 153,
                                    label: "Label",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 154,
                                    child: []
                                }],
                                $HIDDEN: !0
                            }],
                            $HIDDEN: !1
                        }, {
                            x: 15,
                            type: "Image",
                            searchKey: "Image,backGround,backGround",
                            props: {
                                y: -374,
                                x: -357,
                                width: 1500,
                                var: "backGround",
                                skin: "ui_common2/zhezhao.png",
                                sizeGrid: "16,11,14,16",
                                name: "backGround",
                                height: 2800,
                                alpha: .8
                            },
                            nodeParent: 2,
                            label: "backGround",
                            isDirectory: !1,
                            isAniNode: !0,
                            hasChild: !1,
                            compId: 206,
                            child: []
                        }],
                        animations: [{
                            nodes: [{
                                target: 110,
                                keyframes: {
                                    width: [{
                                        value: 113,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "width",
                                        index: 0
                                    }],
                                    scaleY: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "scaleY",
                                        index: 26
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "scaleY",
                                        index: 31
                                    }],
                                    scaleX: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "scaleX",
                                        index: 26
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "scaleX",
                                        index: 31
                                    }],
                                    height: [{
                                        value: 270,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "height",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "alpha",
                                        index: 26
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "alpha",
                                        index: 31
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "alpha",
                                        index: 37
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 110,
                                        key: "alpha",
                                        index: 43
                                    }]
                                }
                            }, {
                                target: 109,
                                keyframes: {
                                    width: [{
                                        value: 229,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "width",
                                        index: 0
                                    }],
                                    scaleY: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "scaleY",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "scaleY",
                                        index: 18
                                    }],
                                    scaleX: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "scaleX",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "scaleX",
                                        index: 18
                                    }],
                                    height: [{
                                        value: 270,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "height",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "alpha",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "alpha",
                                        index: 18
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 109,
                                        key: "alpha",
                                        index: 30
                                    }]
                                }
                            }, {
                                target: 108,
                                keyframes: {
                                    width: [{
                                        value: 227,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 108,
                                        key: "width",
                                        index: 0
                                    }],
                                    scaleY: [{
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 108,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 108,
                                        key: "scaleY",
                                        index: 5
                                    }],
                                    scaleX: [{
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 108,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 108,
                                        key: "scaleX",
                                        index: 5
                                    }],
                                    height: [{
                                        value: 270,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 108,
                                        key: "height",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 108,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 108,
                                        key: "alpha",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 108,
                                        key: "alpha",
                                        index: 11
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 108,
                                        key: "alpha",
                                        index: 17
                                    }]
                                }
                            }],
                            name: "daojishi_ani",
                            id: 1,
                            frameRate: 30,
                            action: 0
                        }]
                    }, t
                }(Laya.Scene);
                e.GameViewUI = f;
                var y = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                visible: !0,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 606,
                                    x: 375,
                                    width: 665,
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "20,20,20,20",
                                    name: "speedupbg",
                                    height: 1044,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6
                            }, {
                                type: "Image",
                                props: {
                                    y: 112,
                                    x: 684,
                                    var: "btnClose",
                                    skin: "ui_achieve/btn_close.png",
                                    name: "btnClose",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 12
                            }, {
                                type: "Image",
                                props: {
                                    y: 164,
                                    x: 375,
                                    width: 400,
                                    var: "title",
                                    skin: "ui_achieve/title_bg.png",
                                    name: "title",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 29,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 41,
                                        x: 200,
                                        text: "关注公众号",
                                        strokeColor: "#ca781f",
                                        stroke: 6,
                                        name: "title",
                                        fontSize: 53,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 30
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 236,
                                    x: 83,
                                    width: 580,
                                    skin: "ui_dialog/grewBg.png",
                                    sizeGrid: "20,30,25,23",
                                    name: "point1",
                                    height: 127
                                },
                                compId: 31,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: -31.5,
                                        x: -20,
                                        skin: "ui_dialog/circle.png",
                                        name: "num"
                                    },
                                    compId: 34
                                }, {
                                    type: "Label",
                                    props: {
                                        y: -28.5,
                                        x: -2,
                                        text: "1",
                                        font: "font_2"
                                    },
                                    compId: 35
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 44,
                                        x: 74,
                                        text: "点击下方按钮",
                                        name: "blackLabel",
                                        fontSize: 35,
                                        color: "#2a3344",
                                        bold: !0
                                    },
                                    compId: 36
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 17,
                                        x: 312,
                                        width: 238,
                                        skin: "res/Texture/com_btn_blue.png",
                                        height: 93
                                    },
                                    compId: 38
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 135,
                                        x: 281,
                                        skin: "ui_dialog/Arrow_down.png",
                                        name: "Arrow1"
                                    },
                                    compId: 39
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 398,
                                    x: 83,
                                    width: 580,
                                    skin: "ui_dialog/grewBg.png",
                                    sizeGrid: "20,30,25,23",
                                    name: "point2",
                                    height: 211
                                },
                                compId: 32,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: -32.5,
                                        x: -20,
                                        skin: "ui_dialog/circle.png",
                                        name: "num"
                                    },
                                    compId: 41
                                }, {
                                    type: "Label",
                                    props: {
                                        y: -28.5,
                                        x: -2,
                                        text: "2",
                                        font: "font_2"
                                    },
                                    compId: 42
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 25,
                                        x: 29,
                                        text: "在",
                                        name: "blackLabel",
                                        fontSize: 33,
                                        color: "#2a3344",
                                        bold: !0
                                    },
                                    compId: 43
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 25,
                                        x: 228.5,
                                        text: "内输入",
                                        name: "blackLabel",
                                        fontSize: 33,
                                        color: "#2a3344",
                                        bold: !0
                                    },
                                    compId: 55
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 25,
                                        x: 414,
                                        text: "并发送",
                                        name: "blackLabel",
                                        fontSize: 33,
                                        color: "#2a3344",
                                        bold: !0
                                    },
                                    compId: 57
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 25,
                                        x: 63,
                                        text: "客服对话框",
                                        name: "blueLabel",
                                        fontSize: 33,
                                        color: "#2d89f0",
                                        bold: !0
                                    },
                                    compId: 44
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 25,
                                        x: 343,
                                        text: "“1”",
                                        name: "blueLabel",
                                        fontSize: 33,
                                        color: "#2d89f0",
                                        bold: !0
                                    },
                                    compId: 56
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 65,
                                        x: 33,
                                        skin: "ui_dialog/official2.png"
                                    },
                                    compId: 45
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 218,
                                        x: 278,
                                        width: 31,
                                        skin: "ui_dialog/Arrow_down.png",
                                        name: "Arrow1",
                                        height: 19
                                    },
                                    compId: 46
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 643,
                                    x: 83,
                                    width: 583,
                                    skin: "ui_dialog/grewBg.png",
                                    sizeGrid: "20,30,25,23",
                                    name: "point3",
                                    height: 193
                                },
                                compId: 33,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: -32.5,
                                        x: -20,
                                        skin: "ui_dialog/circle.png",
                                        name: "num"
                                    },
                                    compId: 48
                                }, {
                                    type: "Label",
                                    props: {
                                        y: -28.5,
                                        x: -2,
                                        text: "3",
                                        font: "font_2"
                                    },
                                    compId: 49
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 65,
                                        x: 30,
                                        text: "长按",
                                        name: "blackLabel",
                                        fontSize: 33,
                                        color: "#2a3344",
                                        bold: !0
                                    },
                                    compId: 50
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 65,
                                        x: 96,
                                        text: "二维码",
                                        name: "blueLabel",
                                        fontSize: 33,
                                        color: "#2d89f0",
                                        bold: !0
                                    },
                                    compId: 51
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 65,
                                        x: 195,
                                        text: "关注公众号",
                                        name: "blackLabel",
                                        fontSize: 33,
                                        color: "#2a3344",
                                        bold: !0
                                    },
                                    compId: 58
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 104,
                                        x: 98,
                                        text: "领取免费奖励",
                                        name: "blackLabel",
                                        fontSize: 33,
                                        color: "#2a3344",
                                        bold: !0
                                    },
                                    compId: 59
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 17,
                                        x: 389,
                                        skin: "ui_dialog/officialBg.png"
                                    },
                                    compId: 53
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 867,
                                    x: 82,
                                    width: 584,
                                    skin: "ui_dialog/grewBg.png",
                                    sizeGrid: "20,30,25,23",
                                    name: "point4",
                                    height: 224
                                },
                                compId: 60,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: -32.5,
                                        x: -20,
                                        skin: "ui_dialog/circle.png",
                                        name: "num"
                                    },
                                    compId: 61
                                }, {
                                    type: "Label",
                                    props: {
                                        y: -28.5,
                                        x: -2,
                                        text: "4",
                                        font: "font_2"
                                    },
                                    compId: 62
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 17,
                                        x: 77,
                                        text: "回到游戏，点击",
                                        name: "blackLabel",
                                        fontSize: 33,
                                        color: "#2a3344",
                                        bold: !0
                                    },
                                    compId: 63
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 16,
                                        x: 308,
                                        text: "领取按钮",
                                        name: "blueLabel",
                                        fontSize: 33,
                                        color: "#2d89f0",
                                        bold: !0
                                    },
                                    compId: 64
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 17,
                                        x: 440,
                                        text: ",获得",
                                        name: "blackLabel",
                                        fontSize: 33,
                                        color: "#2a3344",
                                        bold: !0
                                    },
                                    compId: 65
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 57,
                                        x: 226,
                                        text: "神秘奖励",
                                        name: "blackLabel",
                                        fontSize: 33,
                                        color: "#2a3344",
                                        bold: !0
                                    },
                                    compId: 66
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 98,
                                        x: 34,
                                        skin: "ui_dialog/official1.png"
                                    },
                                    compId: 67
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 1223,
                                    x: 375,
                                    visible: !1,
                                    var: "btnGet",
                                    skin: "res/Texture/com_btn_blue.png",
                                    sizeGrid: "48,59,56,68",
                                    name: "btnGet",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 25,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 60,
                                        x: 191,
                                        visible: !1,
                                        var: "lblGetText",
                                        text: "领取",
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lblGetText",
                                        font: "font_2",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 27
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/btn_close.png", "ui_achieve/title_bg.png", "ui_dialog/grewBg.png", "ui_dialog/circle.png", "res/Texture/com_btn_blue.png", "ui_dialog/Arrow_down.png", "ui_dialog/official2.png", "ui_dialog/officialBg.png", "ui_dialog/official1.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.GongZhongHaoDialogUI = y;
                var v = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .6
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 15,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 667,
                                    x: 375,
                                    width: 665,
                                    var: "speedupbg",
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "15,15,15,15",
                                    name: "speedupbg",
                                    height: 1096,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 1
                                },
                                compId: 4,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 24,
                                        x: 642,
                                        visible: !0,
                                        var: "btnClose",
                                        underlineColor: "#AAA299",
                                        underline: !0,
                                        text: "放弃",
                                        skin: "ui_achieve/btn_close.png",
                                        name: "btnClose",
                                        font: "font_2",
                                        color: "#AAA299",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 51
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 77,
                                        x: 330.5,
                                        var: "title",
                                        text: "获得成就",
                                        skin: "ui_achieve/title_bg.png",
                                        name: "title",
                                        font: "font_2",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 22,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 49,
                                            x: 180,
                                            width: 212,
                                            text: "邀请有礼",
                                            strokeColor: "#ca781f",
                                            stroke: 6,
                                            pivotY: 33,
                                            pivotX: 112,
                                            height: 58,
                                            fontSize: 53,
                                            color: "#ffffff",
                                            bold: !0
                                        },
                                        compId: 57
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 269,
                                        x: 38,
                                        width: 582,
                                        var: "line",
                                        skin: "ui_dialog/line3.png",
                                        name: "line"
                                    },
                                    compId: 63
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 189,
                                        x: 135,
                                        var: "backLight",
                                        skin: "ui_dialog/bgLight.png",
                                        scaleY: .4,
                                        scaleX: .4,
                                        name: "backLight",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 61
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 189,
                                        x: 135,
                                        width: 160,
                                        var: "StateBox",
                                        name: "StateBox",
                                        height: 177,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 62,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            var: "staticBox",
                                            skin: "ui_home/inviteBox.png",
                                            name: "staticBox",
                                            centerY: .5,
                                            centerX: .5
                                        },
                                        compId: 59
                                    }, {
                                        type: "Image",
                                        props: {
                                            var: "dynamicBox",
                                            skin: "ui_home/inviteBoxOpen.png",
                                            name: "dynamicBox",
                                            centerY: .5,
                                            centerX: .5
                                        },
                                        compId: 60
                                    }]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 194,
                                        x: 440,
                                        width: 334,
                                        var: "inviteLabel",
                                        name: "inviteLabel",
                                        height: 111,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 64,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: -2,
                                            x: -2,
                                            var: "labelOne",
                                            text: "每邀请",
                                            name: "labelOne",
                                            fontSize: 33,
                                            font: "font",
                                            color: "#978370"
                                        },
                                        compId: 65
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 16.5,
                                            x: 115,
                                            var: "InvitePointNum",
                                            text: "3",
                                            name: "InvitePointNum",
                                            fontSize: 33,
                                            color: "#4c5566",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 66
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 38,
                                            x: -2,
                                            var: "labelOne2",
                                            text: "启一次超值宝箱",
                                            name: "labelOne2",
                                            fontSize: 33,
                                            font: "font",
                                            color: "#978370"
                                        },
                                        compId: 67
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -2,
                                            x: 133,
                                            var: "labelTwo",
                                            text: "个好友,即可开",
                                            name: "labelTwo",
                                            fontSize: 33,
                                            font: "font",
                                            color: "#978370"
                                        },
                                        compId: 68
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 78,
                                            x: -1.584228515625,
                                            var: "labelThree",
                                            text: "已邀请好友数:",
                                            name: "labelThree",
                                            fontSize: 33,
                                            font: "font",
                                            color: "#978370"
                                        },
                                        compId: 69
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 96.5,
                                            x: 219,
                                            var: "InviteTotalNum",
                                            valign: "middle",
                                            text: "8",
                                            name: "InviteTotalNum",
                                            fontSize: 33,
                                            color: "#4c5566",
                                            anchorY: .5,
                                            anchorX: 0,
                                            align: "left"
                                        },
                                        compId: 70
                                    }]
                                }, {
                                    type: "Box",
                                    props: {
                                        var: "BoxLightAnimation",
                                        name: "BoxLightAnimation"
                                    },
                                    compId: 71,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 149,
                                            x: 124,
                                            width: 30,
                                            var: "flash1",
                                            skin: "ui_dialog/light2.png",
                                            scaleY: .8,
                                            scaleX: .8,
                                            pivotY: 15,
                                            pivotX: 15,
                                            name: "flash1",
                                            height: 30
                                        },
                                        compId: 72
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 214,
                                            x: 84,
                                            var: "flash2",
                                            skin: "ui_dialog/light2.png",
                                            scaleY: .8,
                                            scaleX: .8,
                                            name: "flash2",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 73
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 208,
                                            x: 192,
                                            var: "flash3",
                                            skin: "ui_dialog/light2.png",
                                            scaleY: .8,
                                            scaleX: .8,
                                            name: "flash3",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 74
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 165,
                                            x: 95.5,
                                            var: "StarFlash1",
                                            skin: "ui_dialog/light1.png",
                                            scaleY: .5,
                                            scaleX: .5,
                                            rotation: 11,
                                            name: "StarFlash1",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 75
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 182.5,
                                            x: 184.5,
                                            var: "StarFlash2",
                                            skin: "ui_dialog/light1.png",
                                            scaleY: .3,
                                            scaleX: .3,
                                            rotation: 45,
                                            name: "StarFlash2",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 76
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 239,
                                            x: 174,
                                            width: 83,
                                            var: "StarFlash3",
                                            skin: "ui_dialog/light1.png",
                                            scaleY: .3,
                                            scaleX: .3,
                                            rotation: 16,
                                            name: "StarFlash3",
                                            height: 83,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 77
                                    }]
                                }, {
                                    type: "WXOpenDataViewer",
                                    props: {
                                        y: 291,
                                        x: 35,
                                        width: 590,
                                        var: "sprOpenDataViewByInvite",
                                        name: "sprOpenDataViewByInvite",
                                        iconSign: "wx",
                                        height: 771,
                                        runtime: "laya.ui.WXOpenDataViewer"
                                    },
                                    compId: 78
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 16
                            }]
                        }],
                        animations: [{
                            nodes: [{
                                target: 61,
                                keyframes: {
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 61,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 180,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 61,
                                        key: "rotation",
                                        index: 20
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 61,
                                        key: "rotation",
                                        index: 40
                                    }],
                                    name: [{
                                        value: "backLight",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 61,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }, {
                                target: 72,
                                keyframes: {
                                    y: [{
                                        value: 149,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "y",
                                        index: 0
                                    }],
                                    x: [{
                                        value: 125,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "x",
                                        index: 0
                                    }],
                                    scaleY: [{
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "scaleY",
                                        index: 11
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "scaleY",
                                        index: 22
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "scaleY",
                                        index: 31
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "scaleY",
                                        index: 40
                                    }],
                                    scaleX: [{
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "scaleX",
                                        index: 11
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "scaleX",
                                        index: 22
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "scaleX",
                                        index: 31
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 72,
                                        key: "scaleX",
                                        index: 40
                                    }],
                                    name: [{
                                        value: "flash1",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 72,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }, {
                                target: 73,
                                keyframes: {
                                    x: [{
                                        value: 84,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 84,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "x",
                                        index: 29
                                    }],
                                    scaleY: [{
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleY",
                                        index: 7
                                    }, {
                                        value: .2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleY",
                                        index: 14
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleY",
                                        index: 24
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleY",
                                        index: 29
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleY",
                                        index: 40
                                    }],
                                    scaleX: [{
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleX",
                                        index: 7
                                    }, {
                                        value: .2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleX",
                                        index: 14
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleX",
                                        index: 24
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleX",
                                        index: 29
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "scaleX",
                                        index: 40
                                    }],
                                    name: [{
                                        value: "flash2",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 73,
                                        key: "name",
                                        index: 0
                                    }],
                                    anchorX: [{
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "anchorX",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 73,
                                        key: "anchorX",
                                        index: 29
                                    }]
                                }
                            }, {
                                target: 74,
                                keyframes: {
                                    scaleY: [{
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleY",
                                        index: 9
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleY",
                                        index: 16
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleY",
                                        index: 22
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleY",
                                        index: 32
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleY",
                                        index: 40
                                    }],
                                    scaleX: [{
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleX",
                                        index: 9
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleX",
                                        index: 16
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleX",
                                        index: 22
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleX",
                                        index: 32
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "scaleX",
                                        index: 40
                                    }],
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 74,
                                        key: "rotation",
                                        index: 9
                                    }],
                                    name: [{
                                        value: "flash3",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 74,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }, {
                                target: 75,
                                keyframes: {
                                    y: [{
                                        value: 165.5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "y",
                                        index: 0
                                    }],
                                    x: [{
                                        value: 97,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "x",
                                        index: 0
                                    }],
                                    scaleY: [{
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleY",
                                        index: 6
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleY",
                                        index: 13
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleY",
                                        index: 20
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleY",
                                        index: 28
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleY",
                                        index: 40
                                    }],
                                    scaleX: [{
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleX",
                                        index: 6
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleX",
                                        index: 13
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleX",
                                        index: 20
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleX",
                                        index: 28
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "scaleX",
                                        index: 40
                                    }],
                                    rotation: [{
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 75,
                                        key: "rotation",
                                        index: 0
                                    }],
                                    name: [{
                                        value: "StarFlash1",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 75,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }, {
                                target: 76,
                                keyframes: {
                                    scaleY: [{
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 76,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 76,
                                        key: "scaleY",
                                        index: 11
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 76,
                                        key: "scaleY",
                                        index: 31
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 76,
                                        key: "scaleY",
                                        index: 40
                                    }],
                                    scaleX: [{
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 76,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 76,
                                        key: "scaleX",
                                        index: 11
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 76,
                                        key: "scaleX",
                                        index: 31
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 76,
                                        key: "scaleX",
                                        index: 40
                                    }],
                                    name: [{
                                        value: "StarFlash2",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 76,
                                        key: "name",
                                        index: 0
                                    }, {
                                        value: "StarFlash2",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 76,
                                        key: "name",
                                        index: 24
                                    }]
                                }
                            }, {
                                target: 77,
                                keyframes: {
                                    y: [{
                                        value: 239,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "y",
                                        index: 0
                                    }],
                                    x: [{
                                        value: 174,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "x",
                                        index: 0
                                    }],
                                    scaleY: [{
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: .1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleY",
                                        index: 17
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleY",
                                        index: 23
                                    }, {
                                        value: .15,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleY",
                                        index: 27
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleY",
                                        index: 33
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleY",
                                        index: 40
                                    }],
                                    scaleX: [{
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: .1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleX",
                                        index: 17
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleX",
                                        index: 23
                                    }, {
                                        value: .15,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleX",
                                        index: 27
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleX",
                                        index: 33
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "scaleX",
                                        index: 40
                                    }],
                                    rotation: [{
                                        value: 33,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 77,
                                        key: "rotation",
                                        index: 0
                                    }],
                                    name: [{
                                        value: "StarFlash3",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 77,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }],
                            name: "OpenBoxAni",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/btn_close.png", "ui_achieve/title_bg.png", "ui_dialog/line3.png", "ui_dialog/bgLight.png", "ui_home/inviteBox.png", "ui_home/inviteBoxOpen.png", "ui_dialog/light2.png", "ui_dialog/light1.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.InviteFriendBoxDialogUI = v;
                var w = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .95
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }, {
                                type: "Image",
                                props: {
                                    y: 155,
                                    x: 113,
                                    var: "GainTopLine",
                                    skin: "ui_dialog/headBg.png",
                                    name: "GainTopLine"
                                },
                                compId: 30,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 52,
                                        x: 253,
                                        width: 219,
                                        text: "恭喜获得",
                                        strokeColor: "#ca781f",
                                        stroke: 6,
                                        pivotY: 33,
                                        pivotX: 112,
                                        height: 63,
                                        fontSize: 53,
                                        color: "#ffffff",
                                        bold: !0
                                    },
                                    compId: 32
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 629,
                                    x: 367,
                                    var: "flashBg",
                                    skin: "ui_dialog/bgLight.png",
                                    name: "flashBg",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 33
                            }, {
                                type: "Image",
                                props: {
                                    y: 1031,
                                    x: 369,
                                    width: 373,
                                    var: "GainBtn",
                                    skin: "ui_achieve/btn_bg.png",
                                    sizeGrid: "57,132,52,118",
                                    name: "GainBtn",
                                    height: 144,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 36,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 66,
                                        x: 186.5,
                                        width: 143,
                                        text: "领取",
                                        height: 78,
                                        fontSize: 68,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 37
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 628,
                                    x: 194,
                                    var: "staminaImage",
                                    skin: "ui_dialog/lotty_img_stamina.png",
                                    scaleY: 1.8,
                                    scaleX: 1.8,
                                    name: "staminaImage",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 34
                            }, {
                                type: "Image",
                                props: {
                                    y: 600,
                                    x: 519,
                                    var: "diamondImage",
                                    skin: "ui_dialog/dia_img_bigdia.png",
                                    scaleY: 1.2,
                                    scaleX: 1.2,
                                    name: "diamondImage",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 52
                            }, {
                                type: "Label",
                                props: {
                                    y: 687,
                                    x: 259,
                                    width: 84,
                                    var: "staminaCount",
                                    text: "x3",
                                    strokeColor: "#ca781f",
                                    stroke: 6,
                                    scaleY: 1.2,
                                    scaleX: 1.2,
                                    name: "staminaCount",
                                    height: 81,
                                    fontSize: 55,
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 45
                            }, {
                                type: "Label",
                                props: {
                                    y: 687,
                                    x: 619,
                                    width: 84,
                                    var: "diamondCount",
                                    text: "x3",
                                    strokeColor: "#ca781f",
                                    stroke: 6,
                                    scaleY: 1.2,
                                    scaleX: 1.2,
                                    name: "diamondCount",
                                    height: 81,
                                    fontSize: 55,
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 53
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 1
                                },
                                compId: 38,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 466,
                                        x: 309,
                                        skin: "ui_dialog/light2.png",
                                        name: "lightDown",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 39
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 684,
                                        x: 496,
                                        var: "img1",
                                        skin: "ui_dialog/light2.png",
                                        name: "img1",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 40
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 669,
                                        x: 210,
                                        var: "img2",
                                        skin: "ui_dialog/light2.png",
                                        name: "img2",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 41
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 507,
                                        x: 255,
                                        var: "img3",
                                        skin: "ui_dialog/light1.png",
                                        name: "img3",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 42
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 703,
                                        x: 488,
                                        width: 46,
                                        var: "img4",
                                        skin: "ui_dialog/light1.png",
                                        rotation: 44,
                                        name: "img4",
                                        height: 52,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 43
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 601,
                                        x: 502,
                                        width: 46,
                                        var: "img5",
                                        skin: "ui_dialog/light1.png",
                                        rotation: 44,
                                        name: "img5",
                                        height: 52,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 44
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 956,
                                    x: 369,
                                    width: 373,
                                    visible: !1,
                                    var: "ThanksBtn",
                                    skin: "ui_com/com_btn_yellow.png",
                                    sizeGrid: "57,132,52,118",
                                    name: "ThanksBtn",
                                    height: 144,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 55,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 66,
                                        x: 187,
                                        width: 267,
                                        text: "感谢好友",
                                        height: 78,
                                        fontSize: 68,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 56
                                }]
                            }]
                        }],
                        animations: [{
                            nodes: [{
                                target: 33,
                                keyframes: {
                                    scaleY: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleY",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleY",
                                        index: 40
                                    }],
                                    scaleX: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleX",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleX",
                                        index: 40
                                    }],
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 180,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "rotation",
                                        index: 20
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "rotation",
                                        index: 40
                                    }],
                                    name: [{
                                        value: "flashBg",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 33,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }, {
                                target: 39,
                                keyframes: {
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleY",
                                        index: 17
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleY",
                                        index: 29
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleY",
                                        index: 40
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleX",
                                        index: 17
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleX",
                                        index: 29
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleX",
                                        index: 40
                                    }],
                                    name: [{
                                        value: "lightDown",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 39,
                                        key: "name",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "alpha",
                                        index: 0
                                    }]
                                }
                            }, {
                                target: 40,
                                keyframes: {
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleY",
                                        index: 14
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleY",
                                        index: 23
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleY",
                                        index: 34
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleX",
                                        index: 14
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleX",
                                        index: 23
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleX",
                                        index: 34
                                    }],
                                    name: [{
                                        value: "img1",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 40,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }, {
                                target: 41,
                                keyframes: {
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleY",
                                        index: 7
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleY",
                                        index: 16
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleY",
                                        index: 26
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleY",
                                        index: 37
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleX",
                                        index: 7
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleX",
                                        index: 16
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleX",
                                        index: 26
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleX",
                                        index: 37
                                    }],
                                    name: [{
                                        value: "img2",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 41,
                                        key: "name",
                                        index: 0
                                    }, {
                                        value: "img2",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 41,
                                        key: "name",
                                        index: 7
                                    }]
                                }
                            }, {
                                target: 42,
                                keyframes: {
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleY",
                                        index: 19
                                    }, {
                                        value: .48,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleY",
                                        index: 29
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleY",
                                        index: 39
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleX",
                                        index: 19
                                    }, {
                                        value: .48,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleX",
                                        index: 29
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleX",
                                        index: 39
                                    }],
                                    name: [{
                                        value: "img3",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 42,
                                        key: "name",
                                        index: 0
                                    }, {
                                        value: "img3",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 42,
                                        key: "name",
                                        index: 37
                                    }]
                                }
                            }, {
                                target: 43,
                                keyframes: {
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .48,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleY",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleY",
                                        index: 11
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleY",
                                        index: 22
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleY",
                                        index: 34
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .48,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleX",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleX",
                                        index: 11
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleX",
                                        index: 22
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleX",
                                        index: 34
                                    }],
                                    name: [{
                                        value: "img4",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 43,
                                        key: "name",
                                        index: 0
                                    }, {
                                        value: "img4",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 43,
                                        key: "name",
                                        index: 40
                                    }]
                                }
                            }, {
                                target: 44,
                                keyframes: {
                                    y: [{
                                        value: 601,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 601,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "y",
                                        index: 10
                                    }, {
                                        value: 601,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "y",
                                        index: 18
                                    }, {
                                        value: 601,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "y",
                                        index: 27
                                    }, {
                                        value: 601,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "y",
                                        index: 35
                                    }],
                                    x: [{
                                        value: 502,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 502,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "x",
                                        index: 10
                                    }, {
                                        value: 502,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "x",
                                        index: 18
                                    }, {
                                        value: 502,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "x",
                                        index: 27
                                    }, {
                                        value: 502,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "x",
                                        index: 35
                                    }],
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleY",
                                        index: 18
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleY",
                                        index: 27
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleY",
                                        index: 35
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleX",
                                        index: 18
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleX",
                                        index: 27
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleX",
                                        index: 35
                                    }],
                                    name: [{
                                        value: "img5",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 44,
                                        key: "name",
                                        index: 0
                                    }, {
                                        value: "img5",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 44,
                                        key: "name",
                                        index: 27
                                    }],
                                    anchorY: [{
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorY",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorY",
                                        index: 10
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorY",
                                        index: 18
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorY",
                                        index: 27
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorY",
                                        index: 35
                                    }],
                                    anchorX: [{
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorX",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorX",
                                        index: 10
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorX",
                                        index: 18
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorX",
                                        index: 27
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorX",
                                        index: 35
                                    }]
                                }
                            }],
                            name: "flashAni",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_dialog/headBg.png", "ui_dialog/bgLight.png", "ui_achieve/btn_bg.png", "ui_dialog/lotty_img_stamina.png", "ui_dialog/dia_img_bigdia.png", "ui_dialog/light2.png", "ui_dialog/light1.png", "ui_com/com_btn_yellow.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.InvitePlayerRewardDialogUI = w;
                var I = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            x: 0,
                            width: 750,
                            mouseThrough: !0,
                            height: 1334,
                            cacheAs: "none",
                            alpha: 1
                        },
                        compId: 2,
                        child: [{
                            type: "Box",
                            props: {
                                width: 750,
                                var: "JcdlSlideBox",
                                name: "JcdlSlideBox",
                                height: 1334
                            },
                            compId: 9,
                            child: [{
                                type: "Script",
                                props: {
                                    y: -1,
                                    x: 0,
                                    anchroType: "Bottom",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 10
                            }, {
                                type: "Image",
                                props: {
                                    y: 1334,
                                    width: 750,
                                    var: "slideBoxInner",
                                    name: "slideBoxInner",
                                    height: 150,
                                    anchorY: 1
                                },
                                compId: 141,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 77,
                                        x: 375,
                                        width: 750,
                                        var: "listBg",
                                        skin: "ui_common2/jcdlBottomBg.png",
                                        sizeGrid: "22,46,0,53",
                                        height: 155,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: .6
                                    },
                                    compId: 7
                                }, {
                                    type: "List",
                                    props: {
                                        y: 11,
                                        x: 64,
                                        width: 686,
                                        var: "listJcdl",
                                        spaceX: 13,
                                        repeatY: 1,
                                        repeatX: 10,
                                        name: "listJcdl",
                                        height: 131
                                    },
                                    compId: 3,
                                    child: [{
                                        type: "Box",
                                        props: {
                                            y: 1,
                                            x: 0,
                                            width: 113,
                                            renderType: "render",
                                            height: 129
                                        },
                                        compId: 4,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 2,
                                                x: 4,
                                                width: 107,
                                                var: "imgIcon",
                                                name: "imgIcon",
                                                height: 107
                                            },
                                            compId: 31,
                                            child: [{
                                                type: "Sprite",
                                                props: {
                                                    y: 1,
                                                    x: 0,
                                                    width: 108,
                                                    renderType: "mask",
                                                    height: 108
                                                },
                                                compId: 32,
                                                child: [{
                                                    type: "Sprite",
                                                    props: {
                                                        y: 1,
                                                        x: 0,
                                                        width: 107,
                                                        texture: "ui_common2/jcdl_img_Mask02.png",
                                                        height: 107
                                                    },
                                                    compId: 33
                                                }]
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 56,
                                                    x: 51,
                                                    width: 102,
                                                    var: "imgJcdlIcon",
                                                    skin: "ui_common2/jcdl_img_bannerBg0.png",
                                                    name: "imgJcdlIcon",
                                                    height: 102,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 5
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 53,
                                                    x: 53,
                                                    width: 108,
                                                    visible: !1,
                                                    skin: "ui_common2/jcdl_img_bannerBg0.png",
                                                    height: 108,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 45
                                            }]
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 22,
                                                x: 93.5,
                                                width: 20,
                                                var: "imgHintRedDot",
                                                skin: "ui_common2/common_red_point.png",
                                                name: "imgHintRedDot",
                                                height: 20,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 27
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 120,
                                                x: 56.5,
                                                width: 141,
                                                var: "lblJcdlName",
                                                valign: "middle",
                                                text: "交叉导流",
                                                name: "lblJcdlName",
                                                height: 28,
                                                fontSize: 20,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "center"
                                            },
                                            compId: 6
                                        }]
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 9,
                                        x: 18,
                                        var: "imgTitle",
                                        skin: "ui_common2/jcdlBottomTips.png",
                                        name: "imgTitle"
                                    },
                                    compId: 87
                                }]
                            }]
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "JcdlPageBox",
                                name: "JcdlPageBox",
                                height: 1334
                            },
                            compId: 11,
                            child: [{
                                type: "Script",
                                props: {
                                    anchroType: "Left",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 12
                            }, {
                                type: "Image",
                                props: {
                                    y: 362,
                                    x: -557,
                                    width: 557,
                                    var: "pageJcdl",
                                    skin: "ui_common2/jcdl_bg_5.png",
                                    sizeGrid: "34,32,51,40",
                                    name: "pageJcdl",
                                    height: 551
                                },
                                compId: 19,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 35,
                                        x: 557,
                                        width: 119,
                                        var: "btnShowJcdl",
                                        skin: "ui_common2/jcdl_chulai.png",
                                        name: "btnShowJcdl",
                                        height: 92
                                    },
                                    compId: 13
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 30,
                                        x: 655,
                                        texture: "ui_common2/common_red_point.png"
                                    },
                                    compId: 30
                                }, {
                                    type: "List",
                                    props: {
                                        y: 22,
                                        x: 15,
                                        width: 530,
                                        var: "listPageJcdl",
                                        spaceY: 20,
                                        spaceX: 10,
                                        repeatY: 3,
                                        repeatX: 4,
                                        name: "listPageJcdl",
                                        height: 516
                                    },
                                    compId: 15,
                                    child: [{
                                        type: "Box",
                                        props: {
                                            y: 91,
                                            x: 60,
                                            width: 124,
                                            renderType: "render",
                                            height: 148,
                                            cacheAs: "bitmap",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 16,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 55,
                                                x: 62,
                                                width: 108,
                                                var: "imgListJcdlIcon",
                                                name: "imgListJcdlIcon",
                                                height: 108,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 17
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 126,
                                                x: 62,
                                                width: 96,
                                                var: "lblListJcdlIcon",
                                                valign: "middle",
                                                text: "交叉导流",
                                                name: "lblListJcdlIcon",
                                                height: 22,
                                                fontSize: 20,
                                                color: "#ffffff",
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "center"
                                            },
                                            compId: 18
                                        }, {
                                            type: "Sprite",
                                            props: {
                                                y: -10,
                                                x: 100,
                                                width: 20,
                                                var: "imgHint",
                                                texture: "ui_common2/common_red_point.png",
                                                name: "imgHint",
                                                height: 20
                                            },
                                            compId: 29
                                        }]
                                    }]
                                }]
                            }]
                        }, {
                            type: "Box",
                            props: {
                                y: -1,
                                x: 0,
                                width: 750,
                                visible: !1,
                                var: "JcdlSingleBox",
                                name: "JcdlSingleBox",
                                height: 1334
                            },
                            compId: 20,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 483,
                                    x: 69,
                                    width: 129,
                                    var: "btnSingleJcdlIcon0",
                                    sizeGrid: "32,30,38,25",
                                    name: "btnSingleJcdlIcon0",
                                    height: 156,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 22,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 10,
                                        x: 15,
                                        width: 96,
                                        skin: "ui_common2/jcdl_main_icon_bg.png",
                                        height: 96
                                    },
                                    compId: 142
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 14,
                                        x: 18,
                                        width: 90,
                                        sizeGrid: "15,24,27,17",
                                        name: "imgIcon",
                                        height: 90
                                    },
                                    compId: 78,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 90,
                                            renderType: "mask",
                                            height: 90
                                        },
                                        compId: 79,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 90,
                                                texture: "ui_common2/Icon_mask.png",
                                                height: 90
                                            },
                                            compId: 80
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 44,
                                            width: 95,
                                            var: "imgSingleJcdlIcon0",
                                            name: "imgSingleJcdlIcon0",
                                            height: 95,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 81
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 108,
                                        x: 66,
                                        width: 196,
                                        var: "lblSingleJcdlName0",
                                        text: "搭木板搭",
                                        strokeColor: "#131325",
                                        stroke: 3.5,
                                        name: "lblSingleJcdlName0",
                                        height: 30,
                                        fontSize: 26,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 49
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 17,
                                        x: 103,
                                        var: "singleRedDot",
                                        skin: "ui_common2/remen.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 116
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 311,
                                    x: 69,
                                    width: 129,
                                    var: "btnSingleJcdlIcon1",
                                    sizeGrid: "32,30,38,25",
                                    name: "btnSingleJcdlIcon1",
                                    height: 156,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 109,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 11,
                                        x: 15,
                                        width: 96,
                                        skin: "ui_common2/jcdl_main_icon_bg.png",
                                        height: 96
                                    },
                                    compId: 143
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 13,
                                        x: 18,
                                        width: 90,
                                        sizeGrid: "15,24,27,17",
                                        name: "imgIcon",
                                        height: 90
                                    },
                                    compId: 110,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 90,
                                            renderType: "mask",
                                            height: 90
                                        },
                                        compId: 111,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 90,
                                                texture: "ui_common2/Icon_mask.png",
                                                height: 90
                                            },
                                            compId: 112
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 45,
                                            width: 95,
                                            var: "imgSingleJcdlIcon1",
                                            name: "imgSingleJcdlIcon1",
                                            height: 95,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 113
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 110,
                                        x: 66,
                                        width: 196,
                                        var: "lblSingleJcdlName1",
                                        text: "搭木板搭",
                                        strokeColor: "#131325",
                                        stroke: 3.5,
                                        name: "lblSingleJcdlName1",
                                        height: 30,
                                        fontSize: 26,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 115
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 143,
                                    x: 69,
                                    width: 129,
                                    var: "btnSingleJcdlIcon2",
                                    sizeGrid: "32,30,38,25",
                                    name: "btnSingleJcdlIcon2",
                                    height: 156,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 102,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 11,
                                        x: 14,
                                        width: 97,
                                        skin: "ui_common2/jcdl_main_icon_bg.png",
                                        height: 96
                                    },
                                    compId: 144
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 15,
                                        x: 18,
                                        width: 90,
                                        sizeGrid: "15,24,27,17",
                                        name: "imgIcon",
                                        height: 90
                                    },
                                    compId: 103,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 89,
                                            renderType: "mask",
                                            height: 90
                                        },
                                        compId: 104,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 90,
                                                texture: "ui_common2/Icon_mask.png",
                                                height: 90
                                            },
                                            compId: 105
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 45,
                                            width: 95,
                                            var: "imgSingleJcdlIcon2",
                                            name: "imgSingleJcdlIcon2",
                                            height: 95,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 106
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 111,
                                        x: 66,
                                        width: 196,
                                        var: "lblSingleJcdlName2",
                                        text: "搭木板搭",
                                        strokeColor: "#131325",
                                        stroke: 3.5,
                                        name: "lblSingleJcdlName2",
                                        height: 30,
                                        fontSize: 26,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 108
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 17,
                                        x: 102,
                                        skin: "ui_common2/baokuan.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 145
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 1,
                                    x: 0,
                                    anchroType: "TopLeft",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 21
                            }]
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "JcdlBannerBox",
                                name: "JcdlBannerBox",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 37,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 667,
                                    x: 375,
                                    width: 1075,
                                    var: "btnMask",
                                    skin: "ui_common2/zhezhao.png",
                                    height: 1938,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: .8
                                },
                                compId: 48
                            }, {
                                type: "Image",
                                props: {
                                    y: 639,
                                    x: 375,
                                    width: 625,
                                    skin: "ui_common2/jcdl_img_bannerBg0.png",
                                    sizeGrid: "62,45,52,44",
                                    name: "bannerJcdlBg",
                                    height: 812,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 38,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 34,
                                        x: 594,
                                        width: 40,
                                        var: "btnClose",
                                        skin: "ui_common2/jcdl_img_bannerClose.png",
                                        name: "btnClose",
                                        height: 40,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: .01
                                    },
                                    compId: 46
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 175,
                                        x: 17,
                                        width: 590,
                                        height: 196
                                    },
                                    compId: 51,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            width: 590,
                                            renderType: "mask",
                                            height: 196
                                        },
                                        compId: 52,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                width: 590,
                                                texture: "ui_common2/jcdl_img_mask1.png",
                                                height: 196
                                            },
                                            compId: 53
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 98,
                                            x: 295,
                                            width: 590,
                                            var: "bannerJcdl0",
                                            skin: "ui_common2/jcdl_img_bannerBg.png",
                                            name: "bannerJcdl0",
                                            height: 196,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 40
                                    }]
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 387,
                                        x: 17.5,
                                        width: 590,
                                        height: 196
                                    },
                                    compId: 66,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            width: 590,
                                            renderType: "mask",
                                            height: 196
                                        },
                                        compId: 67,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                width: 590,
                                                texture: "ui_common2/jcdl_img_mask1.png",
                                                height: 196
                                            },
                                            compId: 68
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 98,
                                            x: 295,
                                            width: 590,
                                            var: "bannerJcdl1",
                                            skin: "ui_common2/jcdl_img_bannerBg.png",
                                            name: "bannerJcdl1",
                                            height: 196,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 70
                                    }]
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 599,
                                        x: 17.5,
                                        width: 590,
                                        height: 196
                                    },
                                    compId: 72,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            width: 590,
                                            renderType: "mask",
                                            height: 196
                                        },
                                        compId: 73,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                width: 590,
                                                texture: "ui_common2/jcdl_img_mask1.png",
                                                height: 196
                                            },
                                            compId: 74
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 98,
                                            x: 295,
                                            width: 590,
                                            var: "bannerJcdl2",
                                            skin: "ui_common2/jcdl_img_bannerBg.png",
                                            name: "bannerJcdl2",
                                            height: 196,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 77
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 47
                            }]
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                visible: !1,
                                var: "JcdlRightBox",
                                name: "JcdlRightBox",
                                height: 1334
                            },
                            compId: 117,
                            child: [{
                                type: "Box",
                                props: {
                                    y: 372,
                                    x: 750,
                                    width: 129,
                                    var: "RightBox",
                                    height: 276,
                                    anchorX: 1
                                },
                                compId: 160,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 216,
                                        x: 129,
                                        width: 129,
                                        var: "btnRightJcdlIcon0",
                                        sizeGrid: "32,30,38,25",
                                        name: "btnRightJcdlIcon0",
                                        height: 120,
                                        anchorY: .5,
                                        anchorX: 1
                                    },
                                    compId: 118,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 59,
                                            x: 58.5,
                                            visible: !0,
                                            skin: "ui_common2/jcdl_right.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 123
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 15.5,
                                            x: 0,
                                            width: 92,
                                            skin: "ui_common2/jcdl_img_white.png",
                                            sizeGrid: "15,14,22,17",
                                            name: "imgIcon",
                                            height: 89
                                        },
                                        compId: 119,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 91,
                                                renderType: "mask",
                                                height: 91
                                            },
                                            compId: 120,
                                            child: [{
                                                type: "Sprite",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    width: 91,
                                                    texture: "ui_common2/jcdl_img_white.png",
                                                    height: 91
                                                },
                                                compId: 121
                                            }]
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 44,
                                                x: 45.5,
                                                width: 90,
                                                var: "imgRightJcdlIcon0",
                                                skin: "ui_common2/jcdl_img_white.png",
                                                name: "imgRightJcdlIcon0",
                                                height: 90,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 122
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 59,
                                            x: 112,
                                            wordWrap: !0,
                                            width: 24,
                                            var: "lblRightJcdlName0",
                                            valign: "middle",
                                            text: "搭木板大幕",
                                            strokeColor: "#131325",
                                            stroke: 3.5,
                                            name: "lblRightJcdlName0",
                                            fontSize: 20,
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "left"
                                        },
                                        compId: 124
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 60,
                                        x: 129,
                                        width: 129,
                                        var: "btnRightJcdlIcon1",
                                        sizeGrid: "32,30,38,25",
                                        name: "btnRightJcdlIcon1",
                                        height: 120,
                                        anchorY: .5,
                                        anchorX: 1
                                    },
                                    compId: 153,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 59,
                                            x: 58.5,
                                            visible: !0,
                                            skin: "ui_common2/jcdl_right.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 154
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 15.5,
                                            x: 0,
                                            width: 92,
                                            skin: "ui_common2/jcdl_img_white.png",
                                            sizeGrid: "15,14,22,17",
                                            name: "imgIcon",
                                            height: 89
                                        },
                                        compId: 155,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 91,
                                                renderType: "mask",
                                                height: 91
                                            },
                                            compId: 156,
                                            child: [{
                                                type: "Sprite",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    width: 91,
                                                    texture: "ui_common2/jcdl_img_white.png",
                                                    height: 91
                                                },
                                                compId: 157
                                            }]
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 44,
                                                x: 45.5,
                                                width: 90,
                                                var: "imgRightJcdlIcon1",
                                                skin: "ui_common2/jcdl_img_white.png",
                                                name: "imgRightJcdlIcon1",
                                                height: 90,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 158
                                        }]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 59,
                                            x: 113,
                                            wordWrap: !0,
                                            width: 24,
                                            var: "lblRightJcdlName1",
                                            valign: "middle",
                                            text: "途游斗地主",
                                            strokeColor: "#131325",
                                            stroke: 3.5,
                                            overflow: "visible",
                                            name: "lblRightJcdlName1",
                                            fontSize: 20,
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "left"
                                        },
                                        compId: 159
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Right",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 140
                            }]
                        }],
                        animations: [{
                            nodes: [{
                                target: 22,
                                keyframes: {
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 15,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "rotation",
                                        index: 3
                                    }, {
                                        value: -20,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "rotation",
                                        index: 9
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "rotation",
                                        index: 12
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "rotation",
                                        index: 15
                                    }, {
                                        value: 5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "rotation",
                                        index: 18
                                    }, {
                                        value: -5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "rotation",
                                        index: 21
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 22,
                                        key: "rotation",
                                        index: 24
                                    }]
                                }
                            }],
                            name: "ani1",
                            id: 1,
                            frameRate: 30,
                            action: 0
                        }],
                        loadList: ["ui_common2/jcdlBottomBg.png", "ui_common2/jcdl_img_Mask02.png", "ui_common2/jcdl_img_bannerBg0.png", "ui_common2/common_red_point.png", "ui_common2/jcdlBottomTips.png", "ui_common2/jcdl_bg_5.png", "ui_common2/jcdl_chulai.png", "ui_common2/jcdl_main_icon_bg.png", "ui_common2/Icon_mask.png", "ui_common2/remen.png", "ui_common2/baokuan.png", "ui_common2/zhezhao.png", "ui_common2/jcdl_img_bannerClose.png", "ui_common2/jcdl_img_mask1.png", "ui_common2/jcdl_img_bannerBg.png", "ui_common2/jcdl_right.png", "ui_common2/jcdl_img_white.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.JcdTypelViewUI = I;
                var S = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 610,
                                    x: 375,
                                    width: 665,
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "52,26,48,27",
                                    name: "speedupbg",
                                    height: 805,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 16,
                                        x: 651,
                                        var: "btnClose",
                                        skin: "ui_achieve/btn_close.png",
                                        name: "btnClose",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 12
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 46,
                                        x: 140,
                                        width: 385,
                                        var: "headTitle",
                                        skin: "ui_achieve/title_bg.png",
                                        sizeGrid: "24,53,30,53",
                                        name: "headTitle"
                                    },
                                    compId: 36,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 47,
                                            x: 198,
                                            text: "客服会话",
                                            strokeColor: "#ca781f",
                                            stroke: 6,
                                            pivotY: 33,
                                            pivotX: 112,
                                            height: 66,
                                            fontSize: 53,
                                            color: "#ffffff",
                                            bold: !0
                                        },
                                        compId: 37
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 182,
                                        x: 42.5,
                                        width: 580,
                                        var: "point1",
                                        skin: "ui_dialog/grewBg.png",
                                        sizeGrid: "20,30,25,23",
                                        name: "point1",
                                        height: 220
                                    },
                                    compId: 38,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -31.5,
                                            x: -20,
                                            var: "num",
                                            skin: "ui_dialog/circle.png",
                                            name: "num"
                                        },
                                        compId: 39
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -28.5,
                                            x: -2,
                                            text: "1",
                                            font: "font_2"
                                        },
                                        compId: 42
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 36.5,
                                            x: 291.5,
                                            skin: "ui_dialog/Arrow_Official.png"
                                        },
                                        compId: 66
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 151,
                                            x: 290,
                                            var: "btnGain",
                                            skin: "ui_dialog/service1.png",
                                            name: "btnGain",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 46
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 26.5,
                                            x: 122,
                                            text: "先点这里",
                                            name: "blackLabel",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 67
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 241,
                                            x: 276,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow1"
                                        },
                                        compId: 60
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 263,
                                            x: 276,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow2"
                                        },
                                        compId: 61
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 490,
                                        x: 42.5,
                                        width: 580,
                                        skin: "ui_dialog/grewBg.png",
                                        sizeGrid: "20,30,25,23",
                                        name: "point2",
                                        height: 265
                                    },
                                    compId: 47,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -32.5,
                                            x: -20,
                                            skin: "ui_dialog/circle.png",
                                            name: "num"
                                        },
                                        compId: 48
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -28.5,
                                            x: -2,
                                            text: "2",
                                            font: "font_2"
                                        },
                                        compId: 49
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 32.5,
                                            x: 204,
                                            text: "再点击这里",
                                            name: "blackLabel",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 50
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 76,
                                            x: 32.5,
                                            skin: "ui_dialog/program4.png"
                                        },
                                        compId: 52
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 11,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        animations: [{
                            nodes: [{
                                target: 46,
                                keyframes: {
                                    scaleY: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 46,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 46,
                                        key: "scaleY",
                                        index: 15
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 46,
                                        key: "scaleY",
                                        index: 30
                                    }],
                                    scaleX: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 46,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 46,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 46,
                                        key: "scaleX",
                                        index: 30
                                    }],
                                    name: [{
                                        value: "btnGain",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 46,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }],
                            name: "GainBtnAni",
                            id: 1,
                            frameRate: 24,
                            action: 2
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/btn_close.png", "ui_achieve/title_bg.png", "ui_dialog/grewBg.png", "ui_dialog/circle.png", "ui_dialog/Arrow_Official.png", "ui_dialog/service1.png", "ui_dialog/Arrow_down.png", "ui_dialog/program4.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.KeFuDialogUI = S;
                var x = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        x: 0,
                        type: "Scene",
                        selectedBox: 2,
                        selecteID: 61,
                        searchKey: "Scene",
                        props: {
                            zOrder: 1,
                            width: 750,
                            height: 1334
                        },
                        nodeParent: -1,
                        maxID: 86,
                        loadList3D: [],
                        loadList: ["res/Texture/bg.jpg", "ui_loading/loading_img_title.png", "ui_loading/loading_img_yun0.png", "ui_loading/loading_img_yun2.png", "ui_loading/loading_img_yun1.png", "ui_loading/loading_Progress1.png", "ui_loading/loading_Progress2.png", "ui_loading/loading_img_god2.png", "ui_loading/loading_img_cloud.png", "ui_loading/loading_text0.png", "ui_loading/loading_img_god1.png", "ui_loading/loading_img_god3.png"],
                        label: "Scene",
                        isOpen: !0,
                        isDirectory: !0,
                        isAniNode: !0,
                        hasChild: !0,
                        compId: 2,
                        child: [{
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorCenter,AnchorCenter",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            nodeParent: 2,
                            label: "AnchorCenter",
                            isOpen: null,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 15,
                            child: [{
                                type: "Image",
                                searchKey: "Image",
                                props: {
                                    y: 667,
                                    x: 375,
                                    width: 750,
                                    skin: "res/Texture/bg.jpg",
                                    sizeGrid: "0,29,0,29",
                                    height: 1800,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 15,
                                label: "Image",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 60,
                                child: []
                            }, {
                                type: "Image",
                                searchKey: "Image",
                                props: {
                                    y: 279,
                                    x: 375,
                                    skin: "ui_loading/loading_img_title.png",
                                    scaleY: 1.2,
                                    scaleX: 1.2,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 15,
                                label: "Image",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 24,
                                child: []
                            }, {
                                type: "Sprite",
                                searchKey: "Sprite,yun0",
                                props: {
                                    y: 519,
                                    x: 598,
                                    texture: "ui_loading/loading_img_yun0.png",
                                    name: "yun0"
                                },
                                nodeParent: 15,
                                label: "yun0",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 79,
                                child: []
                            }, {
                                type: "Sprite",
                                searchKey: "Sprite,yun1",
                                props: {
                                    y: 251,
                                    x: 874,
                                    texture: "ui_loading/loading_img_yun2.png",
                                    scaleX: -1,
                                    name: "yun1"
                                },
                                nodeParent: 15,
                                label: "yun1",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 80,
                                child: []
                            }, {
                                type: "Sprite",
                                searchKey: "Sprite,yun2",
                                props: {
                                    y: 693,
                                    x: -8,
                                    texture: "ui_loading/loading_img_yun2.png",
                                    name: "yun2"
                                },
                                nodeParent: 15,
                                label: "yun2",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 81,
                                child: []
                            }, {
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Center"
                                },
                                nodeParent: 15,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 16,
                                child: []
                            }, {
                                type: "Sprite",
                                searchKey: "Sprite,yun3",
                                props: {
                                    y: 545.5,
                                    x: -8,
                                    texture: "ui_loading/loading_img_yun1.png",
                                    name: "yun3"
                                },
                                nodeParent: 15,
                                label: "yun3",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 82,
                                child: []
                            }],
                            $HIDDEN: !1
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorBottom",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "AnchorBottom",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorBottom",
                            isOpen: !1,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 61,
                            child: [{
                                x: 30,
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 1,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Bottom"
                                },
                                nodeParent: 61,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 63,
                                child: []
                            }, {
                                x: 30,
                                type: "Sprite",
                                searchKey: "Sprite",
                                props: {
                                    y: 873,
                                    x: 146,
                                    texture: "ui_loading/loading_Progress1.png"
                                },
                                nodeParent: 61,
                                label: "Sprite",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 48,
                                child: []
                            }, {
                                x: 30,
                                type: "Sprite",
                                searchKey: "Sprite,imgProgressMask,imgProgressMask",
                                props: {
                                    y: 873.1000000000006,
                                    x: 146,
                                    var: "imgProgressMask",
                                    name: "imgProgressMask"
                                },
                                nodeParent: 61,
                                label: "imgProgressMask",
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 49,
                                child: [{
                                    type: "Sprite",
                                    searchKey: "Sprite",
                                    props: {
                                        renderType: "mask"
                                    },
                                    nodeParent: 49,
                                    label: "Sprite",
                                    isDirectory: !0,
                                    isAniNode: !0,
                                    hasChild: !0,
                                    compId: 50,
                                    child: [{
                                        type: "Sprite",
                                        searchKey: "Sprite",
                                        props: {
                                            texture: "ui_loading/loading_Progress2.png"
                                        },
                                        nodeParent: 50,
                                        label: "Sprite",
                                        isDirectory: !1,
                                        isAniNode: !0,
                                        hasChild: !1,
                                        compId: 51,
                                        child: []
                                    }]
                                }, {
                                    type: "Image",
                                    searchKey: "Image,progressBar",
                                    props: {
                                        y: 1,
                                        x: 0,
                                        width: 521,
                                        var: "progressBar",
                                        skin: "ui_loading/loading_Progress2.png",
                                        sizeGrid: "0,16,0,35",
                                        height: 30,
                                        anchorX: 1
                                    },
                                    nodeParent: 49,
                                    label: "progressBar",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 65,
                                    child: []
                                }]
                            }, {
                                x: 30,
                                type: "Image",
                                searchKey: "Image,imgPro,imgPro",
                                props: {
                                    y: 835,
                                    x: 102,
                                    var: "imgPro",
                                    skin: "ui_loading/loading_img_god2.png",
                                    name: "imgPro",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 61,
                                label: "imgPro",
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 78,
                                child: [{
                                    type: "Image",
                                    searchKey: "Image,imageCloud,imageGod",
                                    props: {
                                        y: 78,
                                        x: 44,
                                        var: "imageGod",
                                        skin: "ui_loading/loading_img_cloud.png",
                                        name: "imageCloud"
                                    },
                                    nodeParent: 78,
                                    label: "imageCloud",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 85,
                                    child: []
                                }]
                            }, {
                                x: 30,
                                type: "Sprite",
                                searchKey: "Sprite",
                                props: {
                                    y: 1016,
                                    x: 226,
                                    texture: "ui_loading/loading_text0.png",
                                    scaleY: 1,
                                    scaleX: 1
                                },
                                nodeParent: 61,
                                label: "Sprite",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 47,
                                child: []
                            }, {
                                x: 30,
                                type: "Label",
                                searchKey: "Label,lblProgress,lblProgress",
                                props: {
                                    y: 944,
                                    x: 385,
                                    width: 100,
                                    var: "lblProgress",
                                    text: "0%",
                                    scaleY: .8,
                                    scaleX: .8,
                                    name: "lblProgress",
                                    height: 40,
                                    fontSize: 40,
                                    font: "font_1",
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                nodeParent: 61,
                                label: "lblProgress",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 52,
                                child: []
                            }],
                            $HIDDEN: !1
                        }],
                        animations: [{
                            nodes: [{
                                target: 78,
                                keyframes: {
                                    skin: [{
                                        value: "ui_loading/loading_img_god1.png",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 78,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "ui_loading/loading_img_god2.png",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 78,
                                        key: "skin",
                                        index: 2
                                    }, {
                                        value: "ui_loading/loading_img_god3.png",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 78,
                                        key: "skin",
                                        index: 4
                                    }, {
                                        value: "ui_loading/loading_img_god1.png",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 78,
                                        key: "skin",
                                        index: 6
                                    }],
                                    name: [{
                                        value: "imgPro",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 78,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }],
                            name: "godain",
                            id: 1,
                            frameRate: 20,
                            action: 0
                        }]
                    }, t
                }(Laya.Scene);
                e.LoadingViewUI = x;
                var _ = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        x: 0,
                        type: "Scene",
                        selectedBox: 24,
                        selecteID: 26,
                        searchKey: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        nodeParent: -1,
                        maxID: 118,
                        loadList3D: [],
                        loadList: ["ui_real_uncompress/dia_img_bg2.png", "ui_real_uncompress/bottom_img.png", "ui_dialog/lotty_img_Botbg.png", "ui_dialog/lotty_img_bg.png", "ui_dialog/lotty_img_bot.png", "ui_dialog/dia_img_three.png", "ui_dialog/lotty_img_kuang.png", "ui_dialog/lotteryTips_bg.png", "ui_dialog/lottery_text_three.png", "ui_dialog/lottery_txt_bg.png", "ui_com/com_btn_yellow.png", "ui_com/com_text_choujiang.png", "ui_com/com_btn_orange.png", "ui_com/com_icon_video.png", "ui_com/com_icon_share.png", "ui_dialog/dia_text_addToken.png", "ui_common2/jcdl_main_icon_bg.png", "ui_common2/Icon_mask.png", "ui_dialog/lotty_btn_return.png", "ui_dialog/lotty_text_return.png", "ui_com/com_img_databg1.png", "ui_com/com_img_coin.png", "ui_com/com_img_diamond.png", "ui_com/com_img_stamina.png"],
                        label: "Scene",
                        isOpen: !0,
                        isDirectory: !0,
                        isAniNode: !0,
                        hasChild: !0,
                        compId: 2,
                        child: [{
                            x: 15,
                            type: "Sprite",
                            searchKey: "Sprite,bg",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                texture: "ui_real_uncompress/dia_img_bg2.png",
                                name: "bg",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "bg",
                            isDirectory: !1,
                            isAniNode: !0,
                            hasChild: !1,
                            compId: 16,
                            child: []
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorBottom",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                name: "AnchorBottom",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorBottom",
                            isOpen: !0,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 103,
                            child: [{
                                x: 30,
                                type: "List",
                                searchKey: "List",
                                props: {
                                    y: 1274,
                                    x: 0,
                                    width: 750,
                                    spaceX: 0,
                                    repeatY: 1,
                                    repeatX: 10,
                                    height: 60
                                },
                                nodeParent: 103,
                                label: "List",
                                isOpen: !1,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 104,
                                child: [{
                                    type: "Box",
                                    searchKey: "Box",
                                    props: {
                                        y: 0,
                                        x: -20,
                                        width: 78,
                                        renderType: "render",
                                        height: 58
                                    },
                                    nodeParent: 104,
                                    label: "Box",
                                    isDirectory: !0,
                                    isAniNode: !1,
                                    hasChild: !0,
                                    compId: 105,
                                    child: [{
                                        type: "Image",
                                        searchKey: "Image",
                                        props: {
                                            y: 29,
                                            x: 39,
                                            skin: "ui_real_uncompress/bottom_img.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        nodeParent: 105,
                                        label: "Image",
                                        isDirectory: !1,
                                        isAniNode: !1,
                                        hasChild: !1,
                                        compId: 106,
                                        child: []
                                    }]
                                }]
                            }, {
                                x: 30,
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Bottom"
                                },
                                nodeParent: 103,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 107,
                                child: []
                            }],
                            $HIDDEN: !1
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorTop,AnchorTop",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorTop",
                                name: "AnchorTop",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            nodeParent: 2,
                            label: "AnchorTop",
                            isOpen: !0,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 4,
                            child: [{
                                x: 30,
                                type: "Image",
                                searchKey: "Image,BtnStart,BtnStart",
                                props: {
                                    y: 879,
                                    x: 375,
                                    width: 402,
                                    var: "BtnStart",
                                    skin: "ui_com/com_btn_yellow.png",
                                    sizeGrid: "46,55,56,82",
                                    name: "BtnStart",
                                    height: 159,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 4,
                                label: "BtnStart",
                                isOpen: !0,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 24,
                                child: [{
                                    x: 45,
                                    type: "Sprite",
                                    searchKey: "Sprite",
                                    props: {
                                        y: 48,
                                        x: 135,
                                        texture: "ui_com/com_text_choujiang.png"
                                    },
                                    nodeParent: 24,
                                    label: "Sprite",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 26,
                                    child: []
                                }]
                            }, {
                                x: 30,
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Center"
                                },
                                nodeParent: 4,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 5,
                                child: []
                            }],
                            $HIDDEN: !1
                        }, {
                            x: 15,
                            type: "Sprite",
                            searchKey: "Sprite",
                            props: {
                                y: 196,
                                x: 5,
                                width: 740,
                                texture: "ui_loading/loading_img_title.png",
                                height: 360
                            },
                            nodeParent: 2,
                            label: "Sprite",
                            isDirectory: !1,
                            isAniNode: !0,
                            hasChild: !1,
                            compId: 110,
                            child: []
                        }, {
                            x: 15,
                            type: "Image",
                            searchKey: "Image,Stamina",
                            props: {
                                y: 97,
                                x: 84,
                                width: 139,
                                skin: "ui_com/com_img_databg1.png",
                                sizeGrid: "0,28,0,20",
                                scaleY: 1.2,
                                scaleX: 1.2,
                                name: "Stamina",
                                height: 50,
                                anchorY: .5,
                                anchorX: .5
                            },
                            nodeParent: 2,
                            label: "Stamina",
                            isOpen: !1,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 114,
                            child: [{
                                type: "Image",
                                searchKey: "Image",
                                props: {
                                    y: 25,
                                    x: 32,
                                    width: 31,
                                    skin: "ui_com/com_img_stamina.png",
                                    height: 42,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 114,
                                label: "Image",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 115,
                                child: []
                            }, {
                                type: "Label",
                                searchKey: "Label,lblStaminaNum,lblStaminaNum",
                                props: {
                                    y: 25,
                                    x: 53,
                                    width: 86,
                                    var: "lblStaminaNum",
                                    valign: "middle",
                                    text: "99",
                                    scaleY: .7,
                                    scaleX: .7,
                                    name: "lblStaminaNum",
                                    height: 45,
                                    fontSize: 30,
                                    font: "font_1",
                                    color: "#fdfdfd",
                                    anchorY: .5,
                                    anchorX: 0,
                                    align: "center"
                                },
                                nodeParent: 114,
                                label: "lblStaminaNum",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 116,
                                child: []
                            }]
                        }, {
                            x: 15,
                            type: "Button",
                            searchKey: "Button,btn_Sound,btn_Sound",
                            props: {
                                y: 155,
                                x: 33,
                                width: 67,
                                var: "btn_Sound",
                                stateNum: "1",
                                skin: "sound_onn.png",
                                name: "btn_Sound",
                                height: 67
                            },
                            nodeParent: 2,
                            label: "btn_Sound",
                            isDirectory: !1,
                            isAniNode: !0,
                            hasChild: !1,
                            compId: 117,
                            child: []
                        }],
                        animations: [{
                            nodes: [],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }]
                    }, t
                }(Laya.Scene);
                e.MainPageUI = _;
                var C = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: -376,
                                x: -321,
                                width: 1365,
                                texture: "ui_real_uncompress/dia_img_bg2.png",
                                name: "bg",
                                height: 1967
                            },
                            compId: 16
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                name: "AnchorBottom",
                                height: 1334
                            },
                            compId: 103,
                            child: [{
                                type: "List",
                                props: {
                                    y: 1274,
                                    x: 0,
                                    width: 750,
                                    spaceX: 0,
                                    repeatY: 1,
                                    repeatX: 10,
                                    height: 60
                                },
                                compId: 104,
                                child: [{
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: -20,
                                        width: 78,
                                        renderType: "render",
                                        height: 58
                                    },
                                    compId: 105,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 29,
                                            x: 39,
                                            skin: "ui_real_uncompress/bottom_img.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 106
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Bottom",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 107
                            }]
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorTop",
                                name: "AnchorTop",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 270,
                                    x: 747,
                                    skin: "ui_dialog/lotty_img_Botbg.png",
                                    sizeGrid: "0,18,0,20",
                                    scaleX: -1,
                                    name: "listBg"
                                },
                                compId: 109
                            }, {
                                type: "Image",
                                props: {
                                    y: 270,
                                    x: 2,
                                    skin: "ui_dialog/lotty_img_Botbg.png",
                                    sizeGrid: "0,18,0,20",
                                    name: "listBg"
                                },
                                compId: 6
                            }, {
                                type: "List",
                                props: {
                                    y: 320,
                                    x: 0,
                                    width: 750,
                                    var: "listAward",
                                    spaceX: 0,
                                    repeatY: 1,
                                    name: "listAward",
                                    height: 267
                                },
                                compId: 7,
                                child: [{
                                    type: "Box",
                                    props: {
                                        y: 129,
                                        x: 127,
                                        width: 250,
                                        renderType: "render",
                                        height: 259,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 8,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 129,
                                            x: 123,
                                            var: "imgBg",
                                            skin: "ui_dialog/lotty_img_bg.png",
                                            name: "imgBg",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 9,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 218,
                                                x: 105,
                                                visible: !1,
                                                var: "ImgBottom",
                                                skin: "ui_dialog/lotty_img_bot.png",
                                                name: "ImgBottom",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 11
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 109,
                                                x: 107,
                                                var: "imgIcon",
                                                skin: "ui_dialog/dia_img_three.png",
                                                name: "imgIcon",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 12
                                        }, {
                                            type: "Text",
                                            props: {
                                                y: 221,
                                                x: 30,
                                                width: 151,
                                                var: "lblAwardNum",
                                                text: "下次奖励两倍",
                                                name: "lblAwardNum",
                                                height: 27,
                                                fontSize: 23,
                                                color: "#FFE8E2",
                                                bold: !0,
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "center",
                                                runtime: "laya.display.Text"
                                            },
                                            compId: 13
                                        }]
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 575,
                                    x: 374,
                                    skin: "ui_dialog/lotty_img_kuang.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 10
                            }, {
                                type: "Image",
                                props: {
                                    y: 213,
                                    x: 153,
                                    var: "imgNext",
                                    skin: "ui_dialog/lotteryTips_bg.png",
                                    name: "imgNext"
                                },
                                compId: 19,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 31,
                                        x: 222,
                                        width: 263,
                                        var: "imgNextDes",
                                        skin: "ui_dialog/lottery_text_three.png",
                                        name: "imgNextDes",
                                        height: 38,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 20,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#ffffff",
                                            brightness: -100,
                                            alpha: "0",
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 21
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 1009,
                                    x: 374,
                                    width: 302,
                                    var: "LotteryCountTips",
                                    skin: "ui_dialog/lottery_txt_bg.png",
                                    sizeGrid: "16,28,12,25",
                                    name: "LotteryCountTips",
                                    height: 68,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 22,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 30,
                                        x: 151,
                                        width: 247,
                                        var: "lblTimes",
                                        text: "免费转盘次数: 0",
                                        name: "lblTimes",
                                        height: 31,
                                        fontSize: 32,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 23
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 879,
                                    x: 375,
                                    width: 402,
                                    var: "BtnStart",
                                    skin: "ui_com/com_btn_yellow.png",
                                    sizeGrid: "46,55,56,82",
                                    name: "BtnStart",
                                    height: 159,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 24,
                                child: [{
                                    type: "Sprite",
                                    props: {
                                        y: 38,
                                        x: 135,
                                        width: 131,
                                        texture: "ui_com/com_text_choujiang.png",
                                        height: 62
                                    },
                                    compId: 26
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 879,
                                    x: 375,
                                    width: 402,
                                    var: "BtnAddCount",
                                    skin: "ui_com/com_btn_orange.png",
                                    sizeGrid: "49,54,56,44",
                                    name: "BtnAddCount",
                                    height: 159,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 25,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 76,
                                        x: 122.5,
                                        width: 95,
                                        var: "imgVideo",
                                        skin: "com_icon_video1.png",
                                        name: "imgVideo",
                                        height: 84,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 27
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 76,
                                        x: 123.5,
                                        width: 89,
                                        var: "imgShare",
                                        skin: "ui_com/com_icon_share.png",
                                        name: "imgShare",
                                        height: 89,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 28
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 74,
                                        x: 250,
                                        width: 130,
                                        var: "lblLotteryHint",
                                        text: "抽奖",
                                        styleSkin: "ui_dialog/dia_text_addToken.png",
                                        scaleY: 1.4,
                                        scaleX: 1.4,
                                        name: "lblLotteryHint",
                                        height: 60,
                                        font: "font_2",
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 29
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }, {
                                type: "Image",
                                props: {
                                    y: 741,
                                    x: 73,
                                    width: 129,
                                    var: "btnRollJcdlIcon1",
                                    sizeGrid: "32,30,38,25",
                                    name: "btnRollJcdlIcon1",
                                    height: 156,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 47,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 10,
                                        x: 15,
                                        width: 96,
                                        skin: "ui_common2/jcdl_main_icon_bg.png",
                                        height: 96
                                    },
                                    compId: 48
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 13,
                                        x: 18,
                                        width: 90,
                                        sizeGrid: "15,24,27,17",
                                        name: "imgIcon",
                                        height: 90
                                    },
                                    compId: 49,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 90,
                                            renderType: "mask",
                                            height: 90
                                        },
                                        compId: 50,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 90,
                                                texture: "ui_common2/Icon_mask.png",
                                                height: 90
                                            },
                                            compId: 51
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 44,
                                            width: 95,
                                            var: "imgRollJcdlIcon1",
                                            name: "imgRollJcdlIcon1",
                                            height: 95,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 52
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 741,
                                    x: 676,
                                    width: 129,
                                    var: "btnRollJcdlIcon2",
                                    sizeGrid: "32,30,38,25",
                                    name: "btnRollJcdlIcon2",
                                    height: 156,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 63,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 10,
                                        x: 15,
                                        width: 96,
                                        skin: "ui_common2/jcdl_main_icon_bg.png",
                                        height: 96
                                    },
                                    compId: 64
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 13,
                                        x: 18,
                                        width: 90,
                                        sizeGrid: "15,24,27,17",
                                        name: "imgIcon",
                                        height: 90
                                    },
                                    compId: 65,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 90,
                                            renderType: "mask",
                                            height: 90
                                        },
                                        compId: 66,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 90,
                                                texture: "ui_common2/Icon_mask.png",
                                                height: 90
                                            },
                                            compId: 67
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 44,
                                            width: 95,
                                            var: "imgRollJcdlIcon2",
                                            name: "imgRollJcdlIcon2",
                                            height: 95,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 68
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 1053,
                                    x: 73,
                                    width: 129,
                                    var: "btnRollJcdlIcon3",
                                    sizeGrid: "32,30,38,25",
                                    name: "btnRollJcdlIcon3",
                                    height: 156,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 71,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 11,
                                        x: 16,
                                        width: 96,
                                        skin: "ui_common2/jcdl_main_icon_bg.png",
                                        height: 96
                                    },
                                    compId: 72
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 14,
                                        x: 19,
                                        width: 90,
                                        sizeGrid: "15,24,27,17",
                                        name: "imgIcon",
                                        height: 90
                                    },
                                    compId: 73,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 90,
                                            renderType: "mask",
                                            height: 90
                                        },
                                        compId: 74,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 90,
                                                texture: "ui_common2/Icon_mask.png",
                                                height: 90
                                            },
                                            compId: 75
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 44,
                                            width: 95,
                                            var: "imgRollJcdlIcon3",
                                            name: "imgRollJcdlIcon3",
                                            height: 95,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 76
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 897,
                                    x: 73,
                                    width: 129,
                                    var: "btnRollJcdlIcon4",
                                    sizeGrid: "32,30,38,25",
                                    name: "btnRollJcdlIcon4",
                                    height: 156,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 79,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 10,
                                        x: 15,
                                        width: 96,
                                        skin: "ui_common2/jcdl_main_icon_bg.png",
                                        height: 96
                                    },
                                    compId: 80
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 13,
                                        x: 18,
                                        width: 90,
                                        sizeGrid: "15,24,27,17",
                                        name: "imgIcon",
                                        height: 90
                                    },
                                    compId: 81,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 90,
                                            renderType: "mask",
                                            height: 90
                                        },
                                        compId: 82,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 90,
                                                texture: "ui_common2/Icon_mask.png",
                                                height: 90
                                            },
                                            compId: 83
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 44,
                                            width: 95,
                                            var: "imgRollJcdlIcon4",
                                            name: "imgRollJcdlIcon4",
                                            height: 95,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 84
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 897,
                                    x: 676,
                                    width: 129,
                                    var: "btnRollJcdlIcon5",
                                    sizeGrid: "32,30,38,25",
                                    name: "btnRollJcdlIcon5",
                                    height: 156,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 87,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 10,
                                        x: 15,
                                        width: 96,
                                        skin: "ui_common2/jcdl_main_icon_bg.png",
                                        height: 96
                                    },
                                    compId: 88
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 13,
                                        x: 18,
                                        width: 90,
                                        sizeGrid: "15,24,27,17",
                                        name: "imgIcon",
                                        height: 90
                                    },
                                    compId: 89,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 90,
                                            renderType: "mask",
                                            height: 90
                                        },
                                        compId: 90,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 90,
                                                texture: "ui_common2/Icon_mask.png",
                                                height: 90
                                            },
                                            compId: 91
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 44,
                                            width: 95,
                                            var: "imgRollJcdlIcon5",
                                            name: "imgRollJcdlIcon5",
                                            height: 95,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 92
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 1053,
                                    x: 676,
                                    width: 129,
                                    var: "btnRollJcdlIcon6",
                                    sizeGrid: "32,30,38,25",
                                    name: "btnRollJcdlIcon6",
                                    height: 156,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 95,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 10,
                                        x: 15,
                                        width: 96,
                                        skin: "ui_common2/jcdl_main_icon_bg.png",
                                        height: 96
                                    },
                                    compId: 96
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 13,
                                        x: 18,
                                        width: 90,
                                        sizeGrid: "15,24,27,17",
                                        name: "imgIcon",
                                        height: 90
                                    },
                                    compId: 97,
                                    child: [{
                                        type: "Sprite",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 90,
                                            renderType: "mask",
                                            height: 90
                                        },
                                        compId: 98,
                                        child: [{
                                            type: "Sprite",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 90,
                                                texture: "ui_common2/Icon_mask.png",
                                                height: 90
                                            },
                                            compId: 99
                                        }]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 45,
                                            x: 44,
                                            width: 95,
                                            var: "imgRollJcdlIcon6",
                                            name: "imgRollJcdlIcon6",
                                            height: 95,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 100
                                    }]
                                }]
                            }]
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "AnchorTopLeft",
                                name: "AnchorTopLeft",
                                height: 1334
                            },
                            compId: 30,
                            child: [{
                                type: "Sprite",
                                props: {
                                    y: 145,
                                    x: 20,
                                    var: "btnReturn",
                                    texture: "ui_dialog/lotty_btn_return.png",
                                    name: "btnReturn"
                                },
                                compId: 14,
                                child: [{
                                    type: "Sprite",
                                    props: {
                                        y: 19.75,
                                        x: 78,
                                        texture: "ui_dialog/lotty_text_return.png"
                                    },
                                    compId: 15
                                }]
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 755,
                                    var: "boxTopLeft",
                                    name: "boxTopLeft",
                                    height: 80
                                },
                                compId: 31,
                                child: [{
                                    type: "Box",
                                    props: {
                                        y: 19,
                                        x: 15,
                                        width: 330,
                                        name: "Gold",
                                        height: 52
                                    },
                                    compId: 32,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: -1,
                                            width: 330,
                                            skin: "ui_com/com_img_databg1.png",
                                            sizeGrid: "0,39,0,43",
                                            height: 52
                                        },
                                        compId: 33,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 26,
                                                x: 30,
                                                width: 49,
                                                skin: "ui_com/com_img_coin.png",
                                                height: 50,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 34
                                        }]
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 20,
                                        x: 356,
                                        width: 174,
                                        var: "Diamond",
                                        skin: "ui_com/com_img_databg1.png",
                                        sizeGrid: "0,28,0,20",
                                        name: "Diamond",
                                        height: 50
                                    },
                                    compId: 35,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 26,
                                            x: 32,
                                            width: 44,
                                            skin: "ui_com/com_img_diamond.png",
                                            height: 44,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 36
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 15,
                                        width: 119,
                                        var: "Stamina",
                                        skin: "ui_com/com_img_databg1.png",
                                        sizeGrid: "0,28,0,20",
                                        name: "Stamina",
                                        height: 50
                                    },
                                    compId: 37,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 26,
                                            x: 32,
                                            width: 31,
                                            skin: "ui_com/com_img_stamina.png",
                                            height: 42,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 38
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 43,
                                        x: 412,
                                        width: 155,
                                        var: "lblDiamondNum",
                                        valign: "middle",
                                        text: "888",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblDiamondNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "font_1",
                                        color: "#fdfdfd",
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    compId: 39
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 103,
                                        x: 61,
                                        width: 86,
                                        var: "lblStaminaNum",
                                        valign: "middle",
                                        text: "99",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblStaminaNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "font_1",
                                        color: "#fdfdfd",
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    compId: 40
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 42,
                                        x: 99,
                                        width: 160,
                                        var: "lblGoldNum",
                                        valign: "middle",
                                        text: "26.5M",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblGoldNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "font_1",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    compId: 41
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 43,
                                        x: 226,
                                        width: 127,
                                        visible: !1,
                                        var: "lblAddGold",
                                        valign: "middle",
                                        text: "+8.1k/s",
                                        scaleY: .5,
                                        scaleX: .5,
                                        name: "lblAddGold",
                                        height: 44,
                                        fontSize: 23,
                                        font: "font_1",
                                        color: "#ffffff",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    compId: 42,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#ffffff",
                                            brightness: -100,
                                            alpha: 0,
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 43
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 43,
                                        x: 226,
                                        width: 127,
                                        var: "lblAddGold2",
                                        valign: "middle",
                                        text: "+8.1k/s",
                                        scaleY: .5,
                                        scaleX: .5,
                                        name: "lblAddGold2",
                                        height: 44,
                                        fontSize: 23,
                                        font: "font_1",
                                        color: "#ffffff",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    compId: 44,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#ffff00",
                                            brightness: -100,
                                            alpha: 0,
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 45
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    anchroType: "Top",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 46
                            }]
                        }],
                        loadList: ["ui_real_uncompress/dia_img_bg2.png", "ui_real_uncompress/bottom_img.png", "ui_dialog/lotty_img_Botbg.png", "ui_dialog/lotty_img_bg.png", "ui_dialog/lotty_img_bot.png", "ui_dialog/dia_img_three.png", "ui_dialog/lotty_img_kuang.png", "ui_dialog/lotteryTips_bg.png", "ui_dialog/lottery_text_three.png", "ui_dialog/lottery_txt_bg.png", "ui_com/com_btn_yellow.png", "ui_com/com_text_choujiang.png", "ui_com/com_btn_orange.png", "com_icon_video1.png", "ui_com/com_icon_share.png", "ui_dialog/dia_text_addToken.png", "ui_common2/jcdl_main_icon_bg.png", "ui_common2/Icon_mask.png", "ui_dialog/lotty_btn_return.png", "ui_dialog/lotty_text_return.png", "ui_com/com_img_databg1.png", "ui_com/com_img_coin.png", "ui_com/com_img_diamond.png", "ui_com/com_img_stamina.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.NewLottyDialogUI = C;
                var T = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        x: 0,
                        type: "Scene",
                        selectedBox: 4,
                        selecteID: 34,
                        searchKey: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        nodeParent: -1,
                        maxID: 164,
                        loadList: ["ui_real_uncompress/dia_img_bg2.png", "ui_com/com_img_databg1.png", "ui_com/com_img_coin.png", "ui_com/com_img_diamond.png", "ui_com/com_img_stamina.png", "ui_com/result_img_titlebg.png", "ui_dialog/stage_bg.png", "res/Texture/share_friend.png", "ui_car/1011.png", "ui_dialog/dia_img_coin.png", "ui_common2/jcdl_main_icon_bg.png", "ui_common2/Icon_mask.png", "ui_dialog/lbl_return.png", "ui_com/com_btn_yellow.png", "ui_real_uncompress/bottom_img.png"],
                        label: "Scene",
                        isOpen: !0,
                        isDirectory: !0,
                        isAniNode: !0,
                        hasChild: !0,
                        compId: 2,
                        child: [{
                            x: 15,
                            type: "Sprite",
                            searchKey: "Sprite,bg",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                texture: "ui_real_uncompress/dia_img_bg2.png",
                                name: "bg",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "bg",
                            isDirectory: !1,
                            isAniNode: !0,
                            hasChild: !1,
                            compId: 3,
                            child: []
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorTop,AnchorTop",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "AnchorTop",
                                name: "AnchorTop",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorTop",
                            isOpen: !0,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 4,
                            child: [{
                                x: 30,
                                type: "Box",
                                searchKey: "Box,boxWin,boxWin",
                                props: {
                                    y: 208.75,
                                    x: 375,
                                    var: "boxWin",
                                    name: "boxWin",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 4,
                                label: "boxWin",
                                isOpen: !1,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 28,
                                child: [{
                                    type: "Sprite",
                                    searchKey: "Sprite",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        texture: "ui_com/result_img_titlebg.png"
                                    },
                                    nodeParent: 28,
                                    label: "Sprite",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 26,
                                    child: []
                                }, {
                                    type: "Label",
                                    searchKey: "Label,lblTitleName,lblTitleName",
                                    props: {
                                        y: 21,
                                        x: 168,
                                        width: 192,
                                        var: "lblTitleName",
                                        valign: "middle",
                                        text: "Win",
                                        name: "lblTitleName",
                                        height: 60,
                                        fontSize: 40,
                                        font: "Microsoft YaHei",
                                        color: "#ffffff",
                                        bold: !0,
                                        align: "center"
                                    },
                                    nodeParent: 28,
                                    label: "lblTitleName",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 29,
                                    child: []
                                }]
                            }, {
                                x: 30,
                                type: "Box",
                                searchKey: "Box,boxLose,boxLose",
                                props: {
                                    y: 181,
                                    x: 361,
                                    var: "boxLose",
                                    name: "boxLose",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 4,
                                label: "boxLose",
                                isOpen: !0,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 30,
                                child: [{
                                    x: 45,
                                    type: "Label",
                                    searchKey: "Label,lblTitleName",
                                    props: {
                                        y: 37.5,
                                        x: 37,
                                        width: 192,
                                        valign: "middle",
                                        text: "Lose",
                                        scaleY: 1.5,
                                        scaleX: 1.5,
                                        name: "lblTitleName",
                                        height: 60,
                                        fontSize: 40,
                                        font: "Microsoft YaHei",
                                        color: "#ffffff",
                                        bold: !0,
                                        align: "center"
                                    },
                                    nodeParent: 30,
                                    label: "lblTitleName",
                                    isOpen: !0,
                                    isDirectory: !0,
                                    isAniNode: !0,
                                    hasChild: !0,
                                    compId: 32,
                                    child: [{
                                        x: 60,
                                        type: "Script",
                                        source: "src/laya.effect.ColorFilterSetter",
                                        searchKey: "Script,lostScript(lost)",
                                        props: {
                                            saturation: -100,
                                            runtime: "laya.effect.ColorFilterSetter",
                                            hue: -180,
                                            contrast: -100,
                                            color: "#000000",
                                            brightness: -100,
                                            alpha: "0"
                                        },
                                        nodeParent: 32,
                                        label: "lostScript(lost)",
                                        isDirectory: !1,
                                        isAniNode: !0,
                                        hasChild: !1,
                                        compId: 33,
                                        child: []
                                    }]
                                }],
                                $HIDDEN: !1
                            }, {
                                x: 30,
                                type: "Label",
                                searchKey: "Label,lblPassNum,lblPassNum",
                                props: {
                                    y: 97,
                                    x: 375,
                                    width: 381,
                                    visible: !0,
                                    var: "lblPassNum",
                                    valign: "middle",
                                    text: "Level 16",
                                    name: "lblPassNum",
                                    height: 61,
                                    fontSize: 40,
                                    font: "Microsoft YaHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                nodeParent: 4,
                                label: "lblPassNum",
                                isOpen: null,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 34,
                                child: [{
                                    type: "Script",
                                    source: "src/laya.effect.ColorFilterSetter",
                                    searchKey: "Script,lostScript(lost)",
                                    props: {
                                        saturation: -100,
                                        runtime: "laya.effect.ColorFilterSetter",
                                        hue: -180,
                                        contrast: -100,
                                        color: "#000000",
                                        brightness: -100,
                                        alpha: "0"
                                    },
                                    nodeParent: 34,
                                    label: "lostScript(lost)",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 35,
                                    child: []
                                }]
                            }, {
                                x: 30,
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Top"
                                },
                                nodeParent: 4,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 12,
                                child: []
                            }, {
                                x: 30,
                                type: "Image",
                                searchKey: "Image,Stamina",
                                props: {
                                    y: 97,
                                    x: 84,
                                    width: 139,
                                    skin: "ui_com/com_img_databg1.png",
                                    sizeGrid: "0,28,0,20",
                                    scaleY: 1.2,
                                    scaleX: 1.2,
                                    name: "Stamina",
                                    height: 50,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 4,
                                label: "Stamina",
                                isOpen: !1,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 42,
                                child: [{
                                    type: "Image",
                                    searchKey: "Image",
                                    props: {
                                        y: 25,
                                        x: 32,
                                        width: 31,
                                        skin: "ui_com/com_img_stamina.png",
                                        height: 42,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    nodeParent: 42,
                                    label: "Image",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 43,
                                    child: []
                                }, {
                                    type: "Label",
                                    searchKey: "Label,lblStaminaNum,lblStaminaNum",
                                    props: {
                                        y: 25,
                                        x: 53,
                                        width: 86,
                                        var: "lblStaminaNum",
                                        valign: "middle",
                                        text: "99",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblStaminaNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "font_1",
                                        color: "#fdfdfd",
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    nodeParent: 42,
                                    label: "lblStaminaNum",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 45,
                                    child: []
                                }]
                            }],
                            $HIDDEN: !1
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorCenter,AnchorCenter",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorCenter",
                            isOpen: !1,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 5,
                            child: [{
                                type: "Image",
                                searchKey: "Image,imgRankBg",
                                props: {
                                    y: 521,
                                    x: 382,
                                    width: 486,
                                    skin: "ui_dialog/stage_bg.png",
                                    sizeGrid: "13,21,19,23",
                                    name: "imgRankBg",
                                    height: 526,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 5,
                                label: "imgRankBg",
                                isOpen: !0,
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 150,
                                child: []
                            }, {
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Center"
                                },
                                nodeParent: 5,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 14,
                                child: []
                            }],
                            $HIDDEN: !1
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorBottom,AnchorBottom",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "AnchorBottom",
                                name: "AnchorBottom",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorBottom",
                            isOpen: !1,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 6,
                            child: [{
                                type: "Image",
                                searchKey: "Image,btnReturn,btnReturn",
                                props: {
                                    y: 320,
                                    x: 73,
                                    width: 90,
                                    var: "btnReturn",
                                    underlineColor: "#AAA299",
                                    underline: !0,
                                    text: "返回首页",
                                    skin: "home.png",
                                    name: "btnReturn",
                                    height: 90,
                                    fontSize: 45,
                                    color: "#AAA299",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 6,
                                label: "btnReturn",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 22,
                                child: []
                            }, {
                                type: "Image",
                                searchKey: "Image,btnContinue,btnContinue",
                                props: {
                                    y: 903,
                                    x: 375,
                                    width: 406,
                                    var: "btnContinue",
                                    skin: "ui_com/com_btn_yellow.png",
                                    sizeGrid: "47,77,57,83",
                                    name: "btnContinue",
                                    height: 130,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 6,
                                label: "btnContinue",
                                isOpen: !0,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 15,
                                child: [{
                                    type: "Label",
                                    searchKey: "Label,lblAwardNum,lblAwardNum",
                                    props: {
                                        y: 59,
                                        x: 72,
                                        var: "lblAwardNum",
                                        valign: "middle",
                                        text: "Next",
                                        scaleY: 1.1,
                                        scaleX: 1.1,
                                        name: "lblAwardNum",
                                        fontSize: 40,
                                        font: "Microsoft YaHei",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    nodeParent: 15,
                                    label: "lblAwardNum",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 51,
                                    child: []
                                }, {
                                    type: "Image",
                                    searchKey: "Image,imgStami,imgStami",
                                    props: {
                                        y: 59,
                                        x: 275,
                                        var: "imgStami",
                                        skin: "ui_com/com_img_stamina.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        name: "imgStami",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    nodeParent: 15,
                                    label: "imgStami",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 17,
                                    child: []
                                }, {
                                    type: "Label",
                                    searchKey: "Label,lblx,lblx",
                                    props: {
                                        y: 59,
                                        x: 302,
                                        var: "lblx",
                                        valign: "middle",
                                        text: "-",
                                        scaleY: 1.1,
                                        scaleX: 1.1,
                                        name: "lblx",
                                        fontSize: 40,
                                        font: "Microsoft YaHei",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    nodeParent: 15,
                                    label: "lblx",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 62,
                                    child: []
                                }, {
                                    type: "Label",
                                    searchKey: "Label,lblStamiCount,lblStamiCount",
                                    props: {
                                        y: 59,
                                        x: 329,
                                        width: 25,
                                        var: "lblStamiCount",
                                        valign: "middle",
                                        text: "1",
                                        scaleY: 1.1,
                                        scaleX: 1.1,
                                        name: "lblStamiCount",
                                        height: 33,
                                        fontSize: 40,
                                        font: "Microsoft YaHei",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    nodeParent: 15,
                                    label: "lblStamiCount",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 64,
                                    child: []
                                }]
                            }, {
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Bottom"
                                },
                                nodeParent: 6,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 20,
                                child: []
                            }, {
                                type: "List",
                                searchKey: "List",
                                props: {
                                    y: 1274,
                                    x: 0,
                                    width: 750,
                                    spaceX: 0,
                                    repeatY: 1,
                                    repeatX: 10,
                                    height: 60
                                },
                                nodeParent: 6,
                                label: "List",
                                isOpen: null,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 139,
                                child: [{
                                    type: "Box",
                                    searchKey: "Box",
                                    props: {
                                        y: 0,
                                        x: -20,
                                        width: 78,
                                        renderType: "render",
                                        height: 58
                                    },
                                    nodeParent: 139,
                                    label: "Box",
                                    isDirectory: !0,
                                    isAniNode: !1,
                                    hasChild: !0,
                                    compId: 140,
                                    child: [{
                                        type: "Image",
                                        searchKey: "Image",
                                        props: {
                                            y: 29,
                                            x: 39,
                                            skin: "ui_real_uncompress/bottom_img.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        nodeParent: 140,
                                        label: "Image",
                                        isDirectory: !1,
                                        isAniNode: !1,
                                        hasChild: !1,
                                        compId: 146,
                                        child: []
                                    }]
                                }]
                            }],
                            $HIDDEN: !1
                        }],
                        animations: [{
                            nodes: [],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }]
                    }, t
                }(Laya.Scene);
                e.NewResultViewUI = T;
                var b = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 558,
                                x: 375,
                                width: 2617,
                                skin: "ui_real_uncompress/com_bg.png",
                                name: "Mask",
                                height: 3863,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 35
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 192,
                                    x: 47,
                                    width: 653,
                                    skin: "ui_com/com_img_bg.png",
                                    sizeGrid: "15,15,15,15",
                                    name: "Bg",
                                    height: 884
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 41,
                                        x: 163,
                                        width: 327,
                                        var: "btnChoiceLevel",
                                        skin: "ui_dialog/rank_text_coin0.png",
                                        sizeGrid: "30,30,30,30",
                                        name: "btnChoiceLevel",
                                        height: 82,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 50,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 11,
                                            x: 71,
                                            width: 163,
                                            text: "挑战关卡",
                                            height: 53,
                                            fontSize: 40,
                                            font: "font_2",
                                            color: "#ffffff",
                                            bold: !0
                                        },
                                        compId: 61
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 41,
                                        x: 490,
                                        width: 327,
                                        var: "btnChoiceCoin",
                                        skin: "ui_dialog/rank_text_coin0.png",
                                        sizeGrid: "30,30,30,30",
                                        scaleX: -1,
                                        name: "btnChoiceCoin",
                                        height: 82,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 52,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 9,
                                            x: 257,
                                            width: 163,
                                            text: "角色等级",
                                            scaleX: -1,
                                            height: 53,
                                            fontSize: 40,
                                            font: "font_2",
                                            color: "#ffffff",
                                            bold: !0
                                        },
                                        compId: 60
                                    }]
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: -82.5,
                                        x: 579,
                                        width: 55,
                                        var: "btnClose",
                                        texture: "ui_com/com_btn_close.png",
                                        name: "btnClose",
                                        height: 55
                                    },
                                    compId: 54
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -53,
                                        x: 326,
                                        width: 163,
                                        skin: "ui_dialog/rank_text_paihangbang.png",
                                        height: 63,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 56
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 867,
                                        x: 326.5,
                                        width: 156,
                                        var: "lblVersion",
                                        text: "123456",
                                        height: 24,
                                        fontSize: 20,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 59
                                }]
                            }, {
                                type: "WXOpenDataViewer",
                                props: {
                                    y: 279,
                                    x: 49,
                                    width: 652,
                                    var: "sprOpenDataView",
                                    iconSign: "wx",
                                    height: 766,
                                    runtime: "laya.ui.WXOpenDataViewer"
                                },
                                compId: 33
                            }, {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 4
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_com/com_img_bg.png", "ui_dialog/rank_text_coin0.png", "ui_com/com_btn_close.png", "ui_dialog/rank_text_paihangbang.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.RankDialogUI = b;
                var k = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        x: 0,
                        type: "Scene",
                        selectedBox: 2,
                        selecteID: 22,
                        searchKey: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        nodeParent: -1,
                        maxID: 38,
                        loadList3D: [],
                        loadList: ["ui_real_uncompress/dia_img_bg2.png", "ui_com/com_img_databg1.png", "ui_com/com_img_stamina.png", "ui_dialog/dia_text_time.png", "ui_dialog/dia_img_time.png", "ui_com/com_btn_yellow.png", "ui_com/com_icon_video.png", "ui_com/com_icon_share.png", "ui_com/com_btn_green.png", "ui_dialog/lotty_btn_return.png", "ui_dialog/dia_img_return.png", "ui_real_uncompress/bottom_img.png"],
                        label: "Scene",
                        isOpen: !0,
                        isDirectory: !0,
                        isAniNode: !0,
                        hasChild: !0,
                        compId: 2,
                        child: [{
                            x: 15,
                            type: "Sprite",
                            searchKey: "Sprite,bg",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                texture: "ui_real_uncompress/dia_img_bg2.png",
                                name: "bg",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "bg",
                            isDirectory: !1,
                            isAniNode: !0,
                            hasChild: !1,
                            compId: 10,
                            child: []
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorTopLeft,AnchorTopLeft",
                            props: {
                                width: 750,
                                var: "AnchorTopLeft",
                                name: "AnchorTopLeft",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorTopLeft",
                            isOpen: !0,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 4,
                            child: [{
                                x: 30,
                                type: "Image",
                                searchKey: "Image,Stamina,Stamina",
                                props: {
                                    y: 84,
                                    x: 97,
                                    width: 139,
                                    var: "Stamina",
                                    skin: "ui_com/com_img_databg1.png",
                                    sizeGrid: "0,28,0,20",
                                    scaleY: 1.2,
                                    scaleX: 1.2,
                                    name: "Stamina",
                                    height: 50,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 4,
                                label: "Stamina",
                                isOpen: !0,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 35,
                                child: [{
                                    x: 45,
                                    type: "Image",
                                    searchKey: "Image",
                                    props: {
                                        y: 25,
                                        x: 32,
                                        width: 31,
                                        skin: "ui_com/com_img_stamina.png",
                                        height: 42,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    nodeParent: 35,
                                    label: "Image",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 36,
                                    child: []
                                }, {
                                    x: 45,
                                    type: "Label",
                                    searchKey: "Label,lblStaminaNum,lblStaminaNum",
                                    props: {
                                        y: 25,
                                        x: 53,
                                        width: 86,
                                        var: "lblStaminaNum",
                                        valign: "middle",
                                        text: "99",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblStaminaNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "Microsoft YaHei",
                                        color: "#fdfdfd",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    nodeParent: 35,
                                    label: "lblStaminaNum",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 37,
                                    child: []
                                }, {
                                    x: 45,
                                    type: "Label",
                                    searchKey: "Label,lblStamTime,lblStamTime",
                                    props: {
                                        y: 25,
                                        x: 176,
                                        width: 66,
                                        var: "lblStamTime",
                                        valign: "middle",
                                        text: "12:12",
                                        name: "lblStamTime",
                                        height: 23,
                                        fontSize: 20,
                                        font: "Microsoft YaHei",
                                        color: "#000000",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    nodeParent: 35,
                                    label: "lblStamTime",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 13,
                                    child: []
                                }]
                            }, {
                                x: 30,
                                type: "Sprite",
                                searchKey: "Sprite",
                                props: {
                                    y: 184,
                                    x: 195,
                                    texture: "ui_dialog/dia_text_time.png"
                                },
                                nodeParent: 4,
                                label: "Sprite",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 16,
                                child: []
                            }, {
                                x: 30,
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "TopLeft"
                                },
                                nodeParent: 4,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 6,
                                child: []
                            }],
                            $HIDDEN: !1
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorCenter,AnchorCenter",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorCenter",
                            isOpen: !0,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 5,
                            child: [{
                                x: 30,
                                type: "Sprite",
                                searchKey: "Sprite",
                                props: {
                                    y: 331,
                                    x: 114,
                                    texture: "ui_dialog/dia_img_time.png"
                                },
                                nodeParent: 5,
                                label: "Sprite",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 15,
                                child: []
                            }, {
                                x: 30,
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Center"
                                },
                                nodeParent: 5,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 7,
                                child: []
                            }],
                            $HIDDEN: !1
                        }, {
                            x: 15,
                            type: "Box",
                            searchKey: "Box,AnchorBottom,AnchorBottom",
                            props: {
                                y: 0,
                                x: 0,
                                width: 750,
                                var: "AnchorBottom",
                                name: "AnchorBottom",
                                height: 1334
                            },
                            nodeParent: 2,
                            label: "AnchorBottom",
                            isOpen: !0,
                            isDirectory: !0,
                            isAniNode: !0,
                            hasChild: !0,
                            compId: 8,
                            child: [{
                                x: 30,
                                type: "Image",
                                searchKey: "Image,btnLengthenTime,btnLengthenTime",
                                props: {
                                    y: 903,
                                    x: 375,
                                    width: 406,
                                    var: "btnLengthenTime",
                                    skin: "ui_com/com_btn_yellow.png",
                                    sizeGrid: "47,77,51,83",
                                    name: "btnLengthenTime",
                                    height: 130,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 8,
                                label: "btnLengthenTime",
                                isOpen: !0,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 17,
                                child: [{
                                    x: 45,
                                    type: "Image",
                                    searchKey: "Image,imgVideo,imgVideo",
                                    props: {
                                        y: 60,
                                        x: 69,
                                        width: 60,
                                        var: "imgVideo",
                                        skin: "com_icon_video1.png",
                                        name: "imgVideo",
                                        height: 54,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    nodeParent: 17,
                                    label: "imgVideo",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 18,
                                    child: []
                                }, {
                                    x: 45,
                                    type: "Label",
                                    searchKey: "Label,lblAddTime,lblAddTime",
                                    props: {
                                        y: 65,
                                        x: 253,
                                        width: 200,
                                        var: "lblAddTime",
                                        valign: "middle",
                                        text: "Get 60s",
                                        name: "lblAddTime",
                                        height: 59,
                                        fontSize: 40,
                                        font: "Microsoft YaHei",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    nodeParent: 17,
                                    label: "lblAddTime",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 20,
                                    child: []
                                }],
                                $HIDDEN: !1
                            }, {
                                x: 30,
                                type: "Image",
                                searchKey: "Image,btnRestartGame,btnRestartGame",
                                props: {
                                    y: 1033,
                                    x: 375,
                                    width: 406,
                                    var: "btnRestartGame",
                                    skin: "ui_com/com_btn_green.png",
                                    sizeGrid: "47,77,51,83",
                                    name: "btnRestartGame",
                                    height: 100,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                nodeParent: 8,
                                label: "btnRestartGame",
                                isOpen: !0,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 22,
                                child: [{
                                    x: 45,
                                    type: "Label",
                                    searchKey: "Label,lblRestart,lblRestart",
                                    props: {
                                        y: 50,
                                        x: 136,
                                        width: 110,
                                        var: "lblRestart",
                                        text: "Retry",
                                        name: "lblRestart",
                                        height: 47,
                                        fontSize: 40,
                                        font: "Microsoft YaHei",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "left"
                                    },
                                    nodeParent: 22,
                                    label: "lblRestart",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 25,
                                    child: []
                                }, {
                                    x: 45,
                                    type: "Image",
                                    searchKey: "Image,stami,stami",
                                    props: {
                                        y: 46,
                                        x: 254,
                                        var: "stami",
                                        skin: "ui_com/com_img_stamina.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        name: "stami",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    nodeParent: 22,
                                    label: "stami",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 26,
                                    child: []
                                }, {
                                    x: 45,
                                    type: "Label",
                                    searchKey: "Label,lblx,lblx",
                                    props: {
                                        y: 50,
                                        x: 291,
                                        width: 17,
                                        var: "lblx",
                                        text: "-",
                                        scaleY: 1.1,
                                        scaleX: 1.1,
                                        name: "lblx",
                                        height: 45,
                                        fontSize: 40,
                                        font: "Microsoft YaHei",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    nodeParent: 22,
                                    label: "lblx",
                                    isOpen: !1,
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 31,
                                    child: []
                                }, {
                                    x: 45,
                                    type: "Label",
                                    searchKey: "Label,lblStamiCount,lblStamiCount",
                                    props: {
                                        y: 46,
                                        x: 317,
                                        width: 25,
                                        var: "lblStamiCount",
                                        text: "1",
                                        scaleY: 1.1,
                                        scaleX: 1.1,
                                        name: "lblStamiCount",
                                        height: 37,
                                        fontSize: 40,
                                        font: "Microsoft YaHei",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    nodeParent: 22,
                                    label: "lblStamiCount",
                                    isDirectory: !1,
                                    isAniNode: !0,
                                    hasChild: !1,
                                    compId: 30,
                                    child: []
                                }]
                            }, {
                                x: 30,
                                type: "Image",
                                searchKey: "Image,btnClose,btnClose",
                                props: {
                                    y: 320,
                                    x: 73,
                                    width: 91,
                                    var: "btnClose",
                                    underlineColor: "#ffffff",
                                    underline: !0,
                                    text: "重新开始",
                                    skin: "home.png",
                                    name: "btnClose",
                                    height: 91,
                                    font: "font_2",
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                nodeParent: 8,
                                label: "btnClose",
                                isOpen: !0,
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 21,
                                child: []
                            }, {
                                x: 30,
                                type: "Script",
                                source: "src/framework/QUIAnchor.ts",
                                searchKey: "Script,QUIAnchor(lost)",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "framework/QUIAnchor.ts",
                                    anchroType: "Bottom"
                                },
                                nodeParent: 8,
                                label: "QUIAnchor(lost)",
                                isDirectory: !1,
                                isAniNode: !0,
                                hasChild: !1,
                                compId: 9,
                                child: []
                            }, {
                                x: 30,
                                type: "List",
                                searchKey: "List",
                                props: {
                                    y: 1274,
                                    x: 0,
                                    width: 750,
                                    spaceX: 0,
                                    repeatY: 1,
                                    repeatX: 10,
                                    height: 60
                                },
                                nodeParent: 8,
                                label: "List",
                                isOpen: null,
                                isDirectory: !0,
                                isAniNode: !0,
                                hasChild: !0,
                                compId: 32,
                                child: [{
                                    type: "Box",
                                    searchKey: "Box",
                                    props: {
                                        y: 0,
                                        x: -20,
                                        width: 78,
                                        renderType: "render",
                                        height: 58
                                    },
                                    nodeParent: 32,
                                    label: "Box",
                                    isDirectory: !0,
                                    isAniNode: !1,
                                    hasChild: !0,
                                    compId: 33,
                                    child: [{
                                        type: "Image",
                                        searchKey: "Image",
                                        props: {
                                            y: 29,
                                            x: 39,
                                            skin: "ui_real_uncompress/bottom_img.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        nodeParent: 33,
                                        label: "Image",
                                        isDirectory: !1,
                                        isAniNode: !1,
                                        hasChild: !1,
                                        compId: 34,
                                        child: []
                                    }]
                                }]
                            }],
                            $HIDDEN: !1
                        }],
                        animations: [{
                            nodes: [],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }]
                    }, t
                }(Laya.Scene);
                e.ReviveDialogUI = k;
                var L = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: -345,
                                x: -325.5,
                                width: 1401,
                                texture: "ui_shop/shop_img_bg.png",
                                height: 2251
                            },
                            compId: 32
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 16,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 182,
                                    x: 371,
                                    width: 801,
                                    skin: "ui_shop/shop_img_head.png",
                                    sizeGrid: "40,15,33,15",
                                    name: "bg",
                                    height: 114,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 3,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 42,
                                        x: 400,
                                        width: 104,
                                        skin: "ui_shop/shop_text_shop.png",
                                        height: 51,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 19,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#000000",
                                            brightness: -100,
                                            alpha: "0",
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 33
                                    }]
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 182,
                                    x: 681,
                                    var: "btnClose",
                                    skin: "ui_shop/img_btn_close.png",
                                    name: "btnClose",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 5
                            }, {
                                type: "List",
                                props: {
                                    y: 239,
                                    x: 10,
                                    width: 732,
                                    var: "listCar",
                                    spaceY: 10,
                                    name: "listCar",
                                    height: 1088
                                },
                                compId: 6,
                                child: [{
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 731,
                                        renderType: "render",
                                        height: 157
                                    },
                                    compId: 7,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 731,
                                            var: "carCellBg",
                                            skin: "ui_shop/shop_img_listbg.png",
                                            sizeGrid: "0,116,0,109",
                                            name: "carCellBg",
                                            height: 157,
                                            gray: !1
                                        },
                                        compId: 8,
                                        child: [{
                                            type: "Label",
                                            props: {
                                                y: 49,
                                                x: 94,
                                                width: 174,
                                                var: "lblLevel",
                                                text: "lv: 123",
                                                scaleY: .7,
                                                scaleX: .7,
                                                name: "lblLevel",
                                                height: 46,
                                                fontSize: 35,
                                                font: "font_2",
                                                color: "#605F5F",
                                                bold: !0,
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "left"
                                            },
                                            compId: 9,
                                            child: [{
                                                type: "Script",
                                                props: {
                                                    saturation: -100,
                                                    hue: -180,
                                                    contrast: -100,
                                                    color: "#626262",
                                                    brightness: -100,
                                                    alpha: "0",
                                                    runtime: "laya.effect.ColorFilterSetter"
                                                },
                                                compId: 20
                                            }]
                                        }, {
                                            type: "Panel",
                                            props: {
                                                y: 0,
                                                x: 181,
                                                width: 222,
                                                var: "panel",
                                                name: "panel",
                                                height: 155
                                            },
                                            compId: 34,
                                            child: [{
                                                type: "Image",
                                                props: {
                                                    y: 88,
                                                    x: 111,
                                                    width: 222,
                                                    var: "imgCarIcon",
                                                    skin: "ui_car/1001.png",
                                                    renderType: "render",
                                                    name: "imgCarIcon",
                                                    height: 269,
                                                    disabled: !1,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 10
                                            }]
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 95,
                                                x: 117,
                                                width: 175,
                                                var: "lblCarName",
                                                text: "哈哈哈哈哈",
                                                name: "lblCarName",
                                                height: 31,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#403636",
                                                bold: !0,
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "left"
                                            },
                                            compId: 11
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 80,
                                                x: 606,
                                                width: 288,
                                                visible: !0,
                                                var: "btnBuy",
                                                skin: "ui_com/com_btn_green.png",
                                                sizeGrid: "49,63,55,77",
                                                scaleY: .75,
                                                scaleX: .75,
                                                name: "btnBuy",
                                                height: 127,
                                                gray: !1,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 12,
                                            child: [{
                                                type: "Image",
                                                props: {
                                                    y: 62,
                                                    x: 55,
                                                    width: 60,
                                                    var: "imgCost",
                                                    skin: "ui_com/com_img_coin.png",
                                                    name: "imgCost",
                                                    height: 60,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 13
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 58,
                                                    x: 174,
                                                    width: 170,
                                                    var: "lblCost",
                                                    valign: "middle",
                                                    text: "21.5M",
                                                    strokeColor: "#1CA51C",
                                                    stroke: 2,
                                                    scaleY: 1,
                                                    scaleX: 1,
                                                    name: "lblCost",
                                                    height: 43,
                                                    fontSize: 35,
                                                    font: "font_1",
                                                    color: "#FFFFFF",
                                                    bold: !0,
                                                    anchorY: .5,
                                                    anchorX: .5,
                                                    align: "center"
                                                },
                                                compId: 14
                                            }]
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 80,
                                                x: 606,
                                                width: 288,
                                                visible: !0,
                                                skin: "ui_com/com_btn_yellow.png",
                                                sizeGrid: "45,73,49,73",
                                                scaleY: .75,
                                                scaleX: .75,
                                                name: "btnShare",
                                                height: 127,
                                                gray: !1,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 22,
                                            child: [{
                                                type: "Image",
                                                props: {
                                                    y: 58,
                                                    x: 102,
                                                    width: 68,
                                                    skin: "com_icon_video1.png",
                                                    name: "imgShare",
                                                    height: 62,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 23
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 57,
                                                    x: 193,
                                                    width: 78,
                                                    skin: "ui_com/com_text_free.png",
                                                    height: 39,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 26
                                            }]
                                        }]
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Top",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 17
                            }]
                        }, {
                            type: "Box",
                            props: {
                                width: 750,
                                var: "AnchorTopLeft",
                                name: "AnchorTopLeft",
                                height: 1334
                            },
                            compId: 35,
                            child: [{
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 755,
                                    var: "boxTopLeft",
                                    name: "boxTopLeft",
                                    height: 80
                                },
                                compId: 36,
                                child: [{
                                    type: "Box",
                                    props: {
                                        y: 19,
                                        x: 15,
                                        width: 330,
                                        name: "Gold",
                                        height: 52
                                    },
                                    compId: 37,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: -1,
                                            width: 330,
                                            skin: "ui_com/com_img_databg1.png",
                                            sizeGrid: "0,39,0,43",
                                            height: 52
                                        },
                                        compId: 38,
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 26,
                                                x: 30,
                                                width: 49,
                                                skin: "ui_com/com_img_coin.png",
                                                height: 50,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 39
                                        }]
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 20,
                                        x: 356,
                                        width: 174,
                                        skin: "ui_com/com_img_databg1.png",
                                        sizeGrid: "0,28,0,20",
                                        name: "Diamond",
                                        height: 50
                                    },
                                    compId: 40,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 26,
                                            x: 32,
                                            width: 44,
                                            skin: "ui_com/com_img_diamond.png",
                                            height: 44,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 41
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 15,
                                        width: 119,
                                        skin: "ui_com/com_img_databg1.png",
                                        sizeGrid: "0,28,0,20",
                                        name: "Stamina",
                                        height: 50
                                    },
                                    compId: 42,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 26,
                                            x: 32,
                                            width: 31,
                                            skin: "ui_com/com_img_stamina.png",
                                            height: 42,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 43
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 43,
                                        x: 412,
                                        width: 155,
                                        var: "lblDiamondNum",
                                        valign: "middle",
                                        text: "888",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblDiamondNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "font_1",
                                        color: "#fdfdfd",
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    compId: 44
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 103,
                                        x: 61,
                                        width: 86,
                                        var: "lblStaminaNum",
                                        valign: "middle",
                                        text: "99",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblStaminaNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "font_1",
                                        color: "#fdfdfd",
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "center"
                                    },
                                    compId: 45
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 42,
                                        x: 99,
                                        width: 160,
                                        var: "lblGoldNum",
                                        valign: "middle",
                                        text: "26.5M",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "lblGoldNum",
                                        height: 45,
                                        fontSize: 30,
                                        font: "font_1",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    compId: 47
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 43,
                                        x: 226,
                                        width: 127,
                                        visible: !1,
                                        var: "lblAddGold",
                                        valign: "middle",
                                        text: "+8.1k/s",
                                        scaleY: .5,
                                        scaleX: .5,
                                        name: "lblAddGold",
                                        height: 44,
                                        fontSize: 23,
                                        font: "font_1",
                                        color: "#ffffff",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    compId: 48,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#ffffff",
                                            brightness: -100,
                                            alpha: 0,
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 49
                                    }]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 43,
                                        x: 226,
                                        width: 127,
                                        var: "lblAddGold2",
                                        valign: "middle",
                                        text: "+8.1k/s",
                                        scaleY: .5,
                                        scaleX: .5,
                                        name: "lblAddGold2",
                                        height: 44,
                                        fontSize: 23,
                                        font: "font_1",
                                        color: "#ffffff",
                                        bold: !1,
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    },
                                    compId: 50,
                                    child: [{
                                        type: "Script",
                                        props: {
                                            saturation: -100,
                                            hue: -180,
                                            contrast: -100,
                                            color: "#ffff00",
                                            brightness: -100,
                                            alpha: 0,
                                            runtime: "laya.effect.ColorFilterSetter"
                                        },
                                        compId: 51
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    anchroType: "Top",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 53
                            }]
                        }],
                        loadList: ["ui_shop/shop_img_bg.png", "ui_shop/shop_img_head.png", "ui_shop/shop_text_shop.png", "ui_shop/img_btn_close.png", "ui_shop/shop_img_listbg.png", "ui_car/1001.png", "ui_com/com_btn_green.png", "ui_com/com_img_coin.png", "ui_com/com_btn_yellow.png", "com_icon_video1.png", "ui_com/com_text_free.png", "ui_com/com_img_databg1.png", "ui_com/com_img_diamond.png", "ui_com/com_img_stamina.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.ShopDialogUI = L;
                var D = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 15,
                            child: [{
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 16
                            }, {
                                type: "Image",
                                props: {
                                    y: 667,
                                    x: 374,
                                    width: 626,
                                    var: "speedupbg",
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "52,26,48,27",
                                    name: "speedupbg",
                                    height: 670,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 4,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 15,
                                        x: 610,
                                        var: "btnClose",
                                        skin: "ui_achieve/btn_close.png",
                                        name: "btnClose",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 5
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 289,
                                        x: 313,
                                        width: 416,
                                        rotation: 228,
                                        name: "IconBg",
                                        height: 436,
                                        anchorY: .46,
                                        anchorX: .48
                                    },
                                    compId: 29
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 289,
                                        x: 313,
                                        width: 276,
                                        var: "Icon",
                                        skin: "ui_home/supplyBox.png",
                                        name: "Icon",
                                        height: 260,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 7
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 552,
                                        x: 313,
                                        width: 418,
                                        visible: !0,
                                        var: "btnShare",
                                        skin: "ui_achieve/btn_bg.png",
                                        sizeGrid: "30,30,50,30",
                                        name: "btnShare",
                                        height: 170,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 12,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 81,
                                            x: 149,
                                            width: 60,
                                            visible: !1,
                                            var: "imgShare",
                                            skin: "ui_com/com_icon_share.png",
                                            name: "imgShare",
                                            height: 60,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 13
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 81,
                                            x: 149,
                                            width: 60,
                                            var: "imgVideo",
                                            skin: "com_icon_video1.png",
                                            name: "imgVideo",
                                            height: 54,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 18
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 81,
                                            x: 252,
                                            var: "imgOpenTxt",
                                            skin: "ui_dialog/open.png",
                                            name: "imgOpenTxt",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 20
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 414.5,
                                        x: 160,
                                        name: "supplyDes"
                                    },
                                    compId: 28
                                }, {
                                    type: "Box",
                                    props: {
                                        zOrder: 3,
                                        y: 765,
                                        x: 376,
                                        width: 362,
                                        visible: !1,
                                        var: "boxNewbie",
                                        name: "boxNewbie",
                                        mouseThrough: !0,
                                        height: 327,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 30,
                                    child: [{
                                        type: "Animation",
                                        props: {
                                            y: -47.99999303332655,
                                            x: 119,
                                            var: "imgHand",
                                            source: "res/ui_particle/hand.ani",
                                            scaleY: 1.3,
                                            scaleX: 1.3,
                                            rotation: -180,
                                            name: "imgHand"
                                        },
                                        compId: 36
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 85,
                                        x: 300,
                                        var: "title",
                                        text: "获得成就",
                                        skin: "ui_achieve/title_bg.png",
                                        name: "title",
                                        font: "font_2",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 41,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 45,
                                            x: 174,
                                            var: "title_lbl",
                                            text: "神秘宝箱",
                                            strokeColor: "#ca781f",
                                            stroke: 6,
                                            name: "title_lbl",
                                            height: 66,
                                            fontSize: 53,
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 43
                                    }]
                                }]
                            }]
                        }],
                        animations: [{
                            nodes: [{
                                target: 29,
                                keyframes: {
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 29,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 29,
                                        key: "rotation",
                                        index: 60
                                    }]
                                }
                            }],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/btn_close.png", "ui_home/supplyBox.png", "ui_achieve/btn_bg.png", "ui_com/com_icon_share.png", "com_icon_video1.png", "ui_dialog/open.png", "res/ui_particle/hand.ani", "ui_achieve/title_bg.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.SupplyDialogUI = D;
                var G = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Dialog",
                        props: {
                            width: 750,
                            mouseThrough: !0,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 667,
                                x: 375,
                                width: 1139,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "14,12,17,11",
                                height: 2202,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .01
                            },
                            compId: 14
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 8,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 667,
                                    x: 375,
                                    width: 636,
                                    skin: "ui_common2/Icon_mask.png",
                                    sizeGrid: "17,44,0,44",
                                    height: 89,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 15,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 43,
                                        x: 318,
                                        width: 717,
                                        var: "lblTipsText",
                                        text: "请前往关注公众号!",
                                        name: "lblTipsText",
                                        height: 40,
                                        fontSize: 40,
                                        font: "Arial",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 17
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 45,
                                        x: 318,
                                        width: 584,
                                        var: "lblTipsText1",
                                        text: "只有",
                                        name: "lblTipsText1",
                                        height: 40,
                                        fontSize: 40,
                                        font: "Arial",
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "left"
                                    },
                                    compId: 21,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 21,
                                            x: 164,
                                            width: 172,
                                            text: "不同的群",
                                            height: 40,
                                            fontSize: 40,
                                            font: "Arial",
                                            color: "#f90400",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 22
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 21,
                                            x: 418,
                                            width: 338,
                                            text: "好友才能帮助你哦!",
                                            height: 40,
                                            fontSize: 40,
                                            font: "Arial",
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 23
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 9
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_common2/Icon_mask.png"],
                        loadList3D: []
                    }, t
                }(Laya.Dialog);
                e.TipsViewUI = G;
                var A = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: -374,
                                x: -357,
                                width: 1500,
                                var: "backGround",
                                skin: "ui_common2/zhezhao.png",
                                sizeGrid: "16,13,13,17",
                                name: "backGround",
                                height: 2800,
                                alpha: .6
                            },
                            compId: 41
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 15,
                            child: [{
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 16
                            }, {
                                type: "Image",
                                props: {
                                    y: 532,
                                    x: 375,
                                    width: 628,
                                    var: "BigGlass",
                                    skin: "ui_common2/BigGlass.png",
                                    scaleY: .4,
                                    scaleX: .4,
                                    name: "BigGlass",
                                    height: 612,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 4
                            }, {
                                type: "Label",
                                props: {
                                    y: 693,
                                    x: 390,
                                    var: "tipLabel",
                                    text: "加载中 , 请稍后...",
                                    styleSkin: "ui_home/supplyTitle.png",
                                    scaleY: 1,
                                    scaleX: 1,
                                    name: "tipLabel",
                                    fontSize: 35,
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 22
                            }]
                        }],
                        animations: [{
                            nodes: [{
                                target: 4,
                                keyframes: {
                                    y: [{
                                        value: 536,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 4,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 536,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 4,
                                        key: "y",
                                        index: 10
                                    }, {
                                        value: 561,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 4,
                                        key: "y",
                                        index: 20
                                    }, {
                                        value: 561,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 4,
                                        key: "y",
                                        index: 30
                                    }, {
                                        value: 536,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 4,
                                        key: "y",
                                        index: 40
                                    }],
                                    x: [{
                                        value: 375,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 4,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 400,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 4,
                                        key: "x",
                                        index: 10
                                    }, {
                                        value: 400,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 4,
                                        key: "x",
                                        index: 20
                                    }, {
                                        value: 375,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 4,
                                        key: "x",
                                        index: 30
                                    }, {
                                        value: 375,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 4,
                                        key: "x",
                                        index: 40
                                    }],
                                    name: [{
                                        value: "BigGlass",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 4,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }],
                            name: "GlassCircle",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [],
                            name: "ani2",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        }],
                        loadList: ["ui_common2/zhezhao.png", "ui_common2/BigGlass.png", "ui_home/supplyTitle.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.WaitLoadMapUI = A;
                var B = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 667,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 57
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 16,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 620,
                                    x: 375,
                                    width: 665,
                                    var: "bg",
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "20,20,20,20",
                                    name: "bg",
                                    height: 948,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 54
                            }, {
                                type: "Image",
                                props: {
                                    y: 227,
                                    x: 375,
                                    width: 390,
                                    var: "titlebg",
                                    text: "label",
                                    skin: "ui_achieve/title_bg.png",
                                    sizeGrid: "0,30,0,30",
                                    name: "titlebg",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 58,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 40,
                                        x: 195,
                                        var: "title",
                                        text: "获得免费体力",
                                        strokeColor: "#ca781f",
                                        stroke: 6,
                                        name: "title",
                                        fontSize: 53,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 55
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 109,
                                        x: 195,
                                        width: 580,
                                        var: "line",
                                        skin: "ui_dialog/line3.png",
                                        name: "line",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 60
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 168,
                                    x: 684,
                                    var: "btnClose",
                                    skin: "ui_achieve/btn_close.png",
                                    name: "btnClose",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 5
                            }, {
                                type: "List",
                                props: {
                                    y: 314,
                                    x: 372,
                                    width: 600,
                                    var: "listBtn",
                                    name: "listBtn",
                                    height: 700,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 5,
                                        width: 590,
                                        renderType: "render",
                                        height: 150
                                    },
                                    compId: 7,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 70,
                                            x: 295,
                                            width: 580,
                                            var: "cellBg",
                                            skin: "res/Texture/InviteBg.png",
                                            sizeGrid: "20,20,20,20",
                                            name: "cellBg",
                                            height: 127,
                                            gray: !1,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 8,
                                        child: [{
                                            type: "Label",
                                            props: {
                                                y: 60,
                                                x: 38,
                                                var: "lblTitle",
                                                valign: "middle",
                                                text: "关注公众号",
                                                name: "lblTitle",
                                                fontSize: 40,
                                                color: "#4C5566",
                                                bold: !0,
                                                anchorY: .5,
                                                anchorX: 0,
                                                align: "left"
                                            },
                                            compId: 9
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 63,
                                                x: 473,
                                                visible: !1,
                                                var: "lblgot",
                                                valign: "middle",
                                                text: "已完成",
                                                skin: "ui_dialog/taskDown.png",
                                                name: "lblgot",
                                                fontSize: 40,
                                                color: "#645d5c",
                                                bold: !0,
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "center"
                                            },
                                            compId: 56
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 63,
                                                x: 473,
                                                visible: !0,
                                                var: "btnGet",
                                                skin: "res/Texture/InvitePurpleBtn.png",
                                                sizeGrid: "20,20,20,20",
                                                name: "btnGet",
                                                gray: !1,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 12,
                                            child: [{
                                                type: "Image",
                                                props: {
                                                    y: 44,
                                                    x: 45,
                                                    var: "imgReward",
                                                    skin: "ui_dialog/flash.png",
                                                    name: "imgCost",
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 13
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 44,
                                                    x: 108,
                                                    var: "lblGo",
                                                    valign: "middle",
                                                    text: "领取",
                                                    strokeColor: "#1CA51C",
                                                    stroke: 2,
                                                    skin: "ui_dialog/gainLabel.png",
                                                    name: "lblGo",
                                                    fontSize: 50,
                                                    color: "#000000",
                                                    bold: !0,
                                                    anchorY: .5,
                                                    anchorX: .5,
                                                    align: "center"
                                                },
                                                compId: 14
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 57,
                                                    x: 54,
                                                    var: "lblcount",
                                                    text: "3",
                                                    strokeColor: "#7e379f",
                                                    stroke: 8,
                                                    name: "lblcount",
                                                    fontSize: 20,
                                                    color: "#ffffff",
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 59
                                            }]
                                        }]
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Top",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 17
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/title_bg.png", "ui_dialog/line3.png", "ui_achieve/btn_close.png", "res/Texture/InviteBg.png", "ui_dialog/taskDown.png", "res/Texture/InvitePurpleBtn.png", "ui_dialog/flash.png", "ui_dialog/gainLabel.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.WelfareDialogUI = B;
                var N = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .95
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Script",
                                props: {
                                    y: 10,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }, {
                                type: "Image",
                                props: {
                                    y: 151,
                                    x: 367,
                                    var: "tipsTitle",
                                    skin: "ui_dialog/programTitle.png",
                                    name: "tipsTitle",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 28
                            }, {
                                type: "Image",
                                props: {
                                    y: 216,
                                    x: 114,
                                    var: "GainTopLine",
                                    skin: "ui_dialog/headBg.png",
                                    name: "GainTopLine"
                                },
                                compId: 30,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 52,
                                        x: 253,
                                        width: 219,
                                        text: "恭喜获得",
                                        strokeColor: "#ca781f",
                                        stroke: 6,
                                        pivotY: 33,
                                        pivotX: 112,
                                        height: 63,
                                        fontSize: 53,
                                        color: "#ffffff",
                                        bold: !0
                                    },
                                    compId: 32
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 629,
                                    x: 367,
                                    var: "flashBg",
                                    skin: "ui_dialog/bgLight.png",
                                    name: "flashBg",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 33
                            }, {
                                type: "Image",
                                props: {
                                    y: 629,
                                    x: 367,
                                    var: "imgLight",
                                    skin: "ui_dialog/lotty_img_stamina.png",
                                    scaleY: 1.8,
                                    scaleX: 1.8,
                                    name: "imgLight",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 34
                            }, {
                                type: "Label",
                                props: {
                                    y: 689,
                                    x: 430,
                                    width: 84,
                                    var: "lblCount",
                                    text: "x3",
                                    strokeColor: "#ca781f",
                                    stroke: 6,
                                    name: "lblCount",
                                    height: 81,
                                    fontSize: 73,
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 45
                            }, {
                                type: "Image",
                                props: {
                                    y: 974,
                                    x: 183,
                                    width: 373,
                                    var: "GainBtn",
                                    skin: "ui_achieve/btn_bg.png",
                                    sizeGrid: "57,132,52,118",
                                    name: "GainBtn",
                                    height: 144
                                },
                                compId: 36,
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 66,
                                        x: 186.5,
                                        width: 143,
                                        text: "领取",
                                        height: 78,
                                        fontSize: 68,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 37
                                }]
                            }, {
                                type: "Box",
                                props: {},
                                compId: 38,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 466,
                                        x: 309,
                                        skin: "ui_dialog/light2.png",
                                        name: "lightDown",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 39
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 684,
                                        x: 496,
                                        var: "img1",
                                        skin: "ui_dialog/light2.png",
                                        name: "img1",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 40
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 669,
                                        x: 210,
                                        var: "img2",
                                        skin: "ui_dialog/light2.png",
                                        name: "img2",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 41
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 507,
                                        x: 255,
                                        var: "img3",
                                        skin: "ui_dialog/light1.png",
                                        name: "img3",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 42
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 703,
                                        x: 488,
                                        width: 46,
                                        var: "img4",
                                        skin: "ui_dialog/light1.png",
                                        rotation: 44,
                                        name: "img4",
                                        height: 52,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 43
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 601,
                                        x: 502,
                                        width: 46,
                                        var: "img5",
                                        skin: "ui_dialog/light1.png",
                                        rotation: 44,
                                        name: "img5",
                                        height: 52,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 44
                                }]
                            }]
                        }],
                        animations: [{
                            nodes: [{
                                target: 33,
                                keyframes: {
                                    scaleY: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleY",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleY",
                                        index: 40
                                    }],
                                    scaleX: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleX",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "scaleX",
                                        index: 40
                                    }],
                                    rotation: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 180,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "rotation",
                                        index: 20
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 33,
                                        key: "rotation",
                                        index: 40
                                    }],
                                    name: [{
                                        value: "flashBg",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 33,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }, {
                                target: 39,
                                keyframes: {
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleY",
                                        index: 17
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleY",
                                        index: 29
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleY",
                                        index: 40
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleX",
                                        index: 17
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleX",
                                        index: 29
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "scaleX",
                                        index: 40
                                    }],
                                    name: [{
                                        value: "lightDown",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 39,
                                        key: "name",
                                        index: 0
                                    }],
                                    alpha: [{
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 39,
                                        key: "alpha",
                                        index: 0
                                    }]
                                }
                            }, {
                                target: 40,
                                keyframes: {
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleY",
                                        index: 14
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleY",
                                        index: 23
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleY",
                                        index: 34
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleX",
                                        index: 14
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleX",
                                        index: 23
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 40,
                                        key: "scaleX",
                                        index: 34
                                    }],
                                    name: [{
                                        value: "img1",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 40,
                                        key: "name",
                                        index: 0
                                    }]
                                }
                            }, {
                                target: 41,
                                keyframes: {
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleY",
                                        index: 7
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleY",
                                        index: 16
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleY",
                                        index: 26
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleY",
                                        index: 37
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleX",
                                        index: 7
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleX",
                                        index: 16
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleX",
                                        index: 26
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 41,
                                        key: "scaleX",
                                        index: 37
                                    }],
                                    name: [{
                                        value: "img2",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 41,
                                        key: "name",
                                        index: 0
                                    }, {
                                        value: "img2",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 41,
                                        key: "name",
                                        index: 7
                                    }]
                                }
                            }, {
                                target: 42,
                                keyframes: {
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleY",
                                        index: 19
                                    }, {
                                        value: .48,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleY",
                                        index: 29
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleY",
                                        index: 39
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleX",
                                        index: 19
                                    }, {
                                        value: .48,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleX",
                                        index: 29
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 42,
                                        key: "scaleX",
                                        index: 39
                                    }],
                                    name: [{
                                        value: "img3",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 42,
                                        key: "name",
                                        index: 0
                                    }, {
                                        value: "img3",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 42,
                                        key: "name",
                                        index: 37
                                    }]
                                }
                            }, {
                                target: 43,
                                keyframes: {
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .48,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleY",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleY",
                                        index: 11
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleY",
                                        index: 22
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleY",
                                        index: 34
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .48,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleX",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleX",
                                        index: 11
                                    }, {
                                        value: .4,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleX",
                                        index: 22
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 43,
                                        key: "scaleX",
                                        index: 34
                                    }],
                                    name: [{
                                        value: "img4",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 43,
                                        key: "name",
                                        index: 0
                                    }, {
                                        value: "img4",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 43,
                                        key: "name",
                                        index: 40
                                    }]
                                }
                            }, {
                                target: 44,
                                keyframes: {
                                    y: [{
                                        value: 601,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 601,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "y",
                                        index: 10
                                    }, {
                                        value: 601,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "y",
                                        index: 18
                                    }, {
                                        value: 601,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "y",
                                        index: 27
                                    }, {
                                        value: 601,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "y",
                                        index: 35
                                    }],
                                    x: [{
                                        value: 502,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 502,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "x",
                                        index: 10
                                    }, {
                                        value: 502,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "x",
                                        index: 18
                                    }, {
                                        value: 502,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "x",
                                        index: 27
                                    }, {
                                        value: 502,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "x",
                                        index: 35
                                    }],
                                    scaleY: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleY",
                                        index: 18
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleY",
                                        index: 27
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleY",
                                        index: 35
                                    }],
                                    scaleX: [{
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleX",
                                        index: 18
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleX",
                                        index: 27
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "scaleX",
                                        index: 35
                                    }],
                                    name: [{
                                        value: "img5",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 44,
                                        key: "name",
                                        index: 0
                                    }, {
                                        value: "img5",
                                        tweenMethod: "linearNone",
                                        tween: !1,
                                        target: 44,
                                        key: "name",
                                        index: 27
                                    }],
                                    anchorY: [{
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorY",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorY",
                                        index: 10
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorY",
                                        index: 18
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorY",
                                        index: 27
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorY",
                                        index: 35
                                    }],
                                    anchorX: [{
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorX",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorX",
                                        index: 10
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorX",
                                        index: 18
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorX",
                                        index: 27
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: !0,
                                        target: 44,
                                        key: "anchorX",
                                        index: 35
                                    }]
                                }
                            }],
                            name: "flashAni",
                            id: 1,
                            frameRate: 24,
                            action: 2
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_dialog/programTitle.png", "ui_dialog/headBg.png", "ui_dialog/bgLight.png", "ui_dialog/lotty_img_stamina.png", "ui_achieve/btn_bg.png", "ui_dialog/light2.png", "ui_dialog/light1.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.WelfareRewardViewUI = N;
                var M = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 617,
                                    x: 375,
                                    width: 665,
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "52,26,48,27",
                                    name: "speedupbg",
                                    height: 948,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 16,
                                        x: 651,
                                        var: "btnClose",
                                        skin: "ui_achieve/btn_close.png",
                                        name: "btnClose",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 12
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 46,
                                        x: 140,
                                        width: 385,
                                        var: "headTitle",
                                        skin: "ui_achieve/title_bg.png",
                                        sizeGrid: "24,53,30,53",
                                        name: "headTitle"
                                    },
                                    compId: 36,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 47.5,
                                            x: 148,
                                            width: 324,
                                            text: "添加到小程序",
                                            strokeColor: "#ca781f",
                                            stroke: 6,
                                            pivotY: 33,
                                            pivotX: 112,
                                            height: 66,
                                            fontSize: 53,
                                            color: "#ffffff",
                                            bold: !0
                                        },
                                        compId: 37
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 182,
                                        x: 42.5,
                                        width: 580,
                                        var: "point1",
                                        skin: "ui_dialog/grewBg.png",
                                        sizeGrid: "20,30,25,23",
                                        name: "point1",
                                        height: 127
                                    },
                                    compId: 38,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -31.5,
                                            x: -20,
                                            var: "num",
                                            skin: "ui_dialog/circle.png",
                                            name: "num"
                                        },
                                        compId: 39
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -28.5,
                                            x: -2,
                                            text: "1",
                                            font: "font_2"
                                        },
                                        compId: 42
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 46,
                                            x: 56,
                                            var: "blackLabel",
                                            text: "先点击",
                                            name: "blackLabel",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 43
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 46,
                                            x: 167.5,
                                            var: "blueLabel",
                                            text: "“右上角三个点”",
                                            name: "blueLabel",
                                            fontSize: 35,
                                            color: "#2d89f0",
                                            bold: !0
                                        },
                                        compId: 45
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 36.5,
                                            x: 421,
                                            width: 106,
                                            skin: "ui_dialog/topPoint.png",
                                            height: 54
                                        },
                                        compId: 46
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 140,
                                            x: 276,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow1"
                                        },
                                        compId: 60
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 164,
                                            x: 276,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow2"
                                        },
                                        compId: 61
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 378.5,
                                        x: 42.5,
                                        width: 580,
                                        skin: "ui_dialog/grewBg.png",
                                        sizeGrid: "20,30,25,23",
                                        name: "point2",
                                        height: 193
                                    },
                                    compId: 47,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -32.5,
                                            x: -20,
                                            skin: "ui_dialog/circle.png",
                                            name: "num"
                                        },
                                        compId: 48
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -28.5,
                                            x: -2,
                                            text: "2",
                                            font: "font_2"
                                        },
                                        compId: 49
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 79,
                                            x: 57,
                                            text: "再点击",
                                            name: "blackLabel",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 50
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 79,
                                            x: 162,
                                            text: "“添加到我的程序”",
                                            name: "blueLabel",
                                            fontSize: 35,
                                            color: "#2d89f0",
                                            bold: !0
                                        },
                                        compId: 51
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 18,
                                            x: 451,
                                            skin: "ui_dialog/program2.png"
                                        },
                                        compId: 52
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 201,
                                            x: 276,
                                            width: 31,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow1",
                                            height: 19
                                        },
                                        compId: 62
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 222,
                                            x: 276,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow2"
                                        },
                                        compId: 63
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 631,
                                        x: 42.5,
                                        width: 580,
                                        skin: "ui_dialog/grewBg.png",
                                        sizeGrid: "20,30,25,23",
                                        name: "point3",
                                        height: 273
                                    },
                                    compId: 53,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -32.5,
                                            x: -20,
                                            skin: "ui_dialog/circle.png",
                                            name: "num"
                                        },
                                        compId: 54
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -28.5,
                                            x: -2,
                                            text: "3",
                                            font: "font_2"
                                        },
                                        compId: 55
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 42,
                                            x: 31,
                                            text: "再从",
                                            name: "blackLabel",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 56
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 42,
                                            x: 101,
                                            text: "“我的小程序”",
                                            name: "blueLabel",
                                            fontSize: 35,
                                            color: "#2d89f0",
                                            bold: !0
                                        },
                                        compId: 57
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 42,
                                            x: 311,
                                            var: "blackLabel2",
                                            text: "进入,即可领取",
                                            name: "blackLabel2",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 64
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 92,
                                            x: 31,
                                            skin: "ui_dialog/program3.png"
                                        },
                                        compId: 58
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 92,
                                            x: 45,
                                            var: "line",
                                            skin: "ui_dialog/line1.png",
                                            name: "line"
                                        },
                                        compId: 59
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 11,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/btn_close.png", "ui_achieve/title_bg.png", "ui_dialog/grewBg.png", "ui_dialog/circle.png", "ui_dialog/topPoint.png", "ui_dialog/Arrow_down.png", "ui_dialog/program2.png", "ui_dialog/program3.png", "ui_dialog/line1.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.XiaoChengXuDialogUI = M;
                var U = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            name: "floatWindowDialog",
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 613,
                                    x: 375,
                                    width: 665,
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "52,26,48,27",
                                    name: "speedupbg",
                                    height: 948,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 16,
                                        x: 651,
                                        var: "btnClose",
                                        skin: "ui_achieve/btn_close.png",
                                        name: "btnClose",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 12
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 46,
                                        x: 158.5,
                                        var: "headTitle",
                                        skin: "ui_achieve/title_bg.png",
                                        sizeGrid: "24,53,30,53",
                                        name: "headTitle"
                                    },
                                    compId: 36,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 45.5,
                                            x: 188,
                                            width: 223,
                                            text: "启用浮窗",
                                            strokeColor: "#ca781f",
                                            stroke: 6,
                                            pivotY: 33,
                                            pivotX: 112,
                                            height: 66,
                                            fontSize: 53,
                                            color: "#ffffff",
                                            bold: !0
                                        },
                                        compId: 37
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 182,
                                        x: 42.5,
                                        width: 580,
                                        var: "point1",
                                        skin: "ui_dialog/grewBg.png",
                                        sizeGrid: "20,30,25,23",
                                        name: "point1",
                                        height: 127
                                    },
                                    compId: 38,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -31.5,
                                            x: -20,
                                            var: "num",
                                            skin: "ui_dialog/circle.png",
                                            name: "num"
                                        },
                                        compId: 39
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -28.5,
                                            x: -2,
                                            text: "1",
                                            font: "font_2"
                                        },
                                        compId: 42
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 46,
                                            x: 56,
                                            var: "blackLabel",
                                            text: "先点击",
                                            name: "blackLabel",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 43
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 46,
                                            x: 167.5,
                                            var: "blueLabel",
                                            text: "“右上角三个点”",
                                            name: "blueLabel",
                                            fontSize: 35,
                                            color: "#2d89f0",
                                            bold: !0
                                        },
                                        compId: 45
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 36.5,
                                            x: 421,
                                            width: 106,
                                            skin: "ui_dialog/topPoint.png",
                                            height: 54
                                        },
                                        compId: 46
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 140,
                                            x: 276,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow1"
                                        },
                                        compId: 60
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 164,
                                            x: 276,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow2"
                                        },
                                        compId: 61
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 378.5,
                                        x: 42.5,
                                        width: 580,
                                        skin: "ui_dialog/grewBg.png",
                                        sizeGrid: "20,30,25,23",
                                        name: "point2",
                                        height: 193
                                    },
                                    compId: 47,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -32.5,
                                            x: -20,
                                            skin: "ui_dialog/circle.png",
                                            name: "num"
                                        },
                                        compId: 48
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -28.5,
                                            x: -2,
                                            text: "2",
                                            font: "font_2"
                                        },
                                        compId: 49
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 79,
                                            x: 57,
                                            text: "再点击左下角的",
                                            name: "blackLabel",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 50
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 79,
                                            x: 312,
                                            text: "“浮窗”",
                                            name: "blueLabel",
                                            fontSize: 35,
                                            color: "#2d89f0",
                                            bold: !0
                                        },
                                        compId: 51
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 27,
                                            x: 449,
                                            skin: "ui_dialog/floatPoint.png"
                                        },
                                        compId: 52
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 201,
                                            x: 276,
                                            width: 31,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow1",
                                            height: 19
                                        },
                                        compId: 62
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 222,
                                            x: 276,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow2"
                                        },
                                        compId: 63
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 631,
                                        x: 42.5,
                                        width: 580,
                                        skin: "ui_dialog/grewBg.png",
                                        sizeGrid: "20,30,25,23",
                                        name: "point3",
                                        height: 273
                                    },
                                    compId: 53,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -32.5,
                                            x: -20,
                                            skin: "ui_dialog/circle.png",
                                            name: "num"
                                        },
                                        compId: 54
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -28.5,
                                            x: -2,
                                            text: "3",
                                            font: "font_2"
                                        },
                                        compId: 55
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 44,
                                            x: 31,
                                            text: "最后点击",
                                            name: "blackLabel",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 56
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 44,
                                            x: 171,
                                            text: "“浮窗图标”",
                                            name: "blueLabel",
                                            fontSize: 35,
                                            color: "#2d89f0",
                                            bold: !0
                                        },
                                        compId: 57
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 92,
                                            x: 31,
                                            skin: "ui_dialog/floatBg1.png"
                                        },
                                        compId: 58
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 137,
                                            x: 449,
                                            var: "line",
                                            skin: "ui_dialog/line2.png",
                                            name: "line"
                                        },
                                        compId: 59
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 11,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/btn_close.png", "ui_achieve/title_bg.png", "ui_dialog/grewBg.png", "ui_dialog/circle.png", "ui_dialog/topPoint.png", "ui_dialog/Arrow_down.png", "ui_dialog/floatPoint.png", "ui_dialog/floatBg1.png", "ui_dialog/line2.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.floatWindowDialogUI = U;
                var R = function (e) {
                    function t() {
                        return e.call(this) || this
                    }
                    return __extends(t, e), t.prototype.createChildren = function () {
                        e.prototype.createChildren.call(this), this.createView(t.uiView)
                    }, t.uiView = {
                        type: "Scene",
                        props: {
                            width: 750,
                            name: "serviceDialog",
                            height: 1334
                        },
                        compId: 2,
                        child: [{
                            type: "Image",
                            props: {
                                y: 652,
                                x: 375,
                                width: 1997,
                                skin: "ui_real_uncompress/com_bg.png",
                                sizeGrid: "16,7,17,9",
                                name: "bg",
                                height: 2324,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 667,
                                x: 375,
                                width: 750,
                                var: "AnchorCenter",
                                name: "AnchorCenter",
                                height: 1334,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [{
                                type: "Image",
                                props: {
                                    y: 571,
                                    x: 375,
                                    width: 665,
                                    skin: "ui_achieve/dialog_bg.png",
                                    sizeGrid: "52,26,48,27",
                                    name: "speedupbg",
                                    height: 805,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 16,
                                        x: 651,
                                        var: "btnClose",
                                        skin: "ui_achieve/btn_close.png",
                                        name: "btnClose",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 12
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 46,
                                        x: 140,
                                        width: 385,
                                        var: "headTitle",
                                        skin: "ui_achieve/title_bg.png",
                                        sizeGrid: "24,53,30,53",
                                        name: "headTitle"
                                    },
                                    compId: 36,
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 47.5,
                                            x: 148,
                                            width: 324,
                                            text: "添加到小程序",
                                            strokeColor: "#ca781f",
                                            stroke: 6,
                                            pivotY: 33,
                                            pivotX: 112,
                                            height: 66,
                                            fontSize: 53,
                                            color: "#ffffff",
                                            bold: !0
                                        },
                                        compId: 37
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 182,
                                        x: 42.5,
                                        width: 580,
                                        var: "point1",
                                        skin: "ui_dialog/grewBg.png",
                                        sizeGrid: "20,30,25,23",
                                        name: "point1",
                                        height: 220
                                    },
                                    compId: 38,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -31.5,
                                            x: -20,
                                            var: "num",
                                            skin: "ui_dialog/circle.png",
                                            name: "num"
                                        },
                                        compId: 39
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -28.5,
                                            x: -2,
                                            text: "1",
                                            font: "font_2"
                                        },
                                        compId: 42
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 36.5,
                                            x: 291.5,
                                            skin: "ui_dialog/Arrow_Official.png"
                                        },
                                        compId: 66
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 101,
                                            x: 154,
                                            skin: "ui_dialog/service1.png"
                                        },
                                        compId: 46
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 26.5,
                                            x: 122,
                                            text: "先点这里",
                                            name: "blackLabel",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 67
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 241,
                                            x: 276,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow1"
                                        },
                                        compId: 60
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 263,
                                            x: 276,
                                            skin: "ui_dialog/Arrow_down.png",
                                            name: "Arrow2"
                                        },
                                        compId: 61
                                    }]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 490,
                                        x: 42.5,
                                        width: 580,
                                        skin: "ui_dialog/grewBg.png",
                                        sizeGrid: "20,30,25,23",
                                        name: "point2",
                                        height: 265
                                    },
                                    compId: 47,
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -32.5,
                                            x: -20,
                                            skin: "ui_dialog/circle.png",
                                            name: "num"
                                        },
                                        compId: 48
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -28.5,
                                            x: -2,
                                            text: "2",
                                            font: "font_2"
                                        },
                                        compId: 49
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 32.5,
                                            x: 204,
                                            text: "再点击这里",
                                            name: "blackLabel",
                                            fontSize: 35,
                                            color: "#2a3344",
                                            bold: !0
                                        },
                                        compId: 50
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 76,
                                            x: 32.5,
                                            skin: "ui_dialog/program4.png"
                                        },
                                        compId: 52
                                    }]
                                }]
                            }, {
                                type: "Script",
                                props: {
                                    y: 11,
                                    x: 10,
                                    anchroType: "Center",
                                    runtime: "framework/QUIAnchor.ts"
                                },
                                compId: 5
                            }]
                        }],
                        loadList: ["ui_real_uncompress/com_bg.png", "ui_achieve/dialog_bg.png", "ui_achieve/btn_close.png", "ui_achieve/title_bg.png", "ui_dialog/grewBg.png", "ui_dialog/circle.png", "ui_dialog/Arrow_Official.png", "ui_dialog/service1.png", "ui_dialog/Arrow_down.png", "ui_dialog/program4.png"],
                        loadList3D: []
                    }, t
                }(Laya.Scene);
                e.serviceDialogUI = R
            }(a.view || (a.view = {}))
    }, {}]
}, {}, [2]);