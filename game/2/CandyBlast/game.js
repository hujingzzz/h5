function init() {
	for (var t = [], e = [{
			images: ["clouds"],
			frames: [
				[547, 734, 424, 242],
				[2, 1257, 542, 288],
				[547, 492, 450, 240],
				[2, 2, 678, 488],
				[682, 2, 336, 185],
				[2, 757, 543, 263],
				[2, 1022, 543, 233],
				[2, 492, 543, 263]
			],
			animations: {
				cloud_1: [0],
				cloud_2: [1],
				cloud_3: [2],
				cloud_logo: [3],
				gameover_caption: [4],
				lose_bomb: [5],
				lose_moves: [6],
				lose_time: [7]
			}
		}, {
			images: ["buttons"],
			frames: [
				[2, 2, 186, 193],
				[238, 371, 116, 121],
				[238, 248, 116, 121],
				[356, 125, 116, 121],
				[238, 125, 116, 121],
				[308, 2, 116, 121],
				[190, 2, 116, 121],
				[120, 320, 116, 121],
				[120, 197, 116, 121],
				[2, 320, 116, 121],
				[2, 197, 116, 121]
			],
			animations: {
				big_b_play: [0],
				button_buy: [1],
				button_close: [2],
				button_exit: [3],
				button_more_games: [4],
				button_pause: [5],
				button_play: [6],
				button_restart: [7],
				button_sound_off: [8],
				button_sound_on: [9],
				button_video: [10]
			}
		}, {
			images: ["chips"],
			frames: [
				[89, 575, 82, 82],
				[176, 572, 82, 86],
				[263, 507, 84, 86],
				[89, 488, 85, 85],
				[350, 420, 85, 85],
				[263, 420, 85, 85],
				[176, 401, 85, 85],
				[2, 408, 85, 85],
				[89, 401, 85, 85],
				[350, 333, 85, 85],
				[2, 2, 89, 74],
				[2, 495, 85, 84],
				[2, 662, 79, 79],
				[83, 659, 79, 79],
				[263, 333, 85, 85],
				[428, 582, 74, 76],
				[428, 507, 77, 73],
				[176, 488, 85, 82],
				[2, 581, 79, 79],
				[182, 71, 87, 67],
				[2, 78, 87, 67],
				[93, 71, 87, 67],
				[360, 2, 87, 67],
				[271, 2, 87, 67],
				[182, 2, 87, 67],
				[93, 2, 87, 67],
				[359, 71, 85, 86],
				[176, 314, 85, 85],
				[2, 321, 85, 85],
				[89, 314, 85, 85],
				[271, 71, 86, 86],
				[350, 246, 85, 85],
				[263, 246, 85, 85],
				[176, 227, 85, 85],
				[2, 234, 85, 85],
				[89, 227, 85, 85],
				[352, 159, 85, 85],
				[265, 159, 85, 85],
				[178, 140, 85, 85],
				[2, 147, 85, 85],
				[91, 140, 85, 85],
				[349, 507, 77, 77]
			],
			animations: {
				arrow_bonus_hor: [0],
				arrow_bonus_vert: [1],
				balloon: [2],
				bomb_1: [3],
				bomb_2: [4],
				bomb_3: [5],
				bomb_4: [6],
				bomb_5: [7],
				bomb_6: [8],
				bomb_7: [9],
				bomb_bonus: [10],
				cage: [11],
				cake_1: [12],
				cake_2: [13],
				cake_3: [14],
				cake_4: [15],
				cake_5: [16],
				cake_6: [17],
				cake_7: [18],
				candy_bird_1: [19],
				candy_bird_2: [20],
				candy_bird_3: [21],
				candy_bird_4: [22],
				candy_bird_5: [23],
				candy_bird_6: [24],
				candy_bird_7: [25],
				chocolate_1: [26],
				chocolate_2: [27],
				dirt_1: [28],
				dirt_2: [29],
				donut: [30],
				ice_0: [31],
				ice_1: [32],
				ice_2: [33],
				ice_3: [34],
				ice_4: [35],
				ice_5: [36],
				ice_6: [37],
				stone_double: [38],
				stone_heart: [39],
				stone_triple: [40],
				strawberry: [41]
			}
		}, {
			images: ["other"],
			frames: [
				[2, 267, 167, 92],
				[471, 2, 39, 39],
				[238, 790, 116, 121],
				[356, 667, 116, 121],
				[238, 667, 116, 121],
				[120, 896, 116, 121],
				[120, 773, 116, 121],
				[2, 896, 116, 121],
				[2, 773, 116, 121],
				[395, 464, 48, 48],
				[171, 346, 85, 8],
				[436, 351, 55, 55],
				[436, 262, 71, 30],
				[158, 494, 50, 52],
				[171, 267, 88, 77],
				[465, 109, 29, 28],
				[441, 226, 66, 34],
				[171, 356, 81, 80],
				[2, 361, 154, 155],
				[2, 653, 117, 118],
				[158, 438, 54, 54],
				[267, 2, 202, 54],
				[258, 354, 162, 54],
				[267, 58, 196, 92],
				[2, 518, 139, 133],
				[336, 545, 124, 120],
				[254, 410, 139, 133],
				[210, 545, 124, 120],
				[436, 294, 55, 55],
				[422, 408, 54, 54],
				[267, 152, 172, 106],
				[465, 76, 32, 31],
				[471, 43, 32, 31],
				[267, 260, 167, 92],
				[441, 152, 69, 72],
				[2, 2, 263, 263]
			],
			animations: {
				awesome: [0],
				bomb_timer: [1],
				booster_4: [2],
				booster_5: [3],
				booster_back: [4],
				booster_bomb: [5],
				booster_lolipop: [6],
				booster_moves: [7],
				booster_time: [8],
				border_corner: [9],
				border_side: [10],
				check_icon: [11],
				drop: [12],
				gold_icon: [13],
				heart: [14],
				heart_particle: [15],
				hint_arrow: [16],
				level_button: [17],
				level_shining: [18],
				lighting: [19],
				moves_icon: [20],
				panel_1: [21],
				panel_2: [22],
				panel_3: [23],
				perfect_star_off: [24],
				perfect_star_off_1: [25],
				perfect_star_on: [26],
				perfect_star_on_1: [27],
				plus_icon: [28],
				score_icon: [29],
				sickle: [30],
				star_mini: [31],
				star_mini_empty: [32],
				superb: [33],
				time_icon: [34],
				transition_ball: [35]
			}
		}, {
			images: ["font_pink"],
			frames: [
				[1, 21, 2, 2],
				[4, 3, 10, 20],
				[15, 3, 14, 9],
				[30, 3, 17, 20],
				[48, 1, 17, 24],
				[66, 3, 24, 20],
				[91, 3, 23, 20],
				[115, 3, 8, 9],
				[124, 1, 13, 26],
				[138, 1, 14, 26],
				[153, 1, 14, 13],
				[168, 6, 14, 13],
				[183, 17, 9, 10],
				[193, 12, 10, 5],
				[204, 17, 7, 6],
				[212, 1, 16, 25],
				[229, 3, 17, 20],
				[247, 3, 14, 20],
				[262, 3, 18, 20],
				[281, 3, 18, 20],
				[300, 3, 17, 20],
				[318, 3, 17, 20],
				[336, 3, 17, 20],
				[354, 3, 17, 20],
				[372, 3, 17, 20],
				[390, 3, 17, 20],
				[408, 7, 9, 16],
				[418, 7, 11, 20],
				[430, 5, 14, 16],
				[445, 8, 14, 9],
				[460, 5, 14, 16],
				[475, 3, 15, 20],
				[491, 3, 24, 23],
				[516, 3, 23, 20],
				[540, 3, 21, 20],
				[562, 3, 20, 20],
				[583, 3, 23, 20],
				[607, 3, 21, 20],
				[1, 30, 21, 20],
				[23, 30, 21, 20],
				[45, 30, 27, 20],
				[73, 30, 16, 20],
				[90, 30, 20, 26],
				[111, 30, 25, 20],
				[137, 30, 20, 20],
				[158, 30, 30, 20],
				[189, 30, 26, 20],
				[216, 30, 21, 20],
				[238, 30, 21, 20],
				[260, 30, 21, 26],
				[282, 30, 21, 20],
				[304, 30, 18, 20],
				[323, 30, 21, 20],
				[345, 30, 22, 20],
				[368, 30, 21, 20],
				[390, 30, 31, 20],
				[422, 30, 25, 20],
				[448, 30, 21, 20],
				[470, 30, 22, 20],
				[493, 28, 15, 25],
				[509, 28, 7, 25],
				[517, 28, 15, 25],
				[533, 30, 15, 14],
				[549, 50, 16, 4],
				[566, 28, 9, 6],
				[576, 34, 18, 16],
				[595, 28, 18, 22],
				[614, 34, 15, 16],
				[1, 57, 18, 22],
				[20, 63, 15, 16],
				[36, 57, 21, 28],
				[58, 62, 21, 23],
				[80, 57, 19, 22],
				[100, 57, 10, 22],
				[111, 57, 15, 28],
				[127, 57, 19, 22],
				[147, 57, 10, 22],
				[158, 63, 27, 16],
				[186, 63, 20, 16],
				[207, 63, 16, 16],
				[224, 63, 19, 22],
				[244, 63, 17, 22],
				[262, 63, 17, 16],
				[280, 63, 15, 16],
				[296, 60, 13, 19],
				[310, 63, 19, 16],
				[330, 63, 17, 17],
				[348, 63, 25, 17],
				[374, 63, 19, 16],
				[394, 63, 22, 22],
				[417, 63, 16, 16],
				[434, 57, 15, 25],
				[450, 57, 5, 28],
				[456, 57, 16, 25],
				[473, 65, 14, 7],
				[488, 63, 11, 21],
				[500, 59, 16, 20],
				[517, 59, 19, 20],
				[537, 62, 14, 14],
				[552, 59, 19, 20],
				[572, 57, 5, 28],
				[578, 57, 17, 25],
				[596, 57, 12, 5],
				[609, 59, 22, 20],
				[632, 59, 14, 11],
				[1, 97, 15, 13],
				[17, 100, 14, 9],
				[32, 101, 10, 5],
				[43, 92, 22, 20],
				[66, 88, 16, 4],
				[83, 92, 11, 10],
				[95, 95, 14, 17],
				[110, 92, 13, 13],
				[124, 92, 13, 13],
				[138, 90, 10, 6],
				[149, 96, 21, 22],
				[171, 90, 17, 25],
				[189, 99, 7, 6],
				[197, 109, 10, 9],
				[208, 92, 11, 14],
				[220, 92, 13, 11],
				[234, 97, 15, 13],
				[250, 92, 23, 20],
				[274, 92, 24, 20],
				[299, 92, 24, 20],
				[324, 96, 14, 21],
				[339, 86, 23, 26],
				[363, 86, 23, 26],
				[387, 86, 23, 26],
				[411, 86, 23, 26],
				[435, 87, 23, 25],
				[459, 87, 23, 25],
				[483, 92, 31, 20],
				[515, 92, 20, 26],
				[536, 86, 21, 26],
				[558, 86, 21, 26],
				[580, 86, 21, 26],
				[602, 87, 21, 25],
				[624, 86, 16, 26],
				[1, 119, 17, 26],
				[19, 119, 16, 26],
				[36, 120, 16, 25],
				[53, 125, 23, 20],
				[77, 119, 26, 26],
				[104, 119, 21, 26],
				[126, 119, 21, 26],
				[148, 119, 21, 26],
				[170, 119, 21, 26],
				[192, 119, 21, 26],
				[214, 128, 13, 13],
				[228, 123, 21, 23],
				[250, 119, 22, 26],
				[273, 119, 22, 26],
				[296, 119, 22, 26],
				[319, 119, 22, 26],
				[342, 119, 21, 26],
				[364, 125, 20, 20],
				[385, 123, 24, 28],
				[410, 123, 18, 22],
				[429, 123, 18, 22],
				[448, 123, 18, 22],
				[467, 123, 18, 22],
				[486, 123, 18, 22],
				[505, 122, 18, 23],
				[524, 129, 24, 16],
				[549, 129, 15, 22],
				[565, 123, 15, 22],
				[581, 123, 17, 22],
				[599, 123, 15, 22],
				[615, 123, 15, 22],
				[631, 123, 10, 22],
				[1, 156, 13, 22],
				[15, 156, 13, 22],
				[29, 156, 11, 22],
				[41, 155, 16, 23],
				[58, 156, 19, 22],
				[78, 156, 16, 22],
				[95, 156, 17, 22],
				[113, 156, 16, 22],
				[130, 156, 17, 22],
				[148, 156, 16, 22],
				[165, 160, 14, 15],
				[180, 161, 18, 18],
				[199, 156, 19, 22],
				[219, 156, 19, 22],
				[239, 156, 19, 22],
				[259, 156, 19, 22],
				[279, 156, 22, 28],
				[302, 156, 19, 28],
				[322, 156, 22, 28],
				[345, 154, 23, 24],
				[369, 158, 18, 20],
				[388, 152, 23, 26],
				[412, 156, 18, 22],
				[431, 158, 23, 26],
				[455, 162, 18, 22],
				[474, 152, 20, 26],
				[495, 156, 17, 22],
				[513, 152, 20, 26],
				[534, 156, 16, 22],
				[551, 152, 20, 26],
				[572, 156, 15, 22],
				[588, 152, 20, 26],
				[609, 156, 16, 22],
				[1, 186, 23, 26],
				[25, 190, 24, 22],
				[50, 192, 23, 20],
				[74, 190, 20, 22],
				[95, 188, 21, 24],
				[117, 192, 15, 20],
				[133, 186, 21, 26],
				[155, 190, 16, 22],
				[172, 186, 21, 26],
				[194, 190, 15, 22],
				[210, 192, 21, 26],
				[232, 196, 15, 22],
				[248, 186, 21, 26],
				[270, 190, 17, 22],
				[288, 186, 21, 26],
				[310, 190, 21, 28],
				[332, 186, 21, 26],
				[354, 190, 21, 28],
				[376, 186, 21, 26],
				[398, 190, 21, 28],
				[420, 192, 21, 26],
				[442, 190, 21, 28],
				[464, 186, 27, 26],
				[492, 185, 19, 27],
				[512, 192, 27, 20],
				[540, 190, 19, 22],
				[560, 186, 17, 26],
				[578, 190, 14, 22],
				[593, 188, 16, 24],
				[610, 192, 11, 20],
				[622, 186, 16, 26],
				[1, 224, 12, 22],
				[14, 226, 16, 26],
				[31, 224, 11, 28],
				[43, 220, 16, 26],
				[60, 230, 10, 16],
				[71, 226, 26, 26],
				[98, 224, 19, 28],
				[118, 220, 20, 32],
				[139, 224, 16, 28],
				[156, 226, 25, 26],
				[182, 224, 19, 28],
				[202, 230, 19, 16],
				[222, 220, 20, 26],
				[243, 219, 14, 27],
				[258, 226, 20, 26],
				[279, 224, 11, 28],
				[291, 226, 21, 20],
				[313, 224, 16, 22],
				[330, 226, 20, 20],
				[351, 224, 14, 22],
				[366, 226, 20, 20],
				[387, 224, 13, 22],
				[401, 220, 26, 26],
				[428, 224, 19, 22],
				[448, 226, 26, 26],
				[475, 230, 19, 22],
				[495, 220, 26, 26],
				[522, 224, 19, 22],
				[542, 226, 25, 20],
				[568, 226, 26, 26],
				[595, 230, 18, 22],
				[614, 222, 21, 24],
				[1, 259, 16, 20],
				[18, 253, 21, 26],
				[40, 257, 16, 22],
				[57, 253, 22, 26],
				[80, 257, 18, 22],
				[99, 259, 28, 20],
				[128, 263, 25, 16],
				[154, 253, 21, 26],
				[176, 257, 17, 22],
				[194, 259, 21, 26],
				[216, 263, 18, 22],
				[235, 253, 21, 26],
				[257, 257, 17, 22],
				[275, 253, 19, 26],
				[295, 257, 17, 22],
				[313, 253, 18, 26],
				[332, 257, 15, 22],
				[348, 259, 18, 26],
				[367, 263, 15, 22],
				[383, 253, 18, 26],
				[402, 257, 16, 22],
				[419, 259, 21, 26],
				[441, 260, 14, 25],
				[456, 253, 21, 26],
				[478, 257, 16, 22],
				[495, 259, 21, 20],
				[517, 260, 14, 19],
				[532, 253, 22, 26],
				[555, 257, 19, 22],
				[575, 255, 22, 24],
				[598, 259, 19, 20],
				[618, 253, 22, 26],
				[1, 292, 19, 22],
				[21, 287, 22, 27],
				[44, 291, 19, 23],
				[64, 288, 22, 26],
				[87, 292, 19, 22],
				[107, 294, 22, 26],
				[130, 298, 19, 22],
				[150, 288, 31, 26],
				[182, 292, 25, 23],
				[208, 288, 21, 26],
				[230, 292, 22, 28],
				[253, 289, 21, 25],
				[275, 288, 22, 26],
				[298, 292, 17, 22],
				[316, 288, 22, 26],
				[339, 292, 16, 22],
				[356, 288, 22, 26],
				[379, 292, 16, 22],
				[396, 292, 21, 28],
				[418, 294, 21, 26],
				[440, 292, 26, 22],
				[467, 295, 20, 19],
				[488, 292, 25, 22],
				[514, 295, 23, 19],
				[538, 292, 18, 28],
				[557, 286, 23, 28],
				[581, 286, 18, 28],
				[600, 288, 31, 26],
				[1, 326, 24, 22],
				[26, 322, 21, 27],
				[48, 326, 18, 23],
				[67, 328, 18, 26],
				[86, 332, 15, 22],
				[102, 328, 21, 26],
				[124, 329, 13, 25],
				[138, 322, 21, 26],
				[160, 323, 21, 25],
				[182, 328, 22, 20],
				[205, 322, 21, 26],
				[227, 328, 20, 20],
				[248, 328, 18, 20],
				[267, 328, 16, 20],
				[284, 323, 16, 25],
				[301, 328, 20, 26],
				[322, 328, 28, 20],
				[351, 328, 29, 20],
				[381, 328, 23, 20],
				[405, 322, 24, 26],
				[430, 322, 27, 26],
				[458, 321, 22, 27],
				[481, 328, 26, 26],
				[508, 328, 23, 20],
				[532, 328, 21, 20],
				[554, 328, 21, 20],
				[576, 328, 21, 20],
				[598, 328, 25, 26],
				[624, 328, 21, 20],
				[1, 362, 33, 20],
				[35, 362, 18, 20],
				[54, 362, 27, 20],
				[82, 355, 27, 27],
				[110, 362, 24, 20],
				[135, 362, 25, 20],
				[161, 362, 30, 20],
				[192, 362, 27, 20],
				[220, 362, 21, 20],
				[242, 362, 26, 20],
				[269, 362, 21, 20],
				[291, 362, 20, 20],
				[312, 362, 21, 20],
				[334, 362, 22, 20],
				[357, 362, 23, 20],
				[381, 362, 25, 20],
				[407, 362, 26, 26],
				[434, 362, 22, 20],
				[457, 362, 35, 20],
				[493, 362, 35, 26],
				[529, 362, 20, 20],
				[550, 362, 31, 20],
				[582, 362, 19, 20],
				[602, 362, 19, 20],
				[1, 392, 32, 20],
				[34, 392, 25, 20],
				[60, 396, 18, 16],
				[79, 390, 18, 22],
				[98, 396, 15, 16],
				[114, 396, 16, 16],
				[131, 390, 17, 22],
				[149, 396, 15, 16],
				[165, 396, 33, 16],
				[199, 396, 16, 16],
				[216, 396, 19, 16],
				[236, 389, 19, 23],
				[256, 396, 19, 16],
				[276, 396, 20, 16],
				[297, 396, 27, 16],
				[325, 396, 20, 16],
				[346, 396, 16, 16],
				[363, 396, 19, 16],
				[383, 396, 19, 22],
				[403, 396, 15, 16],
				[419, 396, 27, 16],
				[447, 396, 22, 22],
				[470, 390, 23, 28],
				[494, 396, 19, 16],
				[514, 396, 19, 22],
				[534, 396, 19, 16],
				[554, 396, 26, 16],
				[581, 396, 26, 22],
				[608, 396, 18, 16],
				[1, 426, 24, 16],
				[26, 426, 16, 16],
				[43, 426, 15, 16],
				[59, 426, 25, 16],
				[85, 426, 19, 16],
				[105, 420, 15, 22],
				[121, 420, 15, 22],
				[137, 420, 17, 28],
				[155, 420, 17, 22],
				[173, 426, 15, 16],
				[189, 426, 15, 16],
				[205, 420, 10, 22],
				[216, 420, 11, 22],
				[228, 420, 15, 28],
				[244, 426, 25, 16],
				[270, 426, 24, 16],
				[295, 420, 19, 22],
				[315, 420, 19, 22],
				[335, 420, 19, 22],
				[355, 419, 23, 29],
				[379, 426, 19, 22],
				[399, 422, 30, 20],
				[430, 426, 24, 16],
				[455, 422, 19, 20],
				[475, 420, 16, 22],
				[492, 422, 31, 20],
				[524, 426, 24, 16],
				[549, 422, 24, 20],
				[574, 426, 20, 16],
				[595, 422, 33, 20],
				[1, 463, 26, 16],
				[28, 459, 27, 20],
				[56, 463, 24, 16],
				[81, 459, 36, 20],
				[118, 463, 29, 16],
				[148, 455, 19, 30],
				[168, 460, 17, 25],
				[186, 459, 28, 20],
				[215, 457, 19, 28],
				[235, 459, 21, 20],
				[257, 463, 16, 16],
				[274, 459, 22, 20],
				[297, 463, 20, 16],
				[318, 453, 22, 26],
				[341, 457, 20, 22],
				[362, 459, 35, 26],
				[398, 463, 30, 22],
				[429, 457, 22, 23],
				[452, 461, 17, 19],
				[470, 449, 30, 30],
				[501, 453, 25, 26],
				[527, 454, 30, 25],
				[558, 459, 24, 20],
				[583, 459, 20, 26],
				[604, 463, 15, 22],
				[620, 460, 16, 20],
				[1, 493, 13, 6],
				[15, 491, 13, 7],
				[29, 491, 6, 7],
				[36, 491, 7, 7],
				[44, 493, 28, 25],
				[73, 493, 27, 25],
				[101, 486, 27, 33],
				[129, 490, 19, 28],
				[149, 491, 19, 22],
				[169, 494, 17, 19],
				[187, 493, 21, 20],
				[209, 497, 19, 22],
				[229, 489, 21, 24],
				[251, 494, 16, 19],
				[268, 493, 21, 20],
				[290, 497, 16, 16],
				[307, 493, 21, 26],
				[329, 497, 16, 22],
				[346, 493, 33, 26],
				[380, 497, 33, 22],
				[414, 493, 18, 26],
				[433, 497, 16, 22],
				[450, 493, 24, 26],
				[475, 497, 19, 22],
				[495, 493, 25, 20],
				[521, 497, 20, 16],
				[542, 493, 24, 20],
				[567, 491, 19, 22],
				[587, 493, 25, 20],
				[613, 497, 22, 16],
				[1, 520, 27, 26],
				[29, 524, 20, 22],
				[50, 520, 30, 20],
				[81, 524, 24, 16],
				[106, 520, 31, 26],
				[138, 524, 25, 22],
				[164, 520, 22, 21],
				[187, 524, 18, 17],
				[206, 520, 20, 26],
				[227, 524, 15, 22],
				[243, 520, 21, 26],
				[265, 524, 27, 22],
				[293, 520, 21, 20],
				[315, 524, 17, 22],
				[333, 520, 21, 20],
				[355, 524, 17, 22],
				[373, 520, 25, 26],
				[399, 524, 19, 22],
				[419, 520, 29, 26],
				[449, 524, 23, 22],
				[473, 520, 22, 26],
				[496, 524, 19, 22],
				[516, 520, 22, 20],
				[539, 524, 19, 16],
				[559, 520, 22, 20],
				[582, 524, 20, 16],
				[603, 520, 23, 20],
				[1, 558, 20, 16],
				[22, 554, 23, 25],
				[46, 558, 20, 22],
				[67, 554, 16, 20],
				[84, 547, 33, 27],
				[118, 551, 33, 23],
				[152, 554, 24, 26],
				[177, 558, 19, 22],
				[197, 554, 25, 26],
				[223, 558, 20, 21],
				[244, 554, 27, 26],
				[272, 558, 19, 22],
				[292, 554, 27, 26],
				[320, 558, 20, 21],
				[341, 554, 22, 26],
				[364, 558, 18, 22],
				[383, 554, 30, 26],
				[414, 558, 27, 21],
				[442, 554, 16, 20],
				[459, 547, 24, 27],
				[484, 551, 18, 23],
				[503, 549, 23, 25],
				[527, 552, 18, 22],
				[546, 554, 31, 20],
				[578, 558, 24, 16],
				[603, 547, 21, 27],
				[625, 551, 18, 23],
				[1, 587, 19, 20],
				[21, 591, 15, 16],
				[37, 581, 19, 26],
				[57, 585, 15, 22],
				[73, 582, 33, 25],
				[107, 585, 33, 22],
				[141, 581, 18, 26],
				[160, 585, 16, 22],
				[177, 587, 19, 20],
				[197, 591, 18, 22],
				[216, 583, 27, 24],
				[244, 587, 19, 20],
				[264, 582, 27, 25],
				[292, 585, 19, 22],
				[312, 581, 21, 26],
				[334, 585, 16, 22],
				[351, 587, 21, 20],
				[373, 591, 16, 16],
				[390, 581, 21, 26],
				[412, 585, 16, 22],
				[429, 581, 19, 26],
				[449, 585, 15, 22],
				[465, 583, 22, 24],
				[488, 587, 22, 26],
				[511, 582, 22, 25],
				[534, 585, 22, 28],
				[557, 581, 22, 26],
				[580, 585, 23, 28],
				[604, 582, 22, 25],
				[627, 585, 19, 22],
				[1, 619, 21, 26],
				[23, 623, 17, 22],
				[41, 614, 31, 25],
				[73, 617, 24, 22],
				[98, 619, 21, 25],
				[120, 623, 16, 21],
				[137, 619, 25, 25],
				[163, 623, 19, 21],
				[183, 619, 25, 20],
				[209, 623, 19, 16],
				[229, 633, 23, 6]
			],
			animations: {
				"font_pink_ ": [0],
				"font_pink_!": [1],
				'font_pink_"': [2],
				"font_pink_#": [3],
				font_pink_$: [4],
				"font_pink_%": [5],
				"font_pink_&": [6],
				"font_pink_'": [7],
				"font_pink_(": [8],
				"font_pink_)": [9],
				"font_pink_*": [10],
				"font_pink_+": [11],
				"font_pink_,": [12],
				"font_pink_-": [13],
				"font_pink_.": [14],
				"font_pink_/": [15],
				font_pink_0: [16],
				font_pink_1: [17],
				font_pink_2: [18],
				font_pink_3: [19],
				font_pink_4: [20],
				font_pink_5: [21],
				font_pink_6: [22],
				font_pink_7: [23],
				font_pink_8: [24],
				font_pink_9: [25],
				"font_pink_:": [26],
				"font_pink_;": [27],
				"font_pink_<": [28],
				"font_pink_=": [29],
				"font_pink_>": [30],
				"font_pink_?": [31],
				"font_pink_@": [32],
				font_pink_A: [33],
				font_pink_B: [34],
				font_pink_C: [35],
				font_pink_D: [36],
				font_pink_E: [37],
				font_pink_F: [38],
				font_pink_G: [39],
				font_pink_H: [40],
				font_pink_I: [41],
				font_pink_J: [42],
				font_pink_K: [43],
				font_pink_L: [44],
				font_pink_M: [45],
				font_pink_N: [46],
				font_pink_O: [47],
				font_pink_P: [48],
				font_pink_Q: [49],
				font_pink_R: [50],
				font_pink_S: [51],
				font_pink_T: [52],
				font_pink_U: [53],
				font_pink_V: [54],
				font_pink_W: [55],
				font_pink_X: [56],
				font_pink_Y: [57],
				font_pink_Z: [58],
				"font_pink_[": [59],
				"font_pink_\\": [60],
				"font_pink_]": [61],
				"font_pink_^": [62],
				font_pink__: [63],
				"font_pink_`": [64],
				font_pink_a: [65],
				font_pink_b: [66],
				font_pink_c: [67],
				font_pink_d: [68],
				font_pink_e: [69],
				font_pink_f: [70],
				font_pink_g: [71],
				font_pink_h: [72],
				font_pink_i: [73],
				font_pink_j: [74],
				font_pink_k: [75],
				font_pink_l: [76],
				font_pink_m: [77],
				font_pink_n: [78],
				font_pink_o: [79],
				font_pink_p: [80],
				font_pink_q: [81],
				font_pink_r: [82],
				font_pink_s: [83],
				font_pink_t: [84],
				font_pink_u: [85],
				font_pink_v: [86],
				font_pink_w: [87],
				font_pink_x: [88],
				font_pink_y: [89],
				font_pink_z: [90],
				"font_pink_{": [91],
				"font_pink_|": [92],
				"font_pink_}": [93],
				"font_pink_~": [94],
				"font_pink_¡": [95],
				"font_pink_¢": [96],
				"font_pink_£": [97],
				"font_pink_¤": [98],
				"font_pink_¥": [99],
				"font_pink_¦": [100],
				"font_pink_§": [101],
				"font_pink_¨": [102],
				"font_pink_©": [103],
				"font_pink_ª": [104],
				"font_pink_«": [105],
				"font_pink_¬": [106],
				"font_pink_­": [107],
				"font_pink_®": [108],
				"font_pink_¯": [109],
				"font_pink_°": [110],
				"font_pink_±": [111],
				"font_pink_²": [112],
				"font_pink_³": [113],
				"font_pink_´": [114],
				"font_pink_µ": [115],
				"font_pink_¶": [116],
				"font_pink_·": [117],
				"font_pink_¸": [118],
				"font_pink_¹": [119],
				"font_pink_º": [120],
				"font_pink_»": [121],
				"font_pink_¼": [122],
				"font_pink_½": [123],
				"font_pink_¾": [124],
				"font_pink_¿": [125],
				"font_pink_À": [126],
				"font_pink_Á": [127],
				"font_pink_Â": [128],
				"font_pink_Ã": [129],
				"font_pink_Ä": [130],
				"font_pink_Å": [131],
				"font_pink_Æ": [132],
				"font_pink_Ç": [133],
				"font_pink_È": [134],
				"font_pink_É": [135],
				"font_pink_Ê": [136],
				"font_pink_Ë": [137],
				"font_pink_Ì": [138],
				"font_pink_Í": [139],
				"font_pink_Î": [140],
				"font_pink_Ï": [141],
				"font_pink_Ð": [142],
				"font_pink_Ñ": [143],
				"font_pink_Ò": [144],
				"font_pink_Ó": [145],
				"font_pink_Ô": [146],
				"font_pink_Õ": [147],
				"font_pink_Ö": [148],
				"font_pink_×": [149],
				"font_pink_Ø": [150],
				"font_pink_Ù": [151],
				"font_pink_Ú": [152],
				"font_pink_Û": [153],
				"font_pink_Ü": [154],
				"font_pink_Ý": [155],
				"font_pink_Þ": [156],
				"font_pink_ß": [157],
				"font_pink_à": [158],
				"font_pink_á": [159],
				"font_pink_â": [160],
				"font_pink_ã": [161],
				"font_pink_ä": [162],
				"font_pink_å": [163],
				"font_pink_æ": [164],
				"font_pink_ç": [165],
				"font_pink_è": [166],
				"font_pink_é": [167],
				"font_pink_ê": [168],
				"font_pink_ë": [169],
				"font_pink_ì": [170],
				"font_pink_í": [171],
				"font_pink_î": [172],
				"font_pink_ï": [173],
				"font_pink_ð": [174],
				"font_pink_ñ": [175],
				"font_pink_ò": [176],
				"font_pink_ó": [177],
				"font_pink_ô": [178],
				"font_pink_õ": [179],
				"font_pink_ö": [180],
				"font_pink_÷": [181],
				"font_pink_ø": [182],
				"font_pink_ù": [183],
				"font_pink_ú": [184],
				"font_pink_û": [185],
				"font_pink_ü": [186],
				"font_pink_ý": [187],
				"font_pink_þ": [188],
				"font_pink_ÿ": [189],
				"font_pink_Ā": [190],
				"font_pink_ā": [191],
				"font_pink_Ă": [192],
				"font_pink_ă": [193],
				"font_pink_Ą": [194],
				"font_pink_ą": [195],
				"font_pink_Ć": [196],
				"font_pink_ć": [197],
				"font_pink_Ĉ": [198],
				"font_pink_ĉ": [199],
				"font_pink_Ċ": [200],
				"font_pink_ċ": [201],
				"font_pink_Č": [202],
				"font_pink_č": [203],
				"font_pink_Ď": [204],
				"font_pink_ď": [205],
				"font_pink_Đ": [206],
				"font_pink_đ": [207],
				"font_pink_Ē": [208],
				"font_pink_ē": [209],
				"font_pink_Ĕ": [210],
				"font_pink_ĕ": [211],
				"font_pink_Ė": [212],
				"font_pink_ė": [213],
				"font_pink_Ę": [214],
				"font_pink_ę": [215],
				"font_pink_Ě": [216],
				"font_pink_ě": [217],
				"font_pink_Ĝ": [218],
				"font_pink_ĝ": [219],
				"font_pink_Ğ": [220],
				"font_pink_ğ": [221],
				"font_pink_Ġ": [222],
				"font_pink_ġ": [223],
				"font_pink_Ģ": [224],
				"font_pink_ģ": [225],
				"font_pink_Ĥ": [226],
				"font_pink_ĥ": [227],
				"font_pink_Ħ": [228],
				"font_pink_ħ": [229],
				"font_pink_Ĩ": [230],
				"font_pink_ĩ": [231],
				"font_pink_Ī": [232],
				"font_pink_ī": [233],
				"font_pink_Ĭ": [234],
				"font_pink_ĭ": [235],
				"font_pink_Į": [236],
				"font_pink_į": [237],
				"font_pink_İ": [238],
				"font_pink_ı": [239],
				"font_pink_Ĳ": [240],
				"font_pink_ĳ": [241],
				"font_pink_Ĵ": [242],
				"font_pink_ĵ": [243],
				"font_pink_Ķ": [244],
				"font_pink_ķ": [245],
				"font_pink_ĸ": [246],
				"font_pink_Ĺ": [247],
				"font_pink_ĺ": [248],
				"font_pink_Ļ": [249],
				"font_pink_ļ": [250],
				"font_pink_Ľ": [251],
				"font_pink_ľ": [252],
				"font_pink_Ŀ": [253],
				"font_pink_ŀ": [254],
				"font_pink_Ł": [255],
				"font_pink_ł": [256],
				"font_pink_Ń": [257],
				"font_pink_ń": [258],
				"font_pink_Ņ": [259],
				"font_pink_ņ": [260],
				"font_pink_Ň": [261],
				"font_pink_ň": [262],
				"font_pink_ŉ": [263],
				"font_pink_Ŋ": [264],
				"font_pink_ŋ": [265],
				"font_pink_Ō": [266],
				"font_pink_ō": [267],
				"font_pink_Ŏ": [268],
				"font_pink_ŏ": [269],
				"font_pink_Ő": [270],
				"font_pink_ő": [271],
				"font_pink_Œ": [272],
				"font_pink_œ": [273],
				"font_pink_Ŕ": [274],
				"font_pink_ŕ": [275],
				"font_pink_Ŗ": [276],
				"font_pink_ŗ": [277],
				"font_pink_Ř": [278],
				"font_pink_ř": [279],
				"font_pink_Ś": [280],
				"font_pink_ś": [281],
				"font_pink_Ŝ": [282],
				"font_pink_ŝ": [283],
				"font_pink_Ş": [284],
				"font_pink_ş": [285],
				"font_pink_Š": [286],
				"font_pink_š": [287],
				"font_pink_Ţ": [288],
				"font_pink_ţ": [289],
				"font_pink_Ť": [290],
				"font_pink_ť": [291],
				"font_pink_Ŧ": [292],
				"font_pink_ŧ": [293],
				"font_pink_Ũ": [294],
				"font_pink_ũ": [295],
				"font_pink_Ū": [296],
				"font_pink_ū": [297],
				"font_pink_Ŭ": [298],
				"font_pink_ŭ": [299],
				"font_pink_Ů": [300],
				"font_pink_ů": [301],
				"font_pink_Ű": [302],
				"font_pink_ű": [303],
				"font_pink_Ų": [304],
				"font_pink_ų": [305],
				"font_pink_Ŵ": [306],
				"font_pink_ŵ": [307],
				"font_pink_Ŷ": [308],
				"font_pink_ŷ": [309],
				"font_pink_Ÿ": [310],
				"font_pink_Ź": [311],
				"font_pink_ź": [312],
				"font_pink_Ż": [313],
				"font_pink_ż": [314],
				"font_pink_Ž": [315],
				"font_pink_ž": [316],
				"font_pink_ſ": [317],
				"font_pink_ƒ": [318],
				"font_pink_Ơ": [319],
				"font_pink_ơ": [320],
				"font_pink_Ư": [321],
				"font_pink_ư": [322],
				"font_pink_ǰ": [323],
				"font_pink_Ǻ": [324],
				"font_pink_ǻ": [325],
				"font_pink_Ǽ": [326],
				"font_pink_ǽ": [327],
				"font_pink_Ǿ": [328],
				"font_pink_ǿ": [329],
				"font_pink_Ș": [330],
				"font_pink_ș": [331],
				"font_pink_Ț": [332],
				"font_pink_ț": [333],
				"font_pink_Ѐ": [334],
				"font_pink_Ё": [335],
				"font_pink_Ђ": [336],
				"font_pink_Ѓ": [337],
				"font_pink_Є": [338],
				"font_pink_Ѕ": [339],
				"font_pink_І": [340],
				"font_pink_Ї": [341],
				"font_pink_Ј": [342],
				"font_pink_Љ": [343],
				"font_pink_Њ": [344],
				"font_pink_Ћ": [345],
				"font_pink_Ќ": [346],
				"font_pink_Ѝ": [347],
				"font_pink_Ў": [348],
				"font_pink_Џ": [349],
				"font_pink_А": [350],
				"font_pink_Б": [351],
				"font_pink_В": [352],
				"font_pink_Г": [353],
				"font_pink_Д": [354],
				"font_pink_Е": [355],
				"font_pink_Ж": [356],
				"font_pink_З": [357],
				"font_pink_И": [358],
				"font_pink_Й": [359],
				"font_pink_К": [360],
				"font_pink_Л": [361],
				"font_pink_М": [362],
				"font_pink_Н": [363],
				"font_pink_О": [364],
				"font_pink_П": [365],
				"font_pink_Р": [366],
				"font_pink_С": [367],
				"font_pink_Т": [368],
				"font_pink_У": [369],
				"font_pink_Ф": [370],
				"font_pink_Х": [371],
				"font_pink_Ц": [372],
				"font_pink_Ч": [373],
				"font_pink_Ш": [374],
				"font_pink_Щ": [375],
				"font_pink_Ъ": [376],
				"font_pink_Ы": [377],
				"font_pink_Ь": [378],
				"font_pink_Э": [379],
				"font_pink_Ю": [380],
				"font_pink_Я": [381],
				"font_pink_а": [382],
				"font_pink_б": [383],
				"font_pink_в": [384],
				"font_pink_г": [385],
				"font_pink_д": [386],
				"font_pink_е": [387],
				"font_pink_ж": [388],
				"font_pink_з": [389],
				"font_pink_и": [390],
				"font_pink_й": [391],
				"font_pink_к": [392],
				"font_pink_л": [393],
				"font_pink_м": [394],
				"font_pink_н": [395],
				"font_pink_о": [396],
				"font_pink_п": [397],
				"font_pink_р": [398],
				"font_pink_с": [399],
				"font_pink_т": [400],
				"font_pink_у": [401],
				"font_pink_ф": [402],
				"font_pink_х": [403],
				"font_pink_ц": [404],
				"font_pink_ч": [405],
				"font_pink_ш": [406],
				"font_pink_щ": [407],
				"font_pink_ъ": [408],
				"font_pink_ы": [409],
				"font_pink_ь": [410],
				"font_pink_э": [411],
				"font_pink_ю": [412],
				"font_pink_я": [413],
				"font_pink_ѐ": [414],
				"font_pink_ё": [415],
				"font_pink_ђ": [416],
				"font_pink_ѓ": [417],
				"font_pink_є": [418],
				"font_pink_ѕ": [419],
				"font_pink_і": [420],
				"font_pink_ї": [421],
				"font_pink_ј": [422],
				"font_pink_љ": [423],
				"font_pink_њ": [424],
				"font_pink_ћ": [425],
				"font_pink_ќ": [426],
				"font_pink_ѝ": [427],
				"font_pink_ў": [428],
				"font_pink_џ": [429],
				"font_pink_Ѡ": [430],
				"font_pink_ѡ": [431],
				"font_pink_Ѣ": [432],
				"font_pink_ѣ": [433],
				"font_pink_Ѥ": [434],
				"font_pink_ѥ": [435],
				"font_pink_Ѧ": [436],
				"font_pink_ѧ": [437],
				"font_pink_Ѩ": [438],
				"font_pink_ѩ": [439],
				"font_pink_Ѫ": [440],
				"font_pink_ѫ": [441],
				"font_pink_Ѭ": [442],
				"font_pink_ѭ": [443],
				"font_pink_Ѯ": [444],
				"font_pink_ѯ": [445],
				"font_pink_Ѱ": [446],
				"font_pink_ѱ": [447],
				"font_pink_Ѳ": [448],
				"font_pink_ѳ": [449],
				"font_pink_Ѵ": [450],
				"font_pink_ѵ": [451],
				"font_pink_Ѷ": [452],
				"font_pink_ѷ": [453],
				"font_pink_Ѹ": [454],
				"font_pink_ѹ": [455],
				"font_pink_Ѻ": [456],
				"font_pink_ѻ": [457],
				"font_pink_Ѽ": [458],
				"font_pink_ѽ": [459],
				"font_pink_Ѿ": [460],
				"font_pink_ѿ": [461],
				"font_pink_Ҁ": [462],
				"font_pink_ҁ": [463],
				"font_pink_҂": [464],
				"font_pink_҃": [465],
				"font_pink_҄": [466],
				"font_pink_҅": [467],
				"font_pink_҆": [468],
				"font_pink_҈": [469],
				"font_pink_҉": [470],
				"font_pink_Ҋ": [471],
				"font_pink_ҋ": [472],
				"font_pink_Ҍ": [473],
				"font_pink_ҍ": [474],
				"font_pink_Ҏ": [475],
				"font_pink_ҏ": [476],
				"font_pink_Ґ": [477],
				"font_pink_ґ": [478],
				"font_pink_Ғ": [479],
				"font_pink_ғ": [480],
				"font_pink_Ҕ": [481],
				"font_pink_ҕ": [482],
				"font_pink_Җ": [483],
				"font_pink_җ": [484],
				"font_pink_Ҙ": [485],
				"font_pink_ҙ": [486],
				"font_pink_Қ": [487],
				"font_pink_қ": [488],
				"font_pink_Ҝ": [489],
				"font_pink_ҝ": [490],
				"font_pink_Ҟ": [491],
				"font_pink_ҟ": [492],
				"font_pink_Ҡ": [493],
				"font_pink_ҡ": [494],
				"font_pink_Ң": [495],
				"font_pink_ң": [496],
				"font_pink_Ҥ": [497],
				"font_pink_ҥ": [498],
				"font_pink_Ҧ": [499],
				"font_pink_ҧ": [500],
				"font_pink_Ҩ": [501],
				"font_pink_ҩ": [502],
				"font_pink_Ҫ": [503],
				"font_pink_ҫ": [504],
				"font_pink_Ҭ": [505],
				"font_pink_ҭ": [506],
				"font_pink_Ү": [507],
				"font_pink_ү": [508],
				"font_pink_Ұ": [509],
				"font_pink_ұ": [510],
				"font_pink_Ҳ": [511],
				"font_pink_ҳ": [512],
				"font_pink_Ҵ": [513],
				"font_pink_ҵ": [514],
				"font_pink_Ҷ": [515],
				"font_pink_ҷ": [516],
				"font_pink_Ҹ": [517],
				"font_pink_ҹ": [518],
				"font_pink_Һ": [519],
				"font_pink_һ": [520],
				"font_pink_Ҽ": [521],
				"font_pink_ҽ": [522],
				"font_pink_Ҿ": [523],
				"font_pink_ҿ": [524],
				"font_pink_Ӏ": [525],
				"font_pink_Ӂ": [526],
				"font_pink_ӂ": [527],
				"font_pink_Ӄ": [528],
				"font_pink_ӄ": [529],
				"font_pink_Ӆ": [530],
				"font_pink_ӆ": [531],
				"font_pink_Ӈ": [532],
				"font_pink_ӈ": [533],
				"font_pink_Ӊ": [534],
				"font_pink_ӊ": [535],
				"font_pink_Ӌ": [536],
				"font_pink_ӌ": [537],
				"font_pink_Ӎ": [538],
				"font_pink_ӎ": [539],
				"font_pink_ӏ": [540],
				"font_pink_Ӑ": [541],
				"font_pink_ӑ": [542],
				"font_pink_Ӓ": [543],
				"font_pink_ӓ": [544],
				"font_pink_Ӕ": [545],
				"font_pink_ӕ": [546],
				"font_pink_Ӗ": [547],
				"font_pink_ӗ": [548],
				"font_pink_Ә": [549],
				"font_pink_ә": [550],
				"font_pink_Ӛ": [551],
				"font_pink_ӛ": [552],
				"font_pink_Ӝ": [553],
				"font_pink_ӝ": [554],
				"font_pink_Ӟ": [555],
				"font_pink_ӟ": [556],
				"font_pink_Ӡ": [557],
				"font_pink_ӡ": [558],
				"font_pink_Ӣ": [559],
				"font_pink_ӣ": [560],
				"font_pink_Ӥ": [561],
				"font_pink_ӥ": [562],
				"font_pink_Ӧ": [563],
				"font_pink_ӧ": [564],
				"font_pink_Ө": [565],
				"font_pink_ө": [566],
				"font_pink_Ӫ": [567],
				"font_pink_ӫ": [568],
				"font_pink_Ӭ": [569],
				"font_pink_ӭ": [570],
				"font_pink_Ӯ": [571],
				"font_pink_ӯ": [572],
				"font_pink_Ӱ": [573],
				"font_pink_ӱ": [574],
				"font_pink_Ӳ": [575],
				"font_pink_ӳ": [576],
				"font_pink_Ӵ": [577],
				"font_pink_ӵ": [578],
				"font_pink_Ӷ": [579],
				"font_pink_ӷ": [580],
				"font_pink_Ӹ": [581],
				"font_pink_ӹ": [582],
				"font_pink_Ӻ": [583],
				"font_pink_ӻ": [584],
				"font_pink_Ӽ": [585],
				"font_pink_ӽ": [586],
				"font_pink_Ӿ": [587],
				"font_pink_ӿ": [588],
				"font_pink_…": [589]
			}
		}, {
			images: ["font_blue"],
			frames: [
				[1, 33, 2, 2],
				[4, 4, 15, 31],
				[20, 4, 18, 13],
				[39, 4, 24, 31],
				[64, 2, 24, 36],
				[89, 4, 35, 31],
				[125, 4, 33, 31],
				[159, 4, 9, 13],
				[169, 1, 20, 40],
				[190, 1, 19, 40],
				[210, 2, 20, 19],
				[231, 10, 20, 19],
				[252, 27, 12, 15],
				[265, 20, 14, 6],
				[280, 26, 10, 9],
				[291, 2, 24, 38],
				[316, 4, 24, 31],
				[341, 4, 20, 31],
				[362, 4, 26, 31],
				[389, 4, 26, 31],
				[416, 4, 24, 31],
				[441, 4, 25, 31],
				[467, 4, 24, 31],
				[492, 4, 24, 31],
				[517, 4, 25, 31],
				[543, 4, 24, 31],
				[568, 11, 13, 24],
				[582, 11, 15, 31],
				[598, 8, 20, 23],
				[619, 13, 20, 13],
				[640, 8, 20, 23],
				[661, 4, 20, 31],
				[682, 4, 36, 37],
				[719, 4, 33, 31],
				[753, 4, 30, 31],
				[784, 4, 29, 31],
				[814, 4, 33, 31],
				[848, 4, 30, 31],
				[879, 4, 31, 31],
				[1, 45, 31, 31],
				[33, 45, 39, 31],
				[73, 45, 22, 31],
				[96, 45, 28, 41],
				[125, 45, 36, 31],
				[162, 45, 28, 31],
				[191, 45, 44, 31],
				[236, 45, 38, 31],
				[275, 45, 31, 31],
				[307, 45, 30, 31],
				[338, 45, 31, 41],
				[370, 45, 31, 31],
				[402, 45, 26, 31],
				[429, 45, 30, 31],
				[460, 45, 33, 31],
				[494, 45, 31, 31],
				[526, 45, 46, 31],
				[573, 45, 36, 31],
				[610, 45, 31, 31],
				[642, 45, 32, 31],
				[675, 43, 22, 39],
				[698, 43, 8, 37],
				[707, 43, 22, 39],
				[730, 45, 22, 20],
				[753, 77, 22, 5],
				[776, 43, 12, 9],
				[789, 52, 27, 24],
				[817, 43, 26, 33],
				[844, 52, 23, 24],
				[868, 43, 27, 33],
				[896, 52, 23, 24],
				[1, 87, 31, 43],
				[33, 95, 31, 35],
				[65, 87, 28, 33],
				[94, 87, 14, 33],
				[109, 87, 22, 43],
				[132, 87, 28, 33],
				[161, 87, 14, 33],
				[176, 96, 40, 24],
				[217, 96, 28, 24],
				[246, 96, 25, 24],
				[272, 96, 28, 34],
				[301, 96, 26, 34],
				[328, 96, 24, 24],
				[353, 96, 22, 24],
				[376, 91, 18, 29],
				[395, 96, 27, 24],
				[423, 96, 25, 25],
				[449, 96, 36, 25],
				[486, 96, 28, 24],
				[515, 96, 32, 34],
				[548, 96, 24, 24],
				[573, 87, 22, 39],
				[596, 87, 6, 43],
				[603, 87, 23, 39],
				[627, 100, 21, 9],
				[649, 96, 15, 32],
				[665, 89, 24, 31],
				[690, 89, 27, 31],
				[718, 94, 20, 20],
				[739, 89, 27, 31],
				[767, 87, 6, 43],
				[774, 87, 24, 38],
				[799, 88, 16, 7],
				[816, 89, 32, 31],
				[849, 89, 19, 16],
				[869, 99, 22, 18],
				[892, 102, 20, 12],
				[913, 105, 14, 6],
				[1, 140, 32, 31],
				[34, 135, 22, 5],
				[57, 140, 15, 14],
				[73, 146, 20, 25],
				[94, 140, 18, 20],
				[113, 140, 18, 20],
				[132, 138, 14, 9],
				[147, 147, 30, 34],
				[178, 138, 25, 38],
				[204, 151, 10, 9],
				[215, 169, 13, 12],
				[229, 140, 15, 20],
				[245, 140, 19, 17],
				[265, 150, 22, 18],
				[288, 140, 34, 31],
				[323, 140, 34, 31],
				[358, 140, 34, 31],
				[393, 147, 20, 32],
				[414, 131, 33, 40],
				[448, 131, 33, 40],
				[482, 131, 33, 40],
				[516, 131, 33, 40],
				[550, 132, 33, 39],
				[584, 133, 33, 38],
				[618, 140, 45, 31],
				[664, 140, 29, 41],
				[694, 131, 30, 40],
				[725, 131, 30, 40],
				[756, 131, 30, 40],
				[787, 132, 30, 39],
				[818, 131, 22, 40],
				[841, 131, 24, 40],
				[866, 131, 23, 40],
				[890, 132, 23, 39],
				[1, 191, 33, 31],
				[35, 182, 38, 40],
				[74, 182, 31, 40],
				[106, 182, 31, 40],
				[138, 182, 31, 40],
				[170, 182, 31, 40],
				[202, 183, 31, 39],
				[234, 197, 19, 19],
				[254, 189, 31, 34],
				[286, 182, 33, 40],
				[320, 182, 33, 40],
				[354, 182, 33, 40],
				[388, 183, 33, 39],
				[422, 182, 31, 40],
				[454, 191, 29, 31],
				[484, 189, 35, 43],
				[520, 189, 27, 33],
				[548, 189, 27, 33],
				[576, 189, 27, 33],
				[604, 189, 27, 33],
				[632, 190, 27, 32],
				[660, 187, 27, 35],
				[688, 198, 36, 24],
				[725, 198, 23, 34],
				[749, 189, 23, 33],
				[773, 189, 25, 33],
				[799, 189, 23, 33],
				[823, 190, 23, 32],
				[847, 189, 14, 33],
				[862, 189, 18, 33],
				[881, 189, 17, 33],
				[899, 190, 16, 32],
				[1, 239, 25, 34],
				[27, 240, 28, 33],
				[56, 240, 25, 33],
				[82, 240, 26, 33],
				[109, 240, 25, 33],
				[135, 240, 25, 33],
				[161, 241, 25, 32],
				[187, 247, 20, 22],
				[208, 247, 26, 27],
				[235, 240, 27, 33],
				[263, 240, 27, 33],
				[291, 240, 27, 33],
				[319, 241, 27, 32],
				[347, 240, 32, 43],
				[380, 240, 28, 43],
				[409, 241, 32, 42],
				[442, 237, 33, 36],
				[476, 243, 27, 30],
				[504, 233, 33, 40],
				[538, 240, 27, 33],
				[566, 242, 33, 41],
				[600, 249, 27, 34],
				[628, 233, 30, 40],
				[659, 240, 25, 33],
				[685, 233, 29, 40],
				[715, 240, 24, 33],
				[740, 233, 29, 40],
				[770, 240, 23, 33],
				[794, 233, 29, 40],
				[824, 240, 24, 33],
				[849, 233, 33, 40],
				[883, 240, 36, 33],
				[1, 294, 33, 31],
				[35, 292, 30, 33],
				[66, 289, 30, 36],
				[97, 295, 23, 30],
				[121, 285, 30, 40],
				[152, 292, 23, 33],
				[176, 286, 30, 39],
				[207, 292, 23, 33],
				[231, 294, 30, 41],
				[262, 301, 23, 33],
				[286, 285, 30, 40],
				[317, 292, 25, 33],
				[343, 285, 31, 40],
				[375, 292, 31, 43],
				[407, 285, 31, 40],
				[439, 292, 31, 43],
				[471, 285, 31, 40],
				[503, 292, 31, 43],
				[535, 294, 31, 40],
				[567, 292, 31, 43],
				[599, 285, 39, 40],
				[639, 284, 28, 41],
				[668, 294, 39, 31],
				[708, 292, 28, 33],
				[737, 285, 24, 40],
				[762, 292, 18, 33],
				[781, 289, 22, 36],
				[804, 295, 15, 30],
				[820, 285, 23, 40],
				[844, 292, 17, 33],
				[862, 294, 22, 41],
				[885, 292, 16, 43],
				[902, 285, 22, 40],
				[925, 301, 14, 24],
				[1, 346, 38, 41],
				[40, 344, 28, 43],
				[69, 338, 29, 49],
				[99, 344, 24, 43],
				[124, 346, 36, 40],
				[161, 344, 28, 42],
				[190, 353, 28, 24],
				[219, 337, 28, 40],
				[248, 336, 20, 41],
				[269, 346, 28, 40],
				[298, 344, 16, 42],
				[315, 346, 31, 31],
				[347, 344, 22, 33],
				[370, 346, 28, 31],
				[399, 344, 20, 33],
				[420, 346, 28, 31],
				[449, 344, 18, 33],
				[468, 337, 38, 40],
				[507, 344, 28, 33],
				[536, 346, 38, 40],
				[575, 353, 28, 33],
				[604, 337, 38, 40],
				[643, 344, 28, 33],
				[672, 346, 36, 31],
				[709, 346, 38, 41],
				[748, 353, 25, 34],
				[774, 340, 31, 37],
				[806, 347, 25, 30],
				[832, 337, 31, 40],
				[864, 344, 25, 33],
				[890, 337, 32, 40],
				[1, 397, 27, 33],
				[29, 399, 42, 31],
				[72, 406, 37, 24],
				[110, 390, 31, 40],
				[142, 397, 24, 33],
				[167, 399, 31, 40],
				[199, 406, 26, 33],
				[226, 390, 31, 40],
				[258, 397, 24, 33],
				[283, 390, 27, 40],
				[311, 397, 24, 33],
				[336, 390, 26, 40],
				[363, 397, 22, 33],
				[386, 399, 26, 41],
				[413, 406, 22, 34],
				[436, 390, 26, 40],
				[463, 397, 23, 33],
				[487, 399, 30, 41],
				[518, 402, 20, 38],
				[539, 390, 30, 40],
				[570, 397, 23, 33],
				[594, 399, 30, 31],
				[625, 401, 19, 29],
				[645, 390, 33, 40],
				[679, 397, 27, 33],
				[707, 393, 33, 37],
				[741, 400, 27, 30],
				[769, 390, 33, 40],
				[803, 397, 27, 33],
				[831, 388, 33, 42],
				[865, 395, 27, 35],
				[893, 390, 33, 40],
				[1, 450, 27, 33],
				[29, 452, 33, 41],
				[63, 459, 27, 34],
				[91, 443, 46, 40],
				[138, 450, 36, 34],
				[175, 443, 31, 40],
				[207, 450, 32, 43],
				[240, 444, 31, 39],
				[272, 443, 32, 40],
				[305, 450, 24, 33],
				[330, 443, 32, 40],
				[363, 450, 24, 33],
				[388, 443, 32, 40],
				[421, 450, 24, 33],
				[446, 450, 31, 43],
				[478, 452, 30, 41],
				[509, 450, 38, 33],
				[548, 455, 30, 28],
				[579, 450, 37, 33],
				[617, 455, 34, 28],
				[652, 450, 26, 43],
				[679, 441, 34, 42],
				[714, 441, 27, 42],
				[742, 443, 45, 40],
				[788, 450, 36, 33],
				[825, 443, 31, 41],
				[857, 450, 27, 34],
				[885, 452, 26, 39],
				[912, 459, 22, 32],
				[1, 504, 30, 40],
				[32, 506, 18, 38],
				[51, 495, 30, 40],
				[82, 496, 30, 39],
				[113, 504, 33, 31],
				[147, 495, 30, 40],
				[178, 504, 29, 31],
				[208, 504, 26, 31],
				[235, 504, 22, 31],
				[258, 496, 23, 39],
				[282, 504, 28, 41],
				[311, 504, 41, 31],
				[353, 504, 42, 31],
				[396, 504, 34, 31],
				[431, 495, 35, 40],
				[467, 495, 39, 40],
				[507, 494, 32, 41],
				[540, 504, 39, 40],
				[580, 504, 33, 31],
				[614, 504, 30, 31],
				[645, 504, 30, 31],
				[676, 504, 30, 31],
				[707, 504, 37, 40],
				[745, 504, 30, 31],
				[776, 504, 50, 31],
				[827, 504, 27, 31],
				[855, 504, 39, 31],
				[895, 494, 39, 41],
				[1, 548, 35, 31],
				[37, 548, 36, 31],
				[74, 548, 44, 31],
				[119, 548, 39, 31],
				[159, 548, 31, 31],
				[191, 548, 39, 31],
				[231, 548, 30, 31],
				[262, 548, 29, 31],
				[292, 548, 30, 31],
				[323, 548, 32, 31],
				[356, 548, 35, 31],
				[392, 548, 36, 31],
				[429, 548, 39, 40],
				[469, 548, 33, 31],
				[503, 548, 52, 31],
				[556, 548, 52, 40],
				[609, 548, 29, 31],
				[639, 548, 46, 31],
				[686, 548, 28, 31],
				[715, 548, 28, 31],
				[744, 548, 47, 31],
				[792, 548, 36, 31],
				[829, 555, 27, 24],
				[857, 546, 27, 33],
				[885, 555, 23, 24],
				[909, 555, 23, 24],
				[1, 590, 25, 33],
				[27, 599, 23, 24],
				[51, 599, 50, 24],
				[102, 599, 23, 24],
				[126, 599, 27, 24],
				[154, 589, 27, 34],
				[182, 599, 27, 24],
				[210, 599, 29, 24],
				[240, 599, 40, 24],
				[281, 599, 28, 24],
				[310, 599, 25, 24],
				[336, 599, 28, 24],
				[365, 599, 28, 34],
				[394, 599, 23, 24],
				[418, 599, 40, 24],
				[459, 599, 32, 34],
				[492, 590, 34, 43],
				[527, 599, 28, 24],
				[556, 599, 27, 34],
				[584, 599, 27, 24],
				[612, 599, 39, 24],
				[652, 599, 39, 34],
				[692, 599, 27, 24],
				[720, 599, 35, 24],
				[756, 599, 23, 24],
				[780, 599, 22, 24],
				[803, 599, 36, 24],
				[840, 599, 28, 24],
				[869, 590, 23, 33],
				[893, 591, 23, 32],
				[1, 635, 25, 43],
				[27, 635, 25, 33],
				[53, 644, 23, 24],
				[77, 644, 22, 24],
				[100, 635, 14, 33],
				[115, 636, 16, 32],
				[132, 635, 22, 43],
				[155, 644, 37, 24],
				[193, 644, 35, 24],
				[229, 635, 28, 33],
				[258, 635, 27, 33],
				[286, 635, 27, 33],
				[314, 634, 33, 44],
				[348, 644, 27, 34],
				[376, 637, 45, 31],
				[422, 644, 35, 24],
				[458, 637, 28, 31],
				[487, 635, 24, 33],
				[512, 637, 46, 31],
				[559, 644, 35, 24],
				[595, 637, 35, 31],
				[631, 644, 30, 24],
				[662, 637, 48, 31],
				[711, 644, 38, 24],
				[750, 637, 39, 31],
				[790, 644, 35, 24],
				[826, 637, 53, 31],
				[880, 644, 43, 24],
				[1, 688, 27, 45],
				[29, 695, 24, 38],
				[54, 693, 40, 31],
				[95, 691, 28, 43],
				[124, 693, 31, 31],
				[156, 700, 25, 24],
				[182, 693, 33, 31],
				[216, 700, 29, 24],
				[246, 685, 33, 39],
				[280, 691, 29, 33],
				[310, 693, 52, 41],
				[363, 700, 46, 34],
				[410, 691, 33, 36],
				[444, 698, 26, 28],
				[471, 679, 45, 45],
				[517, 685, 38, 39],
				[556, 686, 45, 38],
				[602, 693, 35, 31],
				[638, 693, 29, 41],
				[668, 700, 23, 34],
				[692, 696, 23, 29],
				[716, 693, 19, 9],
				[736, 691, 19, 8],
				[756, 691, 8, 9],
				[765, 691, 9, 9],
				[775, 695, 41, 37],
				[817, 693, 40, 39],
				[858, 683, 39, 50],
				[898, 690, 27, 42],
				[1, 738, 28, 33],
				[30, 742, 25, 29],
				[56, 740, 30, 31],
				[87, 747, 28, 34],
				[116, 735, 30, 36],
				[147, 742, 22, 29],
				[170, 740, 30, 31],
				[201, 747, 24, 24],
				[226, 740, 30, 41],
				[257, 747, 23, 34],
				[281, 740, 50, 40],
				[332, 747, 50, 34],
				[383, 740, 27, 40],
				[411, 747, 23, 33],
				[435, 740, 35, 40],
				[471, 747, 27, 34],
				[499, 740, 37, 31],
				[537, 747, 29, 24],
				[567, 740, 35, 31],
				[603, 738, 27, 33],
				[631, 740, 37, 31],
				[669, 747, 32, 24],
				[702, 740, 39, 40],
				[742, 747, 28, 34],
				[771, 740, 44, 31],
				[816, 747, 35, 24],
				[852, 740, 46, 41],
				[899, 747, 36, 34],
				[1, 792, 33, 33],
				[35, 799, 27, 25],
				[63, 792, 29, 40],
				[93, 799, 23, 33],
				[117, 792, 30, 40],
				[148, 799, 40, 33],
				[189, 792, 31, 31],
				[221, 799, 25, 34],
				[247, 792, 31, 31],
				[279, 799, 25, 34],
				[305, 792, 36, 40],
				[342, 799, 28, 34],
				[371, 792, 43, 40],
				[415, 799, 34, 34],
				[450, 792, 33, 40],
				[484, 799, 27, 34],
				[512, 792, 33, 31],
				[546, 799, 27, 24],
				[574, 792, 32, 31],
				[607, 799, 28, 24],
				[636, 792, 34, 31],
				[671, 799, 28, 24],
				[700, 792, 34, 40],
				[735, 799, 28, 33],
				[764, 792, 22, 31],
				[787, 782, 50, 41],
				[838, 789, 50, 34],
				[889, 792, 35, 41],
				[1, 851, 27, 34],
				[29, 844, 36, 39],
				[66, 851, 29, 32],
				[96, 844, 39, 41],
				[136, 851, 27, 34],
				[164, 844, 39, 40],
				[204, 851, 28, 32],
				[233, 844, 33, 40],
				[267, 851, 26, 33],
				[294, 844, 44, 40],
				[339, 851, 40, 32],
				[380, 844, 22, 31],
				[403, 834, 34, 41],
				[438, 841, 27, 34],
				[466, 836, 33, 39],
				[500, 843, 27, 32],
				[528, 844, 45, 31],
				[574, 851, 36, 24],
				[611, 834, 31, 41],
				[643, 841, 26, 34],
				[670, 844, 28, 31],
				[699, 851, 22, 24],
				[722, 836, 28, 39],
				[751, 843, 22, 32],
				[774, 836, 50, 39],
				[825, 843, 50, 32],
				[876, 836, 27, 39],
				[904, 843, 23, 32],
				[1, 894, 28, 31],
				[30, 901, 27, 34],
				[58, 889, 39, 36],
				[98, 895, 27, 30],
				[126, 886, 39, 39],
				[166, 893, 27, 32],
				[194, 886, 31, 39],
				[226, 893, 25, 32],
				[252, 894, 31, 31],
				[284, 901, 25, 24],
				[310, 886, 31, 39],
				[342, 893, 25, 32],
				[368, 886, 28, 39],
				[397, 893, 22, 32],
				[420, 889, 32, 36],
				[453, 896, 32, 39],
				[486, 886, 32, 39],
				[519, 893, 32, 42],
				[552, 886, 32, 39],
				[585, 892, 34, 43],
				[620, 886, 33, 39],
				[654, 893, 27, 32],
				[682, 894, 30, 40],
				[713, 901, 25, 34],
				[739, 886, 46, 39],
				[786, 893, 35, 32],
				[822, 894, 30, 39],
				[853, 901, 24, 32],
				[878, 894, 36, 39],
				[1, 943, 28, 32],
				[30, 936, 36, 31],
				[67, 943, 28, 24],
				[96, 959, 34, 8]
			],
			animations: {
				"font_blue_ ": [0],
				"font_blue_!": [1],
				'font_blue_"': [2],
				"font_blue_#": [3],
				font_blue_$: [4],
				"font_blue_%": [5],
				"font_blue_&": [6],
				"font_blue_'": [7],
				"font_blue_(": [8],
				"font_blue_)": [9],
				"font_blue_*": [10],
				"font_blue_+": [11],
				"font_blue_,": [12],
				"font_blue_-": [13],
				"font_blue_.": [14],
				"font_blue_/": [15],
				font_blue_0: [16],
				font_blue_1: [17],
				font_blue_2: [18],
				font_blue_3: [19],
				font_blue_4: [20],
				font_blue_5: [21],
				font_blue_6: [22],
				font_blue_7: [23],
				font_blue_8: [24],
				font_blue_9: [25],
				"font_blue_:": [26],
				"font_blue_;": [27],
				"font_blue_<": [28],
				"font_blue_=": [29],
				"font_blue_>": [30],
				"font_blue_?": [31],
				"font_blue_@": [32],
				font_blue_A: [33],
				font_blue_B: [34],
				font_blue_C: [35],
				font_blue_D: [36],
				font_blue_E: [37],
				font_blue_F: [38],
				font_blue_G: [39],
				font_blue_H: [40],
				font_blue_I: [41],
				font_blue_J: [42],
				font_blue_K: [43],
				font_blue_L: [44],
				font_blue_M: [45],
				font_blue_N: [46],
				font_blue_O: [47],
				font_blue_P: [48],
				font_blue_Q: [49],
				font_blue_R: [50],
				font_blue_S: [51],
				font_blue_T: [52],
				font_blue_U: [53],
				font_blue_V: [54],
				font_blue_W: [55],
				font_blue_X: [56],
				font_blue_Y: [57],
				font_blue_Z: [58],
				"font_blue_[": [59],
				"font_blue_\\": [60],
				"font_blue_]": [61],
				"font_blue_^": [62],
				font_blue__: [63],
				"font_blue_`": [64],
				font_blue_a: [65],
				font_blue_b: [66],
				font_blue_c: [67],
				font_blue_d: [68],
				font_blue_e: [69],
				font_blue_f: [70],
				font_blue_g: [71],
				font_blue_h: [72],
				font_blue_i: [73],
				font_blue_j: [74],
				font_blue_k: [75],
				font_blue_l: [76],
				font_blue_m: [77],
				font_blue_n: [78],
				font_blue_o: [79],
				font_blue_p: [80],
				font_blue_q: [81],
				font_blue_r: [82],
				font_blue_s: [83],
				font_blue_t: [84],
				font_blue_u: [85],
				font_blue_v: [86],
				font_blue_w: [87],
				font_blue_x: [88],
				font_blue_y: [89],
				font_blue_z: [90],
				"font_blue_{": [91],
				"font_blue_|": [92],
				"font_blue_}": [93],
				"font_blue_~": [94],
				"font_blue_¡": [95],
				"font_blue_¢": [96],
				"font_blue_£": [97],
				"font_blue_¤": [98],
				"font_blue_¥": [99],
				"font_blue_¦": [100],
				"font_blue_§": [101],
				"font_blue_¨": [102],
				"font_blue_©": [103],
				"font_blue_ª": [104],
				"font_blue_«": [105],
				"font_blue_¬": [106],
				"font_blue_­": [107],
				"font_blue_®": [108],
				"font_blue_¯": [109],
				"font_blue_°": [110],
				"font_blue_±": [111],
				"font_blue_²": [112],
				"font_blue_³": [113],
				"font_blue_´": [114],
				"font_blue_µ": [115],
				"font_blue_¶": [116],
				"font_blue_·": [117],
				"font_blue_¸": [118],
				"font_blue_¹": [119],
				"font_blue_º": [120],
				"font_blue_»": [121],
				"font_blue_¼": [122],
				"font_blue_½": [123],
				"font_blue_¾": [124],
				"font_blue_¿": [125],
				"font_blue_À": [126],
				"font_blue_Á": [127],
				"font_blue_Â": [128],
				"font_blue_Ã": [129],
				"font_blue_Ä": [130],
				"font_blue_Å": [131],
				"font_blue_Æ": [132],
				"font_blue_Ç": [133],
				"font_blue_È": [134],
				"font_blue_É": [135],
				"font_blue_Ê": [136],
				"font_blue_Ë": [137],
				"font_blue_Ì": [138],
				"font_blue_Í": [139],
				"font_blue_Î": [140],
				"font_blue_Ï": [141],
				"font_blue_Ð": [142],
				"font_blue_Ñ": [143],
				"font_blue_Ò": [144],
				"font_blue_Ó": [145],
				"font_blue_Ô": [146],
				"font_blue_Õ": [147],
				"font_blue_Ö": [148],
				"font_blue_×": [149],
				"font_blue_Ø": [150],
				"font_blue_Ù": [151],
				"font_blue_Ú": [152],
				"font_blue_Û": [153],
				"font_blue_Ü": [154],
				"font_blue_Ý": [155],
				"font_blue_Þ": [156],
				"font_blue_ß": [157],
				"font_blue_à": [158],
				"font_blue_á": [159],
				"font_blue_â": [160],
				"font_blue_ã": [161],
				"font_blue_ä": [162],
				"font_blue_å": [163],
				"font_blue_æ": [164],
				"font_blue_ç": [165],
				"font_blue_è": [166],
				"font_blue_é": [167],
				"font_blue_ê": [168],
				"font_blue_ë": [169],
				"font_blue_ì": [170],
				"font_blue_í": [171],
				"font_blue_î": [172],
				"font_blue_ï": [173],
				"font_blue_ð": [174],
				"font_blue_ñ": [175],
				"font_blue_ò": [176],
				"font_blue_ó": [177],
				"font_blue_ô": [178],
				"font_blue_õ": [179],
				"font_blue_ö": [180],
				"font_blue_÷": [181],
				"font_blue_ø": [182],
				"font_blue_ù": [183],
				"font_blue_ú": [184],
				"font_blue_û": [185],
				"font_blue_ü": [186],
				"font_blue_ý": [187],
				"font_blue_þ": [188],
				"font_blue_ÿ": [189],
				"font_blue_Ā": [190],
				"font_blue_ā": [191],
				"font_blue_Ă": [192],
				"font_blue_ă": [193],
				"font_blue_Ą": [194],
				"font_blue_ą": [195],
				"font_blue_Ć": [196],
				"font_blue_ć": [197],
				"font_blue_Ĉ": [198],
				"font_blue_ĉ": [199],
				"font_blue_Ċ": [200],
				"font_blue_ċ": [201],
				"font_blue_Č": [202],
				"font_blue_č": [203],
				"font_blue_Ď": [204],
				"font_blue_ď": [205],
				"font_blue_Đ": [206],
				"font_blue_đ": [207],
				"font_blue_Ē": [208],
				"font_blue_ē": [209],
				"font_blue_Ĕ": [210],
				"font_blue_ĕ": [211],
				"font_blue_Ė": [212],
				"font_blue_ė": [213],
				"font_blue_Ę": [214],
				"font_blue_ę": [215],
				"font_blue_Ě": [216],
				"font_blue_ě": [217],
				"font_blue_Ĝ": [218],
				"font_blue_ĝ": [219],
				"font_blue_Ğ": [220],
				"font_blue_ğ": [221],
				"font_blue_Ġ": [222],
				"font_blue_ġ": [223],
				"font_blue_Ģ": [224],
				"font_blue_ģ": [225],
				"font_blue_Ĥ": [226],
				"font_blue_ĥ": [227],
				"font_blue_Ħ": [228],
				"font_blue_ħ": [229],
				"font_blue_Ĩ": [230],
				"font_blue_ĩ": [231],
				"font_blue_Ī": [232],
				"font_blue_ī": [233],
				"font_blue_Ĭ": [234],
				"font_blue_ĭ": [235],
				"font_blue_Į": [236],
				"font_blue_į": [237],
				"font_blue_İ": [238],
				"font_blue_ı": [239],
				"font_blue_Ĳ": [240],
				"font_blue_ĳ": [241],
				"font_blue_Ĵ": [242],
				"font_blue_ĵ": [243],
				"font_blue_Ķ": [244],
				"font_blue_ķ": [245],
				"font_blue_ĸ": [246],
				"font_blue_Ĺ": [247],
				"font_blue_ĺ": [248],
				"font_blue_Ļ": [249],
				"font_blue_ļ": [250],
				"font_blue_Ľ": [251],
				"font_blue_ľ": [252],
				"font_blue_Ŀ": [253],
				"font_blue_ŀ": [254],
				"font_blue_Ł": [255],
				"font_blue_ł": [256],
				"font_blue_Ń": [257],
				"font_blue_ń": [258],
				"font_blue_Ņ": [259],
				"font_blue_ņ": [260],
				"font_blue_Ň": [261],
				"font_blue_ň": [262],
				"font_blue_ŉ": [263],
				"font_blue_Ŋ": [264],
				"font_blue_ŋ": [265],
				"font_blue_Ō": [266],
				"font_blue_ō": [267],
				"font_blue_Ŏ": [268],
				"font_blue_ŏ": [269],
				"font_blue_Ő": [270],
				"font_blue_ő": [271],
				"font_blue_Œ": [272],
				"font_blue_œ": [273],
				"font_blue_Ŕ": [274],
				"font_blue_ŕ": [275],
				"font_blue_Ŗ": [276],
				"font_blue_ŗ": [277],
				"font_blue_Ř": [278],
				"font_blue_ř": [279],
				"font_blue_Ś": [280],
				"font_blue_ś": [281],
				"font_blue_Ŝ": [282],
				"font_blue_ŝ": [283],
				"font_blue_Ş": [284],
				"font_blue_ş": [285],
				"font_blue_Š": [286],
				"font_blue_š": [287],
				"font_blue_Ţ": [288],
				"font_blue_ţ": [289],
				"font_blue_Ť": [290],
				"font_blue_ť": [291],
				"font_blue_Ŧ": [292],
				"font_blue_ŧ": [293],
				"font_blue_Ũ": [294],
				"font_blue_ũ": [295],
				"font_blue_Ū": [296],
				"font_blue_ū": [297],
				"font_blue_Ŭ": [298],
				"font_blue_ŭ": [299],
				"font_blue_Ů": [300],
				"font_blue_ů": [301],
				"font_blue_Ű": [302],
				"font_blue_ű": [303],
				"font_blue_Ų": [304],
				"font_blue_ų": [305],
				"font_blue_Ŵ": [306],
				"font_blue_ŵ": [307],
				"font_blue_Ŷ": [308],
				"font_blue_ŷ": [309],
				"font_blue_Ÿ": [310],
				"font_blue_Ź": [311],
				"font_blue_ź": [312],
				"font_blue_Ż": [313],
				"font_blue_ż": [314],
				"font_blue_Ž": [315],
				"font_blue_ž": [316],
				"font_blue_ſ": [317],
				"font_blue_ƒ": [318],
				"font_blue_Ơ": [319],
				"font_blue_ơ": [320],
				"font_blue_Ư": [321],
				"font_blue_ư": [322],
				"font_blue_ǰ": [323],
				"font_blue_Ǻ": [324],
				"font_blue_ǻ": [325],
				"font_blue_Ǽ": [326],
				"font_blue_ǽ": [327],
				"font_blue_Ǿ": [328],
				"font_blue_ǿ": [329],
				"font_blue_Ș": [330],
				"font_blue_ș": [331],
				"font_blue_Ț": [332],
				"font_blue_ț": [333],
				"font_blue_Ѐ": [334],
				"font_blue_Ё": [335],
				"font_blue_Ђ": [336],
				"font_blue_Ѓ": [337],
				"font_blue_Є": [338],
				"font_blue_Ѕ": [339],
				"font_blue_І": [340],
				"font_blue_Ї": [341],
				"font_blue_Ј": [342],
				"font_blue_Љ": [343],
				"font_blue_Њ": [344],
				"font_blue_Ћ": [345],
				"font_blue_Ќ": [346],
				"font_blue_Ѝ": [347],
				"font_blue_Ў": [348],
				"font_blue_Џ": [349],
				"font_blue_А": [350],
				"font_blue_Б": [351],
				"font_blue_В": [352],
				"font_blue_Г": [353],
				"font_blue_Д": [354],
				"font_blue_Е": [355],
				"font_blue_Ж": [356],
				"font_blue_З": [357],
				"font_blue_И": [358],
				"font_blue_Й": [359],
				"font_blue_К": [360],
				"font_blue_Л": [361],
				"font_blue_М": [362],
				"font_blue_Н": [363],
				"font_blue_О": [364],
				"font_blue_П": [365],
				"font_blue_Р": [366],
				"font_blue_С": [367],
				"font_blue_Т": [368],
				"font_blue_У": [369],
				"font_blue_Ф": [370],
				"font_blue_Х": [371],
				"font_blue_Ц": [372],
				"font_blue_Ч": [373],
				"font_blue_Ш": [374],
				"font_blue_Щ": [375],
				"font_blue_Ъ": [376],
				"font_blue_Ы": [377],
				"font_blue_Ь": [378],
				"font_blue_Э": [379],
				"font_blue_Ю": [380],
				"font_blue_Я": [381],
				"font_blue_а": [382],
				"font_blue_б": [383],
				"font_blue_в": [384],
				"font_blue_г": [385],
				"font_blue_д": [386],
				"font_blue_е": [387],
				"font_blue_ж": [388],
				"font_blue_з": [389],
				"font_blue_и": [390],
				"font_blue_й": [391],
				"font_blue_к": [392],
				"font_blue_л": [393],
				"font_blue_м": [394],
				"font_blue_н": [395],
				"font_blue_о": [396],
				"font_blue_п": [397],
				"font_blue_р": [398],
				"font_blue_с": [399],
				"font_blue_т": [400],
				"font_blue_у": [401],
				"font_blue_ф": [402],
				"font_blue_х": [403],
				"font_blue_ц": [404],
				"font_blue_ч": [405],
				"font_blue_ш": [406],
				"font_blue_щ": [407],
				"font_blue_ъ": [408],
				"font_blue_ы": [409],
				"font_blue_ь": [410],
				"font_blue_э": [411],
				"font_blue_ю": [412],
				"font_blue_я": [413],
				"font_blue_ѐ": [414],
				"font_blue_ё": [415],
				"font_blue_ђ": [416],
				"font_blue_ѓ": [417],
				"font_blue_є": [418],
				"font_blue_ѕ": [419],
				"font_blue_і": [420],
				"font_blue_ї": [421],
				"font_blue_ј": [422],
				"font_blue_љ": [423],
				"font_blue_њ": [424],
				"font_blue_ћ": [425],
				"font_blue_ќ": [426],
				"font_blue_ѝ": [427],
				"font_blue_ў": [428],
				"font_blue_џ": [429],
				"font_blue_Ѡ": [430],
				"font_blue_ѡ": [431],
				"font_blue_Ѣ": [432],
				"font_blue_ѣ": [433],
				"font_blue_Ѥ": [434],
				"font_blue_ѥ": [435],
				"font_blue_Ѧ": [436],
				"font_blue_ѧ": [437],
				"font_blue_Ѩ": [438],
				"font_blue_ѩ": [439],
				"font_blue_Ѫ": [440],
				"font_blue_ѫ": [441],
				"font_blue_Ѭ": [442],
				"font_blue_ѭ": [443],
				"font_blue_Ѯ": [444],
				"font_blue_ѯ": [445],
				"font_blue_Ѱ": [446],
				"font_blue_ѱ": [447],
				"font_blue_Ѳ": [448],
				"font_blue_ѳ": [449],
				"font_blue_Ѵ": [450],
				"font_blue_ѵ": [451],
				"font_blue_Ѷ": [452],
				"font_blue_ѷ": [453],
				"font_blue_Ѹ": [454],
				"font_blue_ѹ": [455],
				"font_blue_Ѻ": [456],
				"font_blue_ѻ": [457],
				"font_blue_Ѽ": [458],
				"font_blue_ѽ": [459],
				"font_blue_Ѿ": [460],
				"font_blue_ѿ": [461],
				"font_blue_Ҁ": [462],
				"font_blue_ҁ": [463],
				"font_blue_҂": [464],
				"font_blue_҃": [465],
				"font_blue_҄": [466],
				"font_blue_҅": [467],
				"font_blue_҆": [468],
				"font_blue_҈": [469],
				"font_blue_҉": [470],
				"font_blue_Ҋ": [471],
				"font_blue_ҋ": [472],
				"font_blue_Ҍ": [473],
				"font_blue_ҍ": [474],
				"font_blue_Ҏ": [475],
				"font_blue_ҏ": [476],
				"font_blue_Ґ": [477],
				"font_blue_ґ": [478],
				"font_blue_Ғ": [479],
				"font_blue_ғ": [480],
				"font_blue_Ҕ": [481],
				"font_blue_ҕ": [482],
				"font_blue_Җ": [483],
				"font_blue_җ": [484],
				"font_blue_Ҙ": [485],
				"font_blue_ҙ": [486],
				"font_blue_Қ": [487],
				"font_blue_қ": [488],
				"font_blue_Ҝ": [489],
				"font_blue_ҝ": [490],
				"font_blue_Ҟ": [491],
				"font_blue_ҟ": [492],
				"font_blue_Ҡ": [493],
				"font_blue_ҡ": [494],
				"font_blue_Ң": [495],
				"font_blue_ң": [496],
				"font_blue_Ҥ": [497],
				"font_blue_ҥ": [498],
				"font_blue_Ҧ": [499],
				"font_blue_ҧ": [500],
				"font_blue_Ҩ": [501],
				"font_blue_ҩ": [502],
				"font_blue_Ҫ": [503],
				"font_blue_ҫ": [504],
				"font_blue_Ҭ": [505],
				"font_blue_ҭ": [506],
				"font_blue_Ү": [507],
				"font_blue_ү": [508],
				"font_blue_Ұ": [509],
				"font_blue_ұ": [510],
				"font_blue_Ҳ": [511],
				"font_blue_ҳ": [512],
				"font_blue_Ҵ": [513],
				"font_blue_ҵ": [514],
				"font_blue_Ҷ": [515],
				"font_blue_ҷ": [516],
				"font_blue_Ҹ": [517],
				"font_blue_ҹ": [518],
				"font_blue_Һ": [519],
				"font_blue_һ": [520],
				"font_blue_Ҽ": [521],
				"font_blue_ҽ": [522],
				"font_blue_Ҿ": [523],
				"font_blue_ҿ": [524],
				"font_blue_Ӏ": [525],
				"font_blue_Ӂ": [526],
				"font_blue_ӂ": [527],
				"font_blue_Ӄ": [528],
				"font_blue_ӄ": [529],
				"font_blue_Ӆ": [530],
				"font_blue_ӆ": [531],
				"font_blue_Ӈ": [532],
				"font_blue_ӈ": [533],
				"font_blue_Ӊ": [534],
				"font_blue_ӊ": [535],
				"font_blue_Ӌ": [536],
				"font_blue_ӌ": [537],
				"font_blue_Ӎ": [538],
				"font_blue_ӎ": [539],
				"font_blue_ӏ": [540],
				"font_blue_Ӑ": [541],
				"font_blue_ӑ": [542],
				"font_blue_Ӓ": [543],
				"font_blue_ӓ": [544],
				"font_blue_Ӕ": [545],
				"font_blue_ӕ": [546],
				"font_blue_Ӗ": [547],
				"font_blue_ӗ": [548],
				"font_blue_Ә": [549],
				"font_blue_ә": [550],
				"font_blue_Ӛ": [551],
				"font_blue_ӛ": [552],
				"font_blue_Ӝ": [553],
				"font_blue_ӝ": [554],
				"font_blue_Ӟ": [555],
				"font_blue_ӟ": [556],
				"font_blue_Ӡ": [557],
				"font_blue_ӡ": [558],
				"font_blue_Ӣ": [559],
				"font_blue_ӣ": [560],
				"font_blue_Ӥ": [561],
				"font_blue_ӥ": [562],
				"font_blue_Ӧ": [563],
				"font_blue_ӧ": [564],
				"font_blue_Ө": [565],
				"font_blue_ө": [566],
				"font_blue_Ӫ": [567],
				"font_blue_ӫ": [568],
				"font_blue_Ӭ": [569],
				"font_blue_ӭ": [570],
				"font_blue_Ӯ": [571],
				"font_blue_ӯ": [572],
				"font_blue_Ӱ": [573],
				"font_blue_ӱ": [574],
				"font_blue_Ӳ": [575],
				"font_blue_ӳ": [576],
				"font_blue_Ӵ": [577],
				"font_blue_ӵ": [578],
				"font_blue_Ӷ": [579],
				"font_blue_ӷ": [580],
				"font_blue_Ӹ": [581],
				"font_blue_ӹ": [582],
				"font_blue_Ӻ": [583],
				"font_blue_ӻ": [584],
				"font_blue_Ӽ": [585],
				"font_blue_ӽ": [586],
				"font_blue_Ӿ": [587],
				"font_blue_ӿ": [588],
				"font_blue_…": [589]
			}
		}, {
			images: ["boom"],
			frames: [
				[512, 2, 100, 100],
				[410, 104, 100, 100],
				[410, 2, 100, 100],
				[308, 104, 100, 100],
				[308, 2, 100, 100],
				[206, 104, 100, 100],
				[206, 2, 100, 100],
				[104, 104, 100, 100],
				[104, 2, 100, 100],
				[2, 104, 100, 100],
				[2, 2, 100, 100]
			],
			animations: {
				boom_1: [0],
				boom_10: [1],
				boom_11: [2],
				boom_2: [3],
				boom_3: [4],
				boom_4: [5],
				boom_5: [6],
				boom_6: [7],
				boom_7: [8],
				boom_8: [9],
				boom_9: [10]
			}
		}, {
			images: ["score_font"],
			frames: [
				[342, 2, 32, 41],
				[308, 2, 32, 41],
				[274, 2, 32, 41],
				[240, 2, 32, 41],
				[206, 2, 32, 41],
				[172, 2, 32, 41],
				[138, 2, 32, 41],
				[104, 2, 32, 41],
				[70, 2, 32, 41],
				[36, 2, 32, 41],
				[2, 2, 32, 41]
			],
			animations: {
				0: [0],
				1: [1],
				2: [2],
				3: [3],
				4: [4],
				5: [5],
				6: [6],
				7: [7],
				8: [8],
				9: [9],
				p: [10]
			}
		}, {
			images: ["map_font"],
			frames: [
				[335, 2, 35, 35],
				[298, 2, 35, 35],
				[261, 2, 35, 35],
				[224, 2, 35, 35],
				[187, 2, 35, 35],
				[150, 2, 35, 35],
				[113, 2, 35, 35],
				[76, 2, 35, 35],
				[39, 2, 35, 35],
				[2, 2, 35, 35]
			],
			animations: {
				"map_font/0": [0],
				"map_font/1": [1],
				"map_font/2": [2],
				"map_font/3": [3],
				"map_font/4": [4],
				"map_font/5": [5],
				"map_font/6": [6],
				"map_font/7": [7],
				"map_font/8": [8],
				"map_font/9": [9]
			}
		}, {
			images: ["gui_font"],
			frames: [
				[2, 342, 25, 32],
				[2, 308, 25, 32],
				[2, 274, 25, 32],
				[2, 240, 25, 32],
				[2, 206, 25, 32],
				[2, 172, 25, 32],
				[2, 138, 25, 32],
				[2, 104, 25, 32],
				[2, 70, 25, 32],
				[2, 36, 25, 32],
				[2, 2, 25, 32]
			],
			animations: {
				font_0: [0],
				font_1: [1],
				font_2: [2],
				font_3: [3],
				font_4: [4],
				font_5: [5],
				font_6: [6],
				font_7: [7],
				font_8: [8],
				font_9: [9],
				font_d: [10]
			}
		}], i = ["back"], s = ["logo_ingame", "cell", Images.FILL_BOTTOM, Images.FILL_TOP, "candygui_2", "window_2", "title_1", "shine_1", "shining", "message_window", "window_2", "task_panel", "title_candy_1", "title_candy_2", "title", "three", "rotate", "map_top_panel", "main_menu_white_front"], n = 0; n < Images.ALL_PNG.length; n++) s.push(Images.ALL_PNG[n]);
	for (var n = 0; n < Images.ALL_JPG.length; n++) i.push(Images.ALL_JPG[n]);
	for (var n = 0; n < e.length; n++) s.push(e[n].images[0]);
	for (var o = [DNSoundManager.SOUND_MUSIC, DNSoundManager.SOUND_CLICK, DNSoundManager.SOUND_MATCH_1, DNSoundManager.SOUND_MATCH_2, DNSoundManager.SOUND_MATCH_3, DNSoundManager.SOUND_MATCH_4, DNSoundManager.SOUND_MATCH_5, DNSoundManager.SOUND_DROP_1, DNSoundManager.SOUND_DROP_2, DNSoundManager.SOUND_DROP_3, DNSoundManager.SOUND_LINE, DNSoundManager.SOUND_KILL_COLOR, DNSoundManager.SOUND_BOOM, DNSoundManager.SOUND_AWESOME, DNSoundManager.SOUND_EXCHANGE, DNSoundManager.SOUND_WIN, DNSoundManager.SOUND_LOSE, DNSoundManager.SOUND_LIGHTING], n = 0; n < i.length; n++) t.push({
		src: "assets/art/" + i[n] + ".jpg",
		id: i[n]
	});
	for (var n = 0; n < s.length; n++) t.push({
		src: "assets/art/" + s[n] + ".png",
		id: s[n]
	});
	createjs.Sound.alternateExtensions = ["mp3"];
	for (var a = [], n = 0; n < o.length; n++) a.push({
		src: o[n] + ".ogg",
		id: o[n]
	});
	Constants.g_isPC = !Utils.IsMobileBrowser(), new DNStateManager(t, a, e, [])
}! function(t) {
	"use strict";
	var e = -1,
		i = {
			onVisible: function(t) {
				var e = i.isSupported();
				if (!e || !i.hidden()) return t(), e;
				var s = i.change(function() {
					i.hidden() || (i.unbind(s), t())
				});
				return s
			},
			change: function(t) {
				if (!i.isSupported()) return !1;
				e += 1;
				var s = e;
				return i._callbacks[s] = t, i._listen(), s
			},
			unbind: function(t) {
				delete i._callbacks[t]
			},
			afterPrerendering: function(t) {
				var e = i.isSupported(),
					s = "prerender";
				if (!e || s != i.state()) return t(), e;
				var n = i.change(function(e, o) {
					s != o && (i.unbind(n), t())
				});
				return n
			},
			hidden: function() {
				return !(!i._doc.hidden && !i._doc.webkitHidden)
			},
			state: function() {
				return i._doc.visibilityState || i._doc.webkitVisibilityState || "visible"
			},
			isSupported: function() {
				return !(!i._doc.visibilityState && !i._doc.webkitVisibilityState)
			},
			_doc: document || {},
			_callbacks: {},
			_change: function(t) {
				var e = i.state();
				for (var s in i._callbacks) i._callbacks[s].call(i._doc, t, e)
			},
			_listen: function() {
				if (!i._init) {
					var t = "visibilitychange";
					i._doc.webkitVisibilityState && (t = "webkit" + t);
					var e = function() {
						i._change.apply(i, arguments)
					};
					i._doc.addEventListener ? i._doc.addEventListener(t, e) : i._doc.attachEvent(t, e), i._init = !0
				}
			}
		};
	"undefined" != typeof module && module.exports ? module.exports = i : t.Visibility = i
}(this),
function(t) {
	"use strict";
	if (!t.visibilityState && !t.webkitVisibilityState) {
		t.hidden = !1, t.visibilityState = "visible";
		var e = null,
			i = function() {
				t.createEvent ? (e || (e = t.createEvent("HTMLEvents"), e.initEvent("visibilitychange", !0, !0)), t.dispatchEvent(e)) : "object" == typeof Visibility && Visibility._change.call(Visibility, {})
			},
			s = function() {
				t.hidden = !1, t.visibilityState = "visible", i()
			},
			n = function() {
				t.hidden = !0, t.visibilityState = "hidden", i()
			};
		t.addEventListener ? (window.addEventListener("focus", s, !0), window.addEventListener("blur", n, !0)) : (t.attachEvent("onfocusin", s), t.attachEvent("onfocusout", n))
	}
}(document),
function(t) {
	"use strict";
	var e = -1,
		i = function(i) {
			return i.every = function(t, s, n) {
				i._time(), n || (n = s, s = null), e += 1;
				var o = e;
				return i._timers[o] = {
					visible: t,
					hidden: s,
					callback: n
				}, i._run(o, !1), i.isSupported() && i._listen(), o
			}, i.stop = function(t) {
				return i._timers[t] ? (i._stop(t), delete i._timers[t], !0) : !1
			}, i._timers = {}, i._time = function() {
				i._timed || (i._timed = !0, i._wasHidden = i.hidden(), i.change(function() {
					i._stopRun(), i._wasHidden = i.hidden()
				}))
			}, i._run = function(e, s) {
				var n, o = i._timers[e];
				if (i.hidden()) {
					if (null === o.hidden) return;
					n = o.hidden
				} else n = o.visible;
				var a = function() {
					o.last = new Date, o.callback.call(t)
				};
				if (s) {
					var r = new Date,
						h = r - o.last;
					n > h ? o.delay = setTimeout(function() {
						a(), o.id = setInterval(a, n)
					}, n - h) : (a(), o.id = setInterval(a, n))
				} else o.id = setInterval(a, n)
			}, i._stop = function(t) {
				var e = i._timers[t];
				clearInterval(e.id), clearTimeout(e.delay), delete e.id, delete e.delay
			}, i._stopRun = function() {
				var t = i.hidden(),
					e = i._wasHidden;
				if (t && !e || !t && e)
					for (var s in i._timers) i._stop(s), i._run(s, !t)
			}, i
		};
	"undefined" != typeof module && module.exports ? module.exports = i(require("./visibility.core")) : i(t.Visibility)
}(window), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = createjs.PreloadJS = createjs.PreloadJS || {};
		t.version = "NEXT", t.buildDate = "Wed, 02 Apr 2014 17:54:19 GMT"
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i) {
				this.initialize(t, e, i)
			},
			e = t.prototype;
		e.type = null, e.target = null, e.currentTarget = null, e.eventPhase = 0, e.bubbles = !1, e.cancelable = !1, e.timeStamp = 0, e.defaultPrevented = !1, e.propagationStopped = !1, e.immediatePropagationStopped = !1, e.removed = !1, e.initialize = function(t, e, i) {
			this.type = t, this.bubbles = e, this.cancelable = i, this.timeStamp = (new Date).getTime()
		}, e.preventDefault = function() {
			this.defaultPrevented = !0
		}, e.stopPropagation = function() {
			this.propagationStopped = !0
		}, e.stopImmediatePropagation = function() {
			this.immediatePropagationStopped = this.propagationStopped = !0
		}, e.remove = function() {
			this.removed = !0
		}, e.clone = function() {
			return new t(this.type, this.bubbles, this.cancelable)
		}, e.toString = function() {
			return "[Event (type=" + this.type + ")]"
		}, createjs.Event = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {},
			e = t.prototype;
		t.initialize = function(t) {
			t.addEventListener = e.addEventListener, t.on = e.on, t.removeEventListener = t.off = e.removeEventListener, t.removeAllEventListeners = e.removeAllEventListeners, t.hasEventListener = e.hasEventListener, t.dispatchEvent = e.dispatchEvent, t._dispatchEvent = e._dispatchEvent, t.willTrigger = e.willTrigger
		}, e._listeners = null, e._captureListeners = null, e.initialize = function() {}, e.addEventListener = function(t, e, i) {
			var s;
			s = i ? this._captureListeners = this._captureListeners || {} : this._listeners = this._listeners || {};
			var n = s[t];
			return n && this.removeEventListener(t, e, i), n = s[t], n ? n.push(e) : s[t] = [e], e
		}, e.on = function(t, e, i, s, n, o) {
			return e.handleEvent && (i = i || e, e = e.handleEvent), i = i || this, this.addEventListener(t, function(t) {
				e.call(i, t, n), s && t.remove()
			}, o)
		}, e.removeEventListener = function(t, e, i) {
			var s = i ? this._captureListeners : this._listeners;
			if (s) {
				var n = s[t];
				if (n)
					for (var o = 0, a = n.length; a > o; o++)
						if (n[o] == e) {
							1 == a ? delete s[t] : n.splice(o, 1);
							break
						}
			}
		}, e.off = e.removeEventListener, e.removeAllEventListeners = function(t) {
			t ? (this._listeners && delete this._listeners[t], this._captureListeners && delete this._captureListeners[t]) : this._listeners = this._captureListeners = null
		}, e.dispatchEvent = function(t, e) {
			if ("string" == typeof t) {
				var i = this._listeners;
				if (!i || !i[t]) return !1;
				t = new createjs.Event(t)
			}
			if (t.target = e || this, t.bubbles && this.parent) {
				for (var s = this, n = [s]; s.parent;) n.push(s = s.parent);
				var o, a = n.length;
				for (o = a - 1; o >= 0 && !t.propagationStopped; o--) n[o]._dispatchEvent(t, 1 + (0 == o));
				for (o = 1; a > o && !t.propagationStopped; o++) n[o]._dispatchEvent(t, 3)
			} else this._dispatchEvent(t, 2);
			return t.defaultPrevented
		}, e.hasEventListener = function(t) {
			var e = this._listeners,
				i = this._captureListeners;
			return !!(e && e[t] || i && i[t])
		}, e.willTrigger = function(t) {
			for (var e = this; e;) {
				if (e.hasEventListener(t)) return !0;
				e = e.parent
			}
			return !1
		}, e.toString = function() {
			return "[EventDispatcher]"
		}, e._dispatchEvent = function(t, e) {
			var i, s = 1 == e ? this._captureListeners : this._listeners;
			if (t && s) {
				var n = s[t.type];
				if (!n || !(i = n.length)) return;
				t.currentTarget = this, t.eventPhase = e, t.removed = !1, n = n.slice();
				for (var o = 0; i > o && !t.immediatePropagationStopped; o++) {
					var a = n[o];
					a.handleEvent ? a.handleEvent(t) : a(t), t.removed && (this.off(t.type, a, 1 == e), t.removed = !1)
				}
			}
		}, createjs.EventDispatcher = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		createjs.indexOf = function(t, e) {
			for (var i = 0, s = t.length; s > i; i++)
				if (e === t[i]) return i;
			return -1
		}
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		createjs.proxy = function(t, e) {
			var i = Array.prototype.slice.call(arguments, 2);
			return function() {
				return t.apply(e, Array.prototype.slice.call(arguments, 0).concat(i))
			}
		}
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {
			this.init()
		};
		t.prototype = new createjs.EventDispatcher;
		var e = t.prototype,
			i = t;
		i.ABSOLUTE_PATT = /^(?:\w+:)?\/{2}/i, i.RELATIVE_PATT = /^[./]*?\//i, i.EXTENSION_PATT = /\/?[^/]+\.(\w{1,5})$/i, e.loaded = !1, e.canceled = !1, e.progress = 0, e._item = null, e.getItem = function() {
			return this._item
		}, e.init = function() {}, e.load = function() {}, e.close = function() {}, e._sendLoadStart = function() {
			this._isCanceled() || this.dispatchEvent("loadstart")
		}, e._sendProgress = function(t) {
			if (!this._isCanceled()) {
				var e = null;
				"number" == typeof t ? (this.progress = t, e = new createjs.Event("progress"), e.loaded = this.progress, e.total = 1) : (e = t, this.progress = t.loaded / t.total, (isNaN(this.progress) || 1 / 0 == this.progress) && (this.progress = 0)), e.progress = this.progress, this.hasEventListener("progress") && this.dispatchEvent(e)
			}
		}, e._sendComplete = function() {
			this._isCanceled() || this.dispatchEvent("complete")
		}, e._sendError = function(t) {
			!this._isCanceled() && this.hasEventListener("error") && (null == t && (t = new createjs.Event("error")), this.dispatchEvent(t))
		}, e._isCanceled = function() {
			return null == window.createjs || this.canceled ? !0 : !1
		}, e._parseURI = function(t) {
			var e = {
				absolute: !1,
				relative: !1
			};
			if (null == t) return e;
			var s = t.indexOf("?");
			s > -1 && (t = t.substr(0, s));
			var n;
			return i.ABSOLUTE_PATT.test(t) ? e.absolute = !0 : i.RELATIVE_PATT.test(t) && (e.relative = !0), (n = t.match(i.EXTENSION_PATT)) && (e.extension = n[1].toLowerCase()), e
		}, e._formatQueryString = function(t, e) {
			if (null == t) throw new Error("You must specify data.");
			var i = [];
			for (var s in t) i.push(s + "=" + escape(t[s]));
			return e && (i = i.concat(e)), i.join("&")
		}, e.buildPath = function(t, e) {
			if (null == e) return t;
			var i = [],
				s = t.indexOf("?");
			if (-1 != s) {
				var n = t.slice(s + 1);
				i = i.concat(n.split("&"))
			}
			return -1 != s ? t.slice(0, s) + "?" + this._formatQueryString(e, i) : t + "?" + this._formatQueryString(e, i)
		}, e._isCrossDomain = function(t) {
			var e = document.createElement("a");
			e.href = t.src;
			var i = document.createElement("a");
			i.href = location.href;
			var s = "" != e.hostname && (e.port != i.port || e.protocol != i.protocol || e.hostname != i.hostname);
			return s
		}, e._isLocal = function(t) {
			var e = document.createElement("a");
			return e.href = t.src, "" == e.hostname && "file:" == e.protocol
		}, e.toString = function() {
			return "[PreloadJS AbstractLoader]"
		}, createjs.AbstractLoader = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i) {
				this.init(t, e, i)
			},
			e = t.prototype = new createjs.AbstractLoader,
			i = t;
		i.loadTimeout = 8e3, i.LOAD_TIMEOUT = 0, i.BINARY = "binary", i.CSS = "css", i.IMAGE = "image", i.JAVASCRIPT = "javascript", i.JSON = "json", i.JSONP = "jsonp", i.MANIFEST = "manifest", i.SOUND = "sound", i.SVG = "svg", i.TEXT = "text", i.XML = "xml", i.POST = "POST", i.GET = "GET", e._basePath = null, e._crossOrigin = "", e.useXHR = !0, e.stopOnError = !1, e.maintainScriptOrder = !0, e.next = null, e._typeCallbacks = null, e._extensionCallbacks = null, e._loadStartWasDispatched = !1, e._maxConnections = 1, e._currentlyLoadingScript = null, e._currentLoads = null, e._loadQueue = null, e._loadQueueBackup = null, e._loadItemsById = null, e._loadItemsBySrc = null, e._loadedResults = null, e._loadedRawResults = null, e._numItems = 0, e._numItemsLoaded = 0, e._scriptOrder = null, e._loadedScripts = null, e.init = function(t, e, i) {
			this._numItems = this._numItemsLoaded = 0, this._paused = !1, this._loadStartWasDispatched = !1, this._currentLoads = [], this._loadQueue = [], this._loadQueueBackup = [], this._scriptOrder = [], this._loadedScripts = [], this._loadItemsById = {}, this._loadItemsBySrc = {}, this._loadedResults = {}, this._loadedRawResults = {}, this._typeCallbacks = {}, this._extensionCallbacks = {}, this._basePath = e, this.setUseXHR(t), this._crossOrigin = i === !0 ? "Anonymous" : i === !1 || null == i ? "" : i
		}, e.setUseXHR = function(t) {
			return this.useXHR = 0 != t && null != window.XMLHttpRequest, this.useXHR
		}, e.removeAll = function() {
			this.remove()
		}, e.remove = function(t) {
			var e = null;
			if (!t || t instanceof Array) {
				if (t) e = t;
				else if (arguments.length > 0) return
			} else e = [t];
			var i = !1;
			if (e) {
				for (; e.length;) {
					var s = e.pop(),
						n = this.getResult(s);
					for (o = this._loadQueue.length - 1; o >= 0; o--)
						if (a = this._loadQueue[o].getItem(), a.id == s || a.src == s) {
							this._loadQueue.splice(o, 1)[0].cancel();
							break
						}
					for (o = this._loadQueueBackup.length - 1; o >= 0; o--)
						if (a = this._loadQueueBackup[o].getItem(), a.id == s || a.src == s) {
							this._loadQueueBackup.splice(o, 1)[0].cancel();
							break
						}
					if (n) delete this._loadItemsById[n.id], delete this._loadItemsBySrc[n.src], this._disposeItem(n);
					else
						for (var o = this._currentLoads.length - 1; o >= 0; o--) {
							var a = this._currentLoads[o].getItem();
							if (a.id == s || a.src == s) {
								this._currentLoads.splice(o, 1)[0].cancel(), i = !0;
								break
							}
						}
				}
				i && this._loadNext()
			} else {
				this.close();
				for (var r in this._loadItemsById) this._disposeItem(this._loadItemsById[r]);
				this.init(this.useXHR)
			}
		}, e.reset = function() {
			this.close();
			for (var t in this._loadItemsById) this._disposeItem(this._loadItemsById[t]);
			for (var e = [], i = 0, s = this._loadQueueBackup.length; s > i; i++) e.push(this._loadQueueBackup[i].getItem());
			this.loadManifest(e, !1)
		}, i.isBinary = function(t) {
			switch (t) {
				case createjs.LoadQueue.IMAGE:
				case createjs.LoadQueue.BINARY:
					return !0;
				default:
					return !1
			}
		}, i.isText = function(t) {
			switch (t) {
				case createjs.LoadQueue.TEXT:
				case createjs.LoadQueue.JSON:
				case createjs.LoadQueue.MANIFEST:
				case createjs.LoadQueue.XML:
				case createjs.LoadQueue.HTML:
				case createjs.LoadQueue.CSS:
				case createjs.LoadQueue.SVG:
				case createjs.LoadQueue.JAVASCRIPT:
					return !0;
				default:
					return !1
			}
		}, e.installPlugin = function(t) {
			if (null != t && null != t.getPreloadHandlers) {
				var e = t.getPreloadHandlers();
				if (e.scope = t, null != e.types)
					for (var i = 0, s = e.types.length; s > i; i++) this._typeCallbacks[e.types[i]] = e;
				if (null != e.extensions)
					for (i = 0, s = e.extensions.length; s > i; i++) this._extensionCallbacks[e.extensions[i]] = e
			}
		}, e.setMaxConnections = function(t) {
			this._maxConnections = t, !this._paused && this._loadQueue.length > 0 && this._loadNext()
		}, e.loadFile = function(t, e, i) {
			if (null == t) {
				var s = new createjs.Event("error");
				return s.text = "PRELOAD_NO_FILE", void this._sendError(s)
			}
			this._addItem(t, null, i), this.setPaused(e !== !1 ? !1 : !0)
		}, e.loadManifest = function(t, e, s) {
			var n = null,
				o = null;
			if (t instanceof Array) {
				if (0 == t.length) {
					var a = new createjs.Event("error");
					return a.text = "PRELOAD_MANIFEST_EMPTY", void this._sendError(a)
				}
				n = t
			} else if ("string" == typeof t) n = [{
				src: t,
				type: i.MANIFEST
			}];
			else {
				if ("object" != typeof t) {
					var a = new createjs.Event("error");
					return a.text = "PRELOAD_MANIFEST_NULL", void this._sendError(a)
				}
				if (void 0 !== t.src) {
					if (null == t.type) t.type = i.MANIFEST;
					else if (t.type != i.MANIFEST) {
						var a = new createjs.Event("error");
						a.text = "PRELOAD_MANIFEST_ERROR", this._sendError(a)
					}
					n = [t]
				} else void 0 !== t.manifest && (n = t.manifest, o = t.path)
			}
			for (var r = 0, h = n.length; h > r; r++) this._addItem(n[r], o, s);
			this.setPaused(e !== !1 ? !1 : !0)
		}, e.load = function() {
			this.setPaused(!1)
		}, e.getItem = function(t) {
			return this._loadItemsById[t] || this._loadItemsBySrc[t]
		}, e.getResult = function(t, e) {
			var i = this._loadItemsById[t] || this._loadItemsBySrc[t];
			if (null == i) return null;
			var s = i.id;
			return e && this._loadedRawResults[s] ? this._loadedRawResults[s] : this._loadedResults[s]
		}, e.setPaused = function(t) {
			this._paused = t, this._paused || this._loadNext()
		}, e.close = function() {
			for (; this._currentLoads.length;) this._currentLoads.pop().cancel();
			this._scriptOrder.length = 0, this._loadedScripts.length = 0, this.loadStartWasDispatched = !1
		}, e._addItem = function(t, e, i) {
			var s = this._createLoadItem(t, e, i);
			if (null != s) {
				var n = this._createLoader(s);
				null != n && (s._loader = n, this._loadQueue.push(n), this._loadQueueBackup.push(n), this._numItems++, this._updateProgress(), (this.maintainScriptOrder && s.type == createjs.LoadQueue.JAVASCRIPT || s.maintainOrder === !0) && (this._scriptOrder.push(s), this._loadedScripts.push(null)))
			}
		}, e._createLoadItem = function(t, e, i) {
			var s = null;
			switch (typeof t) {
				case "string":
					s = {
						src: t
					};
					break;
				case "object":
					s = window.HTMLAudioElement && t instanceof window.HTMLAudioElement ? {
						tag: t,
						src: s.tag.src,
						type: createjs.LoadQueue.SOUND
					} : t;
					break;
				default:
					return null
			}
			var n = this._parseURI(s.src);
			n.extension && (s.ext = n.extension), null == s.type && (s.type = this._getTypeByExtension(s.ext));
			var o = "",
				a = i || this._basePath,
				r = s.src;
			if (!n.absolute && !n.relative)
				if (e) {
					o = e;
					var h = this._parseURI(e);
					r = e + r, null == a || h.absolute || h.relative || (o = a + o)
				} else null != a && (o = a);
			if (s.src = o + s.src, s.path = o, (s.type == createjs.LoadQueue.JSON || s.type == createjs.LoadQueue.MANIFEST) && (s._loadAsJSONP = null != s.callback), s.type == createjs.LoadQueue.JSONP && null == s.callback) throw new Error("callback is required for loading JSONP requests.");
			(void 0 === s.tag || null === s.tag) && (s.tag = this._createTag(s)), (void 0 === s.id || null === s.id || "" === s.id) && (s.id = r);
			var f = this._typeCallbacks[s.type] || this._extensionCallbacks[s.ext];
			if (f) {
				var _ = f.callback.call(f.scope, s.src, s.type, s.id, s.data, o, this);
				if (_ === !1) return null;
				_ === !0 || (null != _.src && (s.src = _.src), null != _.id && (s.id = _.id), null != _.tag && (s.tag = _.tag), null != _.completeHandler && (s.completeHandler = _.completeHandler), _.type && (s.type = _.type), n = this._parseURI(s.src), null != n.extension && (s.ext = n.extension))
			}
			return this._loadItemsById[s.id] = s, this._loadItemsBySrc[s.src] = s, s
		}, e._createLoader = function(t) {
			var e = this.useXHR;
			switch (t.type) {
				case createjs.LoadQueue.JSON:
				case createjs.LoadQueue.MANIFEST:
					e = !t._loadAsJSONP;
					break;
				case createjs.LoadQueue.XML:
				case createjs.LoadQueue.TEXT:
					e = !0;
					break;
				case createjs.LoadQueue.SOUND:
				case createjs.LoadQueue.JSONP:
					e = !1;
					break;
				case null:
					return null
			}
			return e ? new createjs.XHRLoader(t, this._crossOrigin) : new createjs.TagLoader(t)
		}, e._loadNext = function() {
			if (!this._paused) {
				this._loadStartWasDispatched || (this._sendLoadStart(), this._loadStartWasDispatched = !0), this._numItems == this._numItemsLoaded ? (this.loaded = !0, this._sendComplete(), this.next && this.next.load && this.next.load()) : this.loaded = !1;
				for (var t = 0; t < this._loadQueue.length && !(this._currentLoads.length >= this._maxConnections); t++) {
					var e = this._loadQueue[t];
					this._canStartLoad(e) && (this._loadQueue.splice(t, 1), t--, this._loadItem(e))
				}
			}
		}, e._loadItem = function(t) {
			t.on("progress", this._handleProgress, this), t.on("complete", this._handleFileComplete, this), t.on("error", this._handleFileError, this), this._currentLoads.push(t), this._sendFileStart(t.getItem()), t.load()
		}, e._handleFileError = function(t) {
			var e = t.target;
			this._numItemsLoaded++, this._finishOrderedItem(e, !0), this._updateProgress();
			var i = new createjs.Event("error");
			i.text = "FILE_LOAD_ERROR", i.item = e.getItem(), this._sendError(i), this.stopOnError || (this._removeLoadItem(e), this._loadNext())
		}, e._handleFileComplete = function(t) {
			var e = t.target,
				i = e.getItem();
			this._loadedResults[i.id] = e.getResult(), e instanceof createjs.XHRLoader && (this._loadedRawResults[i.id] = e.getResult(!0)), this._removeLoadItem(e), this._finishOrderedItem(e) || this._processFinishedLoad(i, e)
		}, e._finishOrderedItem = function(t, e) {
			var i = t.getItem();
			if (this.maintainScriptOrder && i.type == createjs.LoadQueue.JAVASCRIPT || i.maintainOrder) {
				t instanceof createjs.TagLoader && i.type == createjs.LoadQueue.JAVASCRIPT && (this._currentlyLoadingScript = !1);
				var s = createjs.indexOf(this._scriptOrder, i);
				return -1 == s ? !1 : (this._loadedScripts[s] = e === !0 ? !0 : i, this._checkScriptLoadOrder(), !0)
			}
			return !1
		}, e._checkScriptLoadOrder = function() {
			for (var t = this._loadedScripts.length, e = 0; t > e; e++) {
				var i = this._loadedScripts[e];
				if (null === i) break;
				if (i !== !0) {
					var s = this._loadedResults[i.id];
					i.type == createjs.LoadQueue.JAVASCRIPT && (document.body || document.getElementsByTagName("body")[0]).appendChild(s);
					var n = i._loader;
					this._processFinishedLoad(i, n), this._loadedScripts[e] = !0
				}
			}
		}, e._processFinishedLoad = function(t, e) {
			if (t.type == createjs.LoadQueue.MANIFEST) {
				var i = e.getResult();
				null != i && void 0 !== i.manifest && this.loadManifest(i, !0)
			}
			this._numItemsLoaded++, this._updateProgress(), this._sendFileComplete(t, e), this._loadNext()
		}, e._canStartLoad = function(t) {
			if (!this.maintainScriptOrder || t instanceof createjs.XHRLoader) return !0;
			var e = t.getItem();
			if (e.type != createjs.LoadQueue.JAVASCRIPT) return !0;
			if (this._currentlyLoadingScript) return !1;
			for (var i = this._scriptOrder.indexOf(e), s = 0; i > s;) {
				var n = this._loadedScripts[s];
				if (null == n) return !1;
				s++
			}
			return this._currentlyLoadingScript = !0, !0
		}, e._removeLoadItem = function(t) {
			var e = t.getItem();
			delete e._loader, delete e._loadAsJSONP;
			for (var i = this._currentLoads.length, s = 0; i > s; s++)
				if (this._currentLoads[s] == t) {
					this._currentLoads.splice(s, 1);
					break
				}
		}, e._handleProgress = function(t) {
			var e = t.target;
			this._sendFileProgress(e.getItem(), e.progress), this._updateProgress()
		}, e._updateProgress = function() {
			var t = this._numItemsLoaded / this._numItems,
				e = this._numItems - this._numItemsLoaded;
			if (e > 0) {
				for (var i = 0, s = 0, n = this._currentLoads.length; n > s; s++) i += this._currentLoads[s].progress;
				t += i / e * (e / this._numItems)
			}
			this._sendProgress(t)
		}, e._disposeItem = function(t) {
			delete this._loadedResults[t.id], delete this._loadedRawResults[t.id], delete this._loadItemsById[t.id], delete this._loadItemsBySrc[t.src]
		}, e._createTag = function(t) {
			var e = null;
			switch (t.type) {
				case createjs.LoadQueue.IMAGE:
					return e = document.createElement("img"), "" == this._crossOrigin || this._isLocal(t) || (e.crossOrigin = this._crossOrigin), e;
				case createjs.LoadQueue.SOUND:
					return e = document.createElement("audio"), e.autoplay = !1, e;
				case createjs.LoadQueue.JSON:
				case createjs.LoadQueue.JSONP:
				case createjs.LoadQueue.JAVASCRIPT:
				case createjs.LoadQueue.MANIFEST:
					return e = document.createElement("script"), e.type = "text/javascript", e;
				case createjs.LoadQueue.CSS:
					return e = document.createElement(this.useXHR ? "style" : "link"), e.rel = "stylesheet", e.type = "text/css", e;
				case createjs.LoadQueue.SVG:
					return this.useXHR ? e = document.createElement("svg") : (e = document.createElement("object"), e.type = "image/svg+xml"), e
			}
			return null
		}, e._getTypeByExtension = function(t) {
			if (null == t) return createjs.LoadQueue.TEXT;
			switch (t.toLowerCase()) {
				case "jpeg":
				case "jpg":
				case "gif":
				case "png":
				case "webp":
				case "bmp":
					return createjs.LoadQueue.IMAGE;
				case "ogg":
				case "mp3":
				case "wav":
					return createjs.LoadQueue.SOUND;
				case "json":
					return createjs.LoadQueue.JSON;
				case "xml":
					return createjs.LoadQueue.XML;
				case "css":
					return createjs.LoadQueue.CSS;
				case "js":
					return createjs.LoadQueue.JAVASCRIPT;
				case "svg":
					return createjs.LoadQueue.SVG;
				default:
					return createjs.LoadQueue.TEXT
			}
		}, e._sendFileProgress = function(t, e) {
			if (this._isCanceled()) return void this._cleanUp();
			if (this.hasEventListener("fileprogress")) {
				var i = new createjs.Event("fileprogress");
				i.progress = e, i.loaded = e, i.total = 1, i.item = t, this.dispatchEvent(i)
			}
		}, e._sendFileComplete = function(t, e) {
			if (!this._isCanceled()) {
				var i = new createjs.Event("fileload");
				i.loader = e, i.item = t, i.result = this._loadedResults[t.id], i.rawResult = this._loadedRawResults[t.id], t.completeHandler && t.completeHandler(i), this.hasEventListener("fileload") && this.dispatchEvent(i)
			}
		}, e._sendFileStart = function(t) {
			var e = new createjs.Event("filestart");
			e.item = t, this.hasEventListener("filestart") && this.dispatchEvent(e)
		}, e.toString = function() {
			return "[PreloadJS LoadQueue]"
		}, createjs.LoadQueue = t;
		var s = function() {};
		s.init = function() {
			var t = navigator.userAgent;
			s.isFirefox = t.indexOf("Firefox") > -1, s.isOpera = null != window.opera, s.isChrome = t.indexOf("Chrome") > -1, s.isIOS = t.indexOf("iPod") > -1 || t.indexOf("iPhone") > -1 || t.indexOf("iPad") > -1
		}, s.init(), createjs.LoadQueue.BrowserDetect = s
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t) {
				this.init(t)
			},
			e = t.prototype = new createjs.AbstractLoader;
		e._loadTimeout = null, e._tagCompleteProxy = null, e._isAudio = !1, e._tag = null, e._jsonResult = null, e.init = function(t) {
			this._item = t, this._tag = t.tag, this._isAudio = window.HTMLAudioElement && t.tag instanceof window.HTMLAudioElement, this._tagCompleteProxy = createjs.proxy(this._handleLoad, this)
		}, e.getResult = function() {
			return this._item.type == createjs.LoadQueue.JSONP || this._item.type == createjs.LoadQueue.MANIFEST ? this._jsonResult : this._tag
		}, e.cancel = function() {
			this.canceled = !0, this._clean()
		}, e.load = function() {
			var t = this._item,
				e = this._tag;
			clearTimeout(this._loadTimeout);
			var i = createjs.LoadQueue.LOAD_TIMEOUT;
			0 == i && (i = createjs.LoadQueue.loadTimeout), this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), i), this._isAudio && (e.src = null, e.preload = "auto"), e.onerror = createjs.proxy(this._handleError, this), this._isAudio ? (e.onstalled = createjs.proxy(this._handleStalled, this), e.addEventListener("canplaythrough", this._tagCompleteProxy, !1)) : (e.onload = createjs.proxy(this._handleLoad, this), e.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this));
			var s = this.buildPath(t.src, t.values);
			switch (t.type) {
				case createjs.LoadQueue.CSS:
					e.href = s;
					break;
				case createjs.LoadQueue.SVG:
					e.data = s;
					break;
				default:
					e.src = s
			}
			if (t.type == createjs.LoadQueue.JSONP || t.type == createjs.LoadQueue.JSON || t.type == createjs.LoadQueue.MANIFEST) {
				if (null == t.callback) throw new Error("callback is required for loading JSONP requests.");
				if (null != window[t.callback]) throw new Error('JSONP callback "' + t.callback + '" already exists on window. You need to specify a different callback. Or re-name the current one.');
				window[t.callback] = createjs.proxy(this._handleJSONPLoad, this)
			}
			if (t.type == createjs.LoadQueue.SVG || t.type == createjs.LoadQueue.JSONP || t.type == createjs.LoadQueue.JSON || t.type == createjs.LoadQueue.MANIFEST || t.type == createjs.LoadQueue.JAVASCRIPT || t.type == createjs.LoadQueue.CSS) {
				this._startTagVisibility = e.style.visibility, e.style.visibility = "hidden";
				var n = document.body || document.getElementsByTagName("body")[0];
				if (null == n) {
					if (t.type == createjs.LoadQueue.SVG) return void this._handleSVGError();
					n = document.head || document.getElementsByTagName("head")
				}
				n.appendChild(e)
			}
			null != e.load && e.load()
		}, e._handleSVGError = function() {
			this._clean();
			var t = new createjs.Event("error");
			t.text = "SVG_NO_BODY", this._sendError(t)
		}, e._handleJSONPLoad = function(t) {
			this._jsonResult = t
		}, e._handleTimeout = function() {
			this._clean();
			var t = new createjs.Event("error");
			t.text = "PRELOAD_TIMEOUT", this._sendError(t)
		}, e._handleStalled = function() {}, e._handleError = function() {
			this._clean();
			var t = new createjs.Event("error");
			this._sendError(t)
		}, e._handleReadyStateChange = function() {
			clearTimeout(this._loadTimeout);
			var t = this.getItem().tag;
			("loaded" == t.readyState || "complete" == t.readyState) && this._handleLoad()
		}, e._handleLoad = function() {
			if (!this._isCanceled()) {
				var t = this.getItem(),
					e = t.tag;
				if (!(this.loaded || this._isAudio && 4 !== e.readyState)) {
					switch (this.loaded = !0, t.type) {
						case createjs.LoadQueue.SVG:
						case createjs.LoadQueue.JSON:
						case createjs.LoadQueue.JSONP:
						case createjs.LoadQueue.MANIFEST:
						case createjs.LoadQueue.CSS:
							e.style.visibility = this._startTagVisibility, e.parentNode && e.parentNode.contains(e) && e.parentNode.removeChild(e)
					}
					this._clean(), this._sendComplete()
				}
			}
		}, e._clean = function() {
			clearTimeout(this._loadTimeout);
			var t = this.getItem(),
				e = t.tag;
			null != e && (e.onload = null, e.removeEventListener && e.removeEventListener("canplaythrough", this._tagCompleteProxy, !1), e.onstalled = null, e.onprogress = null, e.onerror = null, null != e.parentNode && t.type == createjs.LoadQueue.SVG && t.type == createjs.LoadQueue.JSON && t.type == createjs.LoadQueue.MANIFEST && t.type == createjs.LoadQueue.CSS && t.type == createjs.LoadQueue.JSONP && e.parentNode.removeChild(e));
			var t = this.getItem();
			(t.type == createjs.LoadQueue.JSONP || t.type == createjs.LoadQueue.MANIFEST) && (window[t.callback] = null)
		}, e.toString = function() {
			return "[PreloadJS TagLoader]"
		}, createjs.TagLoader = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e) {
				this.init(t, e)
			},
			e = t;
		e.ACTIVEX_VERSIONS = ["Msxml2.XMLHTTP.6.0", "Msxml2.XMLHTTP.5.0", "Msxml2.XMLHTTP.4.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
		var i = t.prototype = new createjs.AbstractLoader;
		i._request = null, i._loadTimeout = null, i._xhrLevel = 1, i._response = null, i._rawResponse = null, i._crossOrigin = "", i.init = function(t, e) {
			this._item = t, this._crossOrigin = e, !this._createXHR(t)
		}, i.getResult = function(t) {
			return t && this._rawResponse ? this._rawResponse : this._response
		}, i.cancel = function() {
			this.canceled = !0, this._clean(), this._request.abort()
		}, i.load = function() {
			if (null == this._request) return void this._handleError();
			if (this._request.onloadstart = createjs.proxy(this._handleLoadStart, this), this._request.onprogress = createjs.proxy(this._handleProgress, this), this._request.onabort = createjs.proxy(this._handleAbort, this), this._request.onerror = createjs.proxy(this._handleError, this), this._request.ontimeout = createjs.proxy(this._handleTimeout, this), 1 == this._xhrLevel) {
				var t = createjs.LoadQueue.LOAD_TIMEOUT;
				if (0 == t) t = createjs.LoadQueue.loadTimeout;
				else try {
					console.warn("LoadQueue.LOAD_TIMEOUT has been deprecated in favor of LoadQueue.loadTimeout")
				} catch (e) {}
				this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), t)
			}
			this._request.onload = createjs.proxy(this._handleLoad, this), this._request.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);
			try {
				this._item.values && this._item.method != createjs.LoadQueue.GET ? this._item.method == createjs.LoadQueue.POST && this._request.send(this._formatQueryString(this._item.values)) : this._request.send()
			} catch (i) {
				var s = new createjs.Event("error");
				s.error = i, this._sendError(s)
			}
		}, i.getAllResponseHeaders = function() {
			return this._request.getAllResponseHeaders instanceof Function ? this._request.getAllResponseHeaders() : null
		}, i.getResponseHeader = function(t) {
			return this._request.getResponseHeader instanceof Function ? this._request.getResponseHeader(t) : null
		}, i._handleProgress = function(t) {
			if (t && !(t.loaded > 0 && 0 == t.total)) {
				var e = new createjs.Event("progress");
				e.loaded = t.loaded, e.total = t.total, this._sendProgress(e)
			}
		}, i._handleLoadStart = function() {
			clearTimeout(this._loadTimeout), this._sendLoadStart()
		}, i._handleAbort = function() {
			this._clean();
			var t = new createjs.Event("error");
			t.text = "XHR_ABORTED", this._sendError(t)
		}, i._handleError = function() {
			this._clean();
			var t = new createjs.Event("error");
			this._sendError(t)
		}, i._handleReadyStateChange = function() {
			4 == this._request.readyState && this._handleLoad()
		}, i._handleLoad = function() {
			if (!this.loaded) {
				if (this.loaded = !0, !this._checkError()) return void this._handleError();
				this._response = this._getResponse(), this._clean();
				var t = this._generateTag();
				t && this._sendComplete()
			}
		}, i._handleTimeout = function(t) {
			this._clean();
			var e = new createjs.Event("error");
			e.text = "PRELOAD_TIMEOUT", this._sendError(t)
		}, i._checkError = function() {
			var t = parseInt(this._request.status);
			switch (t) {
				case 404:
				case 0:
					return !1
			}
			return !0
		}, i._getResponse = function() {
			if (null != this._response) return this._response;
			if (null != this._request.response) return this._request.response;
			try {
				if (null != this._request.responseText) return this._request.responseText
			} catch (t) {}
			try {
				if (null != this._request.responseXML) return this._request.responseXML
			} catch (t) {}
			return null
		}, i._createXHR = function(t) {
			var i = this._isCrossDomain(t),
				s = {},
				n = null;
			if (window.XMLHttpRequest) n = new XMLHttpRequest, i && void 0 === n.withCredentials && window.XDomainRequest && (n = new XDomainRequest);
			else {
				for (var o = 0, a = e.ACTIVEX_VERSIONS.length; a > o; o++) {
					e.ACTIVEX_VERSIONS[o];
					try {
						n = new ActiveXObject(axVersions);
						break
					} catch (r) {}
				}
				if (null == n) return !1
			}
			createjs.LoadQueue.isText(t.type) && n.overrideMimeType && n.overrideMimeType("text/plain; charset=utf-8"), this._xhrLevel = "string" == typeof n.responseType ? 2 : 1;
			var h = null;
			if (h = t.method == createjs.LoadQueue.GET ? this.buildPath(t.src, t.values) : t.src, n.open(t.method || createjs.LoadQueue.GET, h, !0), i && n instanceof XMLHttpRequest && 1 == this._xhrLevel && (s.Origin = location.origin), t.values && t.method == createjs.LoadQueue.POST && (s["Content-Type"] = "application/x-www-form-urlencoded"), i || s["X-Requested-With"] || (s["X-Requested-With"] = "XMLHttpRequest"), t.headers)
				for (var f in t.headers) s[f] = t.headers[f];
			createjs.LoadQueue.isBinary(t.type) && (n.responseType = "arraybuffer");
			for (f in s) n.setRequestHeader(f, s[f]);
			return this._request = n, !0
		}, i._clean = function() {
			clearTimeout(this._loadTimeout);
			var t = this._request;
			t.onloadstart = null, t.onprogress = null, t.onabort = null, t.onerror = null, t.onload = null, t.ontimeout = null, t.onloadend = null, t.onreadystatechange = null
		}, i._generateTag = function() {
			var t = this._item.type,
				e = this._item.tag;
			switch (t) {
				case createjs.LoadQueue.IMAGE:
					return e.onload = createjs.proxy(this._handleTagReady, this), "" != this._crossOrigin && (e.crossOrigin = "Anonymous"), e.src = this.buildPath(this._item.src, this._item.values), this._rawResponse = this._response, this._response = e, !1;
				case createjs.LoadQueue.JAVASCRIPT:
					return e = document.createElement("script"), e.text = this._response, this._rawResponse = this._response, this._response = e, !0;
				case createjs.LoadQueue.CSS:
					var i = document.getElementsByTagName("head")[0];
					if (i.appendChild(e), e.styleSheet) e.styleSheet.cssText = this._response;
					else {
						var s = document.createTextNode(this._response);
						e.appendChild(s)
					}
					return this._rawResponse = this._response, this._response = e, !0;
				case createjs.LoadQueue.XML:
					var n = this._parseXML(this._response, "text/xml");
					return this._rawResponse = this._response, this._response = n, !0;
				case createjs.LoadQueue.SVG:
					var n = this._parseXML(this._response, "image/svg+xml");
					return this._rawResponse = this._response, null != n.documentElement ? (e.appendChild(n.documentElement), this._response = e) : this._response = n, !0;
				case createjs.LoadQueue.JSON:
				case createjs.LoadQueue.MANIFEST:
					var o = {};
					try {
						o = JSON.parse(this._response)
					} catch (a) {
						o = a
					}
					return this._rawResponse = this._response, this._response = o, !0
			}
			return !0
		}, i._parseXML = function(t, e) {
			var i = null;
			try {
				if (window.DOMParser) {
					var s = new DOMParser;
					i = s.parseFromString(t, e)
				} else i = new ActiveXObject("Microsoft.XMLDOM"), i.async = !1, i.loadXML(t)
			} catch (n) {}
			return i
		}, i._handleTagReady = function() {
			var t = this._item.tag;
			t && (t.onload = null), this._sendComplete()
		}, i.toString = function() {
			return "[PreloadJS XHRLoader]"
		}, createjs.XHRLoader = t
	}(), "object" != typeof JSON && (JSON = {}),
	function() {
		"use strict";

		function f(t) {
			return 10 > t ? "0" + t : t
		}

		function quote(t) {
			return escapable.lastIndex = 0, escapable.test(t) ? '"' + t.replace(escapable, function(t) {
				var e = meta[t];
				return "string" == typeof e ? e : "\\u" + ("0000" + t.charCodeAt(0).toString(16)).slice(-4)
			}) + '"' : '"' + t + '"'
		}

		function str(t, e) {
			var i, s, n, o, a, r = gap,
				h = e[t];
			switch (h && "object" == typeof h && "function" == typeof h.toJSON && (h = h.toJSON(t)), "function" == typeof rep && (h = rep.call(e, t, h)), typeof h) {
				case "string":
					return quote(h);
				case "number":
					return isFinite(h) ? String(h) : "null";
				case "boolean":
				case "null":
					return String(h);
				case "object":
					if (!h) return "null";
					if (gap += indent, a = [], "[object Array]" === Object.prototype.toString.apply(h)) {
						for (o = h.length, i = 0; o > i; i += 1) a[i] = str(i, h) || "null";
						return n = 0 === a.length ? "[]" : gap ? "[\n" + gap + a.join(",\n" + gap) + "\n" + r + "]" : "[" + a.join(",") + "]", gap = r, n
					}
					if (rep && "object" == typeof rep)
						for (o = rep.length, i = 0; o > i; i += 1) "string" == typeof rep[i] && (s = rep[i], n = str(s, h), n && a.push(quote(s) + (gap ? ": " : ":") + n));
					else
						for (s in h) Object.prototype.hasOwnProperty.call(h, s) && (n = str(s, h), n && a.push(quote(s) + (gap ? ": " : ":") + n));
					return n = 0 === a.length ? "{}" : gap ? "{\n" + gap + a.join(",\n" + gap) + "\n" + r + "}" : "{" + a.join(",") + "}", gap = r, n
			}
		}
		"function" != typeof Date.prototype.toJSON && (Date.prototype.toJSON = function() {
			return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
		}, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {
			return this.valueOf()
		});
		var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
			escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
			gap, indent, meta = {
				"\b": "\\b",
				"   ": "\\t",
				"\n": "\\n",
				"\f": "\\f",
				"\r": "\\r",
				'"': '\\"',
				"\\": "\\\\"
			},
			rep;
		"function" != typeof JSON.stringify && (JSON.stringify = function(t, e, i) {
			var s;
			if (gap = "", indent = "", "number" == typeof i)
				for (s = 0; i > s; s += 1) indent += " ";
			else "string" == typeof i && (indent = i);
			if (rep = e, e && "function" != typeof e && ("object" != typeof e || "number" != typeof e.length)) throw new Error("JSON.stringify");
			return str("", {
				"": t
			})
		}), "function" != typeof JSON.parse && (JSON.parse = function(text, reviver) {
			function walk(t, e) {
				var i, s, n = t[e];
				if (n && "object" == typeof n)
					for (i in n) Object.prototype.hasOwnProperty.call(n, i) && (s = walk(n, i), void 0 !== s ? n[i] = s : delete n[i]);
				return reviver.call(t, e, n)
			}
			var j;
			if (text = String(text), cx.lastIndex = 0, cx.test(text) && (text = text.replace(cx, function(t) {
					return "\\u" + ("0000" + t.charCodeAt(0).toString(16)).slice(-4)
				})), /^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return j = eval("(" + text + ")"), "function" == typeof reviver ? walk({
				"": j
			}, "") : j;
			throw new SyntaxError("JSON.parse")
		})
	}(), this.createjs = this.createjs || {},
	function() {
		var t = createjs.SoundJS = createjs.SoundJS || {};
		t.version = "NEXT", t.buildDate = "Mon, 21 Apr 2014 15:30:09 GMT"
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {},
			e = t.prototype;
		t.initialize = function(t) {
			t.addEventListener = e.addEventListener, t.on = e.on, t.removeEventListener = t.off = e.removeEventListener, t.removeAllEventListeners = e.removeAllEventListeners, t.hasEventListener = e.hasEventListener, t.dispatchEvent = e.dispatchEvent, t._dispatchEvent = e._dispatchEvent, t.willTrigger = e.willTrigger
		}, e._listeners = null, e._captureListeners = null, e.initialize = function() {}, e.addEventListener = function(t, e, i) {
			var s;
			s = i ? this._captureListeners = this._captureListeners || {} : this._listeners = this._listeners || {};
			var n = s[t];
			return n && this.removeEventListener(t, e, i), n = s[t], n ? n.push(e) : s[t] = [e], e
		}, e.on = function(t, e, i, s, n, o) {
			return e.handleEvent && (i = i || e, e = e.handleEvent), i = i || this, this.addEventListener(t, function(t) {
				e.call(i, t, n), s && t.remove()
			}, o)
		}, e.removeEventListener = function(t, e, i) {
			var s = i ? this._captureListeners : this._listeners;
			if (s) {
				var n = s[t];
				if (n)
					for (var o = 0, a = n.length; a > o; o++)
						if (n[o] == e) {
							1 == a ? delete s[t] : n.splice(o, 1);
							break
						}
			}
		}, e.off = e.removeEventListener, e.removeAllEventListeners = function(t) {
			t ? (this._listeners && delete this._listeners[t], this._captureListeners && delete this._captureListeners[t]) : this._listeners = this._captureListeners = null
		}, e.dispatchEvent = function(t, e) {
			if ("string" == typeof t) {
				var i = this._listeners;
				if (!i || !i[t]) return !1;
				t = new createjs.Event(t)
			}
			if (t.target = e || this, t.bubbles && this.parent) {
				for (var s = this, n = [s]; s.parent;) n.push(s = s.parent);
				var o, a = n.length;
				for (o = a - 1; o >= 0 && !t.propagationStopped; o--) n[o]._dispatchEvent(t, 1 + (0 == o));
				for (o = 1; a > o && !t.propagationStopped; o++) n[o]._dispatchEvent(t, 3)
			} else this._dispatchEvent(t, 2);
			return t.defaultPrevented
		}, e.hasEventListener = function(t) {
			var e = this._listeners,
				i = this._captureListeners;
			return !!(e && e[t] || i && i[t])
		}, e.willTrigger = function(t) {
			for (var e = this; e;) {
				if (e.hasEventListener(t)) return !0;
				e = e.parent
			}
			return !1
		}, e.toString = function() {
			return "[EventDispatcher]"
		}, e._dispatchEvent = function(t, e) {
			var i, s = 1 == e ? this._captureListeners : this._listeners;
			if (t && s) {
				var n = s[t.type];
				if (!n || !(i = n.length)) return;
				t.currentTarget = this, t.eventPhase = e, t.removed = !1, n = n.slice();
				for (var o = 0; i > o && !t.immediatePropagationStopped; o++) {
					var a = n[o];
					a.handleEvent ? a.handleEvent(t) : a(t), t.removed && (this.off(t.type, a, 1 == e), t.removed = !1)
				}
			}
		}, createjs.EventDispatcher = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i) {
				this.initialize(t, e, i)
			},
			e = t.prototype;
		e.type = null, e.target = null, e.currentTarget = null, e.eventPhase = 0, e.bubbles = !1, e.cancelable = !1, e.timeStamp = 0, e.defaultPrevented = !1, e.propagationStopped = !1, e.immediatePropagationStopped = !1, e.removed = !1, e.initialize = function(t, e, i) {
			this.type = t, this.bubbles = e, this.cancelable = i, this.timeStamp = (new Date).getTime()
		}, e.preventDefault = function() {
			this.defaultPrevented = !0
		}, e.stopPropagation = function() {
			this.propagationStopped = !0
		}, e.stopImmediatePropagation = function() {
			this.immediatePropagationStopped = this.propagationStopped = !0
		}, e.remove = function() {
			this.removed = !0
		}, e.clone = function() {
			return new t(this.type, this.bubbles, this.cancelable)
		}, e.toString = function() {
			return "[Event (type=" + this.type + ")]"
		}, createjs.Event = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		createjs.indexOf = function(t, e) {
			for (var i = 0, s = t.length; s > i; i++)
				if (e === t[i]) return i;
			return -1
		}
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		createjs.proxy = function(t, e) {
			var i = Array.prototype.slice.call(arguments, 2);
			return function() {
				return t.apply(e, Array.prototype.slice.call(arguments, 0).concat(i))
			}
		}
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = Object.defineProperty ? !0 : !1,
			e = {};
		try {
			Object.defineProperty(e, "bar", {
				get: function() {
					return this._bar
				},
				set: function(t) {
					this._bar = t
				}
			})
		} catch (i) {
			t = !1
		}
		createjs.definePropertySupported = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";

		function t() {
			throw "Sound cannot be instantiated"
		}

		function e(t, e) {
			this.init(t, e)
		}

		function i() {
			this.isDefault = !0, this.addEventListener = this.removeEventListener = this.removeAllEventListeners = this.dispatchEvent = this.hasEventListener = this._listeners = this._interrupt = this._playFailed = this.pause = this.resume = this.play = this._beginPlaying = this._cleanUp = this.stop = this.setMasterVolume = this.setVolume = this.mute = this.setMute = this.getMute = this.setPan = this.getPosition = this.setPosition = this.playFailed = function() {
				return !1
			}, this.getVolume = this.getPan = this.getDuration = function() {
				return 0
			}, this.playState = t.PLAY_FAILED, this.toString = function() {
				return "[Sound Default Sound Instance]"
			}
		}

		function s() {}
		var n = t;
		n.INTERRUPT_ANY = "any", n.INTERRUPT_EARLY = "early", n.INTERRUPT_LATE = "late", n.INTERRUPT_NONE = "none", n.PLAY_INITED = "playInited", n.PLAY_SUCCEEDED = "playSucceeded", n.PLAY_INTERRUPTED = "playInterrupted", n.PLAY_FINISHED = "playFinished", n.PLAY_FAILED = "playFailed", n.SUPPORTED_EXTENSIONS = ["mp3", "ogg", "mpeg", "wav", "m4a", "mp4", "aiff", "wma", "mid"], n.EXTENSION_MAP = {
			m4a: "mp4"
		}, n.FILE_PATTERN = /^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([/.]*?(?:[^?]+)?\/)?((?:[^/?]+)\.(\w+))(?:\?(\S+)?)?$/, n.defaultInterruptBehavior = n.INTERRUPT_NONE, n.alternateExtensions = [], n._lastID = 0, n.activePlugin = null, n._pluginsRegistered = !1, n._masterVolume = 1, n._masterMute = !1, n._instances = [], n._idHash = {}, n._preloadHash = {}, n._defaultSoundInstance = null, n.addEventListener = null, n.removeEventListener = null, n.removeAllEventListeners = null, n.dispatchEvent = null, n.hasEventListener = null, n._listeners = null, createjs.EventDispatcher.initialize(n), n._sendFileLoadEvent = function(t) {
			if (n._preloadHash[t])
				for (var e = 0, i = n._preloadHash[t].length; i > e; e++) {
					var s = n._preloadHash[t][e];
					if (n._preloadHash[t][e] = !0, n.hasEventListener("fileload")) {
						var o = new createjs.Event("fileload");
						o.src = s.src, o.id = s.id, o.data = s.data, o.sprite = s.sprite, n.dispatchEvent(o)
					}
				}
		}, n.getPreloadHandlers = function() {
			return {
				callback: createjs.proxy(n.initLoad, n),
				types: ["sound"],
				extensions: n.SUPPORTED_EXTENSIONS
			}
		}, n._registerPlugin = function(t) {
			return t.isSupported() ? (n.activePlugin = new t, !0) : !1
		}, n.registerPlugins = function(t) {
			n._pluginsRegistered = !0;
			for (var e = 0, i = t.length; i > e; e++)
				if (n._registerPlugin(t[e])) return !0;
			return !1
		}, n.initializeDefaultPlugins = function() {
			return null != n.activePlugin ? !0 : n._pluginsRegistered ? !1 : n.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin]) ? !0 : !1
		}, n.isReady = function() {
			return null != n.activePlugin
		}, n.getCapabilities = function() {
			return null == n.activePlugin ? null : n.activePlugin._capabilities
		}, n.getCapability = function(t) {
			return null == n.activePlugin ? null : n.activePlugin._capabilities[t]
		}, n.initLoad = function(t, e, i, s) {
			return n._registerSound(t, i, s)
		}, n._registerSound = function(t, i, s) {
			if (!n.initializeDefaultPlugins()) return !1;
			var o = n._parsePath(t);
			if (null == o) return !1;
			o.type = "sound", o.id = i, o.data = s;
			var a = n.activePlugin.defaultNumChannels || null;
			if (null != s && (isNaN(s.channels) ? isNaN(s) || (a = parseInt(s)) : a = parseInt(s.channels), s.audioSprite))
				for (var r, h = s.audioSprite.length; h--;) r = s.audioSprite[h], n._idHash[r.id] = {
					src: o.src,
					startTime: parseInt(r.startTime),
					duration: parseInt(r.duration)
				};
			null != i && (n._idHash[i] = {
				src: o.src
			});
			var f = n.activePlugin.register(o.src, a);
			return e.create(o.src, a), null != s && isNaN(s) ? o.data.channels = a || e.maxPerChannel() : o.data = a || e.maxPerChannel(), o.tag = f.tag, f.completeHandler && (o.completeHandler = f.completeHandler), f.type && (o.type = f.type), o
		}, n.registerSound = function(t, e, i, s) {
			t instanceof Object && (s = e, e = t.id, i = t.data, t = t.src), null != s && (t = s + t);
			var o = n._registerSound(t, e, i);
			if (!o) return !1;
			if (n._preloadHash[o.src] || (n._preloadHash[o.src] = []), n._preloadHash[o.src].push({
					src: t,
					id: e,
					data: o.data
				}), 1 == n._preloadHash[o.src].length) n.activePlugin.preload(o.src, o.tag);
			else if (1 == n._preloadHash[o.src][0]) return !0;
			return o
		}, n.registerManifest = function(t, e) {
			for (var i = [], s = 0, n = t.length; n > s; s++) i[s] = createjs.Sound.registerSound(t[s].src, t[s].id, t[s].data, e);
			return i
		}, n.removeSound = function(t, i) {
			if (null == n.activePlugin) return !1;
			t instanceof Object && (t = t.src), t = n._getSrcById(t).src, null != i && (t = i + t);
			var s = n._parsePath(t);
			if (null == s) return !1;
			t = s.src;
			for (var o in n._idHash) n._idHash[o].src == t && delete n._idHash[o];
			return e.removeSrc(t), delete n._preloadHash[t], n.activePlugin.removeSound(t), !0
		}, n.removeManifest = function(t, e) {
			for (var i = [], s = 0, n = t.length; n > s; s++) i[s] = createjs.Sound.removeSound(t[s].src, e);
			return i
		}, n.removeAllSounds = function() {
			n._idHash = {}, n._preloadHash = {}, e.removeAll(), n.activePlugin && n.activePlugin.removeAllSounds()
		}, n.loadComplete = function(t) {
			var e = n._parsePath(t);
			return t = e ? n._getSrcById(e.src).src : n._getSrcById(t).src, 1 == n._preloadHash[t][0]
		}, n._parsePath = function(t) {
			"string" != typeof t && (t = t.toString());
			var e = t.match(n.FILE_PATTERN);
			if (null == e) return !1;
			for (var i = e[4], s = e[5], o = n.getCapabilities(), a = 0; !o[s];)
				if (s = n.alternateExtensions[a++], a > n.alternateExtensions.length) return null;
			t = t.replace("." + e[5], "." + s);
			var r = {
				name: i,
				src: t,
				extension: s
			};
			return r
		}, n.play = function(t, e, i, s, o, a, r, h, f) {
			e instanceof Object && (i = e.delay, s = e.offset, o = e.loop, a = e.volume, r = e.pan, h = e.startTime, f = e.duration, e = e.interrupt);
			var _ = n.createInstance(t, h, f),
				l = n._playInstance(_, e, i, s, o, a, r);
			return l || _.playFailed(), _
		}, n.createInstance = function(i, s, o) {
			if (!n.initializeDefaultPlugins()) return n._defaultSoundInstance;
			i = n._getSrcById(i);
			var a = n._parsePath(i.src),
				r = null;
			return null != a && null != a.src ? (e.create(a.src), null == s && (s = i.startTime), r = n.activePlugin.create(a.src, s, o || i.duration)) : r = t._defaultSoundInstance, r.uniqueId = n._lastID++, r
		}, n.setVolume = function(t) {
			if (null == Number(t)) return !1;
			if (t = Math.max(0, Math.min(1, t)), n._masterVolume = t, !this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(t))
				for (var e = this._instances, i = 0, s = e.length; s > i; i++) e[i].setMasterVolume(t)
		}, n.getVolume = function() {
			return n._masterVolume
		}, n.setMute = function(t) {
			if (null == t) return !1;
			if (this._masterMute = t, !this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(t))
				for (var e = this._instances, i = 0, s = e.length; s > i; i++) e[i].setMasterMute(t);
			return !0
		}, n.getMute = function() {
			return this._masterMute
		}, n.stop = function() {
			for (var t = this._instances, e = t.length; e--;) t[e].stop()
		}, n._playInstance = function(t, e, i, s, o, a, r) {
			if (e instanceof Object && (i = e.delay, s = e.offset, o = e.loop, a = e.volume, r = e.pan, e = e.interrupt), e = e || n.defaultInterruptBehavior, null == i && (i = 0), null == s && (s = t.getPosition()), null == o && (o = 0), null == a && (a = t.volume), null == r && (r = t.pan), 0 == i) {
				var h = n._beginPlaying(t, e, s, o, a, r);
				if (!h) return !1
			} else {
				var f = setTimeout(function() {
					n._beginPlaying(t, e, s, o, a, r)
				}, i);
				t._delayTimeoutId = f
			}
			return this._instances.push(t), !0
		}, n._beginPlaying = function(t, i, s, n, o, a) {
			if (!e.add(t, i)) return !1;
			var r = t._beginPlaying(s, n, o, a);
			if (!r) {
				var h = createjs.indexOf(this._instances, t);
				return h > -1 && this._instances.splice(h, 1), !1
			}
			return !0
		}, n._getSrcById = function(t) {
			return n._idHash[t] || {
				src: t
			}
		}, n._playFinished = function(t) {
			e.remove(t);
			var i = createjs.indexOf(this._instances, t);
			i > -1 && this._instances.splice(i, 1)
		}, createjs.Sound = t, e.channels = {}, e.create = function(t, i) {
			var s = e.get(t);
			return null == s ? (e.channels[t] = new e(t, i), !0) : !1
		}, e.removeSrc = function(t) {
			var i = e.get(t);
			return null == i ? !1 : (i._removeAll(), delete e.channels[t], !0)
		}, e.removeAll = function() {
			for (var t in e.channels) e.channels[t]._removeAll();
			e.channels = {}
		}, e.add = function(t, i) {
			var s = e.get(t.src);
			return null == s ? !1 : s._add(t, i)
		}, e.remove = function(t) {
			var i = e.get(t.src);
			return null == i ? !1 : (i._remove(t), !0)
		}, e.maxPerChannel = function() {
			return o.maxDefault
		}, e.get = function(t) {
			return e.channels[t]
		};
		var o = e.prototype;
		o.src = null, o.max = null, o.maxDefault = 100, o.length = 0, o.init = function(t, e) {
			this.src = t, this.max = e || this.maxDefault, -1 == this.max && (this.max = this.maxDefault), this._instances = []
		}, o._get = function(t) {
			return this._instances[t]
		}, o._add = function(t, e) {
			return this._getSlot(e, t) ? (this._instances.push(t), this.length++, !0) : !1
		}, o._remove = function(t) {
			var e = createjs.indexOf(this._instances, t);
			return -1 == e ? !1 : (this._instances.splice(e, 1), this.length--, !0)
		}, o._removeAll = function() {
			for (var t = this.length - 1; t >= 0; t--) this._instances[t].stop()
		}, o._getSlot = function(e) {
			for (var i, s, n = 0, o = this.max; o > n; n++) {
				if (i = this._get(n), null == i) return !0;
				(e != t.INTERRUPT_NONE || i.playState == t.PLAY_FINISHED) && (0 != n ? i.playState == t.PLAY_FINISHED || i.playState == t.PLAY_INTERRUPTED || i.playState == t.PLAY_FAILED ? s = i : (e == t.INTERRUPT_EARLY && i.getPosition() < s.getPosition() || e == t.INTERRUPT_LATE && i.getPosition() > s.getPosition()) && (s = i) : s = i)
			}
			return null != s ? (s._interrupt(), this._remove(s), !0) : !1
		}, o.toString = function() {
			return "[Sound SoundChannel]"
		}, t._defaultSoundInstance = new i, s.init = function() {
			var t = window.navigator.userAgent;
			s.isFirefox = t.indexOf("Firefox") > -1, s.isOpera = null != window.opera, s.isChrome = t.indexOf("Chrome") > -1, s.isIOS = t.indexOf("iPod") > -1 || t.indexOf("iPhone") > -1 || t.indexOf("iPad") > -1, s.isAndroid = t.indexOf("Android") > -1, s.isBlackberry = t.indexOf("Blackberry") > -1
		}, s.init(), createjs.Sound.BrowserDetect = s
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";

		function t() {
			this._init()
		}
		var e = t;
		e._capabilities = null, e.isSupported = function() {
			var t = createjs.Sound.BrowserDetect.isIOS || createjs.Sound.BrowserDetect.isAndroid || createjs.Sound.BrowserDetect.isBlackberry;
			return "file:" != location.protocol || t || this._isFileXHRSupported() ? (e._generateCapabilities(), null == e.context ? !1 : !0) : !1
		}, e._isFileXHRSupported = function() {
			var t = !0,
				e = new XMLHttpRequest;
			try {
				e.open("GET", "WebAudioPluginTest.fail", !1)
			} catch (i) {
				return t = !1
			}
			e.onerror = function() {
				t = !1
			}, e.onload = function() {
				t = 404 == this.status || 200 == this.status || 0 == this.status && "" != this.response
			};
			try {
				e.send()
			} catch (i) {
				t = !1
			}
			return t
		}, e._generateCapabilities = function() {
			if (null == e._capabilities) {
				var t = document.createElement("audio");
				if (null == t.canPlayType) return null;
				if (window.AudioContext) e.context = new AudioContext;
				else {
					if (!window.webkitAudioContext) return null;
					e.context = new webkitAudioContext
				}
				e._compatibilitySetUp(), e.playEmptySound(), e._capabilities = {
					panning: !0,
					volume: !0,
					tracks: -1
				};
				for (var i = createjs.Sound.SUPPORTED_EXTENSIONS, s = createjs.Sound.EXTENSION_MAP, n = 0, o = i.length; o > n; n++) {
					var a = i[n],
						r = s[a] || a;
					e._capabilities[a] = "no" != t.canPlayType("audio/" + a) && "" != t.canPlayType("audio/" + a) || "no" != t.canPlayType("audio/" + r) && "" != t.canPlayType("audio/" + r)
				}
				e.context.destination.numberOfChannels < 2 && (e._capabilities.panning = !1)
			}
		}, e._compatibilitySetUp = function() {
			if (e._panningModel = "equalpower", !e.context.createGain) {
				e.context.createGain = e.context.createGainNode;
				var t = e.context.createBufferSource();
				t.__proto__.start = t.__proto__.noteGrainOn, t.__proto__.stop = t.__proto__.noteOff, e._panningModel = 0
			}
		}, e.playEmptySound = function() {
			var t = e.context.createBufferSource();
			t.buffer = e.context.createBuffer(1, 1, 22050), t.connect(e.context.destination), t.start(0, 0, 0)
		};
		var i = t.prototype;
		i._capabilities = null, i._volume = 1, i.context = null, i._panningModel = "equalpower", i.dynamicsCompressorNode = null, i.gainNode = null, i._arrayBuffers = null, i._init = function() {
			this._capabilities = e._capabilities, this._arrayBuffers = {}, this.context = e.context, this._panningModel = e._panningModel, this.dynamicsCompressorNode = this.context.createDynamicsCompressor(), this.dynamicsCompressorNode.connect(this.context.destination), this.gainNode = this.context.createGain(), this.gainNode.connect(this.dynamicsCompressorNode)
		}, i.register = function(t) {
			this._arrayBuffers[t] = !0;
			var e = {
				tag: new createjs.WebAudioPlugin.Loader(t, this)
			};
			return e
		}, i.isPreloadStarted = function(t) {
			return null != this._arrayBuffers[t]
		}, i.isPreloadComplete = function(t) {
			return !(null == this._arrayBuffers[t] || 1 == this._arrayBuffers[t])
		}, i.removeSound = function(t) {
			delete this._arrayBuffers[t]
		}, i.removeAllSounds = function() {
			this._arrayBuffers = {}
		}, i.addPreloadResults = function(t, e) {
			this._arrayBuffers[t] = e
		}, i._handlePreloadComplete = function(t) {
			createjs.Sound._sendFileLoadEvent(t.src), t.cleanUp()
		}, i.preload = function(t) {
			this._arrayBuffers[t] = !0;
			var e = new createjs.WebAudioPlugin.Loader(t, this);
			e.onload = this._handlePreloadComplete, e.load()
		}, i.create = function(t, e, i) {
			return this.isPreloadStarted(t) || this.preload(t), new createjs.WebAudioPlugin.SoundInstance(t, e, i, this)
		}, i.setVolume = function(t) {
			return this._volume = t, this._updateVolume(), !0
		}, i._updateVolume = function() {
			var t = createjs.Sound._masterMute ? 0 : this._volume;
			t != this.gainNode.gain.value && (this.gainNode.gain.value = t)
		}, i.getVolume = function() {
			return this._volume
		}, i.setMute = function() {
			return this._updateVolume(), !0
		}, i.toString = function() {
			return "[WebAudioPlugin]"
		}, createjs.WebAudioPlugin = t
	}(),
	function() {
		"use strict";

		function t(t, e, i, s) {
			this._init(t, e, i, s)
		}
		var e = t.prototype = new createjs.EventDispatcher;
		e.src = null, e.uniqueId = -1, e.playState = null, e._owner = null, e._offset = 0, e._startTime = 0, e._volume = 1, createjs.definePropertySupported && Object.defineProperty(e, "volume", {
			get: function() {
				return this._volume
			},
			set: function(t) {
				return null == Number(t) ? !1 : (t = Math.max(0, Math.min(1, t)), this._volume = t, void this._updateVolume())
			}
		}), e._pan = 0, createjs.definePropertySupported && Object.defineProperty(e, "pan", {
			get: function() {
				return this._pan
			},
			set: function(t) {
				return this._owner._capabilities.panning && null != Number(t) ? (t = Math.max(-1, Math.min(1, t)), this._pan = t, void this.panNode.setPosition(t, 0, -.5)) : !1
			}
		}), e._duration = 0, e._remainingLoops = 0, e._delayTimeoutId = null, e._soundCompleteTimeout = null, e.gainNode = null, e.panNode = null, e.sourceNode = null, e._sourceNodeNext = null, e._muted = !1, e.paused = !1, e._paused = !1, e._playbackStartTime = 0, e._endedHandler = null, e._sendEvent = function(t) {
			var e = new createjs.Event(t);
			this.dispatchEvent(e)
		}, e._init = function(t, e, i, s) {
			this.src = t, this._startTime = .001 * e || 0, this._duration = i || 0, this._owner = s, this.gainNode = this._owner.context.createGain(), this.panNode = this._owner.context.createPanner(), this.panNode.panningModel = this._owner._panningModel, this.panNode.connect(this.gainNode), this._owner.isPreloadComplete(this.src) && !this._duration && (this._duration = 1e3 * this._owner._arrayBuffers[this.src].duration), this._endedHandler = createjs.proxy(this._handleSoundComplete, this)
		}, e._cleanUp = function() {
			this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED && (this.sourceNode = this._cleanUpAudioNode(this.sourceNode), this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext)), 0 != this.gainNode.numberOfOutputs && this.gainNode.disconnect(0), clearTimeout(this._delayTimeoutId), clearTimeout(this._soundCompleteTimeout), this._playbackStartTime = 0, createjs.Sound._playFinished(this)
		}, e._cleanUpAudioNode = function(t) {
			return t && (t.stop(0), t.disconnect(this.panNode), t = null), t
		}, e._interrupt = function() {
			this._cleanUp(), this.playState = createjs.Sound.PLAY_INTERRUPTED, this.paused = this._paused = !1, this._sendEvent("interrupted")
		}, e._handleSoundReady = function() {
			if (this._duration || (this._duration = 1e3 * this._owner._arrayBuffers[this.src].duration), 1e3 * this._offset > this._duration) return void this.playFailed();
			this._offset < 0 && (this._offset = 0), this.playState = createjs.Sound.PLAY_SUCCEEDED, this.paused = this._paused = !1, this.gainNode.connect(this._owner.gainNode);
			var t = .001 * this._duration;
			this.sourceNode = this._createAndPlayAudioNode(this._owner.context.currentTime - t, this._offset), this._playbackStartTime = this.sourceNode.startTime - this._offset, this._soundCompleteTimeout = setTimeout(this._endedHandler, 1e3 * (t - this._offset)), 0 != this._remainingLoops && (this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0))
		}, e._createAndPlayAudioNode = function(t, e) {
			var i = this._owner.context.createBufferSource();
			i.buffer = this._owner._arrayBuffers[this.src], i.connect(this.panNode);
			var s = .001 * this._duration;
			return i.startTime = t + s, i.start(i.startTime, e + this._startTime, s - e), i
		}, e.play = function(t, e, i, s, n, o) {
			this._cleanUp(), createjs.Sound._playInstance(this, t, e, i, s, n, o)
		}, e._beginPlaying = function(t, e, i, s) {
			return this._offset = .001 * t, this._remainingLoops = e, this.volume = i, this.pan = s, this._owner.isPreloadComplete(this.src) ? (this._handleSoundReady(null), this._sendEvent("succeeded"), 1) : void this.playFailed()
		}, e.pause = function() {
			return this._paused || this.playState != createjs.Sound.PLAY_SUCCEEDED ? !1 : (this.paused = this._paused = !0, this._offset = this._owner.context.currentTime - this._playbackStartTime, this.sourceNode = this._cleanUpAudioNode(this.sourceNode), this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext), 0 != this.gainNode.numberOfOutputs && this.gainNode.disconnect(), clearTimeout(this._delayTimeoutId), clearTimeout(this._soundCompleteTimeout), !0)
		}, e.resume = function() {
			return this._paused ? (this._handleSoundReady(), !0) : !1
		}, e.stop = function() {
			return this.paused = this._paused = !1, this._cleanUp(), this.playState = createjs.Sound.PLAY_FINISHED, this._offset = 0, !0
		}, e.setVolume = function(t) {
			return this.volume = t, !0
		}, e._updateVolume = function() {
			var t = this._muted ? 0 : this._volume;
			t != this.gainNode.gain.value && (this.gainNode.gain.value = t)
		}, e.getVolume = function() {
			return this.volume
		}, e.setMute = function(t) {
			return null == t ? !1 : (this._muted = t, this._updateVolume(), !0)
		}, e.getMute = function() {
			return this._muted
		}, e.setPan = function(t) {
			return this.pan = t, this.pan != t ? !1 : !0
		}, e.getPan = function() {
			return this.pan
		}, e.getPosition = function() {
			if (this._paused || null == this.sourceNode) var t = this._offset;
			else var t = this._owner.context.currentTime - this._playbackStartTime;
			return 1e3 * t
		}, e.setPosition = function(t) {
			return this._offset = .001 * t, this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED && (this.sourceNode = this._cleanUpAudioNode(this.sourceNode), this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext), clearTimeout(this._soundCompleteTimeout)), this._paused || this.playState != createjs.Sound.PLAY_SUCCEEDED || this._handleSoundReady(), !0
		}, e.getDuration = function() {
			return this._duration
		}, e._handleSoundComplete = function() {
			return this._offset = 0, 0 != this._remainingLoops ? (this._remainingLoops--, this._sourceNodeNext ? (this._cleanUpAudioNode(this.sourceNode), this.sourceNode = this._sourceNodeNext, this._playbackStartTime = this.sourceNode.startTime, this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0), this._soundCompleteTimeout = setTimeout(this._endedHandler, this._duration)) : this._handleSoundReady(), void this._sendEvent("loop")) : (this._cleanUp(), this.playState = createjs.Sound.PLAY_FINISHED, void this._sendEvent("complete"))
		}, e.playFailed = function() {
			this._cleanUp(), this.playState = createjs.Sound.PLAY_FAILED, this._sendEvent("failed")
		}, e.toString = function() {
			return "[WebAudioPlugin SoundInstance]"
		}, createjs.WebAudioPlugin.SoundInstance = t
	}(),
	function() {
		"use strict";

		function t(t, e) {
			this._init(t, e)
		}
		var e = t.prototype;
		e.request = null, e.owner = null, e.progress = -1, e.src = null, e.result = null, e.onload = null, e.onprogress = null, e.onerror = null, e._init = function(t, e) {
			this.src = t, this.owner = e
		}, e.load = function(t) {
			null != t && (this.src = t), this.request = new XMLHttpRequest, this.request.open("GET", this.src, !0), this.request.responseType = "arraybuffer", this.request.onload = createjs.proxy(this.handleLoad, this), this.request.onerror = createjs.proxy(this.handleError, this), this.request.onprogress = createjs.proxy(this.handleProgress, this), this.request.send()
		}, e.handleProgress = function(t, e) {
			this.progress = t / e, this.onprogress && this.onprogress({
				loaded: t,
				total: e,
				progress: this.progress
			})
		}, e.handleLoad = function() {
			this.owner.context.decodeAudioData(this.request.response, createjs.proxy(this.handleAudioDecoded, this), createjs.proxy(this.handleError, this))
		}, e.handleAudioDecoded = function(t) {
			this.progress = 1, this.result = t, this.owner.addPreloadResults(this.src, this.result), this.onload && this.onload(this)
		}, e.handleError = function(t) {
			this.owner.removeSound(this.src), this.onerror && this.onerror(t)
		}, e.cleanUp = function() {
			this.request && (this.src = null, this.owner = null, this.request.onload = null, this.request.onerror = null, this.request.onprogress = null, this.request = null, this.onload = null, this.onprogress = null, this.onerror = null)
		}, e.toString = function() {
			return "[WebAudioPlugin Loader]"
		}, createjs.WebAudioPlugin.Loader = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";

		function t() {
			this._init()
		}
		var e = t;
		e.MAX_INSTANCES = 30, e._AUDIO_READY = "canplaythrough", e._AUDIO_ENDED = "ended", e._AUDIO_SEEKED = "seeked", e._AUDIO_STALLED = "stalled", e._TIME_UPDATE = "timeupdate", e._capabilities = null, e.enableIOS = !1, e.isSupported = function() {
			return createjs.Sound.BrowserDetect.isIOS && !e.enableIOS ? !1 : (e._generateCapabilities(), null == e._capabilities ? !1 : !0)
		}, e._generateCapabilities = function() {
			if (null == e._capabilities) {
				var t = document.createElement("audio");
				if (null == t.canPlayType) return null;
				e._capabilities = {
					panning: !0,
					volume: !0,
					tracks: -1
				};
				for (var i = createjs.Sound.SUPPORTED_EXTENSIONS, s = createjs.Sound.EXTENSION_MAP, n = 0, o = i.length; o > n; n++) {
					var a = i[n],
						r = s[a] || a;
					e._capabilities[a] = "no" != t.canPlayType("audio/" + a) && "" != t.canPlayType("audio/" + a) || "no" != t.canPlayType("audio/" + r) && "" != t.canPlayType("audio/" + r)
				}
			}
		};
		var i = t.prototype;
		i._capabilities = null, i._audioSources = null, i.defaultNumChannels = 2, i._init = function() {
			this._capabilities = e._capabilities, this._audioSources = {}
		}, i.register = function(t, e) {
			this._audioSources[t] = !0;
			for (var i = createjs.HTMLAudioPlugin.TagPool.get(t), s = null, n = e, o = 0; n > o; o++) s = this._createTag(t), i.add(s);
			return {
				tag: s
			}
		}, i._createTag = function(t) {
			var e = document.createElement("audio");
			return e.autoplay = !1, e.preload = "none", e.src = t, e
		}, i.removeSound = function(t) {
			delete this._audioSources[t], createjs.HTMLAudioPlugin.TagPool.remove(t)
		}, i.removeAllSounds = function() {
			this._audioSources = {}, createjs.HTMLAudioPlugin.TagPool.removeAll()
		}, i.create = function(t, e, i) {
			if (!this.isPreloadStarted(t)) {
				var s = createjs.HTMLAudioPlugin.TagPool.get(t),
					n = this._createTag(t);
				n.id = t, s.add(n), this.preload(t, {
					tag: n
				})
			}
			return new createjs.HTMLAudioPlugin.SoundInstance(t, e, i, this)
		}, i.isPreloadStarted = function(t) {
			return null != this._audioSources[t]
		}, i.preload = function(t, e) {
			this._audioSources[t] = !0, new createjs.HTMLAudioPlugin.Loader(t, e)
		}, i.toString = function() {
			return "[HTMLAudioPlugin]"
		}, createjs.HTMLAudioPlugin = t
	}(),
	function() {
		"use strict";

		function t(t, e, i, s) {
			this._init(t, e, i, s)
		}
		var e = t.prototype = new createjs.EventDispatcher;
		e.src = null, e.uniqueId = -1, e.playState = null, e._owner = null, e.loaded = !1, e._offset = 0, e._startTime = 0, e._volume = 1, createjs.definePropertySupported && Object.defineProperty(e, "volume", {
			get: function() {
				return this._volume
			},
			set: function(t) {
				null != Number(t) && (t = Math.max(0, Math.min(1, t)), this._volume = t, this._updateVolume())
			}
		}), e.pan = 0, e._duration = 0, e._audioSpriteStopTime = null, e._remainingLoops = 0, e._delayTimeoutId = null, e.tag = null, e._muted = !1, e.paused = !1, e._paused = !1, e._endedHandler = null, e._readyHandler = null, e._stalledHandler = null, e._audioSpriteEndHandler = null, e.loopHandler = null, e._init = function(t, e, i, s) {
			this.src = t, this._startTime = e || 0, i ? (this._duration = i, this._audioSpriteStopTime = .001 * (e + i)) : this._duration = createjs.HTMLAudioPlugin.TagPool.getDuration(this.src), this._owner = s, this._endedHandler = createjs.proxy(this._handleSoundComplete, this), this._readyHandler = createjs.proxy(this._handleSoundReady, this), this._stalledHandler = createjs.proxy(this._handleSoundStalled, this), this.__audioSpriteEndHandler = createjs.proxy(this._handleAudioSpriteLoop, this), this.loopHandler = createjs.proxy(this.handleSoundLoop, this)
		}, e._sendEvent = function(t) {
			var e = new createjs.Event(t);
			this.dispatchEvent(e)
		}, e._cleanUp = function() {
			var t = this.tag;
			if (null != t) {
				t.pause(), this.tag.loop = !1, t.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1), t.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, !1), t.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this.loopHandler, !1), t.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this.__audioSpriteEndHandler, !1);
				try {
					t.currentTime = this._startTime
				} catch (e) {}
				createjs.HTMLAudioPlugin.TagPool.setInstance(this.src, t), this.tag = null
			}
			clearTimeout(this._delayTimeoutId), createjs.Sound._playFinished(this)
		}, e._interrupt = function() {
			null != this.tag && (this.playState = createjs.Sound.PLAY_INTERRUPTED, this._cleanUp(), this.paused = this._paused = !1, this._sendEvent("interrupted"))
		}, e.play = function(t, e, i, s, n, o) {
			this._cleanUp(), createjs.Sound._playInstance(this, t, e, i, s, n, o)
		}, e._beginPlaying = function(t, e, i) {
			var s = this.tag = createjs.HTMLAudioPlugin.TagPool.getInstance(this.src);
			return null == s ? (this.playFailed(), -1) : (s.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1), this._offset = t, this.volume = i, this._updateVolume(), this._remainingLoops = e, 4 !== s.readyState ? (s.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, !1), s.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, !1), s.preload = "auto", s.load()) : this._handleSoundReady(null), this._sendEvent("succeeded"), 1)
		}, e._handleSoundStalled = function() {
			this._cleanUp(), this._sendEvent("failed")
		}, e._handleSoundReady = function() {
			return this.playState = createjs.Sound.PLAY_SUCCEEDED, this.paused = this._paused = !1, this.tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, !1), this.tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this.loopHandler, !1), this._offset >= this.getDuration() ? void this.playFailed() : (this.tag.currentTime = .001 * (this._startTime + this._offset), this._audioSpriteStopTime ? (this.tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1), this.tag.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this.__audioSpriteEndHandler, !1)) : -1 == this._remainingLoops ? this.tag.loop = !0 : 0 != this._remainingLoops && (this.tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this.loopHandler, !1), this.tag.loop = !0), void this.tag.play())
		}, e.pause = function() {
			return this._paused || this.playState != createjs.Sound.PLAY_SUCCEEDED || null == this.tag ? !1 : (this.paused = this._paused = !0, this.tag.pause(), clearTimeout(this._delayTimeoutId), !0)
		}, e.resume = function() {
			return this._paused && null != this.tag ? (this.paused = this._paused = !1, this.tag.play(), !0) : !1
		}, e.stop = function() {
			return this._offset = 0, this.pause(), this.playState = createjs.Sound.PLAY_FINISHED, this._cleanUp(), !0
		}, e.setMasterVolume = function() {
			this._updateVolume()
		}, e.setVolume = function(t) {
			return this.volume = t, !0
		}, e._updateVolume = function() {
			if (null != this.tag) {
				var t = this._muted || createjs.Sound._masterMute ? 0 : this._volume * createjs.Sound._masterVolume;
				t != this.tag.volume && (this.tag.volume = t)
			}
		}, e.getVolume = function() {
			return this.volume
		}, e.setMasterMute = function() {
			this._updateVolume()
		}, e.setMute = function(t) {
			return null == t ? !1 : (this._muted = t, this._updateVolume(), !0)
		}, e.getMute = function() {
			return this._muted
		}, e.setPan = function() {
			return !1
		}, e.getPan = function() {
			return 0
		}, e.getPosition = function() {
			return null == this.tag ? this._offset : 1e3 * this.tag.currentTime - this._startTime
		}, e.setPosition = function(t) {
			if (null == this.tag) this._offset = t;
			else {
				this.tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this.loopHandler, !1);
				try {
					t += this._startTime, this.tag.currentTime = .001 * t
				} catch (e) {
					return !1
				}
				this.tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this.loopHandler, !1)
			}
			return !0
		}, e.getDuration = function() {
			return this._duration
		}, e._handleSoundComplete = function() {
			this._offset = 0, this.playState = createjs.Sound.PLAY_FINISHED, this._cleanUp(), this._sendEvent("complete")
		}, e._handleAudioSpriteLoop = function() {
			this.tag.currentTime <= this._audioSpriteStopTime || (this.tag.pause(), 0 == this._remainingLoops ? this._handleSoundComplete(null) : (this._offset = 0, this._remainingLoops--, this.tag.currentTime = .001 * this._startTime, this._paused || this.tag.play(), this._sendEvent("loop")))
		}, e.handleSoundLoop = function() {
			this._offset = 0, this._remainingLoops--, 0 == this._remainingLoops && (this.tag.loop = !1, this.tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this.loopHandler, !1)), this._sendEvent("loop")
		}, e.playFailed = function() {
			this.playState = createjs.Sound.PLAY_FAILED, this._cleanUp(), this._sendEvent("failed")
		}, e.toString = function() {
			return "[HTMLAudioPlugin SoundInstance]"
		}, createjs.HTMLAudioPlugin.SoundInstance = t
	}(),
	function() {
		"use strict";

		function t(t, e) {
			this._init(t, e)
		}
		var e = t.prototype;
		e.src = null, e.tag = null, e.preloadTimer = null, e.loadedHandler = null, e._init = function(t, e) {
			if (this.src = t, this.tag = e, this.preloadTimer = setInterval(createjs.proxy(this.preloadTick, this), 200), this.loadedHandler = createjs.proxy(this.sendLoadedEvent, this), this.tag.addEventListener && this.tag.addEventListener("canplaythrough", this.loadedHandler), null == this.tag.onreadystatechange) this.tag.onreadystatechange = createjs.proxy(this.sendLoadedEvent, this);
			else {
				var i = this.tag.onreadystatechange;
				this.tag.onreadystatechange = function() {
					i(), this.tag.onreadystatechange = createjs.proxy(this.sendLoadedEvent, this)
				}
			}
			this.tag.preload = "auto", this.tag.load()
		}, e.preloadTick = function() {
			var t = this.tag.buffered,
				e = this.tag.duration;
			t.length > 0 && t.end(0) >= e - 1 && this.handleTagLoaded()
		}, e.handleTagLoaded = function() {
			clearInterval(this.preloadTimer)
		}, e.sendLoadedEvent = function() {
			this.tag.removeEventListener && this.tag.removeEventListener("canplaythrough", this.loadedHandler), this.tag.onreadystatechange = null, createjs.Sound._sendFileLoadEvent(this.src)
		}, e.toString = function() {
			return "[HTMLAudioPlugin Loader]"
		}, createjs.HTMLAudioPlugin.Loader = t
	}(),
	function() {
		"use strict";

		function t(t) {
			this._init(t)
		}
		var e = t;
		e.tags = {}, e.get = function(i) {
			var s = e.tags[i];
			return null == s && (s = e.tags[i] = new t(i)), s
		}, e.remove = function(t) {
			var i = e.tags[t];
			return null == i ? !1 : (i.removeAll(), delete e.tags[t], !0)
		}, e.removeAll = function() {
			for (var t in e.tags) e.tags[t].removeAll();
			e.tags = {}
		}, e.getInstance = function(t) {
			var i = e.tags[t];
			return null == i ? null : i.get()
		}, e.setInstance = function(t, i) {
			var s = e.tags[t];
			return null == s ? null : s.set(i)
		}, e.getDuration = function(t) {
			var i = e.tags[t];
			return null == i ? 0 : i.getDuration()
		};
		var i = t.prototype;
		i.src = null, i.length = 0, i.available = 0, i.tags = null, i.duration = 0, i._init = function(t) {
			this.src = t, this.tags = []
		}, i.add = function(t) {
			this.tags.push(t), this.length++, this.available++
		}, i.removeAll = function() {
			for (var t; this.length--;) t = this.tags[this.length], t.parentNode && t.parentNode.removeChild(t), delete this.tags[this.length];
			this.src = null, this.tags.length = 0
		}, i.get = function() {
			if (0 == this.tags.length) return null;
			this.available = this.tags.length;
			var t = this.tags.pop();
			return null == t.parentNode && document.body.appendChild(t), t
		}, i.set = function(t) {
			var e = createjs.indexOf(this.tags, t); - 1 == e && this.tags.push(t), this.available = this.tags.length
		}, i.getDuration = function() {
			return this.duration || (this.duration = 1e3 * this.tags[this.tags.length - 1].duration), this.duration
		}, i.toString = function() {
			return "[HTMLAudioPlugin TagPool]"
		}, createjs.HTMLAudioPlugin.TagPool = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i) {
				this.initialize(t, e, i)
			},
			e = t.prototype;
		e.type = null, e.target = null, e.currentTarget = null, e.eventPhase = 0, e.bubbles = !1, e.cancelable = !1, e.timeStamp = 0, e.defaultPrevented = !1, e.propagationStopped = !1, e.immediatePropagationStopped = !1, e.removed = !1, e.initialize = function(t, e, i) {
			this.type = t, this.bubbles = e, this.cancelable = i, this.timeStamp = (new Date).getTime()
		}, e.preventDefault = function() {
			this.defaultPrevented = !0
		}, e.stopPropagation = function() {
			this.propagationStopped = !0
		}, e.stopImmediatePropagation = function() {
			this.immediatePropagationStopped = this.propagationStopped = !0
		}, e.remove = function() {
			this.removed = !0
		}, e.clone = function() {
			return new t(this.type, this.bubbles, this.cancelable)
		}, e.toString = function() {
			return "[Event (type=" + this.type + ")]"
		}, createjs.Event = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {},
			e = t.prototype;
		t.initialize = function(t) {
			t.addEventListener = e.addEventListener, t.on = e.on, t.removeEventListener = t.off = e.removeEventListener, t.removeAllEventListeners = e.removeAllEventListeners, t.hasEventListener = e.hasEventListener, t.dispatchEvent = e.dispatchEvent, t._dispatchEvent = e._dispatchEvent, t.willTrigger = e.willTrigger
		}, e._listeners = null, e._captureListeners = null, e.initialize = function() {}, e.addEventListener = function(t, e, i) {
			var s;
			s = i ? this._captureListeners = this._captureListeners || {} : this._listeners = this._listeners || {};
			var n = s[t];
			return n && this.removeEventListener(t, e, i), n = s[t], n ? n.push(e) : s[t] = [e], e
		}, e.on = function(t, e, i, s, n, o) {
			return e.handleEvent && (i = i || e, e = e.handleEvent), i = i || this, this.addEventListener(t, function(t) {
				e.call(i, t, n), s && t.remove()
			}, o)
		}, e.removeEventListener = function(t, e, i) {
			var s = i ? this._captureListeners : this._listeners;
			if (s) {
				var n = s[t];
				if (n)
					for (var o = 0, a = n.length; a > o; o++)
						if (n[o] == e) {
							1 == a ? delete s[t] : n.splice(o, 1);
							break
						}
			}
		}, e.off = e.removeEventListener, e.removeAllEventListeners = function(t) {
			t ? (this._listeners && delete this._listeners[t], this._captureListeners && delete this._captureListeners[t]) : this._listeners = this._captureListeners = null
		}, e.dispatchEvent = function(t, e) {
			if ("string" == typeof t) {
				var i = this._listeners;
				if (!i || !i[t]) return !1;
				t = new createjs.Event(t)
			}
			if (t.target = e || this, t.bubbles && this.parent) {
				for (var s = this, n = [s]; s.parent;) n.push(s = s.parent);
				var o, a = n.length;
				for (o = a - 1; o >= 0 && !t.propagationStopped; o--) n[o]._dispatchEvent(t, 1 + (0 == o));
				for (o = 1; a > o && !t.propagationStopped; o++) n[o]._dispatchEvent(t, 3)
			} else this._dispatchEvent(t, 2);
			return t.defaultPrevented
		}, e.hasEventListener = function(t) {
			var e = this._listeners,
				i = this._captureListeners;
			return !!(e && e[t] || i && i[t])
		}, e.willTrigger = function(t) {
			for (var e = this; e;) {
				if (e.hasEventListener(t)) return !0;
				e = e.parent
			}
			return !1
		}, e.toString = function() {
			return "[EventDispatcher]"
		}, e._dispatchEvent = function(t, e) {
			var i, s = 1 == e ? this._captureListeners : this._listeners;
			if (t && s) {
				var n = s[t.type];
				if (!n || !(i = n.length)) return;
				t.currentTarget = this, t.eventPhase = e, t.removed = !1, n = n.slice();
				for (var o = 0; i > o && !t.immediatePropagationStopped; o++) {
					var a = n[o];
					a.handleEvent ? a.handleEvent(t) : a(t), t.removed && (this.off(t.type, a, 1 == e), t.removed = !1)
				}
			}
		}, createjs.EventDispatcher = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i) {
				this.initialize(t, e, i)
			},
			e = t.prototype = new createjs.EventDispatcher;
		t.NONE = 0, t.LOOP = 1, t.REVERSE = 2, t.IGNORE = {}, t._tweens = [], t._plugins = {}, t.get = function(e, i, s, n) {
			return n && t.removeTweens(e), new t(e, i, s)
		}, t.tick = function(e, i) {
			for (var s = t._tweens.slice(), n = s.length - 1; n >= 0; n--) {
				var o = s[n];
				i && !o.ignoreGlobalPause || o._paused || o.tick(o._useTicks ? 1 : e)
			}
		}, t.handleEvent = function(t) {
			"tick" == t.type && this.tick(t.delta, t.paused)
		}, t.removeTweens = function(e) {
			if (e.tweenjs_count) {
				for (var i = t._tweens, s = i.length - 1; s >= 0; s--) i[s]._target == e && (i[s]._paused = !0, i.splice(s, 1));
				e.tweenjs_count = 0
			}
		}, t.removeAllTweens = function() {
			for (var e = t._tweens, i = 0, s = e.length; s > i; i++) {
				var n = e[i];
				n.paused = !0, n.target.tweenjs_count = 0
			}
			e.length = 0
		}, t.hasActiveTweens = function(e) {
			return e ? e.tweenjs_count : t._tweens && !!t._tweens.length
		}, t.installPlugin = function(e, i) {
			var s = e.priority;
			null == s && (e.priority = s = 0);
			for (var n = 0, o = i.length, a = t._plugins; o > n; n++) {
				var r = i[n];
				if (a[r]) {
					for (var h = a[r], f = 0, _ = h.length; _ > f && !(s < h[f].priority); f++);
					a[r].splice(f, 0, e)
				} else a[r] = [e]
			}
		}, t._register = function(e, i) {
			var s = e._target,
				n = t._tweens;
			if (i) s && (s.tweenjs_count = s.tweenjs_count ? s.tweenjs_count + 1 : 1), n.push(e), !t._inited && createjs.Ticker && (createjs.Ticker.addEventListener("tick", t), t._inited = !0);
			else {
				s && s.tweenjs_count--;
				for (var o = n.length; o--;)
					if (n[o] == e) return void n.splice(o, 1)
			}
		}, e.ignoreGlobalPause = !1, e.loop = !1, e.duration = 0, e.pluginData = null, e.target = null, e.position = null, e.passive = !1, e._paused = !1, e._curQueueProps = null, e._initQueueProps = null, e._steps = null, e._actions = null, e._prevPosition = 0, e._stepPosition = 0, e._prevPos = -1, e._target = null, e._useTicks = !1, e._inited = !1, e.initialize = function(e, i, s) {
			this.target = this._target = e, i && (this._useTicks = i.useTicks, this.ignoreGlobalPause = i.ignoreGlobalPause, this.loop = i.loop, i.onChange && this.addEventListener("change", i.onChange), i.override && t.removeTweens(e)), this.pluginData = s || {}, this._curQueueProps = {}, this._initQueueProps = {}, this._steps = [], this._actions = [], i && i.paused ? this._paused = !0 : t._register(this, !0), i && null != i.position && this.setPosition(i.position, t.NONE)
		}, e.wait = function(t, e) {
			if (null == t || 0 >= t) return this;
			var i = this._cloneProps(this._curQueueProps);
			return this._addStep({
				d: t,
				p0: i,
				e: this._linearEase,
				p1: i,
				v: e
			})
		}, e.to = function(t, e, i) {
			return (isNaN(e) || 0 > e) && (e = 0), this._addStep({
				d: e || 0,
				p0: this._cloneProps(this._curQueueProps),
				e: i,
				p1: this._cloneProps(this._appendQueueProps(t))
			})
		}, e.call = function(t, e, i) {
			return this._addAction({
				f: t,
				p: e ? e : [this],
				o: i ? i : this._target
			})
		}, e.set = function(t, e) {
			return this._addAction({
				f: this._set,
				o: this,
				p: [t, e ? e : this._target]
			})
		}, e.play = function(t) {
			return t || (t = this), this.call(t.setPaused, [!1], t)
		}, e.pause = function(t) {
			return t || (t = this), this.call(t.setPaused, [!0], t)
		}, e.setPosition = function(t, e) {
			0 > t && (t = 0), null == e && (e = 1);
			var i = t,
				s = !1;
			if (i >= this.duration && (this.loop ? i %= this.duration : (i = this.duration, s = !0)), i == this._prevPos) return s;
			var n = this._prevPos;
			if (this.position = this._prevPos = i, this._prevPosition = t, this._target)
				if (s) this._updateTargetProps(null, 1);
				else if (this._steps.length > 0) {
				for (var o = 0, a = this._steps.length; a > o && !(this._steps[o].t > i); o++);
				var r = this._steps[o - 1];
				this._updateTargetProps(r, (this._stepPosition = i - r.t) / r.d)
			}
			return 0 != e && this._actions.length > 0 && (this._useTicks ? this._runActions(i, i) : 1 == e && n > i ? (n != this.duration && this._runActions(n, this.duration), this._runActions(0, i, !0)) : this._runActions(n, i)), s && this.setPaused(!0), this.dispatchEvent("change"), s
		}, e.tick = function(t) {
			this._paused || this.setPosition(this._prevPosition + t)
		}, e.setPaused = function(e) {
			return this._paused = !!e, t._register(this, !e), this
		}, e.w = e.wait, e.t = e.to, e.c = e.call, e.s = e.set, e.toString = function() {
			return "[Tween]"
		}, e.clone = function() {
			throw "Tween can not be cloned."
		}, e._updateTargetProps = function(e, i) {
			var s, n, o, a, r, h;
			if (e || 1 != i) {
				if (this.passive = !!e.v, this.passive) return;
				e.e && (i = e.e(i, 0, 1, 1)), s = e.p0, n = e.p1
			} else this.passive = !1, s = n = this._curQueueProps;
			for (var f in this._initQueueProps) {
				null == (a = s[f]) && (s[f] = a = this._initQueueProps[f]), null == (r = n[f]) && (n[f] = r = a), o = a == r || 0 == i || 1 == i || "number" != typeof a ? 1 == i ? r : a : a + (r - a) * i;
				var _ = !1;
				if (h = t._plugins[f])
					for (var l = 0, c = h.length; c > l; l++) {
						var u = h[l].tween(this, f, o, s, n, i, !!e && s == n, !e);
						u == t.IGNORE ? _ = !0 : o = u
					}
				_ || (this._target[f] = o)
			}
		}, e._runActions = function(t, e, i) {
			var s = t,
				n = e,
				o = -1,
				a = this._actions.length,
				r = 1;
			for (t > e && (s = e, n = t, o = a, a = r = -1);
				(o += r) != a;) {
				var h = this._actions[o],
					f = h.t;
				(f == n || f > s && n > f || i && f == t) && h.f.apply(h.o, h.p)
			}
		}, e._appendQueueProps = function(e) {
			var i, s, n, o, a;
			for (var r in e)
				if (void 0 === this._initQueueProps[r]) {
					if (s = this._target[r], i = t._plugins[r])
						for (n = 0, o = i.length; o > n; n++) s = i[n].init(this, r, s);
					this._initQueueProps[r] = this._curQueueProps[r] = void 0 === s ? null : s
				} else s = this._curQueueProps[r];
			for (var r in e) {
				if (s = this._curQueueProps[r], i = t._plugins[r])
					for (a = a || {}, n = 0, o = i.length; o > n; n++) i[n].step && i[n].step(this, r, s, e[r], a);
				this._curQueueProps[r] = e[r]
			}
			return a && this._appendQueueProps(a), this._curQueueProps
		}, e._cloneProps = function(t) {
			var e = {};
			for (var i in t) e[i] = t[i];
			return e
		}, e._addStep = function(t) {
			return t.d > 0 && (this._steps.push(t), t.t = this.duration, this.duration += t.d), this
		}, e._addAction = function(t) {
			return t.t = this.duration, this._actions.push(t), this
		}, e._set = function(t, e) {
			for (var i in t) e[i] = t[i]
		}, createjs.Tween = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i) {
				this.initialize(t, e, i)
			},
			e = t.prototype = new createjs.EventDispatcher;
		e.ignoreGlobalPause = !1, e.duration = 0, e.loop = !1, e.position = null, e._paused = !1, e._tweens = null, e._labels = null, e._labelList = null, e._prevPosition = 0, e._prevPos = -1, e._useTicks = !1, e.initialize = function(t, e, i) {
			this._tweens = [], i && (this._useTicks = i.useTicks, this.loop = i.loop, this.ignoreGlobalPause = i.ignoreGlobalPause, i.onChange && this.addEventListener("change", i.onChange)), t && this.addTween.apply(this, t), this.setLabels(e), i && i.paused ? this._paused = !0 : createjs.Tween._register(this, !0), i && null != i.position && this.setPosition(i.position, createjs.Tween.NONE)
		}, e.addTween = function(t) {
			var e = arguments.length;
			if (e > 1) {
				for (var i = 0; e > i; i++) this.addTween(arguments[i]);
				return arguments[0]
			}
			return 0 == e ? null : (this.removeTween(t), this._tweens.push(t), t.setPaused(!0), t._paused = !1, t._useTicks = this._useTicks, t.duration > this.duration && (this.duration = t.duration), this._prevPos >= 0 && t.setPosition(this._prevPos, createjs.Tween.NONE), t)
		}, e.removeTween = function(t) {
			var e = arguments.length;
			if (e > 1) {
				for (var i = !0, s = 0; e > s; s++) i = i && this.removeTween(arguments[s]);
				return i
			}
			if (0 == e) return !1;
			for (var n = this._tweens, s = n.length; s--;)
				if (n[s] == t) return n.splice(s, 1), t.duration >= this.duration && this.updateDuration(), !0;
			return !1
		}, e.addLabel = function(t, e) {
			this._labels[t] = e;
			var i = this._labelList;
			if (i) {
				for (var s = 0, n = i.length; n > s && !(e < i[s].position); s++);
				i.splice(s, 0, {
					label: t,
					position: e
				})
			}
		}, e.setLabels = function(t) {
			this._labels = t ? t : {}
		}, e.getLabels = function() {
			var t = this._labelList;
			if (!t) {
				t = this._labelList = [];
				var e = this._labels;
				for (var i in e) t.push({
					label: i,
					position: e[i]
				});
				t.sort(function(t, e) {
					return t.position - e.position
				})
			}
			return t
		}, e.getCurrentLabel = function() {
			var t = this.getLabels(),
				e = this.position,
				i = t.length;
			if (i) {
				for (var s = 0; i > s && !(e < t[s].position); s++);
				return 0 == s ? null : t[s - 1].label
			}
			return null
		}, e.gotoAndPlay = function(t) {
			this.setPaused(!1), this._goto(t)
		}, e.gotoAndStop = function(t) {
			this.setPaused(!0), this._goto(t)
		}, e.setPosition = function(t, e) {
			0 > t && (t = 0);
			var i = this.loop ? t % this.duration : t,
				s = !this.loop && t >= this.duration;
			if (i == this._prevPos) return s;
			this._prevPosition = t, this.position = this._prevPos = i;
			for (var n = 0, o = this._tweens.length; o > n; n++)
				if (this._tweens[n].setPosition(i, e), i != this._prevPos) return !1;
			return s && this.setPaused(!0), this.dispatchEvent("change"), s
		}, e.setPaused = function(t) {
			this._paused = !!t, createjs.Tween._register(this, !t)
		}, e.updateDuration = function() {
			this.duration = 0;
			for (var t = 0, e = this._tweens.length; e > t; t++) {
				var i = this._tweens[t];
				i.duration > this.duration && (this.duration = i.duration)
			}
		}, e.tick = function(t) {
			this.setPosition(this._prevPosition + t)
		}, e.resolve = function(t) {
			var e = parseFloat(t);
			return isNaN(e) && (e = this._labels[t]), e
		}, e.toString = function() {
			return "[Timeline]"
		}, e.clone = function() {
			throw "Timeline can not be cloned."
		}, e._goto = function(t) {
			var e = this.resolve(t);
			null != e && this.setPosition(e)
		}, createjs.Timeline = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {
			throw "Ease cannot be instantiated."
		};
		t.linear = function(t) {
			return t
		}, t.none = t.linear, t.get = function(t) {
			return -1 > t && (t = -1), t > 1 && (t = 1),
				function(e) {
					return 0 == t ? e : 0 > t ? e * (e * -t + 1 + t) : e * ((2 - e) * t + (1 - t))
				}
		}, t.getPowIn = function(t) {
			return function(e) {
				return Math.pow(e, t)
			}
		}, t.getPowOut = function(t) {
			return function(e) {
				return 1 - Math.pow(1 - e, t)
			}
		}, t.getPowInOut = function(t) {
			return function(e) {
				return (e *= 2) < 1 ? .5 * Math.pow(e, t) : 1 - .5 * Math.abs(Math.pow(2 - e, t))
			}
		}, t.quadIn = t.getPowIn(2), t.quadOut = t.getPowOut(2), t.quadInOut = t.getPowInOut(2), t.cubicIn = t.getPowIn(3), t.cubicOut = t.getPowOut(3), t.cubicInOut = t.getPowInOut(3), t.quartIn = t.getPowIn(4), t.quartOut = t.getPowOut(4), t.quartInOut = t.getPowInOut(4), t.quintIn = t.getPowIn(5), t.quintOut = t.getPowOut(5), t.quintInOut = t.getPowInOut(5), t.sineIn = function(t) {
			return 1 - Math.cos(t * Math.PI / 2)
		}, t.sineOut = function(t) {
			return Math.sin(t * Math.PI / 2)
		}, t.sineInOut = function(t) {
			return -.5 * (Math.cos(Math.PI * t) - 1)
		}, t.getBackIn = function(t) {
			return function(e) {
				return e * e * ((t + 1) * e - t)
			}
		}, t.backIn = t.getBackIn(1.7), t.getBackOut = function(t) {
			return function(e) {
				return --e * e * ((t + 1) * e + t) + 1
			}
		}, t.backOut = t.getBackOut(1.7), t.getBackInOut = function(t) {
			return t *= 1.525,
				function(e) {
					return (e *= 2) < 1 ? .5 * e * e * ((t + 1) * e - t) : .5 * ((e -= 2) * e * ((t + 1) * e + t) + 2)
				}
		}, t.backInOut = t.getBackInOut(1.7), t.circIn = function(t) {
			return -(Math.sqrt(1 - t * t) - 1)
		}, t.circOut = function(t) {
			return Math.sqrt(1 - --t * t)
		}, t.circInOut = function(t) {
			return (t *= 2) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
		}, t.bounceIn = function(e) {
			return 1 - t.bounceOut(1 - e)
		}, t.bounceOut = function(t) {
			return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
		}, t.bounceInOut = function(e) {
			return .5 > e ? .5 * t.bounceIn(2 * e) : .5 * t.bounceOut(2 * e - 1) + .5
		}, t.getElasticIn = function(t, e) {
			var i = 2 * Math.PI;
			return function(s) {
				if (0 == s || 1 == s) return s;
				var n = e / i * Math.asin(1 / t);
				return -(t * Math.pow(2, 10 * (s -= 1)) * Math.sin((s - n) * i / e))
			}
		}, t.elasticIn = t.getElasticIn(1, .3), t.getElasticOut = function(t, e) {
			var i = 2 * Math.PI;
			return function(s) {
				if (0 == s || 1 == s) return s;
				var n = e / i * Math.asin(1 / t);
				return t * Math.pow(2, -10 * s) * Math.sin((s - n) * i / e) + 1
			}
		}, t.elasticOut = t.getElasticOut(1, .3), t.getElasticInOut = function(t, e) {
			var i = 2 * Math.PI;
			return function(s) {
				var n = e / i * Math.asin(1 / t);
				return (s *= 2) < 1 ? -.5 * t * Math.pow(2, 10 * (s -= 1)) * Math.sin((s - n) * i / e) : .5 * t * Math.pow(2, -10 * (s -= 1)) * Math.sin((s - n) * i / e) + 1
			}
		}, t.elasticInOut = t.getElasticInOut(1, .3 * 1.5), createjs.Ease = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {
			throw "MotionGuidePlugin cannot be instantiated."
		};
		t.priority = 0, t._rotOffS, t._rotOffE, t._rotNormS, t._rotNormE, t.install = function() {
			return createjs.Tween.installPlugin(t, ["guide", "x", "y", "rotation"]), createjs.Tween.IGNORE
		}, t.init = function(t, e, i) {
			var s = t.target;
			return s.hasOwnProperty("x") || (s.x = 0), s.hasOwnProperty("y") || (s.y = 0), s.hasOwnProperty("rotation") || (s.rotation = 0), "rotation" == e && (t.__needsRot = !0), "guide" == e ? null : i
		}, t.step = function(e, i, s, n, o) {
			if ("rotation" == i && (e.__rotGlobalS = s, e.__rotGlobalE = n, t.testRotData(e, o)), "guide" != i) return n;
			var a, r = n;
			r.hasOwnProperty("path") || (r.path = []);
			var h = r.path;
			if (r.hasOwnProperty("end") || (r.end = 1), r.hasOwnProperty("start") || (r.start = s && s.hasOwnProperty("end") && s.path === h ? s.end : 0), r.hasOwnProperty("_segments") && r._length) return n;
			var f = h.length,
				_ = 10;
			if (!(f >= 6 && 0 == (f - 2) % 4)) throw "invalid 'path' data, please see documentation for valid paths";
			r._segments = [], r._length = 0;
			for (var l = 2; f > l; l += 4) {
				for (var c, u, d = h[l - 2], p = h[l - 1], g = h[l + 0], y = h[l + 1], m = h[l + 2], S = h[l + 3], E = d, w = p, T = 0, v = [], C = 1; _ >= C; C++) {
					var x = C / _,
						b = 1 - x;
					c = b * b * d + 2 * b * x * g + x * x * m, u = b * b * p + 2 * b * x * y + x * x * S, T += v[v.push(Math.sqrt((a = c - E) * a + (a = u - w) * a)) - 1], E = c, w = u
				}
				r._segments.push(T), r._segments.push(v), r._length += T
			}
			a = r.orient, r.orient = !0;
			var I = {};
			return t.calc(r, r.start, I), e.__rotPathS = Number(I.rotation.toFixed(5)), t.calc(r, r.end, I), e.__rotPathE = Number(I.rotation.toFixed(5)), r.orient = !1, t.calc(r, r.end, o), r.orient = a, r.orient ? (e.__guideData = r, t.testRotData(e, o), n) : n
		}, t.testRotData = function(t, e) {
			if (void 0 === t.__rotGlobalS || void 0 === t.__rotGlobalE) {
				if (t.__needsRot) return;
				t.__rotGlobalS = t.__rotGlobalE = void 0 !== t._curQueueProps.rotation ? t._curQueueProps.rotation : e.rotation = t.target.rotation || 0
			}
			if (void 0 !== t.__guideData) {
				var i = t.__guideData,
					s = t.__rotGlobalE - t.__rotGlobalS,
					n = t.__rotPathE - t.__rotPathS,
					o = s - n;
				if ("auto" == i.orient) o > 180 ? o -= 360 : -180 > o && (o += 360);
				else if ("cw" == i.orient) {
					for (; 0 > o;) o += 360;
					0 == o && s > 0 && 180 != s && (o += 360)
				} else if ("ccw" == i.orient) {
					for (o = s - (n > 180 ? 360 - n : n); o > 0;) o -= 360;
					0 == o && 0 > s && -180 != s && (o -= 360)
				}
				i.rotDelta = o, i.rotOffS = t.__rotGlobalS - t.__rotPathS, t.__rotGlobalS = t.__rotGlobalE = t.__guideData = t.__needsRot = void 0
			}
		}, t.tween = function(e, i, s, n, o, a, r) {
			var h = o.guide;
			if (void 0 == h || h === n.guide) return s;
			if (h.lastRatio != a) {
				var f = (h.end - h.start) * (r ? h.end : a) + h.start;
				switch (t.calc(h, f, e.target), h.orient) {
					case "cw":
					case "ccw":
					case "auto":
						e.target.rotation += h.rotOffS + h.rotDelta * a;
						break;
					case "fixed":
					default:
						e.target.rotation += h.rotOffS
				}
				h.lastRatio = a
			}
			return "rotation" != i || h.orient && "false" != h.orient ? e.target[i] : s
		}, t.calc = function(e, i, s) {
			void 0 == e._segments && t.validate(e), void 0 == s && (s = {
				x: 0,
				y: 0,
				rotation: 0
			});
			for (var n = e._segments, o = e.path, a = e._length * i, r = n.length - 2, h = 0; a > n[h] && r > h;) a -= n[h], h += 2;
			var f = n[h + 1],
				_ = 0;
			for (r = f.length - 1; a > f[_] && r > _;) a -= f[_], _++;
			var l = _ / ++r + a / (r * f[_]);
			h = 2 * h + 2;
			var c = 1 - l;
			return s.x = c * c * o[h - 2] + 2 * c * l * o[h + 0] + l * l * o[h + 2], s.y = c * c * o[h - 1] + 2 * c * l * o[h + 1] + l * l * o[h + 3], e.orient && (s.rotation = 57.2957795 * Math.atan2((o[h + 1] - o[h - 1]) * c + (o[h + 3] - o[h + 1]) * l, (o[h + 0] - o[h - 2]) * c + (o[h + 2] - o[h + 0]) * l)), s
		}, createjs.MotionGuidePlugin = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = createjs.TweenJS = createjs.TweenJS || {};
		t.version = "0.5.1", t.buildDate = "Thu, 12 Dec 2013 23:33:38 GMT"
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i) {
				this.initialize(t, e, i)
			},
			e = t.prototype;
		e.type = null, e.target = null, e.currentTarget = null, e.eventPhase = 0, e.bubbles = !1, e.cancelable = !1, e.timeStamp = 0, e.defaultPrevented = !1, e.propagationStopped = !1, e.immediatePropagationStopped = !1, e.removed = !1, e.initialize = function(t, e, i) {
			this.type = t, this.bubbles = e, this.cancelable = i, this.timeStamp = (new Date).getTime()
		}, e.preventDefault = function() {
			this.defaultPrevented = !0
		}, e.stopPropagation = function() {
			this.propagationStopped = !0
		}, e.stopImmediatePropagation = function() {
			this.immediatePropagationStopped = this.propagationStopped = !0
		}, e.remove = function() {
			this.removed = !0
		}, e.clone = function() {
			return new t(this.type, this.bubbles, this.cancelable)
		}, e.set = function(t) {
			for (var e in t) this[e] = t[e];
			return this
		}, e.toString = function() {
			return "[Event (type=" + this.type + ")]"
		}, createjs.Event = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {},
			e = t.prototype;
		t.initialize = function(t) {
			t.addEventListener = e.addEventListener, t.on = e.on, t.removeEventListener = t.off = e.removeEventListener, t.removeAllEventListeners = e.removeAllEventListeners, t.hasEventListener = e.hasEventListener, t.dispatchEvent = e.dispatchEvent, t._dispatchEvent = e._dispatchEvent, t.willTrigger = e.willTrigger
		}, e._listeners = null, e._captureListeners = null, e.initialize = function() {}, e.addEventListener = function(t, e, i) {
			var s;
			s = i ? this._captureListeners = this._captureListeners || {} : this._listeners = this._listeners || {};
			var n = s[t];
			return n && this.removeEventListener(t, e, i), n = s[t], n ? n.push(e) : s[t] = [e], e
		}, e.on = function(t, e, i, s, n, o) {
			return e.handleEvent && (i = i || e, e = e.handleEvent), i = i || this, this.addEventListener(t, function(t) {
				e.call(i, t, n), s && t.remove()
			}, o)
		}, e.removeEventListener = function(t, e, i) {
			var s = i ? this._captureListeners : this._listeners;
			if (s) {
				var n = s[t];
				if (n)
					for (var o = 0, a = n.length; a > o; o++)
						if (n[o] == e) {
							1 == a ? delete s[t] : n.splice(o, 1);
							break
						}
			}
		}, e.off = e.removeEventListener, e.removeAllEventListeners = function(t) {
			t ? (this._listeners && delete this._listeners[t], this._captureListeners && delete this._captureListeners[t]) : this._listeners = this._captureListeners = null
		}, e.dispatchEvent = function(t, e) {
			if ("string" == typeof t) {
				var i = this._listeners;
				if (!i || !i[t]) return !1;
				t = new createjs.Event(t)
			}
			try {
				t.target = e || this
			} catch (s) {}
			if (t.bubbles && this.parent) {
				for (var n = this, o = [n]; n.parent;) o.push(n = n.parent);
				var a, r = o.length;
				for (a = r - 1; a >= 0 && !t.propagationStopped; a--) o[a]._dispatchEvent(t, 1 + (0 == a));
				for (a = 1; r > a && !t.propagationStopped; a++) o[a]._dispatchEvent(t, 3)
			} else this._dispatchEvent(t, 2);
			return t.defaultPrevented
		}, e.hasEventListener = function(t) {
			var e = this._listeners,
				i = this._captureListeners;
			return !!(e && e[t] || i && i[t])
		}, e.willTrigger = function(t) {
			for (var e = this; e;) {
				if (e.hasEventListener(t)) return !0;
				e = e.parent
			}
			return !1
		}, e.toString = function() {
			return "[EventDispatcher]"
		}, e._dispatchEvent = function(t, e) {
			var i, s = 1 == e ? this._captureListeners : this._listeners;
			if (t && s) {
				var n = s[t.type];
				if (!n || !(i = n.length)) return;
				try {
					t.currentTarget = this
				} catch (o) {}
				try {
					t.eventPhase = e
				} catch (o) {}
				t.removed = !1, n = n.slice();
				for (var a = 0; i > a && !t.immediatePropagationStopped; a++) {
					var r = n[a];
					r.handleEvent ? r.handleEvent(t) : r(t), t.removed && (this.off(t.type, r, 1 == e), t.removed = !1)
				}
			}
		}, createjs.EventDispatcher = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		createjs.indexOf = function(t, e) {
			for (var i = 0, s = t.length; s > i; i++)
				if (e === t[i]) return i;
			return -1
		}
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {
			throw "UID cannot be instantiated"
		};
		t._nextID = 0, t.get = function() {
			return t._nextID++
		}, createjs.UID = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {
			throw "Ticker cannot be instantiated."
		};
		t.RAF_SYNCHED = "synched", t.RAF = "raf", t.TIMEOUT = "timeout", t.useRAF = !1, t.timingMode = null, t.maxDelta = 0, t.removeEventListener = null, t.removeAllEventListeners = null, t.dispatchEvent = null, t.hasEventListener = null, t._listeners = null, createjs.EventDispatcher.initialize(t), t._addEventListener = t.addEventListener, t.addEventListener = function() {
			return !t._inited && t.init(), t._addEventListener.apply(t, arguments)
		}, t._paused = !1, t._inited = !1, t._startTime = 0, t._pausedTime = 0, t._ticks = 0, t._pausedTicks = 0, t._interval = 50, t._lastTime = 0, t._times = null, t._tickTimes = null, t._timerId = null, t._raf = !0, t.init = function() {
			t._inited || (t._inited = !0, t._times = [], t._tickTimes = [], t._startTime = t._getTime(), t._times.push(t._lastTime = 0), t.setInterval(t._interval))
		}, t.reset = function() {
			if (t._raf) {
				var e = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;
				e && e(t._timerId)
			} else clearTimeout(t._timerId);
			t.removeAllEventListeners("tick"), t._timerId = null, t._inited = !1
		}, t.setInterval = function(e) {
			t._interval = e, t._inited && t._setupTick()
		}, t.getInterval = function() {
			return t._interval
		}, t.setFPS = function(e) {
			t.setInterval(1e3 / e)
		}, t.getFPS = function() {
			return 1e3 / t._interval
		}, t.getMeasuredTickTime = function(e) {
			var i = 0,
				s = t._tickTimes;
			if (s.length < 1) return -1;
			e = Math.min(s.length, e || 0 | t.getFPS());
			for (var n = 0; e > n; n++) i += s[n];
			return i / e
		}, t.getMeasuredFPS = function(e) {
			var i = t._times;
			return i.length < 2 ? -1 : (e = Math.min(i.length - 1, e || 0 | t.getFPS()), 1e3 / ((i[0] - i[e]) / e))
		}, t.setPaused = function(e) {
			t._paused = e
		}, t.getPaused = function() {
			return t._paused
		}, t.getTime = function(e) {
			return t._getTime() - t._startTime - (e ? t._pausedTime : 0)
		}, t.getEventTime = function(e) {
			return (t._lastTime || t._startTime) - (e ? t._pausedTime : 0)
		}, t.getTicks = function(e) {
			return t._ticks - (e ? t._pausedTicks : 0)
		}, t._handleSynch = function() {
			var e = t._getTime() - t._startTime;
			t._timerId = null, t._setupTick(), e - t._lastTime >= .97 * (t._interval - 1) && t._tick()
		}, t._handleRAF = function() {
			t._timerId = null, t._setupTick(), t._tick()
		}, t._handleTimeout = function() {
			t._timerId = null, t._setupTick(), t._tick()
		}, t._setupTick = function() {
			if (null == t._timerId) {
				var e = t.timingMode || t.useRAF && t.RAF_SYNCHED;
				if (e == t.RAF_SYNCHED || e == t.RAF) {
					var i = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
					if (i) return t._timerId = i(e == t.RAF ? t._handleRAF : t._handleSynch), void(t._raf = !0)
				}
				t._raf = !1, t._timerId = setTimeout(t._handleTimeout, t._interval)
			}
		}, t._tick = function() {
			var e = t._getTime() - t._startTime,
				i = e - t._lastTime,
				s = t._paused;
			if (t._ticks++, s && (t._pausedTicks++, t._pausedTime += i), t._lastTime = e, t.hasEventListener("tick")) {
				var n = new createjs.Event("tick"),
					o = t.maxDelta;
				n.delta = o && i > o ? o : i, n.paused = s, n.time = e, n.runTime = e - t._pausedTime, t.dispatchEvent(n)
			}
			for (t._tickTimes.unshift(t._getTime() - e); t._tickTimes.length > 100;) t._tickTimes.pop();
			for (t._times.unshift(e); t._times.length > 100;) t._times.pop()
		};
		var e = window.performance && (performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow);
		t._getTime = function() {
			return e && e.call(performance) || (new Date).getTime()
		}, createjs.Ticker = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i, s, n, o, a, r, h, f) {
				this.initialize(t, e, i, s, n, o, a, r, h, f)
			},
			e = t.prototype = new createjs.Event;
		e.stageX = 0, e.stageY = 0, e.rawX = 0, e.rawY = 0, e.nativeEvent = null, e.pointerID = 0, e.primary = !1, e._get_localX = function() {
			return this.currentTarget.globalToLocal(this.rawX, this.rawY).x
		}, e._get_localY = function() {
			return this.currentTarget.globalToLocal(this.rawX, this.rawY).y
		};
		try {
			Object.defineProperties(e, {
				localX: {
					get: e._get_localX
				},
				localY: {
					get: e._get_localY
				}
			})
		} catch (i) {}
		e.Event_initialize = e.initialize, e.initialize = function(t, e, i, s, n, o, a, r, h, f) {
			this.Event_initialize(t, e, i), this.stageX = s, this.stageY = n, this.nativeEvent = o, this.pointerID = a, this.primary = r, this.rawX = null == h ? s : h, this.rawY = null == f ? n : f
		}, e.clone = function() {
			return new t(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.target, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY)
		}, e.toString = function() {
			return "[MouseEvent (type=" + this.type + " stageX=" + this.stageX + " stageY=" + this.stageY + ")]"
		}, createjs.MouseEvent = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i, s, n, o) {
				this.initialize(t, e, i, s, n, o)
			},
			e = t.prototype;
		t.identity = null, t.DEG_TO_RAD = Math.PI / 180, e.a = 1, e.b = 0, e.c = 0, e.d = 1, e.tx = 0, e.ty = 0, e.alpha = 1, e.shadow = null, e.compositeOperation = null, e.visible = !0, e.initialize = function(t, e, i, s, n, o) {
			return this.a = null == t ? 1 : t, this.b = e || 0, this.c = i || 0, this.d = null == s ? 1 : s, this.tx = n || 0, this.ty = o || 0, this
		}, e.prepend = function(t, e, i, s, n, o) {
			var a = this.tx;
			if (1 != t || 0 != e || 0 != i || 1 != s) {
				var r = this.a,
					h = this.c;
				this.a = r * t + this.b * i, this.b = r * e + this.b * s, this.c = h * t + this.d * i, this.d = h * e + this.d * s
			}
			return this.tx = a * t + this.ty * i + n, this.ty = a * e + this.ty * s + o, this
		}, e.append = function(t, e, i, s, n, o) {
			var a = this.a,
				r = this.b,
				h = this.c,
				f = this.d;
			return this.a = t * a + e * h, this.b = t * r + e * f, this.c = i * a + s * h, this.d = i * r + s * f, this.tx = n * a + o * h + this.tx, this.ty = n * r + o * f + this.ty, this
		}, e.prependMatrix = function(t) {
			return this.prepend(t.a, t.b, t.c, t.d, t.tx, t.ty), this.prependProperties(t.alpha, t.shadow, t.compositeOperation, t.visible), this
		}, e.appendMatrix = function(t) {
			return this.append(t.a, t.b, t.c, t.d, t.tx, t.ty), this.appendProperties(t.alpha, t.shadow, t.compositeOperation, t.visible), this
		}, e.prependTransform = function(e, i, s, n, o, a, r, h, f) {
			if (o % 360) var _ = o * t.DEG_TO_RAD,
				l = Math.cos(_),
				c = Math.sin(_);
			else l = 1, c = 0;
			return (h || f) && (this.tx -= h, this.ty -= f), a || r ? (a *= t.DEG_TO_RAD, r *= t.DEG_TO_RAD, this.prepend(l * s, c * s, -c * n, l * n, 0, 0), this.prepend(Math.cos(r), Math.sin(r), -Math.sin(a), Math.cos(a), e, i)) : this.prepend(l * s, c * s, -c * n, l * n, e, i), this
		}, e.appendTransform = function(e, i, s, n, o, a, r, h, f) {
			if (o % 360) var _ = o * t.DEG_TO_RAD,
				l = Math.cos(_),
				c = Math.sin(_);
			else l = 1, c = 0;
			return a || r ? (a *= t.DEG_TO_RAD, r *= t.DEG_TO_RAD, this.append(Math.cos(r), Math.sin(r), -Math.sin(a), Math.cos(a), e, i), this.append(l * s, c * s, -c * n, l * n, 0, 0)) : this.append(l * s, c * s, -c * n, l * n, e, i), (h || f) && (this.tx -= h * this.a + f * this.c, this.ty -= h * this.b + f * this.d), this
		}, e.rotate = function(t) {
			var e = Math.cos(t),
				i = Math.sin(t),
				s = this.a,
				n = this.c,
				o = this.tx;
			return this.a = s * e - this.b * i, this.b = s * i + this.b * e, this.c = n * e - this.d * i, this.d = n * i + this.d * e, this.tx = o * e - this.ty * i, this.ty = o * i + this.ty * e, this
		}, e.skew = function(e, i) {
			return e *= t.DEG_TO_RAD, i *= t.DEG_TO_RAD, this.append(Math.cos(i), Math.sin(i), -Math.sin(e), Math.cos(e), 0, 0), this
		}, e.scale = function(t, e) {
			return this.a *= t, this.d *= e, this.c *= t, this.b *= e, this.tx *= t, this.ty *= e, this
		}, e.translate = function(t, e) {
			return this.tx += t, this.ty += e, this
		}, e.identity = function() {
			return this.alpha = this.a = this.d = 1, this.b = this.c = this.tx = this.ty = 0, this.shadow = this.compositeOperation = null, this.visible = !0, this
		}, e.invert = function() {
			var t = this.a,
				e = this.b,
				i = this.c,
				s = this.d,
				n = this.tx,
				o = t * s - e * i;
			return this.a = s / o, this.b = -e / o, this.c = -i / o, this.d = t / o, this.tx = (i * this.ty - s * n) / o, this.ty = -(t * this.ty - e * n) / o, this
		}, e.isIdentity = function() {
			return 0 == this.tx && 0 == this.ty && 1 == this.a && 0 == this.b && 0 == this.c && 1 == this.d
		}, e.transformPoint = function(t, e, i) {
			return i = i || {}, i.x = t * this.a + e * this.c + this.tx, i.y = t * this.b + e * this.d + this.ty, i
		}, e.decompose = function(e) {
			null == e && (e = {}), e.x = this.tx, e.y = this.ty, e.scaleX = Math.sqrt(this.a * this.a + this.b * this.b), e.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);
			var i = Math.atan2(-this.c, this.d),
				s = Math.atan2(this.b, this.a);
			return i == s ? (e.rotation = s / t.DEG_TO_RAD, this.a < 0 && this.d >= 0 && (e.rotation += e.rotation <= 0 ? 180 : -180), e.skewX = e.skewY = 0) : (e.skewX = i / t.DEG_TO_RAD, e.skewY = s / t.DEG_TO_RAD), e
		}, e.reinitialize = function(t, e, i, s, n, o, a, r, h, f) {
			return this.initialize(t, e, i, s, n, o), this.alpha = null == a ? 1 : a, this.shadow = r, this.compositeOperation = h, this.visible = null == f ? !0 : f, this
		}, e.copy = function(t) {
			return this.reinitialize(t.a, t.b, t.c, t.d, t.tx, t.ty, t.alpha, t.shadow, t.compositeOperation, t.visible)
		}, e.appendProperties = function(t, e, i, s) {
			return this.alpha *= t, this.shadow = e || this.shadow, this.compositeOperation = i || this.compositeOperation, this.visible = this.visible && s, this
		}, e.prependProperties = function(t, e, i, s) {
			return this.alpha *= t, this.shadow = this.shadow || e, this.compositeOperation = this.compositeOperation || i, this.visible = this.visible && s, this
		}, e.clone = function() {
			return (new t).copy(this)
		}, e.toString = function() {
			return "[Matrix2D (a=" + this.a + " b=" + this.b + " c=" + this.c + " d=" + this.d + " tx=" + this.tx + " ty=" + this.ty + ")]"
		}, t.identity = new t, createjs.Matrix2D = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e) {
				this.initialize(t, e)
			},
			e = t.prototype;
		e.x = 0, e.y = 0, e.initialize = function(t, e) {
			return this.x = null == t ? 0 : t, this.y = null == e ? 0 : e, this
		}, e.copy = function(t) {
			return this.initialize(t.x, t.y)
		}, e.clone = function() {
			return new t(this.x, this.y)
		}, e.toString = function() {
			return "[Point (x=" + this.x + " y=" + this.y + ")]"
		}, createjs.Point = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i, s) {
				this.initialize(t, e, i, s)
			},
			e = t.prototype;
		e.x = 0, e.y = 0, e.width = 0, e.height = 0, e.initialize = function(t, e, i, s) {
			return this.x = t || 0, this.y = e || 0, this.width = i || 0, this.height = s || 0, this
		}, e.copy = function(t) {
			return this.initialize(t.x, t.y, t.width, t.height)
		}, e.clone = function() {
			return new t(this.x, this.y, this.width, this.height)
		}, e.toString = function() {
			return "[Rectangle (x=" + this.x + " y=" + this.y + " width=" + this.width + " height=" + this.height + ")]"
		}, createjs.Rectangle = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i, s, n, o, a) {
				this.initialize(t, e, i, s, n, o, a)
			},
			e = t.prototype;
		e.target = null, e.overLabel = null, e.outLabel = null, e.downLabel = null, e.play = !1, e.setEnabled = function(t) {
			var e = this.target;
			this._enabled = t, t ? (e.cursor = "pointer", e.addEventListener("rollover", this), e.addEventListener("rollout", this), e.addEventListener("mousedown", this), e.addEventListener("pressup", this)) : (e.cursor = null, e.removeEventListener("rollover", this), e.removeEventListener("rollout", this), e.removeEventListener("mousedown", this), e.removeEventListener("pressup", this))
		}, e.getEnabled = function() {
			return this._enabled
		};
		try {
			Object.defineProperties(e, {
				enabled: {
					get: e.getEnabled,
					set: e.setEnabled
				}
			})
		} catch (i) {}
		e._isPressed = !1, e._isOver = !1, e._enabled = !1, e.initialize = function(t, e, i, s, n, o, a) {
			t.addEventListener && (this.target = t, t.mouseChildren = !1, this.overLabel = null == i ? "over" : i, this.outLabel = null == e ? "out" : e, this.downLabel = null == s ? "down" : s, this.play = n, this.setEnabled(!0), this.handleEvent({}), o && (a && (o.actionsEnabled = !1, o.gotoAndStop && o.gotoAndStop(a)), t.hitArea = o))
		}, e.toString = function() {
			return "[ButtonHelper]"
		}, e.handleEvent = function(t) {
			var e, i = this.target,
				s = t.type;
			"mousedown" == s ? (this._isPressed = !0, e = this.downLabel) : "pressup" == s ? (this._isPressed = !1, e = this._isOver ? this.overLabel : this.outLabel) : "rollover" == s ? (this._isOver = !0, e = this._isPressed ? this.downLabel : this.overLabel) : (this._isOver = !1, e = this._isPressed ? this.overLabel : this.outLabel), this.play ? i.gotoAndPlay && i.gotoAndPlay(e) : i.gotoAndStop && i.gotoAndStop(e)
		}, createjs.ButtonHelper = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i, s) {
				this.initialize(t, e, i, s)
			},
			e = t.prototype;
		t.identity = null, e.color = null, e.offsetX = 0, e.offsetY = 0, e.blur = 0, e.initialize = function(t, e, i, s) {
			this.color = t, this.offsetX = e, this.offsetY = i, this.blur = s
		}, e.toString = function() {
			return "[Shadow]"
		}, e.clone = function() {
			return new t(this.color, this.offsetX, this.offsetY, this.blur)
		}, t.identity = new t("transparent", 0, 0, 0), createjs.Shadow = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t) {
				this.initialize(t)
			},
			e = t.prototype = new createjs.EventDispatcher;
		e.complete = !0, e.framerate = 0, e._animations = null, e._frames = null, e._images = null, e._data = null, e._loadCount = 0, e._frameHeight = 0, e._frameWidth = 0, e._numFrames = 0, e._regX = 0, e._regY = 0, e.initialize = function(t) {
			var e, i, s, n;
			if (null != t) {
				if (this.framerate = t.framerate || 0, t.images && (i = t.images.length) > 0)
					for (n = this._images = [], e = 0; i > e; e++) {
						var o = t.images[e];
						if ("string" == typeof o) {
							var a = o;
							o = document.createElement("img"), o.src = a
						}
						n.push(o), o.getContext || o.complete || (this._loadCount++, this.complete = !1, function(t) {
							o.onload = function() {
								t._handleImageLoad()
							}
						}(this))
					}
				if (null == t.frames);
				else if (t.frames instanceof Array)
					for (this._frames = [], n = t.frames, e = 0, i = n.length; i > e; e++) {
						var r = n[e];
						this._frames.push({
							image: this._images[r[4] ? r[4] : 0],
							rect: new createjs.Rectangle(r[0], r[1], r[2], r[3]),
							regX: r[5] || 0,
							regY: r[6] || 0
						})
					} else s = t.frames, this._frameWidth = s.width, this._frameHeight = s.height, this._regX = s.regX || 0, this._regY = s.regY || 0, this._numFrames = s.count, 0 == this._loadCount && this._calculateFrames();
				if (this._animations = [], null != (s = t.animations)) {
					this._data = {};
					var h;
					for (h in s) {
						var f = {
								name: h
							},
							_ = s[h];
						if ("number" == typeof _) n = f.frames = [_];
						else if (_ instanceof Array)
							if (1 == _.length) f.frames = [_[0]];
							else
								for (f.speed = _[3], f.next = _[2], n = f.frames = [], e = _[0]; e <= _[1]; e++) n.push(e);
						else {
							f.speed = _.speed, f.next = _.next;
							var l = _.frames;
							n = f.frames = "number" == typeof l ? [l] : l.slice(0)
						}(f.next === !0 || void 0 === f.next) && (f.next = h), (f.next === !1 || n.length < 2 && f.next == h) && (f.next = null), f.speed || (f.speed = 1), this._animations.push(h), this._data[h] = f
					}
				}
			}
		}, e.getNumFrames = function(t) {
			if (null == t) return this._frames ? this._frames.length : this._numFrames;
			var e = this._data[t];
			return null == e ? 0 : e.frames.length
		}, e.getAnimations = function() {
			return this._animations.slice(0)
		}, e.getAnimation = function(t) {
			return this._data[t]
		}, e.getFrame = function(t) {
			var e;
			return this._frames && (e = this._frames[t]) ? e : null
		}, e.getFrameBounds = function(t, e) {
			var i = this.getFrame(t);
			return i ? (e || new createjs.Rectangle).initialize(-i.regX, -i.regY, i.rect.width, i.rect.height) : null
		}, e.toString = function() {
			return "[SpriteSheet]"
		}, e.clone = function() {
			var e = new t;
			return e.complete = this.complete, e._animations = this._animations, e._frames = this._frames, e._images = this._images, e._data = this._data, e._frameHeight = this._frameHeight, e._frameWidth = this._frameWidth, e._numFrames = this._numFrames, e._loadCount = this._loadCount, e
		}, e._handleImageLoad = function() {
			0 == --this._loadCount && (this._calculateFrames(), this.complete = !0, this.dispatchEvent("complete"))
		}, e._calculateFrames = function() {
			if (!this._frames && 0 != this._frameWidth) {
				this._frames = [];
				for (var t = 0, e = this._frameWidth, i = this._frameHeight, s = 0, n = this._images; s < n.length; s++) {
					for (var o = n[s], a = o.width / e | 0, r = o.height / i | 0, h = this._numFrames > 0 ? Math.min(this._numFrames - t, a * r) : a * r, f = 0; h > f; f++) this._frames.push({
						image: o,
						rect: new createjs.Rectangle(f % a * e, (f / a | 0) * i, e, i),
						regX: this._regX,
						regY: this._regY
					});
					t += h
				}
				this._numFrames = t
			}
		}, createjs.SpriteSheet = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {
				this.initialize()
			},
			e = t.prototype,
			i = t;
		t.getRGB = function(t, e, i, s) {
			return null != t && null == i && (s = e, i = 255 & t, e = t >> 8 & 255, t = t >> 16 & 255), null == s ? "rgb(" + t + "," + e + "," + i + ")" : "rgba(" + t + "," + e + "," + i + "," + s + ")"
		}, t.getHSL = function(t, e, i, s) {
			return null == s ? "hsl(" + t % 360 + "," + e + "%," + i + "%)" : "hsla(" + t % 360 + "," + e + "%," + i + "%," + s + ")"
		}, t.BASE_64 = {
			A: 0,
			B: 1,
			C: 2,
			D: 3,
			E: 4,
			F: 5,
			G: 6,
			H: 7,
			I: 8,
			J: 9,
			K: 10,
			L: 11,
			M: 12,
			N: 13,
			O: 14,
			P: 15,
			Q: 16,
			R: 17,
			S: 18,
			T: 19,
			U: 20,
			V: 21,
			W: 22,
			X: 23,
			Y: 24,
			Z: 25,
			a: 26,
			b: 27,
			c: 28,
			d: 29,
			e: 30,
			f: 31,
			g: 32,
			h: 33,
			i: 34,
			j: 35,
			k: 36,
			l: 37,
			m: 38,
			n: 39,
			o: 40,
			p: 41,
			q: 42,
			r: 43,
			s: 44,
			t: 45,
			u: 46,
			v: 47,
			w: 48,
			x: 49,
			y: 50,
			z: 51,
			0: 52,
			1: 53,
			2: 54,
			3: 55,
			4: 56,
			5: 57,
			6: 58,
			7: 59,
			8: 60,
			9: 61,
			"+": 62,
			"/": 63
		}, t.STROKE_CAPS_MAP = ["butt", "round", "square"], t.STROKE_JOINTS_MAP = ["miter", "round", "bevel"];
		var s = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
		s.getContext && (t._ctx = s.getContext("2d"), s.width = s.height = 1), e.command = null, e._stroke = null, e._strokeStyle = null, e._strokeIgnoreScale = !1, e._fill = null, e._instructions = null, e._commitIndex = 0, e._activeInstructions = null, e._dirty = !1, e.initialize = function() {
			this.clear(), this._ctx = t._ctx
		}, e.isEmpty = function() {
			return !(this._instructions.length || this._activeInstructions.length)
		}, e.draw = function(t, e) {
			this._updateInstructions();
			for (var i = this._instructions, s = 0, n = i.length; n > s; s++) i[s].exec(t, e)
		}, e.drawAsPath = function(t) {
			this._updateInstructions();
			for (var e, i = this._instructions, s = 0, n = i.length; n > s; s++)(e = i[s]).path !== !1 && e.exec(t)
		}, e.moveTo = function(t, e) {
			return this.append(new i.MoveTo(t, e), !0)
		}, e.lineTo = function(t, e) {
			return this.append(new i.LineTo(t, e))
		}, e.arcTo = function(t, e, s, n, o) {
			return this.append(new i.ArcTo(t, e, s, n, o))
		}, e.arc = function(t, e, s, n, o, a) {
			return this.append(new i.Arc(t, e, s, n, o, a))
		}, e.quadraticCurveTo = function(t, e, s, n) {
			return this.append(new i.QuadraticCurveTo(t, e, s, n))
		}, e.bezierCurveTo = function(t, e, s, n, o, a) {
			return this.append(new i.BezierCurveTo(t, e, s, n, o, a))
		}, e.rect = function(t, e, s, n) {
			return this.append(new i.Rect(t, e, s, n))
		}, e.closePath = function() {
			return this._activeInstructions.length ? this.append(new i.ClosePath) : this
		}, e.clear = function() {
			return this._instructions = [], this._activeInstructions = [], this._commitIndex = 0, this._strokeStyle = this._stroke = this._fill = null, this._dirty = this._strokeIgnoreScale = !1, this
		}, e.beginFill = function(t) {
			return this._setFill(t ? new i.Fill(t) : null)
		}, e.beginLinearGradientFill = function(t, e, s, n, o, a) {
			return this._setFill((new i.Fill).linearGradient(t, e, s, n, o, a))
		}, e.beginRadialGradientFill = function(t, e, s, n, o, a, r, h) {
			return this._setFill((new i.Fill).radialGradient(t, e, s, n, o, a, r, h))
		}, e.beginBitmapFill = function(t, e, s) {
			return this._setFill(new i.Fill(null, s).bitmap(t, e))
		}, e.endFill = function() {
			return this.beginFill()
		}, e.setStrokeStyle = function(t, e, s, n, o) {
			return this._updateInstructions(!0), this._strokeStyle = this.command = new i.StrokeStyle(t, e, s, n, o), this._stroke && (this._stroke.ignoreScale = o), this._strokeIgnoreScale = o, this
		}, e.beginStroke = function(t) {
			return this._setStroke(t ? new i.Stroke(t) : null)
		}, e.beginLinearGradientStroke = function(t, e, s, n, o, a) {
			return this._setStroke((new i.Stroke).linearGradient(t, e, s, n, o, a))
		}, e.beginRadialGradientStroke = function(t, e, s, n, o, a, r, h) {
			return this._setStroke((new i.Stroke).radialGradient(t, e, s, n, o, a, r, h))
		}, e.beginBitmapStroke = function(t, e) {
			return this._setStroke((new i.Stroke).bitmap(t, e))
		}, e.endStroke = function() {
			return this.beginStroke()
		}, e.curveTo = e.quadraticCurveTo, e.drawRect = e.rect, e.drawRoundRect = function(t, e, i, s, n) {
			return this.drawRoundRectComplex(t, e, i, s, n, n, n, n)
		}, e.drawRoundRectComplex = function(t, e, s, n, o, a, r, h) {
			return this.append(new i.RoundRect(t, e, s, n, o, a, r, h))
		}, e.drawCircle = function(t, e, s) {
			return this.append(new i.Circle(t, e, s))
		}, e.drawEllipse = function(t, e, s, n) {
			return this.append(new i.Ellipse(t, e, s, n))
		}, e.drawPolyStar = function(t, e, s, n, o, a) {
			return this.append(new i.PolyStar(t, e, s, n, o, a))
		}, e.append = function(t, e) {
			return this._activeInstructions.push(t), this.command = t, e || (this._dirty = !0), this
		}, e.decodePath = function(e) {
			for (var i = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath], s = [2, 2, 4, 6, 0], n = 0, o = e.length, a = [], r = 0, h = 0, f = t.BASE_64; o > n;) {
				var _ = e.charAt(n),
					l = f[_],
					c = l >> 3,
					u = i[c];
				if (!u || 3 & l) throw "bad path data (@" + n + "): " + _;
				var d = s[c];
				c || (r = h = 0), a.length = 0, n++;
				for (var p = (l >> 2 & 1) + 2, g = 0; d > g; g++) {
					var y = f[e.charAt(n)],
						m = y >> 5 ? -1 : 1;
					y = (31 & y) << 6 | f[e.charAt(n + 1)], 3 == p && (y = y << 6 | f[e.charAt(n + 2)]), y = m * y / 10, g % 2 ? r = y += r : h = y += h, a[g] = y, n += p
				}
				u.apply(this, a)
			}
			return this
		}, e.getInstructions = function() {
			return this._updateInstructions(), this._instructions
		}, e.clone = function() {
			var e = new t;
			return e._instructions = this._instructions.slice(), e._activeInstructions = this._activeInstructions.slice(), e._commitIndex = this._commitIndex, e._fill = this._fill, e._stroke = this._stroke, e._strokeStyle = this._strokeStyle, e._dirty = this._dirty, e._strokeIgnoreScale = this._strokeIgnoreScale, e
		}, e.toString = function() {
			return "[Graphics]"
		}, e.mt = e.moveTo, e.lt = e.lineTo, e.at = e.arcTo, e.bt = e.bezierCurveTo, e.qt = e.quadraticCurveTo, e.a = e.arc, e.r = e.rect, e.cp = e.closePath, e.c = e.clear, e.f = e.beginFill, e.lf = e.beginLinearGradientFill, e.rf = e.beginRadialGradientFill, e.bf = e.beginBitmapFill, e.ef = e.endFill, e.ss = e.setStrokeStyle, e.s = e.beginStroke, e.ls = e.beginLinearGradientStroke, e.rs = e.beginRadialGradientStroke, e.bs = e.beginBitmapStroke, e.es = e.endStroke, e.dr = e.drawRect, e.rr = e.drawRoundRect, e.rc = e.drawRoundRectComplex, e.dc = e.drawCircle, e.de = e.drawEllipse, e.dp = e.drawPolyStar, e.p = e.decodePath, e._updateInstructions = function(e) {
			var i = this._instructions,
				s = this._activeInstructions,
				n = this._commitIndex;
			this._dirty && s.length && (this._dirty = !1, i.length = n, i.push(t.beginCmd), i.push.apply(i, s), this._fill && i.push(this._fill), this._stroke && this._strokeStyle && i.push(this._strokeStyle), this._stroke && i.push(this._stroke), e && (s.length = 0, this._commitIndex = i.length))
		}, e._setFill = function(t) {
			return this._updateInstructions(!0), (this._fill = t) && (this.command = t), this
		}, e._setStroke = function(t) {
			return this._updateInstructions(!0), (this._stroke = t) && (this.command = t, t.ignoreScale = this._strokeIgnoreScale), this
		}, (i.LineTo = function(t, e) {
			this.x = t, this.y = e
		}).prototype.exec = function(t) {
			t.lineTo(this.x, this.y)
		}, (i.MoveTo = function(t, e) {
			this.x = t, this.y = e
		}).prototype.exec = function(t) {
			t.moveTo(this.x, this.y)
		}, (i.ArcTo = function(t, e, i, s, n) {
			this.x1 = t, this.y1 = e, this.x2 = i, this.y2 = s, this.radius = n
		}).prototype.exec = function(t) {
			t.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius)
		}, (i.Arc = function(t, e, i, s, n, o) {
			this.x = t, this.y = e, this.radius = i, this.startAngle = s, this.endAngle = n, this.anticlockwise = !!o
		}).prototype.exec = function(t) {
			t.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise)
		}, (i.QuadraticCurveTo = function(t, e, i, s) {
			this.cpx = t, this.cpy = e, this.x = i, this.y = s
		}).prototype.exec = function(t) {
			t.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y)
		}, (i.BezierCurveTo = function(t, e, i, s, n, o) {
			this.cp1x = t, this.cp1y = e, this.cp2x = i, this.cp2y = s, this.x = n, this.y = o
		}).prototype.exec = function(t) {
			t.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y)
		}, (i.Rect = function(t, e, i, s) {
			this.x = t, this.y = e, this.w = i, this.h = s
		}).prototype.exec = function(t) {
			t.rect(this.x, this.y, this.w, this.h)
		}, (i.ClosePath = function() {}).prototype.exec = function(t) {
			t.closePath()
		}, (i.BeginPath = function() {}).prototype.exec = function(t) {
			t.beginPath()
		}, e = (i.Fill = function(t, e) {
			this.style = t, this.matrix = e
		}).prototype, e.exec = function(t) {
			if (this.style) {
				t.fillStyle = this.style;
				var e = this.matrix;
				e && (t.save(), t.transform(e.a, e.b, e.c, e.d, e.tx, e.ty)), t.fill(), e && t.restore()
			}
		}, e.linearGradient = function(e, i, s, n, o, a) {
			for (var r = this.style = t._ctx.createLinearGradient(s, n, o, a), h = 0, f = e.length; f > h; h++) r.addColorStop(i[h], e[h]);
			return r.props = {
				colors: e,
				ratios: i,
				x0: s,
				y0: n,
				x1: o,
				y1: a,
				type: "linear"
			}, this
		}, e.radialGradient = function(e, i, s, n, o, a, r, h) {
			for (var f = this.style = t._ctx.createRadialGradient(s, n, o, a, r, h), _ = 0, l = e.length; l > _; _++) f.addColorStop(i[_], e[_]);
			return f.props = {
				colors: e,
				ratios: i,
				x0: s,
				y0: n,
				r0: o,
				x1: a,
				y1: r,
				r1: h,
				type: "radial"
			}, this
		}, e.bitmap = function(e, i) {
			var s = this.style = t._ctx.createPattern(e, i || "");
			return s.props = {
				image: e,
				repetition: i,
				type: "bitmap"
			}, this
		}, e.path = !1, e = (i.Stroke = function(t, e) {
			this.style = t, this.ignoreScale = e
		}).prototype, e.exec = function(t) {
			this.style && (t.strokeStyle = this.style, this.ignoreScale && (t.save(), t.setTransform(1, 0, 0, 1, 0, 0)), t.stroke(), this.ignoreScale && t.restore())
		}, e.linearGradient = i.Fill.prototype.linearGradient, e.radialGradient = i.Fill.prototype.radialGradient, e.bitmap = i.Fill.prototype.bitmap, e.path = !1, e = (i.StrokeStyle = function(t, e, i, s) {
			this.width = t, this.caps = e, this.joints = i, this.miterLimit = s
		}).prototype, e.exec = function(t) {
			t.lineWidth = null == this.width ? "1" : this.width, t.lineCap = null == this.caps ? "butt" : this.caps, t.lineJoin = null == this.joints ? "miter" : this.joints, t.miterLimit = null == this.miterLimit ? "10" : this.miterLimit
		}, e.path = !1, (i.RoundRect = function(t, e, i, s, n, o, a, r) {
			this.x = t, this.y = e, this.w = i, this.h = s, this.radiusTL = n, this.radiusTR = o, this.radiusBR = a, this.radiusBL = r
		}).prototype.exec = function(t) {
			var e = (f > h ? h : f) / 2,
				i = 0,
				s = 0,
				n = 0,
				o = 0,
				a = this.x,
				r = this.y,
				h = this.w,
				f = this.h,
				_ = this.radiusTL,
				l = this.radiusTR,
				c = this.radiusBR,
				u = this.radiusBL;
			0 > _ && (_ *= i = -1), _ > e && (_ = e), 0 > l && (l *= s = -1), l > e && (l = e), 0 > c && (c *= n = -1), c > e && (c = e), 0 > u && (u *= o = -1), u > e && (u = e), t.moveTo(a + h - l, r), t.arcTo(a + h + l * s, r - l * s, a + h, r + l, l), t.lineTo(a + h, r + f - c), t.arcTo(a + h + c * n, r + f + c * n, a + h - c, r + f, c), t.lineTo(a + u, r + f), t.arcTo(a - u * o, r + f + u * o, a, r + f - u, u), t.lineTo(a, r + _), t.arcTo(a - _ * i, r - _ * i, a + _, r, _), t.closePath()
		}, (i.Circle = function(t, e, i) {
			this.x = t, this.y = e, this.radius = i
		}).prototype.exec = function(t) {
			t.arc(this.x, this.y, this.radius, 0, 2 * Math.PI)
		}, (i.Ellipse = function(t, e, i, s) {
			this.x = t, this.y = e, this.w = i, this.h = s
		}).prototype.exec = function(t) {
			var e = this.x,
				i = this.y,
				s = this.w,
				n = this.h,
				o = .5522848,
				a = s / 2 * o,
				r = n / 2 * o,
				h = e + s,
				f = i + n,
				_ = e + s / 2,
				l = i + n / 2;
			t.moveTo(e, l), t.bezierCurveTo(e, l - r, _ - a, i, _, i), t.bezierCurveTo(_ + a, i, h, l - r, h, l), t.bezierCurveTo(h, l + r, _ + a, f, _, f), t.bezierCurveTo(_ - a, f, e, l + r, e, l)
		}, (i.PolyStar = function(t, e, i, s, n, o) {
			this.x = t, this.y = e, this.radius = i, this.sides = s, this.pointSize = n, this.angle = o
		}).prototype.exec = function(t) {
			var e = this.x,
				i = this.y,
				s = this.radius,
				n = (this.angle || 0) / 180 * Math.PI,
				o = this.sides,
				a = 1 - (this.pointSize || 0),
				r = Math.PI / o;
			t.moveTo(e + Math.cos(n) * s, i + Math.sin(n) * s);
			for (var h = 0; o > h; h++) n += r, 1 != a && t.lineTo(e + Math.cos(n) * s * a, i + Math.sin(n) * s * a), n += r, t.lineTo(e + Math.cos(n) * s, i + Math.sin(n) * s);
			t.closePath()
		}, [i.Fill, i.Stroke].forEach(function(t) {
			t.prototype.type = 0
		}), [i.MoveTo, i.LineTo, i.ArcTo, i.Arc, i.QuadraticCurveTo, i.BezierCurveTo, i.ClosePath].forEach(function(t) {
			t.prototype.type = 1
		}), [i.Rect, i.Circle, i.RoundRect, i.Ellipse, i.PolyStar].forEach(function(t) {
			t.prototype.type = 2
		}), t.beginCmd = new i.BeginPath, createjs.Graphics = t
	}(), this.createjs = this.createjs || {},
	function() {
		var t = function() {
				this.initialize()
			},
			e = t.prototype = new createjs.EventDispatcher;
		t._MOUSE_EVENTS = ["click", "dblclick", "mousedown", "mouseout", "mouseover", "pressmove", "pressup", "rollout", "rollover"], t.suppressCrossDomainErrors = !1, t._snapToPixelEnabled = !1;
		var i = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
		i.getContext && (t._hitTestCanvas = i, t._hitTestContext = i.getContext("2d"), i.width = i.height = 1), t._nextCacheID = 1, e.alpha = 1, e.cacheCanvas = null, e.id = -1, e.mouseEnabled = !0, e.tickEnabled = !0, e.name = null, e.parent = null, e.regX = 0, e.regY = 0, e.rotation = 0, e.scaleX = 1, e.scaleY = 1, e.skewX = 0, e.skewY = 0, e.shadow = null, e.visible = !0, e.x = 0, e.y = 0, e.compositeOperation = null, e.snapToPixel = !0, e.filters = null, e.cacheID = 0, e.mask = null, e.hitArea = null, e.cursor = null, e._cacheOffsetX = 0, e._cacheOffsetY = 0, e._cacheScale = 1, e._cacheDataURLID = 0, e._cacheDataURL = null, e._matrix = null, e._rectangle = null, e._bounds = null, e.initialize = function() {
			this.id = createjs.UID.get(), this._matrix = new createjs.Matrix2D, this._rectangle = new createjs.Rectangle
		}, e.isVisible = function() {
			return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY)
		}, e.draw = function(t, e) {
			var i = this.cacheCanvas;
			if (e || !i) return !1;
			var s, n = this._cacheScale,
				o = this._cacheOffsetX,
				a = this._cacheOffsetY;
			return (s = this._applyFilterBounds(o, a, 0, 0)) && (o = s.x, a = s.y), t.drawImage(i, o, a, i.width / n, i.height / n), !0
		}, e.updateContext = function(e) {
			var i, s = this.mask,
				n = this;
			s && s.graphics && !s.graphics.isEmpty() && (i = s.getMatrix(s._matrix), e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty), s.graphics.drawAsPath(e), e.clip(), i.invert(), e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty)), i = n._matrix.identity().appendTransform(n.x, n.y, n.scaleX, n.scaleY, n.rotation, n.skewX, n.skewY, n.regX, n.regY);
			var o = i.tx,
				a = i.ty;
			t._snapToPixelEnabled && n.snapToPixel && (o = o + (0 > o ? -.5 : .5) | 0, a = a + (0 > a ? -.5 : .5) | 0), e.transform(i.a, i.b, i.c, i.d, o, a), e.globalAlpha *= n.alpha, n.compositeOperation && (e.globalCompositeOperation = n.compositeOperation), n.shadow && this._applyShadow(e, n.shadow)
		}, e.cache = function(t, e, i, s, n) {
			n = n || 1, this.cacheCanvas || (this.cacheCanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")), this._cacheWidth = i, this._cacheHeight = s, this._cacheOffsetX = t, this._cacheOffsetY = e, this._cacheScale = n, this.updateCache()
		}, e.updateCache = function(e) {
			var i, s = this.cacheCanvas,
				n = this._cacheScale,
				o = this._cacheOffsetX * n,
				a = this._cacheOffsetY * n,
				r = this._cacheWidth,
				h = this._cacheHeight;
			if (!s) throw "cache() must be called before updateCache()";
			var f = s.getContext("2d");
			(i = this._applyFilterBounds(o, a, r, h)) && (o = i.x, a = i.y, r = i.width, h = i.height), r = Math.ceil(r * n), h = Math.ceil(h * n), r != s.width || h != s.height ? (s.width = r, s.height = h) : e || f.clearRect(0, 0, r + 1, h + 1), f.save(), f.globalCompositeOperation = e, f.setTransform(n, 0, 0, n, -o, -a), this.draw(f, !0), this._applyFilters(), f.restore(), this.cacheID = t._nextCacheID++
		}, e.uncache = function() {
			this._cacheDataURL = this.cacheCanvas = null, this.cacheID = this._cacheOffsetX = this._cacheOffsetY = 0, this._cacheScale = 1
		}, e.getCacheDataURL = function() {
			return this.cacheCanvas ? (this.cacheID != this._cacheDataURLID && (this._cacheDataURL = this.cacheCanvas.toDataURL()), this._cacheDataURL) : null
		}, e.getStage = function() {
			for (var t = this; t.parent;) t = t.parent;
			return t instanceof createjs.Stage ? t : null
		}, e.localToGlobal = function(t, e) {
			var i = this.getConcatenatedMatrix(this._matrix);
			return null == i ? null : (i.append(1, 0, 0, 1, t, e), new createjs.Point(i.tx, i.ty))
		}, e.globalToLocal = function(t, e) {
			var i = this.getConcatenatedMatrix(this._matrix);
			return null == i ? null : (i.invert(), i.append(1, 0, 0, 1, t, e), new createjs.Point(i.tx, i.ty))
		}, e.localToLocal = function(t, e, i) {
			var s = this.localToGlobal(t, e);
			return i.globalToLocal(s.x, s.y)
		}, e.setTransform = function(t, e, i, s, n, o, a, r, h) {
			return this.x = t || 0, this.y = e || 0, this.scaleX = null == i ? 1 : i, this.scaleY = null == s ? 1 : s, this.rotation = n || 0, this.skewX = o || 0, this.skewY = a || 0, this.regX = r || 0, this.regY = h || 0, this
		}, e.getMatrix = function(t) {
			var e = this;
			return (t ? t.identity() : new createjs.Matrix2D).appendTransform(e.x, e.y, e.scaleX, e.scaleY, e.rotation, e.skewX, e.skewY, e.regX, e.regY).appendProperties(e.alpha, e.shadow, e.compositeOperation)
		}, e.getConcatenatedMatrix = function(t) {
			t ? t.identity() : t = new createjs.Matrix2D;
			for (var e = this; null != e;) t.prependTransform(e.x, e.y, e.scaleX, e.scaleY, e.rotation, e.skewX, e.skewY, e.regX, e.regY).prependProperties(e.alpha, e.shadow, e.compositeOperation, e.visible), e = e.parent;
			return t
		}, e.hitTest = function(e, i) {
			var s = t._hitTestContext;
			s.setTransform(1, 0, 0, 1, -e, -i), this.draw(s);
			var n = this._testHit(s);
			return s.setTransform(1, 0, 0, 1, 0, 0), s.clearRect(0, 0, 2, 2), n
		}, e.set = function(t) {
			for (var e in t) this[e] = t[e];
			return this
		}, e.getBounds = function() {
			if (this._bounds) return this._rectangle.copy(this._bounds);
			var t = this.cacheCanvas;
			if (t) {
				var e = this._cacheScale;
				return this._rectangle.initialize(this._cacheOffsetX, this._cacheOffsetY, t.width / e, t.height / e)
			}
			return null
		}, e.getTransformedBounds = function() {
			return this._getBounds()
		}, e.setBounds = function(t, e, i, s) {
			null == t && (this._bounds = t), this._bounds = (this._bounds || new createjs.Rectangle).initialize(t, e, i, s)
		}, e.clone = function() {
			var e = new t;
			return this.cloneProps(e), e
		}, e.toString = function() {
			return "[DisplayObject (name=" + this.name + ")]"
		}, e.cloneProps = function(t) {
			t.alpha = this.alpha, t.name = this.name, t.regX = this.regX, t.regY = this.regY, t.rotation = this.rotation, t.scaleX = this.scaleX, t.scaleY = this.scaleY, t.shadow = this.shadow, t.skewX = this.skewX, t.skewY = this.skewY, t.visible = this.visible, t.x = this.x, t.y = this.y, t._bounds = this._bounds, t.mouseEnabled = this.mouseEnabled, t.compositeOperation = this.compositeOperation
		}, e._applyShadow = function(t, e) {
			e = e || Shadow.identity, t.shadowColor = e.color, t.shadowOffsetX = e.offsetX, t.shadowOffsetY = e.offsetY, t.shadowBlur = e.blur
		}, e._tick = function(t) {
			var e = this._listeners;
			if (e && e.tick) {
				var i = new createjs.Event("tick").set(t);
				this._dispatchEvent(i, this, 2)
			}
		}, e._testHit = function(e) {
			try {
				var i = e.getImageData(0, 0, 1, 1).data[3] > 1
			} catch (s) {
				if (!t.suppressCrossDomainErrors) throw "An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images."
			}
			return i
		}, e._applyFilters = function() {
			if (this.filters && 0 != this.filters.length && this.cacheCanvas)
				for (var t = this.filters.length, e = this.cacheCanvas.getContext("2d"), i = this.cacheCanvas.width, s = this.cacheCanvas.height, n = 0; t > n; n++) this.filters[n].applyFilter(e, 0, 0, i, s)
		}, e._applyFilterBounds = function(t, e, i, s) {
			var n, o, a = this.filters;
			if (!a || !(o = a.length)) return null;
			for (var r = 0; o > r; r++) {
				var h = this.filters[r],
					f = h.getBounds && h.getBounds();
				f && (n || (n = this._rectangle.initialize(t, e, i, s)), n.x += f.x, n.y += f.y, n.width += f.width, n.height += f.height)
			}
			return n
		}, e._getBounds = function(t, e) {
			return this._transformBounds(this.getBounds(), t, e)
		}, e._transformBounds = function(t, e, i) {
			if (!t) return t;
			var s = t.x,
				n = t.y,
				o = t.width,
				a = t.height,
				r = i ? this._matrix.identity() : this.getMatrix(this._matrix);
			(s || n) && r.appendTransform(0, 0, 1, 1, 0, 0, 0, -s, -n), e && r.prependMatrix(e);
			var h = o * r.a,
				f = o * r.b,
				_ = a * r.c,
				l = a * r.d,
				c = r.tx,
				u = r.ty,
				d = c,
				p = c,
				g = u,
				y = u;
			return (s = h + c) < d ? d = s : s > p && (p = s), (s = h + _ + c) < d ? d = s : s > p && (p = s), (s = _ + c) < d ? d = s : s > p && (p = s), (n = f + u) < g ? g = n : n > y && (y = n), (n = f + l + u) < g ? g = n : n > y && (y = n), (n = l + u) < g ? g = n : n > y && (y = n), t.initialize(d, g, p - d, y - g)
		}, e._hasMouseEventListener = function() {
			for (var e = t._MOUSE_EVENTS, i = 0, s = e.length; s > i; i++)
				if (this.hasEventListener(e[i])) return !0;
			return !!this.cursor
		}, createjs.DisplayObject = t
	}(), this.createjs = this.createjs || {},
	function() {
		var t = function() {
				this.initialize()
			},
			e = t.prototype = new createjs.DisplayObject;
		e.children = null, e.mouseChildren = !0, e.tickChildren = !0, e.DisplayObject_initialize = e.initialize, e.initialize = function() {
			this.DisplayObject_initialize(), this.children = []
		}, e.isVisible = function() {
			var t = this.cacheCanvas || this.children.length;
			return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && t)
		}, e.DisplayObject_draw = e.draw, e.draw = function(t, e) {
			if (this.DisplayObject_draw(t, e)) return !0;
			for (var i = this.children.slice(0), s = 0, n = i.length; n > s; s++) {
				var o = i[s];
				o.isVisible() && (t.save(), o.updateContext(t), o.draw(t), t.restore())
			}
			return !0
		}, e.addChild = function(t) {
			if (null == t) return t;
			var e = arguments.length;
			if (e > 1) {
				for (var i = 0; e > i; i++) this.addChild(arguments[i]);
				return arguments[e - 1]
			}
			return t.parent && t.parent.removeChild(t), t.parent = this, this.children.push(t), t
		}, e.addChildAt = function(t, e) {
			var i = arguments.length,
				s = arguments[i - 1];
			if (0 > s || s > this.children.length) return arguments[i - 2];
			if (i > 2) {
				for (var n = 0; i - 1 > n; n++) this.addChildAt(arguments[n], s + n);
				return arguments[i - 2]
			}
			return t.parent && t.parent.removeChild(t), t.parent = this, this.children.splice(e, 0, t), t
		}, e.removeChild = function(t) {
			var e = arguments.length;
			if (e > 1) {
				for (var i = !0, s = 0; e > s; s++) i = i && this.removeChild(arguments[s]);
				return i
			}
			return this.removeChildAt(createjs.indexOf(this.children, t))
		}, e.removeChildAt = function(t) {
			var e = arguments.length;
			if (e > 1) {
				for (var i = [], s = 0; e > s; s++) i[s] = arguments[s];
				i.sort(function(t, e) {
					return e - t
				});
				for (var n = !0, s = 0; e > s; s++) n = n && this.removeChildAt(i[s]);
				return n
			}
			if (0 > t || t > this.children.length - 1) return !1;
			var o = this.children[t];
			return o && (o.parent = null), this.children.splice(t, 1), !0
		}, e.removeAllChildren = function() {
			for (var t = this.children; t.length;) t.pop().parent = null
		}, e.getChildAt = function(t) {
			return this.children[t]
		}, e.getChildByName = function(t) {
			for (var e = this.children, i = 0, s = e.length; s > i; i++)
				if (e[i].name == t) return e[i];
			return null
		}, e.sortChildren = function(t) {
			this.children.sort(t)
		}, e.getChildIndex = function(t) {
			return createjs.indexOf(this.children, t)
		}, e.getNumChildren = function() {
			return this.children.length
		}, e.swapChildrenAt = function(t, e) {
			var i = this.children,
				s = i[t],
				n = i[e];
			s && n && (i[t] = n, i[e] = s)
		}, e.swapChildren = function(t, e) {
			for (var i, s, n = this.children, o = 0, a = n.length; a > o && (n[o] == t && (i = o), n[o] == e && (s = o), null == i || null == s); o++);
			o != a && (n[i] = e, n[s] = t)
		}, e.setChildIndex = function(t, e) {
			var i = this.children,
				s = i.length;
			if (!(t.parent != this || 0 > e || e >= s)) {
				for (var n = 0; s > n && i[n] != t; n++);
				n != s && n != e && (i.splice(n, 1), i.splice(e, 0, t))
			}
		}, e.contains = function(t) {
			for (; t;) {
				if (t == this) return !0;
				t = t.parent
			}
			return !1
		}, e.hitTest = function(t, e) {
			return null != this.getObjectUnderPoint(t, e)
		}, e.getObjectsUnderPoint = function(t, e) {
			var i = [],
				s = this.localToGlobal(t, e);
			return this._getObjectsUnderPoint(s.x, s.y, i), i
		}, e.getObjectUnderPoint = function(t, e) {
			var i = this.localToGlobal(t, e);
			return this._getObjectsUnderPoint(i.x, i.y)
		}, e.DisplayObject_getBounds = e.getBounds, e.getBounds = function() {
			return this._getBounds(null, !0)
		}, e.getTransformedBounds = function() {
			return this._getBounds()
		}, e.clone = function(e) {
			var i = new t;
			if (this.cloneProps(i), e)
				for (var s = i.children = [], n = 0, o = this.children.length; o > n; n++) {
					var a = this.children[n].clone(e);
					a.parent = i, s.push(a)
				}
			return i
		}, e.toString = function() {
			return "[Container (name=" + this.name + ")]"
		}, e.DisplayObject__tick = e._tick, e._tick = function(t) {
			if (this.tickChildren)
				for (var e = this.children.length - 1; e >= 0; e--) {
					var i = this.children[e];
					i.tickEnabled && i._tick && i._tick(t)
				}
			this.DisplayObject__tick(t)
		}, e._getObjectsUnderPoint = function(e, i, s, n, o) {
			var a = createjs.DisplayObject._hitTestContext,
				r = this._matrix;
			o = o || n && this._hasMouseEventListener();
			for (var h = this.children, f = h.length, _ = f - 1; _ >= 0; _--) {
				var l = h[_],
					c = l.hitArea,
					u = l.mask;
				if (l.visible && (c || l.isVisible()) && (!n || l.mouseEnabled)) {
					if (!c && u && u.graphics && !u.graphics.isEmpty()) {
						var d = u.getMatrix(u._matrix).prependMatrix(this.getConcatenatedMatrix(r));
						if (a.setTransform(d.a, d.b, d.c, d.d, d.tx - e, d.ty - i), u.graphics.drawAsPath(a), a.fillStyle = "#000", a.fill(), !this._testHit(a)) continue;
						a.setTransform(1, 0, 0, 1, 0, 0), a.clearRect(0, 0, 2, 2)
					}
					if (!c && l instanceof t) {
						var p = l._getObjectsUnderPoint(e, i, s, n, o);
						if (!s && p) return n && !this.mouseChildren ? this : p
					} else {
						if (n && !o && !l._hasMouseEventListener()) continue;
						if (l.getConcatenatedMatrix(r), c && (r.appendTransform(c.x, c.y, c.scaleX, c.scaleY, c.rotation, c.skewX, c.skewY, c.regX, c.regY), r.alpha = c.alpha), a.globalAlpha = r.alpha, a.setTransform(r.a, r.b, r.c, r.d, r.tx - e, r.ty - i), (c || l).draw(a), !this._testHit(a)) continue;
						if (a.setTransform(1, 0, 0, 1, 0, 0), a.clearRect(0, 0, 2, 2), !s) return n && !this.mouseChildren ? this : l;
						s.push(l)
					}
				}
			}
			return null
		}, e._getBounds = function(t, e) {
			var i = this.DisplayObject_getBounds();
			if (i) return this._transformBounds(i, t, e);
			var s, n, o, a, r = e ? this._matrix.identity() : this.getMatrix(this._matrix);
			t && r.prependMatrix(t);
			for (var h = this.children.length, f = 0; h > f; f++) {
				var _ = this.children[f];
				if (_.visible && (i = _._getBounds(r))) {
					var l = i.x,
						c = i.y,
						u = l + i.width,
						d = c + i.height;
					(s > l || null == s) && (s = l), (u > n || null == n) && (n = u), (o > c || null == o) && (o = c), (d > a || null == a) && (a = d)
				}
			}
			return null == n ? null : this._rectangle.initialize(s, o, n - s, a - o)
		}, createjs.Container = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t) {
				this.initialize(t)
			},
			e = t.prototype = new createjs.Container;
		e.autoClear = !0, e.canvas = null, e.mouseX = 0, e.mouseY = 0, e.drawRect = null, e.snapToPixelEnabled = !1, e.mouseInBounds = !1, e.tickOnUpdate = !0, e.mouseMoveOutside = !1, e._get_nextStage = function() {
			return this._nextStage
		}, e._set_nextStage = function(t) {
			this._nextStage && (this._nextStage._prevStage = null), t && (t._prevStage = this), this._nextStage = t
		};
		try {
			Object.defineProperties(e, {
				nextStage: {
					get: e._get_nextStage,
					set: e._set_nextStage
				}
			})
		} catch (i) {}
		e._pointerData = null, e._pointerCount = 0, e._primaryPointerID = null, e._mouseOverIntervalID = null, e._nextStage = null, e._prevStage = null, e.Container_initialize = e.initialize, e.initialize = function(t) {
			this.Container_initialize(), this.canvas = "string" == typeof t ? document.getElementById(t) : t, this._pointerData = {}, this.enableDOMEvents(!0)
		}, e.update = function() {
			if (this.canvas && (this.tickOnUpdate && this.tick.apply(this, arguments), !this.dispatchEvent("drawstart"))) {
				createjs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;
				var t = this.drawRect,
					e = this.canvas.getContext("2d");
				e.setTransform(1, 0, 0, 1, 0, 0), this.autoClear && (t ? e.clearRect(t.x, t.y, t.width, t.height) : e.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1)), e.save(), this.drawRect && (e.beginPath(), e.rect(t.x, t.y, t.width, t.height), e.clip()), this.updateContext(e), this.draw(e, !1), e.restore(), this.dispatchEvent("drawend")
			}
		}, e.tick = function() {
			if (this.tickEnabled && !this.dispatchEvent("tickstart")) {
				var t = arguments.length ? Array.prototype.slice.call(arguments, 0) : null,
					e = t && t[0],
					i = e && null != e.delta ? {
						delta: e.delta,
						paused: e.paused,
						time: e.time,
						runTime: e.runTime
					} : {};
				i.params = t, this._tick(i), this.dispatchEvent("tickend")
			}
		}, e.handleEvent = function(t) {
			"tick" == t.type && this.update(t)
		}, e.clear = function() {
			if (this.canvas) {
				var t = this.canvas.getContext("2d");
				t.setTransform(1, 0, 0, 1, 0, 0), t.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1)
			}
		}, e.toDataURL = function(t, e) {
			e || (e = "image/png");
			var i, s = this.canvas.getContext("2d"),
				n = this.canvas.width,
				o = this.canvas.height;
			if (t) {
				i = s.getImageData(0, 0, n, o);
				var a = s.globalCompositeOperation;
				s.globalCompositeOperation = "destination-over", s.fillStyle = t, s.fillRect(0, 0, n, o)
			}
			var r = this.canvas.toDataURL(e);
			return t && (s.clearRect(0, 0, n + 1, o + 1), s.putImageData(i, 0, 0), s.globalCompositeOperation = a), r
		}, e.enableMouseOver = function(t) {
			if (this._mouseOverIntervalID && (clearInterval(this._mouseOverIntervalID), this._mouseOverIntervalID = null, 0 == t && this._testMouseOver(!0)), null == t) t = 20;
			else if (0 >= t) return;
			var e = this;
			this._mouseOverIntervalID = setInterval(function() {
				e._testMouseOver()
			}, 1e3 / Math.min(50, t))
		}, e.enableDOMEvents = function(t) {
			null == t && (t = !0);
			var e, i, s = this._eventListeners;
			if (!t && s) {
				for (e in s) i = s[e], i.t.removeEventListener(e, i.f, !1);
				this._eventListeners = null
			} else if (t && !s && this.canvas) {
				var n = window.addEventListener ? window : document,
					o = this;
				s = this._eventListeners = {}, s.mouseup = {
					t: n,
					f: function(t) {
						o._handleMouseUp(t)
					}
				}, s.mousemove = {
					t: n,
					f: function(t) {
						o._handleMouseMove(t)
					}
				}, s.dblclick = {
					t: this.canvas,
					f: function(t) {
						o._handleDoubleClick(t)
					}
				}, s.mousedown = {
					t: this.canvas,
					f: function(t) {
						o._handleMouseDown(t)
					}
				};
				for (e in s) i = s[e], i.t.addEventListener(e, i.f, !1)
			}
		}, e.clone = function() {
			var e = new t(null);
			return this.cloneProps(e), e
		}, e.toString = function() {
			return "[Stage (name=" + this.name + ")]"
		}, e._getElementRect = function(t) {
			var e;
			try {
				e = t.getBoundingClientRect()
			} catch (i) {
				e = {
					top: t.offsetTop,
					left: t.offsetLeft,
					width: t.offsetWidth,
					height: t.offsetHeight
				}
			}
			var s = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0),
				n = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0),
				o = window.getComputedStyle ? getComputedStyle(t) : t.currentStyle,
				a = parseInt(o.paddingLeft) + parseInt(o.borderLeftWidth),
				r = parseInt(o.paddingTop) + parseInt(o.borderTopWidth),
				h = parseInt(o.paddingRight) + parseInt(o.borderRightWidth),
				f = parseInt(o.paddingBottom) + parseInt(o.borderBottomWidth);
			return {
				left: e.left + s + a,
				right: e.right + s - h,
				top: e.top + n + r,
				bottom: e.bottom + n - f
			}
		}, e._getPointerData = function(t) {
			var e = this._pointerData[t];
			return e || (e = this._pointerData[t] = {
				x: 0,
				y: 0
			}, null == this._primaryPointerID && (this._primaryPointerID = t), (null == this._primaryPointerID || -1 == this._primaryPointerID) && (this._primaryPointerID = t)), e
		}, e._handleMouseMove = function(t) {
			t || (t = window.event), this._handlePointerMove(-1, t, t.pageX, t.pageY)
		}, e._handlePointerMove = function(t, e, i, s, n) {
			if ((!this._prevStage || void 0 !== n) && this.canvas) {
				var o = this._nextStage,
					a = this._getPointerData(t),
					r = a.inBounds;
				this._updatePointerPosition(t, e, i, s), (r || a.inBounds || this.mouseMoveOutside) && (-1 == t && a.inBounds == !r && this._dispatchMouseEvent(this, r ? "mouseleave" : "mouseenter", !1, t, a, e), this._dispatchMouseEvent(this, "stagemousemove", !1, t, a, e), this._dispatchMouseEvent(a.target, "pressmove", !0, t, a, e)), o && o._handlePointerMove(t, e, i, s, null)
			}
		}, e._updatePointerPosition = function(t, e, i, s) {
			var n = this._getElementRect(this.canvas);
			i -= n.left, s -= n.top;
			var o = this.canvas.width,
				a = this.canvas.height;
			i /= (n.right - n.left) / o, s /= (n.bottom - n.top) / a;
			var r = this._getPointerData(t);
			(r.inBounds = i >= 0 && s >= 0 && o - 1 >= i && a - 1 >= s) ? (r.x = i, r.y = s) : this.mouseMoveOutside && (r.x = 0 > i ? 0 : i > o - 1 ? o - 1 : i, r.y = 0 > s ? 0 : s > a - 1 ? a - 1 : s), r.posEvtObj = e, r.rawX = i, r.rawY = s, t == this._primaryPointerID && (this.mouseX = r.x, this.mouseY = r.y, this.mouseInBounds = r.inBounds)
		}, e._handleMouseUp = function(t) {
			this._handlePointerUp(-1, t, !1)
		}, e._handlePointerUp = function(t, e, i, s) {
			var n = this._nextStage,
				o = this._getPointerData(t);
			if (!this._prevStage || void 0 !== s) {
				this._dispatchMouseEvent(this, "stagemouseup", !1, t, o, e);
				var a = null,
					r = o.target;
				s || !r && !n || (a = this._getObjectsUnderPoint(o.x, o.y, null, !0)), a == r && this._dispatchMouseEvent(r, "click", !0, t, o, e), this._dispatchMouseEvent(r, "pressup", !0, t, o, e), i ? (t == this._primaryPointerID && (this._primaryPointerID = null), delete this._pointerData[t]) : o.target = null, n && n._handlePointerUp(t, e, i, s || a && this)
			}
		}, e._handleMouseDown = function(t) {
			this._handlePointerDown(-1, t, t.pageX, t.pageY)
		}, e._handlePointerDown = function(t, e, i, s, n) {
			null != s && this._updatePointerPosition(t, e, i, s);
			var o = null,
				a = this._nextStage,
				r = this._getPointerData(t);
			r.inBounds && this._dispatchMouseEvent(this, "stagemousedown", !1, t, r, e), n || (o = r.target = this._getObjectsUnderPoint(r.x, r.y, null, !0), this._dispatchMouseEvent(r.target, "mousedown", !0, t, r, e)), a && a._handlePointerDown(t, e, i, s, n || o && this)
		}, e._testMouseOver = function(t, e, i) {
			if (!this._prevStage || void 0 !== e) {
				var s = this._nextStage;
				if (!this._mouseOverIntervalID) return void(s && s._testMouseOver(t, e, i));
				if (-1 == this._primaryPointerID && (t || this.mouseX != this._mouseOverX || this.mouseY != this._mouseOverY || !this.mouseInBounds)) {
					var n, o, a, r = this._getPointerData(-1),
						h = r.posEvtObj,
						f = i || h && h.target == this.canvas,
						_ = null,
						l = -1,
						c = "";
					!e && (t || this.mouseInBounds && f) && (_ = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, !0), this._mouseOverX = this.mouseX, this._mouseOverY = this.mouseY);
					var u = this._mouseOverTarget || [],
						d = u[u.length - 1],
						p = this._mouseOverTarget = [];
					for (n = _; n;) p.unshift(n), null != n.cursor && (c = n.cursor), n = n.parent;
					for (this.canvas.style.cursor = c, !e && i && (i.canvas.style.cursor = c), o = 0, a = p.length; a > o && p[o] == u[o]; o++) l = o;
					for (d != _ && this._dispatchMouseEvent(d, "mouseout", !0, -1, r, h), o = u.length - 1; o > l; o--) this._dispatchMouseEvent(u[o], "rollout", !1, -1, r, h);
					for (o = p.length - 1; o > l; o--) this._dispatchMouseEvent(p[o], "rollover", !1, -1, r, h);
					d != _ && this._dispatchMouseEvent(_, "mouseover", !0, -1, r, h), s && s._testMouseOver(t, e || _ && this, i || f && this)
				}
			}
		}, e._handleDoubleClick = function(t, e) {
			var i = null,
				s = this._nextStage,
				n = this._getPointerData(-1);
			e || (i = this._getObjectsUnderPoint(n.x, n.y, null, !0), this._dispatchMouseEvent(i, "dblclick", !0, -1, n, t)), s && s._handleDoubleClick(t, e || i && this)
		}, e._dispatchMouseEvent = function(t, e, i, s, n, o) {
			if (t && (i || t.hasEventListener(e))) {
				var a = new createjs.MouseEvent(e, i, !1, n.x, n.y, o, s, s == this._primaryPointerID, n.rawX, n.rawY);
				t.dispatchEvent(a)
			}
		}, createjs.Stage = t
	}(), this.createjs = this.createjs || {},
	function() {
		var t = function(t) {
				this.initialize(t)
			},
			e = t.prototype = new createjs.DisplayObject;
		e.image = null, e.sourceRect = null, e.DisplayObject_initialize = e.initialize, e.initialize = function(t) {
			this.DisplayObject_initialize(), "string" == typeof t ? (this.image = document.createElement("img"), this.image.src = t) : this.image = t
		}, e.isVisible = function() {
			var t = this.cacheCanvas || this.image && (this.image.complete || this.image.getContext || this.image.readyState >= 2);
			return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && t)
		}, e.DisplayObject_draw = e.draw, e.draw = function(t, e) {
			if (this.DisplayObject_draw(t, e)) return !0;
			var i = this.sourceRect;
			return i ? t.drawImage(this.image, i.x, i.y, i.width, i.height, 0, 0, i.width, i.height) : t.drawImage(this.image, 0, 0), !0
		}, e.DisplayObject_getBounds = e.getBounds, e.getBounds = function() {
			var t = this.DisplayObject_getBounds();
			if (t) return t;
			var e = this.sourceRect || this.image,
				i = this.image && (this.image.complete || this.image.getContext || this.image.readyState >= 2);
			return i ? this._rectangle.initialize(0, 0, e.width, e.height) : null
		}, e.clone = function() {
			var e = new t(this.image);
			return this.sourceRect && (e.sourceRect = this.sourceRect.clone()), this.cloneProps(e), e
		}, e.toString = function() {
			return "[Bitmap (name=" + this.name + ")]"
		}, createjs.Bitmap = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e) {
				this.initialize(t, e)
			},
			e = t.prototype = new createjs.DisplayObject;
		e.currentFrame = 0, e.currentAnimation = null, e.paused = !0, e.spriteSheet = null, e.offset = 0, e.currentAnimationFrame = 0, e.framerate = 0, e._advanceCount = 0, e._animation = null, e._currentFrame = null, e.DisplayObject_initialize = e.initialize, e.initialize = function(t, e) {
			this.DisplayObject_initialize(), this.spriteSheet = t, e && this.gotoAndPlay(e)
		}, e.isVisible = function() {
			var t = this.cacheCanvas || this.spriteSheet.complete;
			return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && t)
		}, e.DisplayObject_draw = e.draw, e.draw = function(t, e) {
			if (this.DisplayObject_draw(t, e)) return !0;
			this._normalizeFrame();
			var i = this.spriteSheet.getFrame(0 | this._currentFrame);
			if (!i) return !1;
			var s = i.rect;
			return s.width && s.height && t.drawImage(i.image, s.x, s.y, s.width, s.height, -i.regX, -i.regY, s.width, s.height), !0
		}, e.play = function() {
			this.paused = !1
		}, e.stop = function() {
			this.paused = !0
		}, e.gotoAndPlay = function(t) {
			this.paused = !1, this._goto(t)
		}, e.gotoAndStop = function(t) {
			this.paused = !0, this._goto(t)
		}, e.advance = function(t) {
			var e = this._animation && this._animation.speed || 1,
				i = this.framerate || this.spriteSheet.framerate,
				s = i && null != t ? t / (1e3 / i) : 1;
			this._animation ? this.currentAnimationFrame += s * e : this._currentFrame += s * e, this._normalizeFrame()
		}, e.DisplayObject_getBounds = e.getBounds, e.getBounds = function() {
			return this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle)
		}, e.clone = function() {
			var e = new t(this.spriteSheet);
			return this.cloneProps(e), e
		}, e.toString = function() {
			return "[Sprite (name=" + this.name + ")]"
		}, e.DisplayObject__tick = e._tick, e._tick = function(t) {
			this.paused || this.advance(t && t.delta), this.DisplayObject__tick(t)
		}, e._normalizeFrame = function() {
			var t, e = this._animation,
				i = this.paused,
				s = this._currentFrame,
				n = this.currentAnimationFrame;
			if (e)
				if (t = e.frames.length, (0 | n) >= t) {
					var o = e.next;
					if (this._dispatchAnimationEnd(e, s, i, o, t - 1));
					else {
						if (o) return this._goto(o, n - t);
						this.paused = !0, n = this.currentAnimationFrame = e.frames.length - 1, this._currentFrame = e.frames[n]
					}
				} else this._currentFrame = e.frames[0 | n];
			else if (t = this.spriteSheet.getNumFrames(), s >= t && !this._dispatchAnimationEnd(e, s, i, t - 1) && (this._currentFrame -= t) >= t) return this._normalizeFrame();
			this.currentFrame = 0 | this._currentFrame
		}, e._dispatchAnimationEnd = function(t, e, i, s, n) {
			var o = t ? t.name : null;
			if (this.hasEventListener("animationend")) {
				var a = new createjs.Event("animationend");
				a.name = o, a.next = s, this.dispatchEvent(a)
			}
			var r = this._animation != t || this._currentFrame != e;
			return r || i || !this.paused || (this.currentAnimationFrame = n, r = !0), r
		}, e.DisplayObject_cloneProps = e.cloneProps, e.cloneProps = function(t) {
			this.DisplayObject_cloneProps(t), t.currentFrame = this.currentFrame, t._currentFrame = this._currentFrame, t.currentAnimation = this.currentAnimation, t.paused = this.paused, t._animation = this._animation, t.currentAnimationFrame = this.currentAnimationFrame, t.framerate = this.framerate
		}, e._goto = function(t, e) {
			if (isNaN(t)) {
				var i = this.spriteSheet.getAnimation(t);
				i && (this.currentAnimationFrame = e || 0, this._animation = i, this.currentAnimation = t, this._normalizeFrame())
			} else this.currentAnimationFrame = 0, this.currentAnimation = this._animation = null, this._currentFrame = t, this._normalizeFrame()
		}, createjs.Sprite = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = "BitmapAnimation is deprecated in favour of Sprite. See VERSIONS file for info on changes.";
		if (!createjs.Sprite) throw t;
		(createjs.BitmapAnimation = function(e) {
			console.log(t), this.initialize(e)
		}).prototype = new createjs.Sprite
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t) {
				this.initialize(t)
			},
			e = t.prototype = new createjs.DisplayObject;
		e.graphics = null, e.DisplayObject_initialize = e.initialize, e.initialize = function(t) {
			this.DisplayObject_initialize(), this.graphics = t ? t : new createjs.Graphics
		}, e.isVisible = function() {
			var t = this.cacheCanvas || this.graphics && !this.graphics.isEmpty();
			return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && t)
		}, e.DisplayObject_draw = e.draw, e.draw = function(t, e) {
			return this.DisplayObject_draw(t, e) ? !0 : (this.graphics.draw(t, this), !0)
		}, e.clone = function(e) {
			var i = new t(e && this.graphics ? this.graphics.clone() : this.graphics);
			return this.cloneProps(i), i
		}, e.toString = function() {
			return "[Shape (name=" + this.name + ")]"
		}, createjs.Shape = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i) {
				this.initialize(t, e, i)
			},
			e = t.prototype = new createjs.DisplayObject,
			i = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
		i.getContext && (t._workingContext = i.getContext("2d"), i.width = i.height = 1), t.H_OFFSETS = {
			start: 0,
			left: 0,
			center: -.5,
			end: -1,
			right: -1
		}, t.V_OFFSETS = {
			top: 0,
			hanging: -.01,
			middle: -.4,
			alphabetic: -.8,
			ideographic: -.85,
			bottom: -1
		}, e.text = "", e.font = null, e.color = null, e.textAlign = "left", e.textBaseline = "top", e.maxWidth = null, e.outline = 0, e.lineHeight = 0, e.lineWidth = null, e.DisplayObject_initialize = e.initialize, e.initialize = function(t, e, i) {
			this.DisplayObject_initialize(), this.text = t, this.font = e, this.color = i
		}, e.isVisible = function() {
			var t = this.cacheCanvas || null != this.text && "" !== this.text;
			return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && t)
		}, e.DisplayObject_draw = e.draw, e.draw = function(t, e) {
			if (this.DisplayObject_draw(t, e)) return !0;
			var i = this.color || "#000";
			return this.outline ? (t.strokeStyle = i, t.lineWidth = 1 * this.outline) : t.fillStyle = i, this._drawText(this._prepContext(t)), !0
		}, e.getMeasuredWidth = function() {
			return this._prepContext(t._workingContext).measureText(this.text).width
		}, e.getMeasuredLineHeight = function() {
			return 1.2 * this._prepContext(t._workingContext).measureText("M").width
		}, e.getMeasuredHeight = function() {
			return this._drawText(null, {}).height
		}, e.DisplayObject_getBounds = e.getBounds, e.getBounds = function() {
			var e = this.DisplayObject_getBounds();
			if (e) return e;
			if (null == this.text || "" == this.text) return null;
			var i = this._drawText(null, {}),
				s = this.maxWidth && this.maxWidth < i.width ? this.maxWidth : i.width,
				n = s * t.H_OFFSETS[this.textAlign || "left"],
				o = this.lineHeight || this.getMeasuredLineHeight(),
				a = o * t.V_OFFSETS[this.textBaseline || "top"];
			return this._rectangle.initialize(n, a, s, i.height)
		}, e.getMetrics = function() {
			var e = {
				lines: []
			};
			return e.lineHeight = this.lineHeight || this.getMeasuredLineHeight(), e.vOffset = e.lineHeight * t.V_OFFSETS[this.textBaseline || "top"], this._drawText(null, e, e.lines)
		}, e.clone = function() {
			var e = new t(this.text, this.font, this.color);
			return this.cloneProps(e), e
		}, e.toString = function() {
			return "[Text (text=" + (this.text.length > 20 ? this.text.substr(0, 17) + "..." : this.text) + ")]"
		}, e.DisplayObject_cloneProps = e.cloneProps, e.cloneProps = function(t) {
			this.DisplayObject_cloneProps(t), t.textAlign = this.textAlign, t.textBaseline = this.textBaseline, t.maxWidth = this.maxWidth, t.outline = this.outline, t.lineHeight = this.lineHeight, t.lineWidth = this.lineWidth
		}, e._prepContext = function(t) {
			return t.font = this.font, t.textAlign = this.textAlign || "left", t.textBaseline = this.textBaseline || "top", t
		}, e._drawText = function(e, i, s) {
			var n = !!e;
			n || (e = this._prepContext(t._workingContext));
			for (var o = this.lineHeight || this.getMeasuredLineHeight(), a = 0, r = 0, h = String(this.text).split(/(?:\r\n|\r|\n)/), f = 0, _ = h.length; _ > f; f++) {
				var l = h[f],
					c = null;
				if (null != this.lineWidth && (c = e.measureText(l).width) > this.lineWidth) {
					var u = l.split(/(\s)/);
					l = u[0], c = e.measureText(l).width;
					for (var d = 1, p = u.length; p > d; d += 2) {
						var g = e.measureText(u[d] + u[d + 1]).width;
						c + g > this.lineWidth ? (n && this._drawTextLine(e, l, r * o), s && s.push(l), c > a && (a = c), l = u[d + 1], c = e.measureText(l).width, r++) : (l += u[d] + u[d + 1], c += g)
					}
				}
				n && this._drawTextLine(e, l, r * o), s && s.push(l), i && null == c && (c = e.measureText(l).width), c > a && (a = c), r++
			}
			return i && (i.width = a, i.height = r * o), i
		}, e._drawTextLine = function(t, e, i) {
			this.outline ? t.strokeText(e, 0, i, this.maxWidth || 65535) : t.fillText(e, 0, i, this.maxWidth || 65535)
		}, createjs.Text = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";

		function t(t, e) {
			this.initialize(t, e)
		}
		var e = t.prototype = new createjs.Container;
		t.maxPoolSize = 100, t._spritePool = [], e.text = "", e.spriteSheet = null, e.lineHeight = 0, e.letterSpacing = 0, e.spaceWidth = 0, e._oldProps = null, e.Container_initialize = e.initialize, e.initialize = function(t, e) {
			this.Container_initialize(), this.text = t, this.spriteSheet = e, this._oldProps = {
				text: 0,
				spriteSheet: 0,
				lineHeight: 0,
				letterSpacing: 0,
				spaceWidth: 0
			}
		}, e.Container_draw = e.draw, e.draw = function(t, e) {
			this.DisplayObject_draw(t, e) || (this._updateText(), this.Container_draw(t, e))
		}, e.Container_getBounds = e.getBounds, e.getBounds = function() {
			return this._updateText(), this.Container_getBounds()
		}, e.isVisible = function() {
			var t = this.cacheCanvas || this.spriteSheet && this.spriteSheet.complete && this.text;
			return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && t)
		}, e._getFrameIndex = function(t, e) {
			var i, s = e.getAnimation(t);
			return s || (t != (i = t.toUpperCase()) || t != (i = t.toLowerCase()) || (i = null), i && (s = e.getAnimation(i))), s && s.frames[0]
		}, e._getFrame = function(t, e) {
			var i = this._getFrameIndex(t, e);
			return null == i ? i : e.getFrame(i)
		}, e._getLineHeight = function(t) {
			var e = this._getFrame("1", t) || this._getFrame("T", t) || this._getFrame("L", t) || t.getFrame(0);
			return e ? e.rect.height : 1
		}, e._getSpaceWidth = function(t) {
			var e = this._getFrame("1", t) || this._getFrame("l", t) || this._getFrame("e", t) || this._getFrame("a", t) || t.getFrame(0);
			return e ? e.rect.width : 1
		}, e._updateText = function() {
			var e, i = 0,
				s = 0,
				n = this._oldProps,
				o = !1,
				a = this.spaceWidth,
				r = this.lineHeight,
				h = this.spriteSheet,
				f = t._spritePool,
				_ = this.children,
				l = 0,
				c = _.length;
			for (var u in n) n[u] != this[u] && (n[u] = this[u], o = !0);
			if (o) {
				var d = !!this._getFrame(" ", h);
				d || 0 != a || (a = this._getSpaceWidth(h)), 0 == r && (r = this._getLineHeight(h));
				for (var p = 0, g = this.text.length; g > p; p++) {
					var y = this.text.charAt(p);
					if (" " != y || d)
						if ("\n" != y && "\r" != y) {
							var m = this._getFrameIndex(y, h);
							null != m && (c > l ? e = _[l] : (e = this.addChild(f.length ? f.pop() : new createjs.Sprite), c++), e.spriteSheet = h, e.gotoAndStop(m), e.x = i, e.y = s, l++, i += e.getBounds().width + this.letterSpacing)
						} else "\r" == y && "\n" == this.text.charAt(p + 1) && p++, i = 0, s += r;
					else i += a
				}
				for (; c > l;) f.push(e = _.pop()), e.parent = null;
				f.length > t.maxPoolSize && (f.length = t.maxPoolSize)
			}
		}, createjs.BitmapText = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {
				throw "SpriteSheetUtils cannot be instantiated"
			},
			e = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
		e.getContext && (t._workingCanvas = e, t._workingContext = e.getContext("2d"), e.width = e.height = 1), t.addFlippedFrames = function(e, i, s, n) {
			if (i || s || n) {
				var o = 0;
				i && t._flip(e, ++o, !0, !1), s && t._flip(e, ++o, !1, !0), n && t._flip(e, ++o, !0, !0)
			}
		}, t.extractFrame = function(e, i) {
			isNaN(i) && (i = e.getAnimation(i).frames[0]);
			var s = e.getFrame(i);
			if (!s) return null;
			var n = s.rect,
				o = t._workingCanvas;
			o.width = n.width, o.height = n.height, t._workingContext.drawImage(s.image, n.x, n.y, n.width, n.height, 0, 0, n.width, n.height);
			var a = document.createElement("img");
			return a.src = o.toDataURL("image/png"), a
		}, t.mergeAlpha = function(t, e, i) {
			i || (i = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")), i.width = Math.max(e.width, t.width), i.height = Math.max(e.height, t.height);
			var s = i.getContext("2d");
			return s.save(), s.drawImage(t, 0, 0), s.globalCompositeOperation = "destination-in", s.drawImage(e, 0, 0), s.restore(), i
		}, t._flip = function(e, i, s, n) {
			for (var o = e._images, a = t._workingCanvas, r = t._workingContext, h = o.length / i, f = 0; h > f; f++) {
				var _ = o[f];
				_.__tmp = f, r.setTransform(1, 0, 0, 1, 0, 0), r.clearRect(0, 0, a.width + 1, a.height + 1), a.width = _.width, a.height = _.height, r.setTransform(s ? -1 : 1, 0, 0, n ? -1 : 1, s ? _.width : 0, n ? _.height : 0), r.drawImage(_, 0, 0);
				var l = document.createElement("img");
				l.src = a.toDataURL("image/png"), l.width = _.width, l.height = _.height, o.push(l)
			}
			var c = e._frames,
				u = c.length / i;
			for (f = 0; u > f; f++) {
				_ = c[f];
				var d = _.rect.clone();
				l = o[_.image.__tmp + h * i];
				var p = {
					image: l,
					rect: d,
					regX: _.regX,
					regY: _.regY
				};
				s && (d.x = l.width - d.x - d.width, p.regX = d.width - _.regX), n && (d.y = l.height - d.y - d.height, p.regY = d.height - _.regY), c.push(p)
			}
			var g = "_" + (s ? "h" : "") + (n ? "v" : ""),
				y = e._animations,
				m = e._data,
				S = y.length / i;
			for (f = 0; S > f; f++) {
				var E = y[f];
				_ = m[E];
				var w = {
					name: E + g,
					speed: _.speed,
					next: _.next,
					frames: []
				};
				_.next && (w.next += g), c = _.frames;
				for (var T = 0, v = c.length; v > T; T++) w.frames.push(c[T] + u * i);
				m[w.name] = w, y.push(w.name)
			}
		}, createjs.SpriteSheetUtils = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {
				this.initialize()
			},
			e = t.prototype = new createjs.EventDispatcher;
		t.ERR_DIMENSIONS = "frame dimensions exceed max spritesheet dimensions", t.ERR_RUNNING = "a build is already running", e.maxWidth = 2048, e.maxHeight = 2048, e.spriteSheet = null, e.scale = 1, e.padding = 1, e.timeSlice = .3, e.progress = -1, e._frames = null, e._animations = null, e._data = null, e._nextFrameIndex = 0, e._index = 0, e._timerID = null, e._scale = 1, e.initialize = function() {
			this._frames = [], this._animations = {}
		}, e.addFrame = function(e, i, s, n, o) {
			if (this._data) throw t.ERR_RUNNING;
			var a = i || e.bounds || e.nominalBounds;
			return !a && e.getBounds && (a = e.getBounds()), a ? (s = s || 1, this._frames.push({
				source: e,
				sourceRect: a,
				scale: s,
				funct: n,
				data: o,
				index: this._frames.length,
				height: a.height * s
			}) - 1) : null
		}, e.addAnimation = function(e, i, s, n) {
			if (this._data) throw t.ERR_RUNNING;
			this._animations[e] = {
				frames: i,
				next: s,
				frequency: n
			}
		}, e.addMovieClip = function(e, i, s, n, o, a) {
			if (this._data) throw t.ERR_RUNNING;
			var r = e.frameBounds,
				h = i || e.bounds || e.nominalBounds;
			if (!h && e.getBounds && (h = e.getBounds()), h || r) {
				var f, _, l = this._frames.length,
					c = e.timeline.duration;
				for (f = 0; c > f; f++) {
					var u = r && r[f] ? r[f] : h;
					this.addFrame(e, u, s, this._setupMovieClipFrame, {
						i: f,
						f: n,
						d: o
					})
				}
				var d = e.timeline._labels,
					p = [];
				for (var g in d) p.push({
					index: d[g],
					label: g
				});
				if (p.length)
					for (p.sort(function(t, e) {
							return t.index - e.index
						}), f = 0, _ = p.length; _ > f; f++) {
						for (var y = p[f].label, m = l + p[f].index, S = l + (f == _ - 1 ? c : p[f + 1].index), E = [], w = m; S > w; w++) E.push(w);
						(!a || (y = a(y, e, m, S))) && this.addAnimation(y, E, !0)
					}
			}
		}, e.build = function() {
			if (this._data) throw t.ERR_RUNNING;
			for (this._startBuild(); this._drawNext(););
			return this._endBuild(), this.spriteSheet
		}, e.buildAsync = function(e) {
			if (this._data) throw t.ERR_RUNNING;
			this.timeSlice = e, this._startBuild();
			var i = this;
			this._timerID = setTimeout(function() {
				i._run()
			}, 50 - 50 * Math.max(.01, Math.min(.99, this.timeSlice || .3)))
		}, e.stopAsync = function() {
			clearTimeout(this._timerID), this._data = null
		}, e.clone = function() {
			throw "SpriteSheetBuilder cannot be cloned."
		}, e.toString = function() {
			return "[SpriteSheetBuilder]"
		}, e._startBuild = function() {
			var e = this.padding || 0;
			this.progress = 0, this.spriteSheet = null, this._index = 0, this._scale = this.scale;
			var i = [];
			this._data = {
				images: [],
				frames: i,
				animations: this._animations
			};
			var s = this._frames.slice();
			if (s.sort(function(t, e) {
					return t.height <= e.height ? -1 : 1
				}), s[s.length - 1].height + 2 * e > this.maxHeight) throw t.ERR_DIMENSIONS;
			for (var n = 0, o = 0, a = 0; s.length;) {
				var r = this._fillRow(s, n, a, i, e);
				if (r.w > o && (o = r.w), n += r.h, !r.h || !s.length) {
					var h = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
					h.width = this._getSize(o, this.maxWidth), h.height = this._getSize(n, this.maxHeight), this._data.images[a] = h, r.h || (o = n = 0, a++)
				}
			}
		}, e._setupMovieClipFrame = function(t, e) {
			var i = t.actionsEnabled;
			t.actionsEnabled = !1, t.gotoAndStop(e.i), t.actionsEnabled = i, e.f && e.f(t, e.d, e.i)
		}, e._getSize = function(t, e) {
			for (var i = 4; Math.pow(2, ++i) < t;);
			return Math.min(e, Math.pow(2, i))
		}, e._fillRow = function(e, i, s, n, o) {
			var a = this.maxWidth,
				r = this.maxHeight;
			i += o;
			for (var h = r - i, f = o, _ = 0, l = e.length - 1; l >= 0; l--) {
				var c = e[l],
					u = this._scale * c.scale,
					d = c.sourceRect,
					p = c.source,
					g = Math.floor(u * d.x - o),
					y = Math.floor(u * d.y - o),
					m = Math.ceil(u * d.height + 2 * o),
					S = Math.ceil(u * d.width + 2 * o);
				if (S > a) throw t.ERR_DIMENSIONS;
				m > h || f + S > a || (c.img = s, c.rect = new createjs.Rectangle(f, i, S, m), _ = _ || m, e.splice(l, 1), n[c.index] = [f, i, S, m, s, Math.round(-g + u * p.regX - o), Math.round(-y + u * p.regY - o)], f += S)
			}
			return {
				w: f,
				h: _
			}
		}, e._endBuild = function() {
			this.spriteSheet = new createjs.SpriteSheet(this._data), this._data = null, this.progress = 1, this.dispatchEvent("complete")
		}, e._run = function() {
			for (var t = 50 * Math.max(.01, Math.min(.99, this.timeSlice || .3)), e = (new Date).getTime() + t, i = !1; e > (new Date).getTime();)
				if (!this._drawNext()) {
					i = !0;
					break
				}
			if (i) this._endBuild();
			else {
				var s = this;
				this._timerID = setTimeout(function() {
					s._run()
				}, 50 - t)
			}
			var n = this.progress = this._index / this._frames.length;
			if (this.hasEventListener("progress")) {
				var o = new createjs.Event("progress");
				o.progress = n, this.dispatchEvent(o)
			}
		}, e._drawNext = function() {
			var t = this._frames[this._index],
				e = t.scale * this._scale,
				i = t.rect,
				s = t.sourceRect,
				n = this._data.images[t.img],
				o = n.getContext("2d");
			return t.funct && t.funct(t.source, t.data), o.save(), o.beginPath(), o.rect(i.x, i.y, i.width, i.height), o.clip(), o.translate(Math.ceil(i.x - s.x * e), Math.ceil(i.y - s.y * e)), o.scale(e, e), t.source.draw(o), o.restore(), ++this._index < this._frames.length
		}, createjs.SpriteSheetBuilder = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t) {
				this.initialize(t)
			},
			e = t.prototype = new createjs.DisplayObject;
		e.htmlElement = null, e._oldMtx = null, e._visible = !1, e.DisplayObject_initialize = e.initialize, e.initialize = function(t) {
			"string" == typeof t && (t = document.getElementById(t)), this.DisplayObject_initialize(), this.mouseEnabled = !1, this.htmlElement = t;
			var e = t.style;
			e.position = "absolute", e.transformOrigin = e.WebkitTransformOrigin = e.msTransformOrigin = e.MozTransformOrigin = e.OTransformOrigin = "0% 0%"
		}, e.isVisible = function() {
			return null != this.htmlElement
		}, e.draw = function() {
			return !0
		}, e.cache = function() {}, e.uncache = function() {}, e.updateCache = function() {}, e.hitTest = function() {}, e.localToGlobal = function() {}, e.globalToLocal = function() {}, e.localToLocal = function() {}, e.clone = function() {
			throw "DOMElement cannot be cloned."
		}, e.toString = function() {
			return "[DOMElement (name=" + this.name + ")]"
		}, e.DisplayObject__tick = e._tick, e._tick = function(t) {
			var e = this.getStage();
			e && e.on("drawend", this._handleDrawEnd, this, !0), this.DisplayObject__tick(t)
		}, e._handleDrawEnd = function() {
			var t = this.htmlElement;
			if (t) {
				var e = t.style,
					i = this.getConcatenatedMatrix(this._matrix),
					s = i.visible ? "visible" : "hidden";
				if (s != e.visibility && (e.visibility = s), i.visible) {
					var n = this._oldMtx,
						o = 1e4;
					if (n && n.alpha == i.alpha || (e.opacity = "" + (i.alpha * o | 0) / o, n && (n.alpha = i.alpha)), !n || n.tx != i.tx || n.ty != i.ty || n.a != i.a || n.b != i.b || n.c != i.c || n.d != i.d) {
						var a = "matrix(" + (i.a * o | 0) / o + "," + (i.b * o | 0) / o + "," + (i.c * o | 0) / o + "," + (i.d * o | 0) / o + "," + (i.tx + .5 | 0);
						e.transform = e.WebkitTransform = e.OTransform = e.msTransform = a + "," + (i.ty + .5 | 0) + ")", e.MozTransform = a + "px," + (i.ty + .5 | 0) + "px)", this._oldMtx = n ? n.copy(i) : i.clone()
					}
				}
			}
		}, createjs.DOMElement = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {
				this.initialize()
			},
			e = t.prototype;
		e.initialize = function() {}, e.getBounds = function() {
			return null
		}, e.applyFilter = function() {}, e.toString = function() {
			return "[Filter]"
		}, e.clone = function() {
			return new t
		}, createjs.Filter = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i) {
				this.initialize(t, e, i)
			},
			e = t.prototype = new createjs.Filter;
		e.initialize = function(t, e, i) {
			(isNaN(t) || 0 > t) && (t = 0), this.blurX = 0 | t, (isNaN(e) || 0 > e) && (e = 0), this.blurY = 0 | e, (isNaN(i) || 1 > i) && (i = 1), this.quality = 0 | i
		}, e.blurX = 0, e.blurY = 0, e.quality = 1, e.mul_table = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1], e.shg_table = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9], e.getBounds = function() {
			var t = .5 * Math.pow(this.quality, .6);
			return new createjs.Rectangle(-this.blurX * t, -this.blurY * t, 2 * this.blurX * t, 2 * this.blurY * t)
		}, e.applyFilter = function(t, e, i, s, n, o, a, r) {
			o = o || t, null == a && (a = e), null == r && (r = i);
			try {
				var h = t.getImageData(e, i, s, n)
			} catch (f) {
				return !1
			}
			var _ = this.blurX / 2;
			if (isNaN(_) || 0 > _) return !1;
			_ |= 0;
			var l = this.blurY / 2;
			if (isNaN(l) || 0 > l) return !1;
			if (l |= 0, 0 == _ && 0 == l) return !1;
			var c = this.quality;
			(isNaN(c) || 1 > c) && (c = 1), c |= 0, c > 3 && (c = 3), 1 > c && (c = 1);
			var e, i, u, d, p, g, y, m, S, E, w, T, v, C, x, b = h.data,
				I = _ + _ + 1,
				L = l + l + 1,
				O = s - 1,
				N = n - 1,
				A = _ + 1,
				D = l + 1,
				P = {
					r: 0,
					b: 0,
					g: 0,
					a: 0,
					next: null
				},
				M = P;
			for (u = 1; I > u; u++) M = M.next = {
				r: 0,
				b: 0,
				g: 0,
				a: 0,
				next: null
			}, u == A;
			M.next = P;
			var k = {
					r: 0,
					b: 0,
					g: 0,
					a: 0,
					next: null
				},
				R = k;
			for (u = 1; L > u; u++) R = R.next = {
				r: 0,
				b: 0,
				g: 0,
				a: 0,
				next: null
			}, u == D;
			R.next = k;
			for (var B = null; c-- > 0;) {
				y = g = 0;
				var j = this.mul_table[_],
					H = this.shg_table[_];
				for (i = n; --i > -1;) {
					for (m = A * (T = b[g]), S = A * (v = b[g + 1]), E = A * (C = b[g + 2]), w = A * (x = b[g + 3]), M = P, u = A; --u > -1;) M.r = T, M.g = v, M.b = C, M.a = x, M = M.next;
					for (u = 1; A > u; u++) d = g + ((u > O ? O : u) << 2), m += M.r = b[d], S += M.g = b[d + 1], E += M.b = b[d + 2], w += M.a = b[d + 3], M = M.next;
					for (B = P, e = 0; s > e; e++) b[g++] = m * j >>> H, b[g++] = S * j >>> H, b[g++] = E * j >>> H, b[g++] = w * j >>> H, d = y + ((d = e + _ + 1) < O ? d : O) << 2, m -= B.r - (B.r = b[d]), S -= B.g - (B.g = b[d + 1]), E -= B.b - (B.b = b[d + 2]), w -= B.a - (B.a = b[d + 3]), B = B.next;
					y += s
				}
				for (j = this.mul_table[l], H = this.shg_table[l], e = 0; s > e; e++) {
					for (g = e << 2, m = D * (T = b[g]), S = D * (v = b[g + 1]), E = D * (C = b[g + 2]), w = D * (x = b[g + 3]), R = k, u = 0; D > u; u++) R.r = T, R.g = v, R.b = C, R.a = x, R = R.next;
					for (p = s, u = 1; l >= u; u++) g = p + e << 2, m += R.r = b[g], S += R.g = b[g + 1], E += R.b = b[g + 2], w += R.a = b[g + 3], R = R.next, N > u && (p += s);
					if (g = e, B = k, c > 0)
						for (i = 0; n > i; i++) d = g << 2, b[d + 3] = x = w * j >>> H, x > 0 ? (b[d] = m * j >>> H, b[d + 1] = S * j >>> H, b[d + 2] = E * j >>> H) : b[d] = b[d + 1] = b[d + 2] = 0, d = e + ((d = i + D) < N ? d : N) * s << 2, m -= B.r - (B.r = b[d]), S -= B.g - (B.g = b[d + 1]), E -= B.b - (B.b = b[d + 2]), w -= B.a - (B.a = b[d + 3]), B = B.next, g += s;
					else
						for (i = 0; n > i; i++) d = g << 2, b[d + 3] = x = w * j >>> H, x > 0 ? (x = 255 / x, b[d] = (m * j >>> H) * x, b[d + 1] = (S * j >>> H) * x, b[d + 2] = (E * j >>> H) * x) : b[d] = b[d + 1] = b[d + 2] = 0, d = e + ((d = i + D) < N ? d : N) * s << 2, m -= B.r - (B.r = b[d]), S -= B.g - (B.g = b[d + 1]), E -= B.b - (B.b = b[d + 2]), w -= B.a - (B.a = b[d + 3]), B = B.next, g += s
				}
			}
			return o.putImageData(h, a, r), !0
		}, e.clone = function() {
			return new t(this.blurX, this.blurY, this.quality)
		}, e.toString = function() {
			return "[BlurFilter]"
		}, createjs.BlurFilter = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t) {
				this.initialize(t)
			},
			e = t.prototype = new createjs.Filter;
		e.initialize = function(t) {
			this.alphaMap = t
		}, e.alphaMap = null, e._alphaMap = null, e._mapData = null, e.applyFilter = function(t, e, i, s, n, o, a, r) {
			if (!this.alphaMap) return !0;
			if (!this._prepAlphaMap()) return !1;
			o = o || t, null == a && (a = e), null == r && (r = i);
			try {
				var h = t.getImageData(e, i, s, n)
			} catch (f) {
				return !1
			}
			for (var _ = h.data, l = this._mapData, c = _.length, u = 0; c > u; u += 4) _[u + 3] = l[u] || 0;
			return o.putImageData(h, a, r), !0
		}, e.clone = function() {
			return new t(this.alphaMap)
		}, e.toString = function() {
			return "[AlphaMapFilter]"
		}, e._prepAlphaMap = function() {
			if (!this.alphaMap) return !1;
			if (this.alphaMap == this._alphaMap && this._mapData) return !0;
			this._mapData = null;
			var t, e = this._alphaMap = this.alphaMap,
				i = e;
			e instanceof HTMLCanvasElement ? t = i.getContext("2d") : (i = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas"), i.width = e.width, i.height = e.height, t = i.getContext("2d"), t.drawImage(e, 0, 0));
			try {
				var s = t.getImageData(0, 0, e.width, e.height)
			} catch (n) {
				return !1
			}
			return this._mapData = s.data, !0
		}, createjs.AlphaMapFilter = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t) {
				this.initialize(t)
			},
			e = t.prototype = new createjs.Filter;
		e.initialize = function(t) {
			this.mask = t
		}, e.mask = null, e.applyFilter = function(t, e, i, s, n, o, a, r) {
			return this.mask ? (o = o || t, null == a && (a = e), null == r && (r = i), o.save(), o.globalCompositeOperation = "destination-in", o.drawImage(this.mask, a, r), o.restore(), !0) : !0
		}, e.clone = function() {
			return new t(this.mask)
		}, e.toString = function() {
			return "[AlphaMaskFilter]"
		}, createjs.AlphaMaskFilter = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i, s, n, o, a, r) {
				this.initialize(t, e, i, s, n, o, a, r)
			},
			e = t.prototype = new createjs.Filter;
		e.redMultiplier = 1, e.greenMultiplier = 1, e.blueMultiplier = 1, e.alphaMultiplier = 1, e.redOffset = 0, e.greenOffset = 0, e.blueOffset = 0, e.alphaOffset = 0, e.initialize = function(t, e, i, s, n, o, a, r) {
			this.redMultiplier = null != t ? t : 1, this.greenMultiplier = null != e ? e : 1, this.blueMultiplier = null != i ? i : 1, this.alphaMultiplier = null != s ? s : 1, this.redOffset = n || 0, this.greenOffset = o || 0, this.blueOffset = a || 0, this.alphaOffset = r || 0
		}, e.applyFilter = function(t, e, i, s, n, o, a, r) {
			o = o || t, null == a && (a = e), null == r && (r = i);
			try {
				var h = t.getImageData(e, i, s, n)
			} catch (f) {
				return !1
			}
			for (var _ = h.data, l = _.length, c = 0; l > c; c += 4) _[c] = _[c] * this.redMultiplier + this.redOffset, _[c + 1] = _[c + 1] * this.greenMultiplier + this.greenOffset, _[c + 2] = _[c + 2] * this.blueMultiplier + this.blueOffset, _[c + 3] = _[c + 3] * this.alphaMultiplier + this.alphaOffset;
			return o.putImageData(h, a, r), !0
		}, e.toString = function() {
			return "[ColorFilter]"
		}, e.clone = function() {
			return new t(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset)
		}, createjs.ColorFilter = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t, e, i, s) {
				this.initialize(t, e, i, s)
			},
			e = t.prototype;
		t.DELTA_INDEX = [0, .01, .02, .04, .05, .06, .07, .08, .1, .11, .12, .14, .15, .16, .17, .18, .2, .21, .22, .24, .25, .27, .28, .3, .32, .34, .36, .38, .4, .42, .44, .46, .48, .5, .53, .56, .59, .62, .65, .68, .71, .74, .77, .8, .83, .86, .89, .92, .95, .98, 1, 1.06, 1.12, 1.18, 1.24, 1.3, 1.36, 1.42, 1.48, 1.54, 1.6, 1.66, 1.72, 1.78, 1.84, 1.9, 1.96, 2, 2.12, 2.25, 2.37, 2.5, 2.62, 2.75, 2.87, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.3, 4.7, 4.9, 5, 5.5, 6, 6.5, 6.8, 7, 7.3, 7.5, 7.8, 8, 8.4, 8.7, 9, 9.4, 9.6, 9.8, 10], t.IDENTITY_MATRIX = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], t.LENGTH = t.IDENTITY_MATRIX.length, e.initialize = function(t, e, i, s) {
			return this.reset(), this.adjustColor(t, e, i, s), this
		}, e.reset = function() {
			return this.copyMatrix(t.IDENTITY_MATRIX)
		}, e.adjustColor = function(t, e, i, s) {
			return this.adjustHue(s), this.adjustContrast(e), this.adjustBrightness(t), this.adjustSaturation(i)
		}, e.adjustBrightness = function(t) {
			return 0 == t || isNaN(t) ? this : (t = this._cleanValue(t, 255), this._multiplyMatrix([1, 0, 0, 0, t, 0, 1, 0, 0, t, 0, 0, 1, 0, t, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]), this)
		}, e.adjustContrast = function(e) {
			if (0 == e || isNaN(e)) return this;
			e = this._cleanValue(e, 100);
			var i;
			return 0 > e ? i = 127 + e / 100 * 127 : (i = e % 1, i = 0 == i ? t.DELTA_INDEX[e] : t.DELTA_INDEX[e << 0] * (1 - i) + t.DELTA_INDEX[(e << 0) + 1] * i, i = 127 * i + 127), this._multiplyMatrix([i / 127, 0, 0, 0, .5 * (127 - i), 0, i / 127, 0, 0, .5 * (127 - i), 0, 0, i / 127, 0, .5 * (127 - i), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]), this
		}, e.adjustSaturation = function(t) {
			if (0 == t || isNaN(t)) return this;
			t = this._cleanValue(t, 100);
			var e = 1 + (t > 0 ? 3 * t / 100 : t / 100),
				i = .3086,
				s = .6094,
				n = .082;
			return this._multiplyMatrix([i * (1 - e) + e, s * (1 - e), n * (1 - e), 0, 0, i * (1 - e), s * (1 - e) + e, n * (1 - e), 0, 0, i * (1 - e), s * (1 - e), n * (1 - e) + e, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]), this
		}, e.adjustHue = function(t) {
			if (0 == t || isNaN(t)) return this;
			t = this._cleanValue(t, 180) / 180 * Math.PI;
			var e = Math.cos(t),
				i = Math.sin(t),
				s = .213,
				n = .715,
				o = .072;
			return this._multiplyMatrix([s + e * (1 - s) + i * -s, n + e * -n + i * -n, o + e * -o + i * (1 - o), 0, 0, s + e * -s + .143 * i, n + e * (1 - n) + .14 * i, o + e * -o + i * -.283, 0, 0, s + e * -s + i * -(1 - s), n + e * -n + i * n, o + e * (1 - o) + i * o, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]), this
		}, e.concat = function(e) {
			return e = this._fixMatrix(e), e.length != t.LENGTH ? this : (this._multiplyMatrix(e), this)
		}, e.clone = function() {
			return (new t).copyMatrix(this)
		}, e.toArray = function() {
			for (var e = [], i = 0, s = t.LENGTH; s > i; i++) e[i] = this[i];
			return e
		}, e.copyMatrix = function(e) {
			for (var i = t.LENGTH, s = 0; i > s; s++) this[s] = e[s];
			return this
		}, e.toString = function() {
			return "[ColorMatrix]"
		}, e._multiplyMatrix = function(t) {
			for (var e = [], i = 0; 5 > i; i++) {
				for (var s = 0; 5 > s; s++) e[s] = this[s + 5 * i];
				for (var s = 0; 5 > s; s++) {
					for (var n = 0, o = 0; 5 > o; o++) n += t[s + 5 * o] * e[o];
					this[s + 5 * i] = n
				}
			}
		}, e._cleanValue = function(t, e) {
			return Math.min(e, Math.max(-e, t))
		}, e._fixMatrix = function(e) {
			return e instanceof t && (e = e.toArray()), e.length < t.LENGTH ? e = e.slice(0, e.length).concat(t.IDENTITY_MATRIX.slice(e.length, t.LENGTH)) : e.length > t.LENGTH && (e = e.slice(0, t.LENGTH)), e
		}, createjs.ColorMatrix = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function(t) {
				this.initialize(t)
			},
			e = t.prototype = new createjs.Filter;
		e.matrix = null, e.initialize = function(t) {
			this.matrix = t
		}, e.applyFilter = function(t, e, i, s, n, o, a, r) {
			o = o || t, null == a && (a = e), null == r && (r = i);
			try {
				var h = t.getImageData(e, i, s, n)
			} catch (f) {
				return !1
			}
			for (var _, l, c, u, d = h.data, p = d.length, g = this.matrix, y = g[0], m = g[1], S = g[2], E = g[3], w = g[4], T = g[5], v = g[6], C = g[7], x = g[8], b = g[9], I = g[10], L = g[11], O = g[12], N = g[13], A = g[14], D = g[15], P = g[16], M = g[17], k = g[18], R = g[19], B = 0; p > B; B += 4) _ = d[B], l = d[B + 1], c = d[B + 2], u = d[B + 3], d[B] = _ * y + l * m + c * S + u * E + w, d[B + 1] = _ * T + l * v + c * C + u * x + b, d[B + 2] = _ * I + l * L + c * O + u * N + A, d[B + 3] = _ * D + l * P + c * M + u * k + R;
			return o.putImageData(h, a, r), !0
		}, e.toString = function() {
			return "[ColorMatrixFilter]"
		}, e.clone = function() {
			return new t(this.matrix)
		}, createjs.ColorMatrixFilter = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = function() {
			throw "Touch cannot be instantiated"
		};
		t.isSupported = function() {
			return "ontouchstart" in window || window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 0 || window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 0
		}, t.enable = function(e, i, s) {
			return e && e.canvas && t.isSupported() ? (e.__touch = {
				pointers: {},
				multitouch: !i,
				preventDefault: !s,
				count: 0
			}, "ontouchstart" in window ? t._IOS_enable(e) : (window.navigator.msPointerEnabled || window.navigator.pointerEnabled) && t._IE_enable(e), !0) : !1
		}, t.disable = function(e) {
			e && ("ontouchstart" in window ? t._IOS_disable(e) : (window.navigator.msPointerEnabled || window.navigator.pointerEnabled) && t._IE_disable(e))
		}, t._IOS_enable = function(e) {
			var i = e.canvas,
				s = e.__touch.f = function(i) {
					t._IOS_handleEvent(e, i)
				};
			i.addEventListener("touchstart", s, !1), i.addEventListener("touchmove", s, !1), i.addEventListener("touchend", s, !1), i.addEventListener("touchcancel", s, !1)
		}, t._IOS_disable = function(t) {
			var e = t.canvas;
			if (e) {
				var i = t.__touch.f;
				e.removeEventListener("touchstart", i, !1), e.removeEventListener("touchmove", i, !1), e.removeEventListener("touchend", i, !1), e.removeEventListener("touchcancel", i, !1)
			}
		}, t._IOS_handleEvent = function(t, e) {
			if (t) {
				t.__touch.preventDefault && e.preventDefault && e.preventDefault();
				for (var i = e.changedTouches, s = e.type, n = 0, o = i.length; o > n; n++) {
					var a = i[n],
						r = a.identifier;
					a.target == t.canvas && ("touchstart" == s ? this._handleStart(t, r, e, a.pageX, a.pageY) : "touchmove" == s ? this._handleMove(t, r, e, a.pageX, a.pageY) : ("touchend" == s || "touchcancel" == s) && this._handleEnd(t, r, e))
				}
			}
		}, t._IE_enable = function(e) {
			var i = e.canvas,
				s = e.__touch.f = function(i) {
					t._IE_handleEvent(e, i)
				};
			void 0 === window.navigator.pointerEnabled ? (i.addEventListener("MSPointerDown", s, !1), window.addEventListener("MSPointerMove", s, !1), window.addEventListener("MSPointerUp", s, !1), window.addEventListener("MSPointerCancel", s, !1), e.__touch.preventDefault && (i.style.msTouchAction = "none")) : (i.addEventListener("pointerdown", s, !1), window.addEventListener("pointermove", s, !1), window.addEventListener("pointerup", s, !1), window.addEventListener("pointercancel", s, !1), e.__touch.preventDefault && (i.style.touchAction = "none")), e.__touch.activeIDs = {}
		}, t._IE_disable = function(t) {
			var e = t.__touch.f;
			void 0 === window.navigator.pointerEnabled ? (window.removeEventListener("MSPointerMove", e, !1), window.removeEventListener("MSPointerUp", e, !1), window.removeEventListener("MSPointerCancel", e, !1), t.canvas && t.canvas.removeEventListener("MSPointerDown", e, !1)) : (window.removeEventListener("pointermove", e, !1), window.removeEventListener("pointerup", e, !1), window.removeEventListener("pointercancel", e, !1), t.canvas && t.canvas.removeEventListener("pointerdown", e, !1))
		}, t._IE_handleEvent = function(t, e) {
			if (t) {
				t.__touch.preventDefault && e.preventDefault && e.preventDefault();
				var i = e.type,
					s = e.pointerId,
					n = t.__touch.activeIDs;
				if ("MSPointerDown" == i || "pointerdown" == i) {
					if (e.srcElement != t.canvas) return;
					n[s] = !0, this._handleStart(t, s, e, e.pageX, e.pageY)
				} else n[s] && ("MSPointerMove" == i || "pointermove" == i ? this._handleMove(t, s, e, e.pageX, e.pageY) : ("MSPointerUp" == i || "MSPointerCancel" == i || "pointerup" == i || "pointercancel" == i) && (delete n[s], this._handleEnd(t, s, e)))
			}
		}, t._handleStart = function(t, e, i, s, n) {
			var o = t.__touch;
			if (o.multitouch || !o.count) {
				var a = o.pointers;
				a[e] || (a[e] = !0, o.count++, t._handlePointerDown(e, i, s, n))
			}
		}, t._handleMove = function(t, e, i, s, n) {
			t.__touch.pointers[e] && t._handlePointerMove(e, i, s, n)
		}, t._handleEnd = function(t, e, i) {
			var s = t.__touch,
				n = s.pointers;
			n[e] && (s.count--, t._handlePointerUp(e, i, !0), delete n[e])
		}, createjs.Touch = t
	}(), this.createjs = this.createjs || {},
	function() {
		"use strict";
		var t = createjs.EaselJS = createjs.EaselJS || {};
		t.version = "NEXT", t.buildDate = "Thu, 24 Jul 2014 03:11:25 GMT"
	}();
var viewporter;
! function() {
	var t;
	if (viewporter = {
			forceDetection: !1,
			disableLegacyAndroid: !0,
			ACTIVE: function() {
				return viewporter.disableLegacyAndroid && /android 2/i.test(navigator.userAgent) ? !1 : /ipad/i.test(navigator.userAgent) ? !1 : /webos/i.test(navigator.userAgent) ? !0 : "ontouchstart" in window ? !0 : !1
			},
			READY: !1,
			isLandscape: function() {
				return 90 === window.orientation || -90 === window.orientation
			},
			ready: function(t) {
				window.addEventListener("viewportready", t, !1)
			},
			change: function(t) {
				window.addEventListener("viewportchange", t, !1)
			},
			refresh: function() {
				t && t.prepareVisualViewport()
			},
			preventPageScroll: function() {
				document.body.addEventListener("touchmove", function(t) {
					t.preventDefault()
				}, !1), document.body.addEventListener("touchstart", function() {
					t.prepareVisualViewport()
				}, !1)
			}
		}, viewporter.ACTIVE = viewporter.ACTIVE(), viewporter.ACTIVE) {
		var e = function() {
			var t = this;
			this.IS_ANDROID = /Android/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent);
			var e = function() {
				t.prepareVisualViewport();
				var e = window.orientation;
				window.addEventListener("orientationchange", function() {
					window.orientation !== e && (t.prepareVisualViewport(), e = window.orientation)
				}, !1)
			};
			"loading" === document.readyState ? document.addEventListener("DOMContentLoaded", function() {
				e()
			}, !1) : e()
		};
		e.prototype = {
			getProfile: function() {
				if (viewporter.forceDetection) return null;
				for (var t in viewporter.profiles)
					if (new RegExp(t).test(navigator.userAgent)) return viewporter.profiles[t];
				return null
			},
			postProcess: function() {
				viewporter.READY = !0, this.triggerWindowEvent(this._firstUpdateExecuted ? "viewportchange" : "viewportready"), this._firstUpdateExecuted = !0
			},
			prepareVisualViewport: function() {
				var t = this;
				if (navigator.standalone) return this.postProcess();
				document.documentElement.style.minHeight = "5000px";
				var e = window.innerHeight,
					i = this.getProfile(),
					s = viewporter.isLandscape() ? "landscape" : "portrait";
				window.scrollTo(0, t.IS_ANDROID ? 1 : 0);
				var n = 40,
					o = window.setInterval(function() {
						function a() {
							return i ? window.innerHeight === i[s] : !1
						}

						function r() {
							return window.innerHeight > e
						}
						window.scrollTo(0, t.IS_ANDROID ? 1 : 0), n--, ((t.IS_ANDROID ? a() : r()) || 0 > n) && (document.documentElement.style.minHeight = window.innerHeight + "px", document.getElementById("viewporter").style.position = "relative", document.getElementById("viewporter").style.height = window.innerHeight + "px", clearInterval(o), t.postProcess())
					}, 10)
			},
			triggerWindowEvent: function(t) {
				var e = document.createEvent("Event");
				e.initEvent(t, !1, !1), window.dispatchEvent(e)
			}
		}, t = new e
	}
}(), viewporter.profiles = {
	MZ601: {
		portrait: 696,
		landscape: 1176
	},
	"GT-I9000|GT-I9100|Nexus S": {
		portrait: 508,
		landscape: 295
	},
	"GT-P1000": {
		portrait: 657,
		landscape: 400
	},
	"Desire_A8181|DesireHD_A9191": {
		portrait: 533,
		landscape: 320
	}
};
var DNStateManager = function() {
		function t(e, i, s, n) {
			var o = this;
			this.statesConstainer = new createjs.Container, this.mouseDown = !1, this.timeDevider = 1, this.liveTime = 0, this.timerId = setInterval(function() {
				GameData.getInstance().updateLivesInfo()
			}, 1e3), this.isLoading = !0, this.lastTime = 0, this.lastMouseUpHandlerTime = -1, this.lastMouseDownHandlerTime = -1, this.lastMouseMoveHandlerTime = -1, DNGameConfig.loadAPI(), t.g_instance = this, this.states = Array(), this.canvas = document.getElementById("canvas"), this.stage = new createjs.Stage(this.canvas), this.stage.autoClear = !1;
			var a = navigator.userAgent.indexOf("Android") > -1 && !(navigator.userAgent.indexOf("Chrome") > -1);
			a && createjs.Touch.isSupported() && this.stage.enableDOMEvents(!1), createjs.Touch.enable(this.stage), this.stage.enableMouseOver(5), createjs.Ticker.timingMode = createjs.Ticker.RAF, createjs.Ticker.setFPS(60), createjs.Ticker.addEventListener("tick", function(t) {
				return o.update(t)
			}), Constants.DEBUG_MODE && (document.onkeydown = function(t) {
				return o.onKeyDown(t)
			}, document.onkeyup = function(t) {
				return o.onKeyUp(t)
			}), this.pushState(new PreloaderState(e, i, s, n)), this.stage.addChild(this.statesConstainer), Constants.PIXEL_RATIO = window.devicePixelRatio ? window.devicePixelRatio : 1, Constants.g_isPC ? (window.onresize = function(t) {
				return o.onResize(t)
			}, t.g_instance.onResize(null)) : (viewporter.ACTIVE ? (window.addEventListener("viewportready", function() {
				return o.onOrientationChanged()
			}), window.addEventListener("viewportchange", function() {
				return o.onOrientationChanged()
			})) : window.addEventListener("orientationchange", function() {
				return o.onOrientationChanged()
			}), this.onOrientationChanged()), this.stage.addEventListener(Constants.MOUSE_MOVE, function(t) {
				return o.handleMouse(t)
			}), this.stage.addEventListener(Constants.MOUSE_DOWN, function(t) {
				return o.handleMouse(t)
			}), this.stage.addEventListener(Constants.MOUSE_UP, function(t) {
				return o.handleMouse(t)
			}), Visibility.isSupported() && Visibility.change(function(e, i) {
				console.log(i), "hidden" == i ? t.g_instance.onLostFocus(null) : "visible" == i && t.g_instance.onFocus(null)
			})
		}
		return t.prototype.isLandscape = function() {
			return viewporter.isLandscape()
		}, t.prototype.onOrientationChanged = function() {
			this.resizeTo(window.innerWidth, window.innerHeight), DNGameConfig.needShowRotateScreen && !this.isLoading && 0 != this.states.length && this.states[this.states.length - 1].onOrientationChanged(this.isLandscape())
		}, t.prototype.onResize = function() {
			this.resizeTo(window.innerWidth, window.innerHeight)
		}, t.prototype.resizeTo = function(t, e) {
			Constants.SCREEN_SCALE = e >= t ? Constants.g_isPC ? Math.min(t / Constants.ASSETS_WIDTH, e / Constants.ASSETS_HEIGHT) * Constants.PIXEL_RATIO : t / Constants.ASSETS_WIDTH * Constants.PIXEL_RATIO : Math.min(t / Constants.ASSETS_WIDTH, e / Constants.ASSETS_HEIGHT) * Constants.PIXEL_RATIO, Constants.SCREEN_HEIGHT = e / Constants.SCREEN_SCALE * Constants.PIXEL_RATIO, this.canvas.width = Constants.ASSETS_WIDTH * Constants.SCREEN_SCALE, this.canvas.height = e * Constants.PIXEL_RATIO, this.canvas.style.width = this.canvas.width / Constants.PIXEL_RATIO + "px", this.canvas.style.height = this.canvas.height / Constants.PIXEL_RATIO + "px", this.statesConstainer.scaleX = this.statesConstainer.scaleY = Constants.SCREEN_SCALE, this.canvas.style.marginLeft = (t - Constants.ASSETS_WIDTH * Constants.SCREEN_SCALE / Constants.PIXEL_RATIO) / 2 + "px", this.canvas.style.marginTop = "0px"
		}, t.prototype.allAssetsLoaded = function() {
			var t = this;
			this.isLoading = !1, window.onpagehide && (window.onpagehide = function(e) {
				return t.onLostFocus(e)
			}), window.onblur && (window.onblur = function(e) {
				return t.onLostFocus(e)
			}), window.onpageshow && (window.onpageshow = function(e) {
				return t.onFocus(e)
			}), window.onfocus && (window.onfocus = function(e) {
				return t.onFocus(e)
			}), GameData.getInstance().load(), this.changeState(new MainMenuState), DNGameConfig.needShowRotateScreen && this.isLandscape() && this.pushState(new PortraitLockState)
		}, t.prototype.update = function(t) {
			var e = createjs.Ticker.getTime(),
				i = e - this.lastTime;
			this.lastTime = e, i > 500 && (i = 500);
			var s = .001 * i / this.timeDevider;
			if (this.liveTime += s, DNSoundManager.g_instance.update(), 0 != this.states.length) {
				var n = this.states[this.states.length - 1];
				n.isInitiliazed() || n.init(), n.update(s)
			}
			for (var o = 0; o < this.states.length; o++) this.states[o].alignByCenter(0 == o);
			for (var o = 0; o < this.states.length; o++) this.states[o].forceUpdate(s);
			this.stage.update(t)
		}, t.prototype.changeState = function(t) {
			for (; 0 != this.states.length;) this.popState();
			this.pushState(t)
		}, t.prototype.pushState = function(t) {
			this.states.push(t), this.statesConstainer.addChild(t)
		}, t.prototype.popState = function() {
			0 != this.states.length && (this.states[this.states.length - 1].cleanup(), this.statesConstainer.removeChild(this.states[this.states.length - 1]), this.states.pop(), 0 != this.states.length && this.states[this.states.length - 1].resume())
		}, t.prototype.onLostFocus = function() {
			DNSoundManager.g_instance.onLostFocus()
		}, t.prototype.onFocus = function() {
			DNSoundManager.g_instance.onFocus()
		}, t.prototype.handleMouse = function(t) {
			if (0 != this.states.length) {
				t.preventDefault();
				var e = this.states[this.states.length - 1];
				switch (t.type) {
					case Constants.MOUSE_DOWN:
						if (DNSoundManager.g_instance.init(), DNSoundManager.g_instance.playMusic(.2), this.liveTime == this.lastMouseDownHandlerTime) return;
						this.lastMouseDownHandlerTime = this.liveTime, this.mouseDown = !0, e.onMouseDown(t.stageX / Constants.SCREEN_SCALE, t.stageY / Constants.SCREEN_SCALE);
						break;
					case Constants.MOUSE_UP:
						if (this.liveTime == this.lastMouseUpHandlerTime) return;
						this.lastMouseUpHandlerTime = this.liveTime, this.mouseDown = !1, e.onMouseUp(t.stageX / Constants.SCREEN_SCALE, t.stageY / Constants.SCREEN_SCALE);
						break;
					case Constants.MOUSE_MOVE:
						if (this.liveTime == this.lastMouseMoveHandlerTime) return;
						this.lastMouseMoveHandlerTime = this.liveTime, this.mouseDown && e.onMouseMove(t.stageX / Constants.SCREEN_SCALE, t.stageY / Constants.SCREEN_SCALE)
				}
			}
		}, t.prototype.onKeyDown = function(t) {
			switch (t.keyCode) {
				case 65:
					this.timeDevider = 5;
					break;
				case 66:
					this.timeDevider = .2;
					break;
				case 68:
					this.timeDevider = 10
			}
			this.stage.update()
		}, t.prototype.onKeyUp = function(e) {
			switch (e.keyCode) {
				case 66:
				case 65:
				case 68:
					this.timeDevider = 1;
					break;
				case 39:
					t.g_instance.changeState(new PlayState(PlayState.g_curLevel + 1, !1, []))/*, SG_Hooks.levelStarted(PlayState.g_curLevel + 1)*/;
					break;
				case 37:
					t.g_instance.changeState(new PlayState(PlayState.g_curLevel - 1, !1, []))/*, SG_Hooks.levelStarted(PlayState.g_curLevel - 1)*/
			}
		}, t.prototype.onPause = function() {
			0 != this.states.length && this.states[this.states.length - 1].onPause()
		}, t.prototype.onResume = function() {
			0 != this.states.length && this.states[this.states.length - 1].onResume()
		}, t.prototype.onRestart = function() {
			0 != this.states.length && this.states[this.states.length - 1].onRestart()
		}, t.prototype.isMouseDownNow = function() {
			return this.mouseDown
		}, t
	}(),
	__extends = this && this.__extends || function(t, e) {
		function i() {
			this.constructor = t
		}
		for (var s in e) e.hasOwnProperty(s) && (t[s] = e[s]);
		i.prototype = e.prototype, t.prototype = new i
	},
	DNGameState = function(t) {
		function e() {
			t.call(this), this.liveTime = 0, this.gameObjects = new Array, this.gui = new Array, this.newGameObjects = new Array, this.initiliazed = !1, this.consoleH = 200, this.haveFill = !1
		}
		return __extends(e, t), e.prototype.getShader = function() {
			return this.shaderShape
		}, e.prototype.addShader = function() {
			this.shaderShape = new createjs.Shape, this.shaderShape.graphics.beginFill("#000000"), this.shaderShape.graphics.drawRect(0, 0, Constants.ASSETS_WIDTH, Constants.ASSETS_HEIGHT), this.shaderShape.graphics.endFill(), this.addChild(this.shaderShape), this.shaderShape.alpha = 0, createjs.Tween.get(this.shaderShape).wait(300).to({
				alpha: .75
			}, 800, createjs.Ease.linear)
		}, e.prototype.consolePrint = function(t) {
			var e = new createjs.Text(t, "bold 35px Verdana", "#000000");
			this.addChild(e), e.x = 50, e.y = this.consoleH, this.consoleH += 40
		}, e.prototype.isInitiliazed = function() {
			return this.initiliazed
		}, e.prototype.onMouseDown = function(t, e) {
			DNGUIObject.wasHandlerThisFrame = !1;
			for (var i = 0; i < this.gui.length; i++) this.gui[i].onMouseDown(t, e)
		}, e.prototype.onMouseMove = function(t, e) {
			DNGUIObject.wasHandlerThisFrame = !1;
			for (var i = 0; i < this.gui.length; i++) this.gui[i].onMouseMove(t, e)
		}, e.prototype.onMouseUp = function(t, e) {
			DNGUIObject.wasHandlerThisFrame = !1;
			for (var i = 0; i < this.gui.length; i++) this.gui[i].onMouseUp(t, e)
		}, e.prototype.addGuiObject = function(t) {
			this.gui.push(t), this.addGameObject(t)
		}, e.prototype.update = function(t) {
			this.liveTime += t, this.newGameObjects = new Array;
			for (var e = 0; e < this.gameObjects.length; e++) {
				var i = this.gameObjects[e];
				i.update(t), i.isDead() ? i.onDead() : this.newGameObjects.push(i)
			}
			this.gameObjects = this.newGameObjects
		}, e.prototype.forceUpdate = function(t) {
			for (var e = 0; e < this.gameObjects.length; e++) this.gameObjects[e].forceUpdate(t)
		}, e.prototype.addGameObject = function(t) {
			this.gameObjects.push(t)
		}, e.prototype.addGameObjectAt = function(t, e) {
			this.gameObjects.push(t), e && e.addChild(t)
		}, e.prototype.addGameObjectAtPos = function(t, e, i, s) {
			this.gameObjects.push(t), e && (e.addChild(t), t.x = i, t.y = s)
		}, e.prototype.cleanup = function() {}, e.prototype.resume = function() {}, e.prototype.init = function() {
			this.initiliazed = !0
		}, e.prototype.onOrientationChanged = function(t) {
			DNGameConfig.needShowRotateScreen && t && DNStateManager.g_instance.pushState(new PortraitLockState)
		}, e.prototype.alignByCenter = function(t) {
			if (!Constants.g_isPC && (this.y = (Constants.SCREEN_HEIGHT - Constants.ASSETS_HEIGHT) / 2, t && Constants.ASSETS_HEIGHT < Constants.SCREEN_HEIGHT && !this.haveFill)) {
				this.haveFill = !0;
				var e = DNAssetsManager.g_instance.getImage(Images.FILL_BOTTOM);
				this.addChild(e);
				var i = DNAssetsManager.g_instance.getImage(Images.FILL_TOP);
				this.addChild(i);
				var s = 200,
					n = (Constants.SCREEN_HEIGHT - Constants.ASSETS_HEIGHT) / 2;
				null != PlayState.g_instance && (e.visible = !1), e.y = Constants.ASSETS_HEIGHT - 1, i.y = -s + 1, n > s && (e.scaleY = n / s, i.scaleY = n / s)
			}
		}, e.prototype.loadLayout = function(t, e) {
			for (var i = 0; i < t.length; i++) {
				var s = t[i],
					n = this.loadGUIObject(s, e);
				s.children && this.loadLayout(s.children, n)
			}
		}, e.prototype.loadGUIObject = function(t, e) {
			var i, s = t.x,
				n = t.y,
				o = t.rotation || 0,
				a = t.name,
				r = t.picture;
			switch (t.type) {
				case Layouts.TYPE_LOGO_PLACEHOLDER:
					i = new DNLogoPlaceholder(t.max_width || 200, t.max_height || 100);
					break;
				case Layouts.TYPE_SKEW:
					i = new Skewer(r);
					break;
				case Layouts.TYPE_BUTTON:
					i = new DNButton(r);
					break;
				case Layouts.TYPE_STATIC_PICTURE:
					i = new DNStaticPicture(r);
					break;
				case Layouts.TYPE_PLACEHOLDER:
					i = new DNPlaceholder;
					break;
				case Layouts.TYPE_JELLY_BUTTON:
					i = new DNJellyButton(r);
					break;
				case Layouts.TYPE_TEXT_FIELD:
					i = new DNTextField(t.text, t.font);
					break;
				case Layouts.TYPE_FLAT_BUTTON:
					i = new DNFlatButton(r);
					break;
				case Layouts.TYPE_PROGRESS_BAR:
					i = new DNProgressBar(null, r);
					break;
				case Layouts.TYPE_BITMAP_LABEL:
					i = new DNBitmapLabel(t.font, t.text, t.align_h, t.max_width, t.max_scale)
			}
			return i ? (i.name = a, i.x = s, i.y = n, i.rotation = o, this.addGuiObject(i), e.addChild(i), i.scaleX = i.scaleY = t.scale || 1, i.alpha = t.alpha || 1) : console.log("Parsing layout error. Cant find type: ", t.type), i
		}, e.prototype.findGUIObject = function(t) {
			for (var e = 0; e < this.gui.length; e++)
				if (this.gui[e].name == t) return this.gui[e];
			return null
		}, e.prototype.onPause = function() {}, e.prototype.onResume = function() {}, e.prototype.onRestart = function() {}, e
	}(createjs.Container),
	DNGameObject = function(t) {
		function e() {
			t.call(this), this.liveTime = 0, this.forceLiveTime = 0, this.killed = !1
		}
		return __extends(e, t), e.prototype.update = function(t) {
			this.liveTime += t
		}, e.prototype.forceUpdate = function(t) {
			this.forceLiveTime += t
		}, e.prototype.kill = function() {
			this.killed = !0
		}, e.prototype.isDead = function() {
			return this.killed
		}, e.prototype.onDead = function() {
			this.parent && this.parent.removeChild(this)
		}, e
	}(createjs.Container),
	MainMenuState = function(t) {
		function e() {
			var e = this;
			t.call(this), this.someThing = !0, this.loadLayout(CurLayouts.MAIN_MENU_LAYOUT, this), createjs.Tween.get(this.findGUIObject("play_holder"), {
				loop: !0
			}).to({
				scaleX: 1.05,
				scaleY: 1.05
			}, 150, createjs.Ease.linear).to({
				scaleX: .95,
				scaleY: .95
			}, 300, createjs.Ease.linear).to({
				scaleX: 1,
				scaleY: 1
			}, 150, createjs.Ease.linear).wait(4e3), this.findGUIObject(Layouts.NAME_BUTTON_PLAY).setHandler(function() {
				return DNStateManager.g_instance.pushState(new CoolTransitionInState(new SelectLevelState))
			}), this.findGUIObject(Layouts.NAME_BUTTON_MORE_GAMES).setHandler(function() {
				return e.onMoreGamesTouch()
			}), this.title = this.findGUIObject("title"), this.soundButtonPlace = this.findGUIObject(Layouts.NAME_SOUND_PLACE), this.setSoundButton(), this.shine = this.findGUIObject("shine"), this.shine_1 = this.findGUIObject("shine_1"), this.candy_1 = this.findGUIObject("candy_1"), this.candy_2 = this.findGUIObject("candy_2")
		}
		return __extends(e, t), e.prototype.init = function() {
			t.prototype.init.call(this), this.addGameObject(new Jellier(this.findGUIObject("title_cloud"), 8, .2, .2)), createjs.Tween.get(this.findGUIObject("title_cloud")).wait(200).to({
				y: 400
			}, 800, createjs.Ease.cubicOut), createjs.Tween.get(this.findGUIObject("title")).wait(800).to({
				scaleX: 1,
				scaleY: 1,
				alpha: 1
			}, 450, createjs.Ease.backOut), createjs.Tween.get(this.findGUIObject("three")).wait(1100).to({
				x: 250
			}, 450, createjs.Ease.backOut), createjs.Tween.get(this.findGUIObject(Layouts.NAME_BUTTON_MORE_GAMES)).wait(1300).to({
				x: 150
			}, 600, createjs.Ease.backOut), createjs.Tween.get(this.findGUIObject(Layouts.NAME_SOUND_PLACE)).wait(1300).to({
				x: 550
			}, 600, createjs.Ease.backOut), createjs.Tween.get(this.findGUIObject("play_holder")).wait(1100).to({
				y: 750
			}, 600, createjs.Ease.backOut)
		}, e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.shine.rotation += .2, this.candy_1.rotation -= .2, this.candy_2.rotation += .1
		}, e.prototype.addCandy = function() {
			this.liveTime > .9 && this.addGameObjectAtPos(new FallingCandy, this.findGUIObject("clouds_place"), Utils.RandomRange(180, 570), 360)
		}, e.prototype.onSoundTouch = function() {
			DNSoundManager.g_instance.setSoundEnabled(!DNSoundManager.g_instance.isSoundEnabled()), this.setSoundButton()
		}, e.prototype.setSoundButton = function() {
			var t = this;
			this.soundButtonPlace.removeAllChildren();
			var e = DNSoundManager.g_instance.isSoundEnabled(),
				i = new DNFlatButton(e ? Images.BUTTON_SOUND_ON : Images.BUTTON_SOUND_OFF, function() {
					return t.onSoundTouch()
				});
			this.soundButtonPlace.addChild(i), this.addGuiObject(i)
		}, e.prototype.onMoreGamesTouch = function() {
			// SG.redirectToPortal()
			hello2gameAPI('5^')
		}, e
	}(DNGameState),
	PopupState = function(t) {
		function e() {
			t.call(this), this.panel = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.MESSAGE_WINDOW), this.hiddingNow = !1, this.shader = new createjs.Shape, this.shader.graphics.beginFill("#000000"), this.shader.graphics.drawRect(0, 0, Constants.ASSETS_WIDTH, Constants.ASSETS_HEIGHT), this.shader.graphics.endFill(), this.addChild(this.shader), this.shader.alpha = 0, createjs.Tween.get(this.shader).wait(400).to({
				alpha: .4
			}, 800, createjs.Ease.linear), this.panel.alpha = 0, createjs.Tween.get(this.panel).to({
				alpha: 1
			}, 200, createjs.Ease.linear), this.addChild(this.panel), this.panel.x = .5 * Constants.ASSETS_WIDTH, this.panel.y = .5 * Constants.ASSETS_HEIGHT, this.panel.scaleX = .7, this.panel.scaleY = .7, createjs.Tween.get(this.panel).to({
				scaleX: 1,
				scaleY: 1
			}, 400, createjs.Ease.backOut)
		}
		return __extends(e, t), e.prototype.hide = function() {
			this.hiddingNow || (createjs.Tween.removeTweens(this.shader), createjs.Tween.removeTweens(this.panel), createjs.Tween.get(this.shader).to({
				alpha: 0
			}, 400, createjs.Ease.linear).call(function() {
				return DNStateManager.g_instance.popState()
			}), createjs.Tween.get(this.panel).to({
				y: -300
			}, 300, createjs.Ease.backIn), createjs.Tween.get(this.panel).to({
				alpha: 0
			}, 300, createjs.Ease.linear), this.hiddingNow = !0)
		}, e.prototype.onRestartTouch = function() {
			return 0 == GameData.getInstance().getLifeCount() && DNGameConfig.haveAd ? void DNStateManager.g_instance.pushState(new LoseLifeState) : void DNStateManager.g_instance.pushState(new SelectBoosterState(PlayState.g_curLevel))
		}, e.prototype.onExitTouch = function() {
			DNStateManager.g_instance.pushState(new CoolTransitionInState(new SelectLevelState))
		}, e
	}(DNGameState),
	DNTimer = function(t) {
		function e(e, i, s) {
			t.call(this), this.count = 1e6, this.loop = !1, this.time = e, this.count = i, this.action = s, this.count || (this.loop = !0)
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.liveTime > this.time && (this.runAction(), this.liveTime -= this.time, this.loop || (this.count--, this.count <= 0 && this.kill()))
		}, e.prototype.runAction = function() {
			this.action && this.action()
		}, e
	}(DNGameObject),
	DNGUIObject = function(t) {
		function e() {
			t.apply(this, arguments)
		}
		return __extends(e, t), e.prototype.onMouseDown = function() {}, e.prototype.onMouseUp = function() {}, e.prototype.onMouseMove = function() {}, e.prototype.setHandler = function() {}, e.wasHandlerThisFrame = !1, e
	}(DNGameObject),
	DNFlatButton = function(t) {
		function e(e, i) {
			t.call(this), this.func = null, this.enabled = !0, this.wasHandlerThisFrame = !1, this.setPicture(e), this.func = i
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.wasHandlerThisFrame = !1
		}, e.prototype.setPicture = function(t) {
			this.picture && this.picture.parent && this.picture.parent.removeChild(this.picture), this.picture = DNAssetsManager.g_instance.getCenteredImageWithProxy(t), this.addChild(this.picture)
		}, e.prototype.setHandler = function(t) {
			this.func = t
		}, e.prototype.onMouseDown = function(t, e) {
			this.hitTestSmart(t, e) && (this.liveTime = 0, DNGUIObject.wasHandlerThisFrame || (DNGUIObject.wasHandlerThisFrame = !0, this.wasHandlerThisFrame = !0, this.func(), DNSoundManager.g_instance.play(DNSoundManager.SOUND_CLICK)))
		}, e.prototype.hitTestSmart = function(t, e) {
			if (this.enabled) {
				if (!this.parent || !this.visible) return !1;
				var i = this.picture.localToGlobal(0, 0);
				i.x /= Constants.SCREEN_SCALE, i.y /= Constants.SCREEN_SCALE;
				var s = .6 * this.picture.getBounds().width * this.scaleX,
					n = .6 * this.picture.getBounds().height * this.scaleY;
				return i.x < t + s && i.x > t - s && i.y < e + n && i.y > e - n
			}
		}, e
	}(DNGUIObject),
	DNButton = function(t) {
		function e(e, i) {
			t.call(this), this.selected = !1, this.func = null, this.enabled = !0, this.picture = DNAssetsManager.g_instance.getCenteredImageWithProxy(e), this.addChild(this.picture), this.func = i, this.picWidth = 1.15 * this.picture.getBounds().width, this.picHeight = 1.15 * this.picture.getBounds().height
		}
		return __extends(e, t), e.prototype.getPicture = function() {
			return this.picture
		}, e.prototype.setHandler = function(t) {
			this.func = t
		}, e.prototype.select = function() {
			this.selected || (createjs.Tween.removeTweens(this.picture), createjs.Tween.get(this.picture).to({
				scaleX: 1.15,
				scaleY: 1.15
			}, 150, createjs.Ease.linear), this.selected = !0)
		}, e.prototype.deselect = function() {
			this.selected && (createjs.Tween.removeTweens(this.picture), createjs.Tween.get(this.picture).to({
				scaleX: 1,
				scaleY: 1
			}, 150, createjs.Ease.linear), this.selected = !1)
		}, e.prototype.onMouseDown = function(t, e) {
			this.hitTestSmart(t, e) && (this.liveTime = 0, this.select())
		}, e.prototype.onMouseUp = function(t, e) {
			this.hitTestSmart(t, e) && this.selected && (DNGUIObject.wasHandlerThisFrame || (DNGUIObject.wasHandlerThisFrame = !0, this.func(), DNSoundManager.g_instance.play(DNSoundManager.SOUND_CLICK))), this.deselect()
		}, e.prototype.onMouseMove = function(t, e) {
			this.hitTestSmart(t, e) || this.deselect()
		}, e.prototype.hitTestSmart = function(t, e) {
			if (this.enabled) {
				if (!this.parent || !this.visible) return !1;
				var i = this.picture.localToGlobal(0, 0);
				i.x /= Constants.SCREEN_SCALE, i.y /= Constants.SCREEN_SCALE;
				var s = .6 * this.picture.getBounds().width * this.scaleX,
					n = .6 * this.picture.getBounds().height * this.scaleY;
				return i.x < t + s && i.x > t - s && i.y < e + n && i.y > e - n
			}
		}, e.prototype.setEnabled = function(t) {
			this.enabled = t
		}, e
	}(DNGUIObject),
	DNJellyButton = function(t) {
		function e(e, i) {
			t.call(this), this.selected = !1, this.func = null, this.enabled = !0, this.picName = e, this.picture = DNAssetsManager.g_instance.getCenteredImageWithProxy(e), this.addChild(this.picture), this.func = i
		}
		return __extends(e, t), e.prototype.getPicture = function() {
			return this.picture
		}, e.prototype.setHandler = function(t) {
			this.func = t
		}, e.prototype.forceUpdate = function(e) {
			t.prototype.forceUpdate.call(this, e), this.jellier && (this.jellier.update(e), this.jellier.isDead() && (this.jellier = null))
		}, e.prototype.select = function() {
			this.selected || (this.picture.scaleX = this.picture.scaleY = 1, this.jellier = new Jellier(this.picture, 15, 0), this.selected = !0)
		}, e.prototype.deselect = function() {
			this.selected && (this.selected = !1)
		}, e.prototype.onMouseDown = function(t, e) {
			this.hitTestSmart(t, e) && (this.liveTime = 0, this.select())
		}, e.prototype.onMouseUp = function(t, e) {
			this.hitTestSmart(t, e) && this.selected && (DNGUIObject.wasHandlerThisFrame || (DNGUIObject.wasHandlerThisFrame = !0, this.func && this.func(), DNSoundManager.g_instance.play(DNSoundManager.SOUND_CLICK))), this.deselect()
		}, e.prototype.onMouseMove = function(t, e) {
			this.hitTestSmart(t, e) || this.deselect()
		}, e.prototype.hitTestSmart = function(t, e) {
			if (this.enabled) {
				if (!this.parent || !this.visible) return !1;
				var i = this.picture.localToGlobal(0, 0);
				i.x /= Constants.SCREEN_SCALE, i.y /= Constants.SCREEN_SCALE;
				var s = .6 * this.picture.getBounds().width * this.scaleX,
					n = .6 * this.picture.getBounds().height * this.scaleY;
				return i.x < t + s && i.x > t - s && i.y < e + n && i.y > e - n
			}
		}, e.prototype.setEnabled = function(t) {
			this.enabled = t
		}, e
	}(DNGUIObject),
	BoosterButtonBase = function(t) {
		function e(e, i, s) {
			t.call(this, e, null), this.selectedPic = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CHECK_ICON), this.plusIcon = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.PLUS_ICON), s && this.setHandler(s), this.boosterName = i, this.count = GameData.getInstance().getBoostersCount(i), this.counterCircle = new CounterCircle(this.count), this.getPicture().addChild(this.counterCircle), this.counterCircle.x = -40, this.counterCircle.y = -40, this.getPicture().addChild(this.selectedPic), this.selectedPic.x = 30, this.selectedPic.y = 30, this.selectedPic.visible = !1, this.getPicture().addChild(this.plusIcon), this.plusIcon.x = 30, this.plusIcon.y = 30, this.updateCaption()
		}
		return __extends(e, t), e.prototype.updateCaption = function() {
			this.count = GameData.getInstance().getBoostersCount(this.boosterName), this.counterCircle.setCount(this.count), this.plusIcon.visible = this.count <= 0, this.counterCircle.visible = this.count > 0
		}, e
	}(DNJellyButton),
	DNTextField = function(t) {
		function e(e, i) {
			t.call(this), this.textWidth = 0, this.fontNamePrefix = "", this.letterDistance = 0, i && (this.fontNamePrefix = i.name, this.letterDistance = i.letterDist), e && this.setText(e)
		}
		return __extends(e, t), e.prototype.setText = function(t) {
			if (this.text != t) {
				this.text = t, this.removeAllChildren();
				for (var e = 0, i = 0; i < t.length; i++) {
					var s = t.charAt(i),
						n = DNAssetsManager.g_instance.getImage(this.fontNamePrefix + s);
					n.getBounds() && (this.addChild(n), n.x = e, e += n.getBounds().width + this.letterDistance)
				}
				this.textWidth = e
			}
		}, e.prototype.getWidth = function() {
			return this.textWidth
		}, e.prototype.getText = function() {
			return this.text
		}, e
	}(DNGUIObject),
	Constants = function() {
		function t() {}
		return t.LOAD_COMPLETE = "LOAD_COMPLETE", t.MOUSE_DOWN = "stagemousedown", t.MOUSE_UP = "stagemouseup", t.MOUSE_MOVE = "stagemousemove", t.CELL_SIZE = 85, t.FIELD_OFFSET_X = -76, t.FIELD_OFFSET_Y = 155, t.EXCHANGE_TIME = .22, t.MATCH_TIME = .25, t.GRAVITY_ACC = 2500, t.ASSETS_WIDTH = 700, t.ASSETS_HEIGHT = 900, t.PIXEL_RATIO = 1, t.SCREEN_HEIGHT = 900, t.SCREEN_SCALE = 1, t.DPI = -1, t.g_isPC = !0, t.DEBUG_MODE = !1, t.COOL_TRANSITION_SPEED = 650, t.TIME_TO_RESTORE_HEART = 3e5, t.MAX_LIFES = 5, t
	}(),
	Layouts = function() {
		function t() {}
		return t.TYPE_SKEW = "skew", t.TYPE_STATIC_PICTURE = "static_picture", t.TYPE_BUTTON = "button", t.TYPE_PLACEHOLDER = "placeholder", t.TYPE_LOGO_PLACEHOLDER = "TYPE_LOGO_PLACEHOLDER", t.TYPE_FLAT_BUTTON = "flat_button", t.TYPE_JELLY_BUTTON = "jelly_button", t.TYPE_TEXT_FIELD = "textfield", t.TYPE_BITMAP_LABEL = "bitmap_label", t.TYPE_PROGRESS_BAR = "progress_bar", t.TYPE_LANGUAGE_SELECTOR = "language_selector", t.NAME_BUTTON_PLAY = "big_b_play", t.NAME_BUTTON_CREDITS = "credits", t.NAME_SOUND_PLACE = "sound", t.NAME_BUTTON_BACK = "back", t.NAME_SELECT_LEVEL_PANEL = "select_level_panel", t.NAME_BUTTON_CLOSE = "close", t.NAME_BUTTON_EXIT = "exit", t.NAME_BUTTON_RESTART = "restart", t.NAME_PANEL = "panel", t.NAME_CAPTION = "caption", t.NAME_BUTTON_MORE_GAMES = "more_games", t.NAME_PAUSE = "pause", t.NAME_SCORE = "score", t.NAME_STARS = "stars", t.NAME_HIGHSCORE = "highscore", t.NAME_MOVES = "moves", t.NAME_TITLE = "title", t.NAME_GOAL_LABEL = "goal", t.NAME_GOLD = "gold", t.NAME_LIFE = "life", t
	}(),
	Images = function() {
		function t() {}
		return t.FILL_TOP = "fill_top", t.FILL_BOTTOM = "fill_bottom", t.MAIN_MENU_BACK = "main_menu_back", t.CLOUD_LOGO = "cloud_logo", t.BUTTON_CLOSE = "button_close", t.BUTTON_SOUND_ON = "button_sound_on", t.BUTTON_SOUND_OFF = "button_sound_off", t.BUTTON_EXIT = "button_exit", t.BUTTON_PAUSE = "button_pause", t.BUTTON_RESTART = "button_restart", t.BUTTON_PLAY = "button_play", t.BUTTON_MORE_GAMES = "button_more_games", t.TITLE = "title", t.THREE = "three", t.MAIN_MENU_WHITE_FRONT = "main_menu_white_front", t.STAR_MINI = "star_mini", t.STAR_MINI_EMPTY = "star_mini_empty", t.TRANSITION_BALL = "transition_ball", t.SELECT_LEVEL_BACK = "select_level_back", t.TOP_PANEL = "top_panel", t.STRAWBERRY = "strawberry", t.BALOON = "balloon", t.DIRT_1 = "dirt_1", t.DIRT_2 = "dirt_2", t.BOMB_TIMER = "bomb_timer", t.CAGE = "cage", t.CHOCOLATE_1 = "chocolate_1", t.CHOCOLATE_2 = "chocolate_2", t.STONE_HEART = "stone_heart", t.STONE_HEART_DOUBLE = "stone_double", t.STONE_HEART_TRIPLE = "stone_triple", t.SCORE_ICON = "score_icon", t.MOVES_ICON = "moves_icon", t.TIME_ICON = "time_icon", t.LOSE_MOVES = "lose_moves", t.LOSE_BOMB = "lose_bomb", t.LOSE_TIME = "lose_time", t.BOOSTER_MOVES = "booster_moves", t.BOOSTER_BOMB = "booster_bomb", t.BOOSTER_TIME = "booster_time", t.BOOSTER_4 = "booster_4", t.BOOSTER_5 = "booster_5", t.BOOSTER_LOLIPOP = "booster_lolipop", t.AWESOME = "awesome", t.SUPERB = "superb", t.SHINING = "shining", t.DROP = "drop", t.DONUT = "donut", t.ARROW_BONUS_VERT = "arrow_bonus_vert", t.ARROW_BONUS_HOR = "arrow_bonus_hor", t.BOMB = "bomb_bonus", t.MESSAGE_WINDOW = "message_window", t.HINT_ARROW = "hint_arrow", t.GAMEOVER_CAPTION = "gameover_caption", t.SICKLE = "sickle", t.ROTATE = "rotate", t.LEVEL_BUTTON = "level_button", t.TASK_PANEL = "task_panel", t.HEART_PARTICLE = "heart_particle", t.CELL = "cell", t.BORDER_SIDE = "border_side", t.BORDER_CORNER = "border_corner", t.CHECK_ICON = "check_icon", t.GOLD_ICON = "gold_icon", t.PLUS_ICON = "plus_icon", t.BUTTON_BUY = "button_buy", t.PERFECT_STAR_ON = "perfect_star_on_1", t.PERFECT_STAR_OFF = "perfect_star_off_1", t.LEVEL_SHINING = "level_shining", t.LIGHTING = "lighting", t.ICE_0 = "ice_0", t.ICE_1 = "ice_1", t.ICE_2 = "ice_2", t.ICE_3 = "ice_3", t.ICE_4 = "ice_4", t.ICE_5 = "ice_5", t.ICE_6 = "ice_6", t.ALL_PNG = [], t.ALL_JPG = [t.MAIN_MENU_BACK, "map_1", "map_2", "map_3", "map_4"], t
	}(),
	DNCharDesc = function() {
		function t() {}
		return t
	}(),
	DNBitmapFont = function() {
		function t() {}
		return t
	}(),
	Fonts = function() {
		function t() {}
		return t.font_pink = {
			name: "font_pink_",
			height: 50,
			charSet: {
				" ": {
					offset_x: -1,
					offset_y: 24,
					width: 7
				},
				"!": {
					offset_x: 1,
					offset_y: 6,
					width: 10
				},
				'"': {
					offset_x: 2,
					offset_y: 6,
					width: 13
				},
				"#": {
					offset_x: -1,
					offset_y: 6,
					width: 15
				},
				$: {
					offset_x: -1,
					offset_y: 4,
					width: 15
				},
				"%": {
					offset_x: 0,
					offset_y: 6,
					width: 23
				},
				"&": {
					offset_x: -1,
					offset_y: 6,
					width: 21
				},
				"'": {
					offset_x: 2,
					offset_y: 6,
					width: 8
				},
				"(": {
					offset_x: 0,
					offset_y: 4,
					width: 10
				},
				")": {
					offset_x: -3,
					offset_y: 4,
					width: 10
				},
				"*": {
					offset_x: 2,
					offset_y: 4,
					width: 16
				},
				"+": {
					offset_x: 1,
					offset_y: 9,
					width: 15
				},
				",": {
					offset_x: -2,
					offset_y: 20,
					width: 8
				},
				"-": {
					offset_x: -1,
					offset_y: 15,
					width: 8
				},
				".": {
					offset_x: 0,
					offset_y: 20,
					width: 8
				},
				"/": {
					offset_x: -4,
					offset_y: 4,
					width: 7
				},
				0: {
					offset_x: -1,
					offset_y: 6,
					width: 15
				},
				1: {
					offset_x: 0,
					offset_y: 6,
					width: 15
				},
				2: {
					offset_x: -2,
					offset_y: 6,
					width: 15
				},
				3: {
					offset_x: -2,
					offset_y: 6,
					width: 15
				},
				4: {
					offset_x: -1,
					offset_y: 6,
					width: 15
				},
				5: {
					offset_x: -1,
					offset_y: 6,
					width: 15
				},
				6: {
					offset_x: 0,
					offset_y: 6,
					width: 15
				},
				7: {
					offset_x: 1,
					offset_y: 6,
					width: 15
				},
				8: {
					offset_x: -1,
					offset_y: 6,
					width: 15
				},
				9: {
					offset_x: -1,
					offset_y: 6,
					width: 15
				},
				":": {
					offset_x: 0,
					offset_y: 10,
					width: 9
				},
				";": {
					offset_x: -2,
					offset_y: 10,
					width: 9
				},
				"<": {
					offset_x: 1,
					offset_y: 8,
					width: 15
				},
				"=": {
					offset_x: 1,
					offset_y: 11,
					width: 15
				},
				">": {
					offset_x: 1,
					offset_y: 8,
					width: 15
				},
				"?": {
					offset_x: 1,
					offset_y: 6,
					width: 14
				},
				"@": {
					offset_x: 0,
					offset_y: 6,
					width: 24
				},
				A: {
					offset_x: -3,
					offset_y: 6,
					width: 20
				},
				B: {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				C: {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				D: {
					offset_x: -2,
					offset_y: 6,
					width: 20
				},
				E: {
					offset_x: -2,
					offset_y: 6,
					width: 16
				},
				F: {
					offset_x: -2,
					offset_y: 6,
					width: 16
				},
				G: {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				H: {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				I: {
					offset_x: -2,
					offset_y: 6,
					width: 10
				},
				J: {
					offset_x: -6,
					offset_y: 6,
					width: 10
				},
				K: {
					offset_x: -2,
					offset_y: 6,
					width: 19
				},
				L: {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				M: {
					offset_x: -2,
					offset_y: 6,
					width: 25
				},
				N: {
					offset_x: -2,
					offset_y: 6,
					width: 20
				},
				O: {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				P: {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				Q: {
					offset_x: 0,
					offset_y: 6,
					width: 20
				},
				R: {
					offset_x: -2,
					offset_y: 6,
					width: 18
				},
				S: {
					offset_x: -1,
					offset_y: 6,
					width: 15
				},
				T: {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				U: {
					offset_x: 1,
					offset_y: 6,
					width: 19
				},
				V: {
					offset_x: 1,
					offset_y: 6,
					width: 18
				},
				W: {
					offset_x: 1,
					offset_y: 6,
					width: 28
				},
				X: {
					offset_x: -3,
					offset_y: 6,
					width: 19
				},
				Y: {
					offset_x: 1,
					offset_y: 6,
					width: 18
				},
				Z: {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"[": {
					offset_x: -1,
					offset_y: 4,
					width: 11
				},
				"\\": {
					offset_x: 1,
					offset_y: 4,
					width: 7
				},
				"]": {
					offset_x: -3,
					offset_y: 4,
					width: 11
				},
				"^": {
					offset_x: 0,
					offset_y: 6,
					width: 15
				},
				_: {
					offset_x: -4,
					offset_y: 26,
					width: 12
				},
				"`": {
					offset_x: 5,
					offset_y: 4,
					width: 15
				},
				a: {
					offset_x: 0,
					offset_y: 10,
					width: 17
				},
				b: {
					offset_x: -1,
					offset_y: 4,
					width: 16
				},
				c: {
					offset_x: 0,
					offset_y: 10,
					width: 14
				},
				d: {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				e: {
					offset_x: 0,
					offset_y: 10,
					width: 14
				},
				f: {
					offset_x: -5,
					offset_y: 4,
					width: 11
				},
				g: {
					offset_x: -3,
					offset_y: 9,
					width: 15
				},
				h: {
					offset_x: -1,
					offset_y: 4,
					width: 17
				},
				i: {
					offset_x: 0,
					offset_y: 4,
					width: 9
				},
				j: {
					offset_x: -5,
					offset_y: 4,
					width: 9
				},
				k: {
					offset_x: -1,
					offset_y: 4,
					width: 16
				},
				l: {
					offset_x: 0,
					offset_y: 4,
					width: 9
				},
				m: {
					offset_x: -1,
					offset_y: 10,
					width: 25
				},
				n: {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				o: {
					offset_x: 0,
					offset_y: 10,
					width: 16
				},
				p: {
					offset_x: -2,
					offset_y: 10,
					width: 16
				},
				q: {
					offset_x: 0,
					offset_y: 10,
					width: 16
				},
				r: {
					offset_x: -1,
					offset_y: 10,
					width: 14
				},
				s: {
					offset_x: -1,
					offset_y: 10,
					width: 13
				},
				t: {
					offset_x: 0,
					offset_y: 7,
					width: 11
				},
				u: {
					offset_x: 0,
					offset_y: 10,
					width: 18
				},
				v: {
					offset_x: -1,
					offset_y: 10,
					width: 15
				},
				w: {
					offset_x: -1,
					offset_y: 10,
					width: 23
				},
				x: {
					offset_x: -2,
					offset_y: 10,
					width: 16
				},
				y: {
					offset_x: -6,
					offset_y: 10,
					width: 15
				},
				z: {
					offset_x: -1,
					offset_y: 10,
					width: 15
				},
				"{": {
					offset_x: 0,
					offset_y: 4,
					width: 11
				},
				"|": {
					offset_x: 5,
					offset_y: 4,
					width: 15
				},
				"}": {
					offset_x: -3,
					offset_y: 4,
					width: 11
				},
				"~": {
					offset_x: 0,
					offset_y: 12,
					width: 15
				},
				"¡": {
					offset_x: -1,
					offset_y: 10,
					width: 10
				},
				"¢": {
					offset_x: 0,
					offset_y: 6,
					width: 15
				},
				"£": {
					offset_x: -2,
					offset_y: 6,
					width: 15
				},
				"¤": {
					offset_x: 1,
					offset_y: 9,
					width: 15
				},
				"¥": {
					offset_x: -1,
					offset_y: 6,
					width: 14
				},
				"¦": {
					offset_x: 5,
					offset_y: 4,
					width: 15
				},
				"§": {
					offset_x: -1,
					offset_y: 4,
					width: 14
				},
				"¨": {
					offset_x: 3,
					offset_y: 4,
					width: 15
				},
				"©": {
					offset_x: 0,
					offset_y: 6,
					width: 22
				},
				"ª": {
					offset_x: 0,
					offset_y: 6,
					width: 11
				},
				"«": {
					offset_x: 0,
					offset_y: 11,
					width: 14
				},
				"¬": {
					offset_x: 1,
					offset_y: 14,
					width: 15
				},
				"­": {
					offset_x: -1,
					offset_y: 15,
					width: 8
				},
				"®": {
					offset_x: 0,
					offset_y: 6,
					width: 22
				},
				"¯": {
					offset_x: -2,
					offset_y: 2,
					width: 12
				},
				"°": {
					offset_x: 1,
					offset_y: 6,
					width: 10
				},
				"±": {
					offset_x: 1,
					offset_y: 9,
					width: 15
				},
				"²": {
					offset_x: -1,
					offset_y: 6,
					width: 10
				},
				"³": {
					offset_x: -1,
					offset_y: 6,
					width: 10
				},
				"´": {
					offset_x: 5,
					offset_y: 4,
					width: 15
				},
				"µ": {
					offset_x: -2,
					offset_y: 10,
					width: 18
				},
				"¶": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"·": {
					offset_x: 1,
					offset_y: 13,
					width: 8
				},
				"¸": {
					offset_x: -1,
					offset_y: 23,
					width: 9
				},
				"¹": {
					offset_x: 0,
					offset_y: 6,
					width: 10
				},
				"º": {
					offset_x: 0,
					offset_y: 6,
					width: 11
				},
				"»": {
					offset_x: -1,
					offset_y: 11,
					width: 14
				},
				"¼": {
					offset_x: -1,
					offset_y: 6,
					width: 22
				},
				"½": {
					offset_x: -1,
					offset_y: 6,
					width: 22
				},
				"¾": {
					offset_x: -1,
					offset_y: 6,
					width: 22
				},
				"¿": {
					offset_x: -1,
					offset_y: 10,
					width: 14
				},
				"À": {
					offset_x: -3,
					offset_y: 0,
					width: 20
				},
				"Á": {
					offset_x: -3,
					offset_y: 0,
					width: 20
				},
				"Â": {
					offset_x: -3,
					offset_y: 0,
					width: 20
				},
				"Ã": {
					offset_x: -3,
					offset_y: 0,
					width: 20
				},
				"Ä": {
					offset_x: -3,
					offset_y: 1,
					width: 20
				},
				"Å": {
					offset_x: -3,
					offset_y: 1,
					width: 20
				},
				"Æ": {
					offset_x: -3,
					offset_y: 6,
					width: 26
				},
				"Ç": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"È": {
					offset_x: -2,
					offset_y: 0,
					width: 16
				},
				"É": {
					offset_x: -2,
					offset_y: 0,
					width: 16
				},
				"Ê": {
					offset_x: -2,
					offset_y: 0,
					width: 16
				},
				"Ë": {
					offset_x: -2,
					offset_y: 1,
					width: 16
				},
				"Ì": {
					offset_x: -2,
					offset_y: 0,
					width: 10
				},
				"Í": {
					offset_x: -2,
					offset_y: 0,
					width: 10
				},
				"Î": {
					offset_x: -2,
					offset_y: 0,
					width: 10
				},
				"Ï": {
					offset_x: -2,
					offset_y: 1,
					width: 10
				},
				"Ð": {
					offset_x: -2,
					offset_y: 6,
					width: 20
				},
				"Ñ": {
					offset_x: -2,
					offset_y: 0,
					width: 20
				},
				"Ò": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"Ó": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"Ô": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"Õ": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"Ö": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"×": {
					offset_x: 1,
					offset_y: 9,
					width: 15
				},
				"Ø": {
					offset_x: 0,
					offset_y: 4,
					width: 21
				},
				"Ù": {
					offset_x: 1,
					offset_y: 0,
					width: 19
				},
				"Ú": {
					offset_x: 1,
					offset_y: 0,
					width: 19
				},
				"Û": {
					offset_x: 1,
					offset_y: 0,
					width: 19
				},
				"Ü": {
					offset_x: 1,
					offset_y: 0,
					width: 19
				},
				"Ý": {
					offset_x: 1,
					offset_y: 0,
					width: 18
				},
				"Þ": {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"ß": {
					offset_x: -5,
					offset_y: 4,
					width: 18
				},
				"à": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"á": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"â": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"ã": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"ä": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"å": {
					offset_x: 0,
					offset_y: 3,
					width: 17
				},
				"æ": {
					offset_x: 0,
					offset_y: 10,
					width: 23
				},
				"ç": {
					offset_x: 0,
					offset_y: 10,
					width: 14
				},
				"è": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"é": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"ê": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"ë": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"ì": {
					offset_x: 0,
					offset_y: 4,
					width: 9
				},
				"í": {
					offset_x: 0,
					offset_y: 4,
					width: 9
				},
				"î": {
					offset_x: -1,
					offset_y: 4,
					width: 9
				},
				"ï": {
					offset_x: 0,
					offset_y: 4,
					width: 9
				},
				"ð": {
					offset_x: 0,
					offset_y: 3,
					width: 16
				},
				"ñ": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"ò": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"ó": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"ô": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"õ": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"ö": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"÷": {
					offset_x: 1,
					offset_y: 8,
					width: 15
				},
				"ø": {
					offset_x: -1,
					offset_y: 9,
					width: 16
				},
				"ù": {
					offset_x: 0,
					offset_y: 4,
					width: 18
				},
				"ú": {
					offset_x: 0,
					offset_y: 4,
					width: 18
				},
				"û": {
					offset_x: 0,
					offset_y: 4,
					width: 18
				},
				"ü": {
					offset_x: 0,
					offset_y: 4,
					width: 18
				},
				"ý": {
					offset_x: -6,
					offset_y: 4,
					width: 15
				},
				"þ": {
					offset_x: -2,
					offset_y: 4,
					width: 16
				},
				"ÿ": {
					offset_x: -6,
					offset_y: 4,
					width: 15
				},
				"Ā": {
					offset_x: -3,
					offset_y: 2,
					width: 20
				},
				"ā": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"Ă": {
					offset_x: -3,
					offset_y: 0,
					width: 20
				},
				"ă": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"Ą": {
					offset_x: -3,
					offset_y: 6,
					width: 20
				},
				"ą": {
					offset_x: 0,
					offset_y: 10,
					width: 17
				},
				"Ć": {
					offset_x: 0,
					offset_y: 0,
					width: 17
				},
				"ć": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"Ĉ": {
					offset_x: 0,
					offset_y: 0,
					width: 17
				},
				"ĉ": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"Ċ": {
					offset_x: 0,
					offset_y: 0,
					width: 17
				},
				"ċ": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"Č": {
					offset_x: 0,
					offset_y: 0,
					width: 17
				},
				"č": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"Ď": {
					offset_x: -2,
					offset_y: 0,
					width: 20
				},
				"ď": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"Đ": {
					offset_x: -2,
					offset_y: 6,
					width: 20
				},
				"đ": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"Ē": {
					offset_x: -2,
					offset_y: 2,
					width: 16
				},
				"ē": {
					offset_x: 0,
					offset_y: 6,
					width: 14
				},
				"Ĕ": {
					offset_x: -2,
					offset_y: 0,
					width: 16
				},
				"ĕ": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"Ė": {
					offset_x: -2,
					offset_y: 0,
					width: 16
				},
				"ė": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"Ę": {
					offset_x: -2,
					offset_y: 6,
					width: 16
				},
				"ę": {
					offset_x: 0,
					offset_y: 10,
					width: 14
				},
				"Ě": {
					offset_x: -2,
					offset_y: 0,
					width: 16
				},
				"ě": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"Ĝ": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"ĝ": {
					offset_x: -3,
					offset_y: 4,
					width: 15
				},
				"Ğ": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"ğ": {
					offset_x: -3,
					offset_y: 4,
					width: 15
				},
				"Ġ": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"ġ": {
					offset_x: -3,
					offset_y: 4,
					width: 15
				},
				"Ģ": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"ģ": {
					offset_x: -3,
					offset_y: 4,
					width: 15
				},
				"Ĥ": {
					offset_x: -2,
					offset_y: 0,
					width: 21
				},
				"ĥ": {
					offset_x: -1,
					offset_y: -1,
					width: 17
				},
				"Ħ": {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				"ħ": {
					offset_x: -1,
					offset_y: 4,
					width: 17
				},
				"Ĩ": {
					offset_x: -2,
					offset_y: 0,
					width: 10
				},
				"ĩ": {
					offset_x: -1,
					offset_y: 4,
					width: 9
				},
				"Ī": {
					offset_x: -2,
					offset_y: 2,
					width: 10
				},
				"ī": {
					offset_x: 0,
					offset_y: 6,
					width: 9
				},
				"Ĭ": {
					offset_x: -2,
					offset_y: 0,
					width: 10
				},
				"ĭ": {
					offset_x: 0,
					offset_y: 4,
					width: 9
				},
				"Į": {
					offset_x: -2,
					offset_y: 6,
					width: 10
				},
				"į": {
					offset_x: -1,
					offset_y: 4,
					width: 9
				},
				"İ": {
					offset_x: -2,
					offset_y: 0,
					width: 10
				},
				"ı": {
					offset_x: 0,
					offset_y: 10,
					width: 9
				},
				"Ĳ": {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				"ĳ": {
					offset_x: 0,
					offset_y: 4,
					width: 18
				},
				"Ĵ": {
					offset_x: -6,
					offset_y: 0,
					width: 10
				},
				"ĵ": {
					offset_x: -5,
					offset_y: 4,
					width: 9
				},
				"Ķ": {
					offset_x: -2,
					offset_y: 6,
					width: 19
				},
				"ķ": {
					offset_x: -1,
					offset_y: 4,
					width: 16
				},
				"ĸ": {
					offset_x: -1,
					offset_y: 10,
					width: 16
				},
				"Ĺ": {
					offset_x: -2,
					offset_y: 0,
					width: 17
				},
				"ĺ": {
					offset_x: 0,
					offset_y: -1,
					width: 9
				},
				"Ļ": {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"ļ": {
					offset_x: -1,
					offset_y: 4,
					width: 9
				},
				"Ľ": {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"ľ": {
					offset_x: 0,
					offset_y: 4,
					width: 9
				},
				"Ŀ": {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"ŀ": {
					offset_x: 0,
					offset_y: 4,
					width: 12
				},
				"Ł": {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"ł": {
					offset_x: -2,
					offset_y: 4,
					width: 9
				},
				"Ń": {
					offset_x: -2,
					offset_y: 0,
					width: 20
				},
				"ń": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"Ņ": {
					offset_x: -2,
					offset_y: 6,
					width: 20
				},
				"ņ": {
					offset_x: 0,
					offset_y: 10,
					width: 17
				},
				"Ň": {
					offset_x: -2,
					offset_y: 0,
					width: 20
				},
				"ň": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"ŉ": {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				"Ŋ": {
					offset_x: -2,
					offset_y: 6,
					width: 20
				},
				"ŋ": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"Ō": {
					offset_x: 0,
					offset_y: 2,
					width: 21
				},
				"ō": {
					offset_x: 0,
					offset_y: 6,
					width: 16
				},
				"Ŏ": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"ŏ": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"Ő": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"ő": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"Œ": {
					offset_x: 0,
					offset_y: 6,
					width: 26
				},
				"œ": {
					offset_x: 0,
					offset_y: 10,
					width: 23
				},
				"Ŕ": {
					offset_x: -2,
					offset_y: 0,
					width: 18
				},
				"ŕ": {
					offset_x: -1,
					offset_y: 4,
					width: 14
				},
				"Ŗ": {
					offset_x: -2,
					offset_y: 6,
					width: 18
				},
				"ŗ": {
					offset_x: -2,
					offset_y: 10,
					width: 14
				},
				"Ř": {
					offset_x: -2,
					offset_y: 0,
					width: 18
				},
				"ř": {
					offset_x: -1,
					offset_y: 4,
					width: 14
				},
				"Ś": {
					offset_x: -1,
					offset_y: 0,
					width: 15
				},
				"ś": {
					offset_x: -1,
					offset_y: 4,
					width: 13
				},
				"Ŝ": {
					offset_x: -1,
					offset_y: 0,
					width: 15
				},
				"ŝ": {
					offset_x: -1,
					offset_y: 4,
					width: 13
				},
				"Ş": {
					offset_x: -1,
					offset_y: 6,
					width: 15
				},
				"ş": {
					offset_x: -1,
					offset_y: 10,
					width: 13
				},
				"Š": {
					offset_x: -1,
					offset_y: 0,
					width: 15
				},
				"š": {
					offset_x: -1,
					offset_y: 4,
					width: 13
				},
				"Ţ": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"ţ": {
					offset_x: -1,
					offset_y: 7,
					width: 11
				},
				"Ť": {
					offset_x: 0,
					offset_y: 0,
					width: 17
				},
				"ť": {
					offset_x: 0,
					offset_y: 4,
					width: 11
				},
				"Ŧ": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"ŧ": {
					offset_x: -1,
					offset_y: 7,
					width: 11
				},
				"Ũ": {
					offset_x: 1,
					offset_y: 0,
					width: 19
				},
				"ũ": {
					offset_x: 0,
					offset_y: 4,
					width: 18
				},
				"Ū": {
					offset_x: 1,
					offset_y: 2,
					width: 19
				},
				"ū": {
					offset_x: 0,
					offset_y: 6,
					width: 18
				},
				"Ŭ": {
					offset_x: 1,
					offset_y: 0,
					width: 19
				},
				"ŭ": {
					offset_x: 0,
					offset_y: 4,
					width: 18
				},
				"Ů": {
					offset_x: 1,
					offset_y: -1,
					width: 19
				},
				"ů": {
					offset_x: 0,
					offset_y: 3,
					width: 18
				},
				"Ű": {
					offset_x: 1,
					offset_y: 0,
					width: 19
				},
				"ű": {
					offset_x: 0,
					offset_y: 4,
					width: 18
				},
				"Ų": {
					offset_x: 1,
					offset_y: 6,
					width: 19
				},
				"ų": {
					offset_x: 0,
					offset_y: 10,
					width: 18
				},
				"Ŵ": {
					offset_x: 1,
					offset_y: 0,
					width: 28
				},
				"ŵ": {
					offset_x: -1,
					offset_y: 4,
					width: 23
				},
				"Ŷ": {
					offset_x: 1,
					offset_y: 0,
					width: 18
				},
				"ŷ": {
					offset_x: -6,
					offset_y: 4,
					width: 15
				},
				"Ÿ": {
					offset_x: 1,
					offset_y: 1,
					width: 18
				},
				"Ź": {
					offset_x: -2,
					offset_y: 0,
					width: 17
				},
				"ź": {
					offset_x: -1,
					offset_y: 4,
					width: 15
				},
				"Ż": {
					offset_x: -2,
					offset_y: 0,
					width: 17
				},
				"ż": {
					offset_x: -1,
					offset_y: 4,
					width: 15
				},
				"Ž": {
					offset_x: -2,
					offset_y: 0,
					width: 17
				},
				"ž": {
					offset_x: -1,
					offset_y: 4,
					width: 15
				},
				"ſ": {
					offset_x: -5,
					offset_y: 4,
					width: 11
				},
				"ƒ": {
					offset_x: -3,
					offset_y: 6,
					width: 15
				},
				"Ơ": {
					offset_x: 0,
					offset_y: 4,
					width: 22
				},
				"ơ": {
					offset_x: 0,
					offset_y: 7,
					width: 17
				},
				"Ư": {
					offset_x: 1,
					offset_y: 4,
					width: 22
				},
				"ư": {
					offset_x: 0,
					offset_y: 7,
					width: 20
				},
				"ǰ": {
					offset_x: -5,
					offset_y: 4,
					width: 9
				},
				"Ǻ": {
					offset_x: -3,
					offset_y: -2,
					width: 20
				},
				"ǻ": {
					offset_x: 0,
					offset_y: -2,
					width: 17
				},
				"Ǽ": {
					offset_x: -3,
					offset_y: 0,
					width: 26
				},
				"ǽ": {
					offset_x: 0,
					offset_y: 4,
					width: 23
				},
				"Ǿ": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"ǿ": {
					offset_x: -1,
					offset_y: 4,
					width: 16
				},
				"Ș": {
					offset_x: -1,
					offset_y: 6,
					width: 15
				},
				"ș": {
					offset_x: -1,
					offset_y: 10,
					width: 13
				},
				"Ț": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"ț": {
					offset_x: 0,
					offset_y: 7,
					width: 11
				},
				"Ѐ": {
					offset_x: -2,
					offset_y: 0,
					width: 16
				},
				"Ё": {
					offset_x: -2,
					offset_y: 1,
					width: 16
				},
				"Ђ": {
					offset_x: 0,
					offset_y: 6,
					width: 23
				},
				"Ѓ": {
					offset_x: -2,
					offset_y: 0,
					width: 15
				},
				"Є": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"Ѕ": {
					offset_x: -1,
					offset_y: 6,
					width: 15
				},
				"І": {
					offset_x: -2,
					offset_y: 6,
					width: 10
				},
				"Ї": {
					offset_x: -2,
					offset_y: 1,
					width: 10
				},
				"Ј": {
					offset_x: -6,
					offset_y: 6,
					width: 10
				},
				"Љ": {
					offset_x: -3,
					offset_y: 6,
					width: 25
				},
				"Њ": {
					offset_x: -2,
					offset_y: 6,
					width: 27
				},
				"Ћ": {
					offset_x: 0,
					offset_y: 6,
					width: 23
				},
				"Ќ": {
					offset_x: -2,
					offset_y: 0,
					width: 19
				},
				"Ѝ": {
					offset_x: -2,
					offset_y: 0,
					width: 21
				},
				"Ў": {
					offset_x: 0,
					offset_y: -1,
					width: 18
				},
				"Џ": {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				"А": {
					offset_x: -3,
					offset_y: 6,
					width: 20
				},
				"Б": {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"В": {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"Г": {
					offset_x: -2,
					offset_y: 6,
					width: 15
				},
				"Д": {
					offset_x: -4,
					offset_y: 6,
					width: 18
				},
				"Е": {
					offset_x: -2,
					offset_y: 6,
					width: 16
				},
				"Ж": {
					offset_x: -3,
					offset_y: 6,
					width: 27
				},
				"З": {
					offset_x: -1,
					offset_y: 6,
					width: 16
				},
				"И": {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				"Й": {
					offset_x: -2,
					offset_y: -1,
					width: 21
				},
				"К": {
					offset_x: -2,
					offset_y: 6,
					width: 19
				},
				"Л": {
					offset_x: -3,
					offset_y: 6,
					width: 19
				},
				"М": {
					offset_x: -2,
					offset_y: 6,
					width: 25
				},
				"Н": {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				"О": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"П": {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				"Р": {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"С": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"Т": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"У": {
					offset_x: 0,
					offset_y: 6,
					width: 18
				},
				"Ф": {
					offset_x: 0,
					offset_y: 6,
					width: 22
				},
				"Х": {
					offset_x: -3,
					offset_y: 6,
					width: 19
				},
				"Ц": {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				"Ч": {
					offset_x: 1,
					offset_y: 6,
					width: 20
				},
				"Ш": {
					offset_x: -2,
					offset_y: 6,
					width: 29
				},
				"Щ": {
					offset_x: -2,
					offset_y: 6,
					width: 29
				},
				"Ъ": {
					offset_x: 0,
					offset_y: 6,
					width: 20
				},
				"Ы": {
					offset_x: -2,
					offset_y: 6,
					width: 26
				},
				"Ь": {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"Э": {
					offset_x: -1,
					offset_y: 6,
					width: 18
				},
				"Ю": {
					offset_x: -2,
					offset_y: 6,
					width: 29
				},
				"Я": {
					offset_x: -3,
					offset_y: 6,
					width: 18
				},
				"а": {
					offset_x: 0,
					offset_y: 10,
					width: 17
				},
				"б": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"в": {
					offset_x: 0,
					offset_y: 10,
					width: 15
				},
				"г": {
					offset_x: -1,
					offset_y: 10,
					width: 13
				},
				"д": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"е": {
					offset_x: 0,
					offset_y: 10,
					width: 14
				},
				"ж": {
					offset_x: -1,
					offset_y: 10,
					width: 31
				},
				"з": {
					offset_x: -1,
					offset_y: 10,
					width: 14
				},
				"и": {
					offset_x: 0,
					offset_y: 10,
					width: 18
				},
				"й": {
					offset_x: 0,
					offset_y: 3,
					width: 18
				},
				"к": {
					offset_x: -1,
					offset_y: 10,
					width: 16
				},
				"л": {
					offset_x: -1,
					offset_y: 10,
					width: 18
				},
				"м": {
					offset_x: -1,
					offset_y: 10,
					width: 25
				},
				"н": {
					offset_x: -1,
					offset_y: 10,
					width: 18
				},
				"о": {
					offset_x: 0,
					offset_y: 10,
					width: 16
				},
				"п": {
					offset_x: 0,
					offset_y: 10,
					width: 17
				},
				"р": {
					offset_x: -2,
					offset_y: 10,
					width: 16
				},
				"с": {
					offset_x: 0,
					offset_y: 10,
					width: 14
				},
				"т": {
					offset_x: -1,
					offset_y: 10,
					width: 25
				},
				"у": {
					offset_x: -6,
					offset_y: 10,
					width: 15
				},
				"ф": {
					offset_x: 0,
					offset_y: 4,
					width: 22
				},
				"х": {
					offset_x: -2,
					offset_y: 10,
					width: 16
				},
				"ц": {
					offset_x: 0,
					offset_y: 10,
					width: 18
				},
				"ч": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"ш": {
					offset_x: 0,
					offset_y: 10,
					width: 25
				},
				"щ": {
					offset_x: 0,
					offset_y: 10,
					width: 26
				},
				"ъ": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"ы": {
					offset_x: 0,
					offset_y: 10,
					width: 23
				},
				"ь": {
					offset_x: 0,
					offset_y: 10,
					width: 15
				},
				"э": {
					offset_x: -1,
					offset_y: 10,
					width: 14
				},
				"ю": {
					offset_x: -1,
					offset_y: 10,
					width: 24
				},
				"я": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"ѐ": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"ё": {
					offset_x: 0,
					offset_y: 4,
					width: 14
				},
				"ђ": {
					offset_x: -1,
					offset_y: 4,
					width: 16
				},
				"ѓ": {
					offset_x: -1,
					offset_y: 4,
					width: 13
				},
				"є": {
					offset_x: 0,
					offset_y: 10,
					width: 14
				},
				"ѕ": {
					offset_x: -1,
					offset_y: 10,
					width: 13
				},
				"і": {
					offset_x: 0,
					offset_y: 4,
					width: 9
				},
				"ї": {
					offset_x: 0,
					offset_y: 4,
					width: 9
				},
				"ј": {
					offset_x: -5,
					offset_y: 4,
					width: 9
				},
				"љ": {
					offset_x: -1,
					offset_y: 10,
					width: 24
				},
				"њ": {
					offset_x: -1,
					offset_y: 10,
					width: 23
				},
				"ћ": {
					offset_x: -1,
					offset_y: 4,
					width: 17
				},
				"ќ": {
					offset_x: -1,
					offset_y: 4,
					width: 16
				},
				"ѝ": {
					offset_x: 0,
					offset_y: 4,
					width: 18
				},
				"ў": {
					offset_x: -6,
					offset_y: 3,
					width: 15
				},
				"џ": {
					offset_x: 0,
					offset_y: 10,
					width: 18
				},
				"Ѡ": {
					offset_x: 0,
					offset_y: 6,
					width: 30
				},
				"ѡ": {
					offset_x: -1,
					offset_y: 10,
					width: 21
				},
				"Ѣ": {
					offset_x: -1,
					offset_y: 6,
					width: 19
				},
				"ѣ": {
					offset_x: 0,
					offset_y: 4,
					width: 15
				},
				"Ѥ": {
					offset_x: -2,
					offset_y: 6,
					width: 27
				},
				"ѥ": {
					offset_x: -1,
					offset_y: 10,
					width: 22
				},
				"Ѧ": {
					offset_x: -3,
					offset_y: 6,
					width: 21
				},
				"ѧ": {
					offset_x: -3,
					offset_y: 10,
					width: 17
				},
				"Ѩ": {
					offset_x: -2,
					offset_y: 6,
					width: 30
				},
				"ѩ": {
					offset_x: -1,
					offset_y: 10,
					width: 25
				},
				"Ѫ": {
					offset_x: -3,
					offset_y: 6,
					width: 23
				},
				"ѫ": {
					offset_x: -3,
					offset_y: 10,
					width: 20
				},
				"Ѭ": {
					offset_x: -2,
					offset_y: 6,
					width: 33
				},
				"ѭ": {
					offset_x: -1,
					offset_y: 10,
					width: 28
				},
				"Ѯ": {
					offset_x: -2,
					offset_y: 2,
					width: 16
				},
				"ѯ": {
					offset_x: -3,
					offset_y: 7,
					width: 13
				},
				"Ѱ": {
					offset_x: 1,
					offset_y: 6,
					width: 25
				},
				"ѱ": {
					offset_x: 0,
					offset_y: 4,
					width: 19
				},
				"Ѳ": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"ѳ": {
					offset_x: 0,
					offset_y: 10,
					width: 16
				},
				"Ѵ": {
					offset_x: 1,
					offset_y: 6,
					width: 19
				},
				"ѵ": {
					offset_x: -1,
					offset_y: 10,
					width: 16
				},
				"Ѷ": {
					offset_x: 1,
					offset_y: 0,
					width: 19
				},
				"ѷ": {
					offset_x: -1,
					offset_y: 4,
					width: 16
				},
				"Ѹ": {
					offset_x: 0,
					offset_y: 6,
					width: 34
				},
				"ѹ": {
					offset_x: 0,
					offset_y: 10,
					width: 29
				},
				"Ѻ": {
					offset_x: 0,
					offset_y: 4,
					width: 22
				},
				"ѻ": {
					offset_x: 0,
					offset_y: 8,
					width: 17
				},
				"Ѽ": {
					offset_x: 0,
					offset_y: -4,
					width: 30
				},
				"ѽ": {
					offset_x: 0,
					offset_y: 0,
					width: 25
				},
				"Ѿ": {
					offset_x: 0,
					offset_y: 1,
					width: 30
				},
				"ѿ": {
					offset_x: -1,
					offset_y: 6,
					width: 21
				},
				"Ҁ": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"ҁ": {
					offset_x: 0,
					offset_y: 10,
					width: 14
				},
				"҂": {
					offset_x: 0,
					offset_y: 7,
					width: 16
				},
				"҃": {
					offset_x: 2,
					offset_y: 6,
					width: 14
				},
				"҄": {
					offset_x: 1,
					offset_y: 4,
					width: 15
				},
				"҅": {
					offset_x: 5,
					offset_y: 4,
					width: 15
				},
				"҆": {
					offset_x: 4,
					offset_y: 4,
					width: 15
				},
				"҈": {
					offset_x: -1,
					offset_y: 6,
					width: 26
				},
				"҉": {
					offset_x: -1,
					offset_y: 6,
					width: 25
				},
				"Ҋ": {
					offset_x: -2,
					offset_y: -1,
					width: 22
				},
				"ҋ": {
					offset_x: 0,
					offset_y: 3,
					width: 18
				},
				"Ҍ": {
					offset_x: -2,
					offset_y: 4,
					width: 17
				},
				"ҍ": {
					offset_x: -1,
					offset_y: 7,
					width: 15
				},
				"Ҏ": {
					offset_x: -2,
					offset_y: 6,
					width: 17
				},
				"ҏ": {
					offset_x: -2,
					offset_y: 10,
					width: 16
				},
				"Ґ": {
					offset_x: -2,
					offset_y: 2,
					width: 14
				},
				"ґ": {
					offset_x: -1,
					offset_y: 7,
					width: 13
				},
				"Ғ": {
					offset_x: -2,
					offset_y: 6,
					width: 15
				},
				"ғ": {
					offset_x: -1,
					offset_y: 10,
					width: 13
				},
				"Ҕ": {
					offset_x: -2,
					offset_y: 6,
					width: 19
				},
				"ҕ": {
					offset_x: -1,
					offset_y: 10,
					width: 16
				},
				"Җ": {
					offset_x: -3,
					offset_y: 6,
					width: 28
				},
				"җ": {
					offset_x: -1,
					offset_y: 10,
					width: 31
				},
				"Ҙ": {
					offset_x: -1,
					offset_y: 6,
					width: 16
				},
				"ҙ": {
					offset_x: -1,
					offset_y: 10,
					width: 14
				},
				"Қ": {
					offset_x: -2,
					offset_y: 6,
					width: 20
				},
				"қ": {
					offset_x: -1,
					offset_y: 10,
					width: 16
				},
				"Ҝ": {
					offset_x: -2,
					offset_y: 6,
					width: 20
				},
				"ҝ": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"Ҟ": {
					offset_x: -2,
					offset_y: 6,
					width: 19
				},
				"ҟ": {
					offset_x: -1,
					offset_y: 4,
					width: 16
				},
				"Ҡ": {
					offset_x: 0,
					offset_y: 6,
					width: 22
				},
				"ҡ": {
					offset_x: -1,
					offset_y: 10,
					width: 19
				},
				"Ң": {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				"ң": {
					offset_x: -1,
					offset_y: 10,
					width: 18
				},
				"Ҥ": {
					offset_x: -2,
					offset_y: 6,
					width: 24
				},
				"ҥ": {
					offset_x: -1,
					offset_y: 10,
					width: 21
				},
				"Ҧ": {
					offset_x: -2,
					offset_y: 6,
					width: 29
				},
				"ҧ": {
					offset_x: -1,
					offset_y: 10,
					width: 24
				},
				"Ҩ": {
					offset_x: 0,
					offset_y: 6,
					width: 22
				},
				"ҩ": {
					offset_x: 0,
					offset_y: 10,
					width: 18
				},
				"Ҫ": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"ҫ": {
					offset_x: 0,
					offset_y: 10,
					width: 14
				},
				"Ҭ": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"ҭ": {
					offset_x: -1,
					offset_y: 10,
					width: 25
				},
				"Ү": {
					offset_x: 1,
					offset_y: 6,
					width: 18
				},
				"ү": {
					offset_x: -1,
					offset_y: 10,
					width: 15
				},
				"Ұ": {
					offset_x: 1,
					offset_y: 6,
					width: 18
				},
				"ұ": {
					offset_x: -1,
					offset_y: 10,
					width: 15
				},
				"Ҳ": {
					offset_x: -3,
					offset_y: 6,
					width: 20
				},
				"ҳ": {
					offset_x: -2,
					offset_y: 10,
					width: 16
				},
				"Ҵ": {
					offset_x: 0,
					offset_y: 6,
					width: 26
				},
				"ҵ": {
					offset_x: -1,
					offset_y: 10,
					width: 21
				},
				"Ҷ": {
					offset_x: 1,
					offset_y: 6,
					width: 20
				},
				"ҷ": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"Ҹ": {
					offset_x: 1,
					offset_y: 6,
					width: 20
				},
				"ҹ": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"Һ": {
					offset_x: -2,
					offset_y: 6,
					width: 20
				},
				"һ": {
					offset_x: -1,
					offset_y: 10,
					width: 18
				},
				"Ҽ": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"ҽ": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"Ҿ": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"ҿ": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"Ӏ": {
					offset_x: -2,
					offset_y: 6,
					width: 10
				},
				"Ӂ": {
					offset_x: -3,
					offset_y: -1,
					width: 27
				},
				"ӂ": {
					offset_x: -1,
					offset_y: 3,
					width: 31
				},
				"Ӄ": {
					offset_x: -2,
					offset_y: 6,
					width: 19
				},
				"ӄ": {
					offset_x: -1,
					offset_y: 10,
					width: 16
				},
				"Ӆ": {
					offset_x: -3,
					offset_y: 6,
					width: 19
				},
				"ӆ": {
					offset_x: -1,
					offset_y: 10,
					width: 18
				},
				"Ӈ": {
					offset_x: -2,
					offset_y: 6,
					width: 21
				},
				"ӈ": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"Ӊ": {
					offset_x: -2,
					offset_y: 6,
					width: 22
				},
				"ӊ": {
					offset_x: -1,
					offset_y: 10,
					width: 18
				},
				"Ӌ": {
					offset_x: 1,
					offset_y: 6,
					width: 20
				},
				"ӌ": {
					offset_x: -1,
					offset_y: 10,
					width: 17
				},
				"Ӎ": {
					offset_x: -2,
					offset_y: 6,
					width: 25
				},
				"ӎ": {
					offset_x: -1,
					offset_y: 10,
					width: 25
				},
				"ӏ": {
					offset_x: -2,
					offset_y: 6,
					width: 10
				},
				"Ӑ": {
					offset_x: -3,
					offset_y: -1,
					width: 20
				},
				"ӑ": {
					offset_x: 0,
					offset_y: 3,
					width: 17
				},
				"Ӓ": {
					offset_x: -3,
					offset_y: 1,
					width: 20
				},
				"ӓ": {
					offset_x: 0,
					offset_y: 4,
					width: 17
				},
				"Ӕ": {
					offset_x: -3,
					offset_y: 6,
					width: 26
				},
				"ӕ": {
					offset_x: 0,
					offset_y: 10,
					width: 23
				},
				"Ӗ": {
					offset_x: -2,
					offset_y: -1,
					width: 16
				},
				"ӗ": {
					offset_x: 0,
					offset_y: 3,
					width: 14
				},
				"Ә": {
					offset_x: 0,
					offset_y: 6,
					width: 18
				},
				"ә": {
					offset_x: -1,
					offset_y: 10,
					width: 14
				},
				"Ӛ": {
					offset_x: 0,
					offset_y: 0,
					width: 18
				},
				"ӛ": {
					offset_x: -1,
					offset_y: 4,
					width: 14
				},
				"Ӝ": {
					offset_x: -3,
					offset_y: 1,
					width: 27
				},
				"ӝ": {
					offset_x: -1,
					offset_y: 4,
					width: 31
				},
				"Ӟ": {
					offset_x: -1,
					offset_y: 0,
					width: 16
				},
				"ӟ": {
					offset_x: -1,
					offset_y: 4,
					width: 14
				},
				"Ӡ": {
					offset_x: -1,
					offset_y: 6,
					width: 16
				},
				"ӡ": {
					offset_x: -2,
					offset_y: 10,
					width: 15
				},
				"Ӣ": {
					offset_x: -2,
					offset_y: 2,
					width: 21
				},
				"ӣ": {
					offset_x: 0,
					offset_y: 6,
					width: 18
				},
				"Ӥ": {
					offset_x: -2,
					offset_y: 1,
					width: 21
				},
				"ӥ": {
					offset_x: 0,
					offset_y: 4,
					width: 18
				},
				"Ӧ": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"ӧ": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"Ө": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"ө": {
					offset_x: 0,
					offset_y: 10,
					width: 16
				},
				"Ӫ": {
					offset_x: 0,
					offset_y: 0,
					width: 21
				},
				"ӫ": {
					offset_x: 0,
					offset_y: 4,
					width: 16
				},
				"Ӭ": {
					offset_x: -1,
					offset_y: 0,
					width: 18
				},
				"ӭ": {
					offset_x: -1,
					offset_y: 4,
					width: 14
				},
				"Ӯ": {
					offset_x: 0,
					offset_y: 2,
					width: 18
				},
				"ӯ": {
					offset_x: -6,
					offset_y: 6,
					width: 15
				},
				"Ӱ": {
					offset_x: 0,
					offset_y: 1,
					width: 18
				},
				"ӱ": {
					offset_x: -6,
					offset_y: 4,
					width: 15
				},
				"Ӳ": {
					offset_x: 0,
					offset_y: 0,
					width: 18
				},
				"ӳ": {
					offset_x: -6,
					offset_y: 4,
					width: 15
				},
				"Ӵ": {
					offset_x: 1,
					offset_y: 1,
					width: 20
				},
				"ӵ": {
					offset_x: -1,
					offset_y: 4,
					width: 17
				},
				"Ӷ": {
					offset_x: -2,
					offset_y: 6,
					width: 15
				},
				"ӷ": {
					offset_x: -2,
					offset_y: 10,
					width: 13
				},
				"Ӹ": {
					offset_x: -2,
					offset_y: 1,
					width: 26
				},
				"ӹ": {
					offset_x: 0,
					offset_y: 4,
					width: 23
				},
				"Ӻ": {
					offset_x: -2,
					offset_y: 6,
					width: 15
				},
				"ӻ": {
					offset_x: -1,
					offset_y: 10,
					width: 13
				},
				"Ӽ": {
					offset_x: -3,
					offset_y: 6,
					width: 19
				},
				"ӽ": {
					offset_x: -2,
					offset_y: 10,
					width: 16
				},
				"Ӿ": {
					offset_x: -3,
					offset_y: 6,
					width: 19
				},
				"ӿ": {
					offset_x: -2,
					offset_y: 10,
					width: 16
				},
				"…": {
					offset_x: 0,
					offset_y: 20,
					width: 24
				}
			}
		}, t.font_blue = {
			name: "font_blue_",
			height: 50,
			charSet: {
				" ": {
					offset_x: -1,
					offset_y: 37,
					width: 10
				},
				"!": {
					offset_x: 2,
					offset_y: 8,
					width: 16
				},
				'"': {
					offset_x: 5,
					offset_y: 8,
					width: 20
				},
				"#": {
					offset_x: 0,
					offset_y: 8,
					width: 22
				},
				$: {
					offset_x: 0,
					offset_y: 6,
					width: 22
				},
				"%": {
					offset_x: 1,
					offset_y: 8,
					width: 36
				},
				"&": {
					offset_x: 0,
					offset_y: 8,
					width: 32
				},
				"'": {
					offset_x: 5,
					offset_y: 8,
					width: 12
				},
				"(": {
					offset_x: 0,
					offset_y: 5,
					width: 16
				},
				")": {
					offset_x: -3,
					offset_y: 5,
					width: 16
				},
				"*": {
					offset_x: 4,
					offset_y: 6,
					width: 25
				},
				"+": {
					offset_x: 2,
					offset_y: 14,
					width: 22
				},
				",": {
					offset_x: -2,
					offset_y: 31,
					width: 12
				},
				"-": {
					offset_x: -1,
					offset_y: 24,
					width: 12
				},
				".": {
					offset_x: 0,
					offset_y: 30,
					width: 12
				},
				"/": {
					offset_x: -6,
					offset_y: 6,
					width: 12
				},
				0: {
					offset_x: 0,
					offset_y: 8,
					width: 22
				},
				1: {
					offset_x: 0,
					offset_y: 8,
					width: 22
				},
				2: {
					offset_x: -2,
					offset_y: 8,
					width: 22
				},
				3: {
					offset_x: -2,
					offset_y: 8,
					width: 22
				},
				4: {
					offset_x: -1,
					offset_y: 8,
					width: 22
				},
				5: {
					offset_x: -1,
					offset_y: 8,
					width: 22
				},
				6: {
					offset_x: 1,
					offset_y: 8,
					width: 22
				},
				7: {
					offset_x: 2,
					offset_y: 8,
					width: 22
				},
				8: {
					offset_x: -1,
					offset_y: 8,
					width: 22
				},
				9: {
					offset_x: 0,
					offset_y: 8,
					width: 22
				},
				":": {
					offset_x: 0,
					offset_y: 15,
					width: 14
				},
				";": {
					offset_x: -2,
					offset_y: 15,
					width: 14
				},
				"<": {
					offset_x: 2,
					offset_y: 12,
					width: 22
				},
				"=": {
					offset_x: 2,
					offset_y: 17,
					width: 22
				},
				">": {
					offset_x: 2,
					offset_y: 12,
					width: 22
				},
				"?": {
					offset_x: 3,
					offset_y: 8,
					width: 21
				},
				"@": {
					offset_x: 0,
					offset_y: 8,
					width: 37
				},
				A: {
					offset_x: -3,
					offset_y: 8,
					width: 30
				},
				B: {
					offset_x: -2,
					offset_y: 8,
					width: 27
				},
				C: {
					offset_x: 1,
					offset_y: 8,
					width: 27
				},
				D: {
					offset_x: -2,
					offset_y: 8,
					width: 31
				},
				E: {
					offset_x: -2,
					offset_y: 8,
					width: 25
				},
				F: {
					offset_x: -2,
					offset_y: 8,
					width: 25
				},
				G: {
					offset_x: 1,
					offset_y: 8,
					width: 32
				},
				H: {
					offset_x: -2,
					offset_y: 8,
					width: 33
				},
				I: {
					offset_x: -2,
					offset_y: 8,
					width: 16
				},
				J: {
					offset_x: -8,
					offset_y: 8,
					width: 16
				},
				K: {
					offset_x: -2,
					offset_y: 8,
					width: 30
				},
				L: {
					offset_x: -2,
					offset_y: 8,
					width: 26
				},
				M: {
					offset_x: -2,
					offset_y: 8,
					width: 38
				},
				N: {
					offset_x: -2,
					offset_y: 8,
					width: 32
				},
				O: {
					offset_x: 1,
					offset_y: 8,
					width: 32
				},
				P: {
					offset_x: -2,
					offset_y: 8,
					width: 27
				},
				Q: {
					offset_x: 1,
					offset_y: 8,
					width: 31
				},
				R: {
					offset_x: -2,
					offset_y: 8,
					width: 28
				},
				S: {
					offset_x: -1,
					offset_y: 8,
					width: 23
				},
				T: {
					offset_x: 1,
					offset_y: 8,
					width: 26
				},
				U: {
					offset_x: 2,
					offset_y: 8,
					width: 30
				},
				V: {
					offset_x: 2,
					offset_y: 8,
					width: 28
				},
				W: {
					offset_x: 2,
					offset_y: 8,
					width: 43
				},
				X: {
					offset_x: -3,
					offset_y: 8,
					width: 29
				},
				Y: {
					offset_x: 2,
					offset_y: 8,
					width: 28
				},
				Z: {
					offset_x: -2,
					offset_y: 8,
					width: 27
				},
				"[": {
					offset_x: -1,
					offset_y: 6,
					width: 17
				},
				"\\": {
					offset_x: 3,
					offset_y: 6,
					width: 12
				},
				"]": {
					offset_x: -4,
					offset_y: 6,
					width: 17
				},
				"^": {
					offset_x: 1,
					offset_y: 8,
					width: 22
				},
				_: {
					offset_x: -5,
					offset_y: 40,
					width: 18
				},
				"`": {
					offset_x: 8,
					offset_y: 6,
					width: 23
				},
				a: {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				b: {
					offset_x: -1,
					offset_y: 6,
					width: 25
				},
				c: {
					offset_x: 0,
					offset_y: 15,
					width: 21
				},
				d: {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				e: {
					offset_x: 0,
					offset_y: 15,
					width: 21
				},
				f: {
					offset_x: -7,
					offset_y: 6,
					width: 16
				},
				g: {
					offset_x: -4,
					offset_y: 14,
					width: 23
				},
				h: {
					offset_x: -1,
					offset_y: 6,
					width: 26
				},
				i: {
					offset_x: 1,
					offset_y: 6,
					width: 14
				},
				j: {
					offset_x: -7,
					offset_y: 6,
					width: 14
				},
				k: {
					offset_x: -1,
					offset_y: 6,
					width: 24
				},
				l: {
					offset_x: 1,
					offset_y: 6,
					width: 14
				},
				m: {
					offset_x: 0,
					offset_y: 15,
					width: 39
				},
				n: {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				o: {
					offset_x: 0,
					offset_y: 15,
					width: 25
				},
				p: {
					offset_x: -3,
					offset_y: 15,
					width: 25
				},
				q: {
					offset_x: 0,
					offset_y: 15,
					width: 25
				},
				r: {
					offset_x: 0,
					offset_y: 15,
					width: 22
				},
				s: {
					offset_x: -1,
					offset_y: 15,
					width: 21
				},
				t: {
					offset_x: 1,
					offset_y: 10,
					width: 17
				},
				u: {
					offset_x: 1,
					offset_y: 15,
					width: 27
				},
				v: {
					offset_x: -1,
					offset_y: 15,
					width: 23
				},
				w: {
					offset_x: 0,
					offset_y: 15,
					width: 35
				},
				x: {
					offset_x: -2,
					offset_y: 15,
					width: 24
				},
				y: {
					offset_x: -8,
					offset_y: 15,
					width: 23
				},
				z: {
					offset_x: -1,
					offset_y: 15,
					width: 22
				},
				"{": {
					offset_x: 0,
					offset_y: 6,
					width: 18
				},
				"|": {
					offset_x: 9,
					offset_y: 6,
					width: 22
				},
				"}": {
					offset_x: -4,
					offset_y: 6,
					width: 18
				},
				"~": {
					offset_x: 0,
					offset_y: 19,
					width: 22
				},
				"¡": {
					offset_x: -1,
					offset_y: 15,
					width: 16
				},
				"¢": {
					offset_x: 1,
					offset_y: 8,
					width: 22
				},
				"£": {
					offset_x: -2,
					offset_y: 8,
					width: 22
				},
				"¤": {
					offset_x: 2,
					offset_y: 13,
					width: 22
				},
				"¥": {
					offset_x: 0,
					offset_y: 8,
					width: 22
				},
				"¦": {
					offset_x: 9,
					offset_y: 6,
					width: 22
				},
				"§": {
					offset_x: -1,
					offset_y: 6,
					width: 22
				},
				"¨": {
					offset_x: 6,
					offset_y: 7,
					width: 23
				},
				"©": {
					offset_x: 1,
					offset_y: 8,
					width: 34
				},
				"ª": {
					offset_x: 2,
					offset_y: 8,
					width: 17
				},
				"«": {
					offset_x: 1,
					offset_y: 18,
					width: 22
				},
				"¬": {
					offset_x: 2,
					offset_y: 21,
					width: 22
				},
				"­": {
					offset_x: -1,
					offset_y: 24,
					width: 12
				},
				"®": {
					offset_x: 1,
					offset_y: 8,
					width: 34
				},
				"¯": {
					offset_x: -2,
					offset_y: 3,
					width: 18
				},
				"°": {
					offset_x: 3,
					offset_y: 8,
					width: 16
				},
				"±": {
					offset_x: 2,
					offset_y: 14,
					width: 22
				},
				"²": {
					offset_x: 0,
					offset_y: 8,
					width: 16
				},
				"³": {
					offset_x: 0,
					offset_y: 8,
					width: 16
				},
				"´": {
					offset_x: 8,
					offset_y: 6,
					width: 23
				},
				"µ": {
					offset_x: -2,
					offset_y: 15,
					width: 27
				},
				"¶": {
					offset_x: 1,
					offset_y: 6,
					width: 25
				},
				"·": {
					offset_x: 2,
					offset_y: 19,
					width: 12
				},
				"¸": {
					offset_x: 0,
					offset_y: 37,
					width: 13
				},
				"¹": {
					offset_x: 1,
					offset_y: 8,
					width: 16
				},
				"º": {
					offset_x: 1,
					offset_y: 8,
					width: 16
				},
				"»": {
					offset_x: -1,
					offset_y: 18,
					width: 22
				},
				"¼": {
					offset_x: 0,
					offset_y: 8,
					width: 34
				},
				"½": {
					offset_x: 0,
					offset_y: 8,
					width: 34
				},
				"¾": {
					offset_x: 0,
					offset_y: 8,
					width: 34
				},
				"¿": {
					offset_x: -1,
					offset_y: 15,
					width: 21
				},
				"À": {
					offset_x: -3,
					offset_y: -1,
					width: 30
				},
				"Á": {
					offset_x: -3,
					offset_y: -1,
					width: 30
				},
				"Â": {
					offset_x: -3,
					offset_y: -1,
					width: 30
				},
				"Ã": {
					offset_x: -3,
					offset_y: -1,
					width: 30
				},
				"Ä": {
					offset_x: -3,
					offset_y: 0,
					width: 30
				},
				"Å": {
					offset_x: -3,
					offset_y: 1,
					width: 30
				},
				"Æ": {
					offset_x: -3,
					offset_y: 8,
					width: 40
				},
				"Ç": {
					offset_x: 1,
					offset_y: 8,
					width: 27
				},
				"È": {
					offset_x: -2,
					offset_y: -1,
					width: 25
				},
				"É": {
					offset_x: -2,
					offset_y: -1,
					width: 25
				},
				"Ê": {
					offset_x: -2,
					offset_y: -1,
					width: 25
				},
				"Ë": {
					offset_x: -2,
					offset_y: 0,
					width: 25
				},
				"Ì": {
					offset_x: -2,
					offset_y: -1,
					width: 16
				},
				"Í": {
					offset_x: -2,
					offset_y: -1,
					width: 16
				},
				"Î": {
					offset_x: -2,
					offset_y: -1,
					width: 16
				},
				"Ï": {
					offset_x: -2,
					offset_y: 0,
					width: 16
				},
				"Ð": {
					offset_x: -2,
					offset_y: 8,
					width: 31
				},
				"Ñ": {
					offset_x: -2,
					offset_y: -1,
					width: 32
				},
				"Ò": {
					offset_x: 1,
					offset_y: -1,
					width: 32
				},
				"Ó": {
					offset_x: 1,
					offset_y: -1,
					width: 32
				},
				"Ô": {
					offset_x: 1,
					offset_y: -1,
					width: 32
				},
				"Õ": {
					offset_x: 1,
					offset_y: -1,
					width: 32
				},
				"Ö": {
					offset_x: 1,
					offset_y: 0,
					width: 32
				},
				"×": {
					offset_x: 2,
					offset_y: 14,
					width: 22
				},
				"Ø": {
					offset_x: 1,
					offset_y: 6,
					width: 32
				},
				"Ù": {
					offset_x: 2,
					offset_y: -1,
					width: 30
				},
				"Ú": {
					offset_x: 2,
					offset_y: -1,
					width: 30
				},
				"Û": {
					offset_x: 2,
					offset_y: -1,
					width: 30
				},
				"Ü": {
					offset_x: 2,
					offset_y: 0,
					width: 30
				},
				"Ý": {
					offset_x: 2,
					offset_y: -1,
					width: 28
				},
				"Þ": {
					offset_x: -2,
					offset_y: 8,
					width: 26
				},
				"ß": {
					offset_x: -7,
					offset_y: 6,
					width: 28
				},
				"à": {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				"á": {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				"â": {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				"ã": {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				"ä": {
					offset_x: 0,
					offset_y: 7,
					width: 27
				},
				"å": {
					offset_x: 0,
					offset_y: 4,
					width: 27
				},
				"æ": {
					offset_x: 0,
					offset_y: 15,
					width: 35
				},
				"ç": {
					offset_x: 0,
					offset_y: 15,
					width: 21
				},
				"è": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"é": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"ê": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"ë": {
					offset_x: 0,
					offset_y: 7,
					width: 21
				},
				"ì": {
					offset_x: 1,
					offset_y: 6,
					width: 14
				},
				"í": {
					offset_x: 1,
					offset_y: 6,
					width: 14
				},
				"î": {
					offset_x: 0,
					offset_y: 6,
					width: 14
				},
				"ï": {
					offset_x: 1,
					offset_y: 7,
					width: 14
				},
				"ð": {
					offset_x: 0,
					offset_y: 5,
					width: 25
				},
				"ñ": {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				"ò": {
					offset_x: 0,
					offset_y: 6,
					width: 25
				},
				"ó": {
					offset_x: 0,
					offset_y: 6,
					width: 25
				},
				"ô": {
					offset_x: 0,
					offset_y: 6,
					width: 25
				},
				"õ": {
					offset_x: 0,
					offset_y: 6,
					width: 25
				},
				"ö": {
					offset_x: 0,
					offset_y: 7,
					width: 25
				},
				"÷": {
					offset_x: 2,
					offset_y: 13,
					width: 22
				},
				"ø": {
					offset_x: -1,
					offset_y: 13,
					width: 25
				},
				"ù": {
					offset_x: 1,
					offset_y: 6,
					width: 27
				},
				"ú": {
					offset_x: 1,
					offset_y: 6,
					width: 27
				},
				"û": {
					offset_x: 1,
					offset_y: 6,
					width: 27
				},
				"ü": {
					offset_x: 1,
					offset_y: 7,
					width: 27
				},
				"ý": {
					offset_x: -8,
					offset_y: 6,
					width: 23
				},
				"þ": {
					offset_x: -3,
					offset_y: 6,
					width: 25
				},
				"ÿ": {
					offset_x: -8,
					offset_y: 7,
					width: 23
				},
				"Ā": {
					offset_x: -3,
					offset_y: 3,
					width: 30
				},
				"ā": {
					offset_x: 0,
					offset_y: 9,
					width: 27
				},
				"Ă": {
					offset_x: -3,
					offset_y: -1,
					width: 30
				},
				"ă": {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				"Ą": {
					offset_x: -3,
					offset_y: 8,
					width: 30
				},
				"ą": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"Ć": {
					offset_x: 1,
					offset_y: -1,
					width: 27
				},
				"ć": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"Ĉ": {
					offset_x: 1,
					offset_y: -1,
					width: 27
				},
				"ĉ": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"Ċ": {
					offset_x: 1,
					offset_y: -1,
					width: 27
				},
				"ċ": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"Č": {
					offset_x: 1,
					offset_y: -1,
					width: 27
				},
				"č": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"Ď": {
					offset_x: -2,
					offset_y: -1,
					width: 31
				},
				"ď": {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				"Đ": {
					offset_x: -2,
					offset_y: 8,
					width: 31
				},
				"đ": {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				"Ē": {
					offset_x: -2,
					offset_y: 3,
					width: 25
				},
				"ē": {
					offset_x: 0,
					offset_y: 9,
					width: 21
				},
				"Ĕ": {
					offset_x: -2,
					offset_y: -1,
					width: 25
				},
				"ĕ": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"Ė": {
					offset_x: -2,
					offset_y: 0,
					width: 25
				},
				"ė": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"Ę": {
					offset_x: -2,
					offset_y: 8,
					width: 25
				},
				"ę": {
					offset_x: 0,
					offset_y: 15,
					width: 21
				},
				"Ě": {
					offset_x: -2,
					offset_y: -1,
					width: 25
				},
				"ě": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"Ĝ": {
					offset_x: 1,
					offset_y: -1,
					width: 32
				},
				"ĝ": {
					offset_x: -4,
					offset_y: 6,
					width: 23
				},
				"Ğ": {
					offset_x: 1,
					offset_y: -1,
					width: 32
				},
				"ğ": {
					offset_x: -4,
					offset_y: 6,
					width: 23
				},
				"Ġ": {
					offset_x: 1,
					offset_y: -1,
					width: 32
				},
				"ġ": {
					offset_x: -4,
					offset_y: 6,
					width: 23
				},
				"Ģ": {
					offset_x: 1,
					offset_y: 8,
					width: 32
				},
				"ģ": {
					offset_x: -4,
					offset_y: 6,
					width: 23
				},
				"Ĥ": {
					offset_x: -2,
					offset_y: -1,
					width: 33
				},
				"ĥ": {
					offset_x: -1,
					offset_y: -2,
					width: 26
				},
				"Ħ": {
					offset_x: -2,
					offset_y: 8,
					width: 33
				},
				"ħ": {
					offset_x: -1,
					offset_y: 6,
					width: 26
				},
				"Ĩ": {
					offset_x: -2,
					offset_y: -1,
					width: 16
				},
				"ĩ": {
					offset_x: 0,
					offset_y: 6,
					width: 14
				},
				"Ī": {
					offset_x: -2,
					offset_y: 3,
					width: 16
				},
				"ī": {
					offset_x: 1,
					offset_y: 9,
					width: 14
				},
				"Ĭ": {
					offset_x: -2,
					offset_y: -1,
					width: 16
				},
				"ĭ": {
					offset_x: 1,
					offset_y: 6,
					width: 14
				},
				"Į": {
					offset_x: -2,
					offset_y: 8,
					width: 16
				},
				"į": {
					offset_x: -1,
					offset_y: 6,
					width: 14
				},
				"İ": {
					offset_x: -2,
					offset_y: -1,
					width: 16
				},
				"ı": {
					offset_x: 1,
					offset_y: 15,
					width: 14
				},
				"Ĳ": {
					offset_x: -2,
					offset_y: 8,
					width: 32
				},
				"ĳ": {
					offset_x: 1,
					offset_y: 6,
					width: 28
				},
				"Ĵ": {
					offset_x: -8,
					offset_y: 0,
					width: 16
				},
				"ĵ": {
					offset_x: -7,
					offset_y: 6,
					width: 14
				},
				"Ķ": {
					offset_x: -2,
					offset_y: 8,
					width: 30
				},
				"ķ": {
					offset_x: -1,
					offset_y: 6,
					width: 24
				},
				"ĸ": {
					offset_x: -1,
					offset_y: 15,
					width: 24
				},
				"Ĺ": {
					offset_x: -2,
					offset_y: -1,
					width: 26
				},
				"ĺ": {
					offset_x: 1,
					offset_y: -2,
					width: 14
				},
				"Ļ": {
					offset_x: -2,
					offset_y: 8,
					width: 26
				},
				"ļ": {
					offset_x: -1,
					offset_y: 6,
					width: 14
				},
				"Ľ": {
					offset_x: -2,
					offset_y: 8,
					width: 26
				},
				"ľ": {
					offset_x: 1,
					offset_y: 6,
					width: 14
				},
				"Ŀ": {
					offset_x: -2,
					offset_y: 8,
					width: 26
				},
				"ŀ": {
					offset_x: 1,
					offset_y: 6,
					width: 19
				},
				"Ł": {
					offset_x: -2,
					offset_y: 8,
					width: 26
				},
				"ł": {
					offset_x: -2,
					offset_y: 6,
					width: 14
				},
				"Ń": {
					offset_x: -2,
					offset_y: -1,
					width: 32
				},
				"ń": {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				"Ņ": {
					offset_x: -2,
					offset_y: 8,
					width: 32
				},
				"ņ": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"Ň": {
					offset_x: -2,
					offset_y: -1,
					width: 32
				},
				"ň": {
					offset_x: 0,
					offset_y: 6,
					width: 27
				},
				"ŉ": {
					offset_x: -2,
					offset_y: 8,
					width: 33
				},
				"Ŋ": {
					offset_x: -2,
					offset_y: 8,
					width: 31
				},
				"ŋ": {
					offset_x: 0,
					offset_y: 15,
					width: 26
				},
				"Ō": {
					offset_x: 1,
					offset_y: 2,
					width: 32
				},
				"ō": {
					offset_x: 0,
					offset_y: 9,
					width: 25
				},
				"Ŏ": {
					offset_x: 1,
					offset_y: -1,
					width: 32
				},
				"ŏ": {
					offset_x: 0,
					offset_y: 6,
					width: 25
				},
				"Ő": {
					offset_x: 1,
					offset_y: -1,
					width: 32
				},
				"ő": {
					offset_x: 0,
					offset_y: 6,
					width: 25
				},
				"Œ": {
					offset_x: 1,
					offset_y: 8,
					width: 40
				},
				"œ": {
					offset_x: 0,
					offset_y: 15,
					width: 36
				},
				"Ŕ": {
					offset_x: -2,
					offset_y: -1,
					width: 28
				},
				"ŕ": {
					offset_x: 0,
					offset_y: 6,
					width: 22
				},
				"Ŗ": {
					offset_x: -2,
					offset_y: 8,
					width: 28
				},
				"ŗ": {
					offset_x: -2,
					offset_y: 15,
					width: 22
				},
				"Ř": {
					offset_x: -2,
					offset_y: -1,
					width: 28
				},
				"ř": {
					offset_x: 0,
					offset_y: 6,
					width: 22
				},
				"Ś": {
					offset_x: -1,
					offset_y: -1,
					width: 23
				},
				"ś": {
					offset_x: -1,
					offset_y: 6,
					width: 21
				},
				"Ŝ": {
					offset_x: -1,
					offset_y: -1,
					width: 23
				},
				"ŝ": {
					offset_x: -1,
					offset_y: 6,
					width: 21
				},
				"Ş": {
					offset_x: -1,
					offset_y: 8,
					width: 23
				},
				"ş": {
					offset_x: -1,
					offset_y: 15,
					width: 21
				},
				"Š": {
					offset_x: -1,
					offset_y: -1,
					width: 23
				},
				"š": {
					offset_x: -1,
					offset_y: 6,
					width: 21
				},
				"Ţ": {
					offset_x: 1,
					offset_y: 8,
					width: 26
				},
				"ţ": {
					offset_x: -1,
					offset_y: 11,
					width: 17
				},
				"Ť": {
					offset_x: 1,
					offset_y: -1,
					width: 26
				},
				"ť": {
					offset_x: 0,
					offset_y: 6,
					width: 17
				},
				"Ŧ": {
					offset_x: 1,
					offset_y: 8,
					width: 26
				},
				"ŧ": {
					offset_x: 0,
					offset_y: 10,
					width: 17
				},
				"Ũ": {
					offset_x: 2,
					offset_y: -1,
					width: 30
				},
				"ũ": {
					offset_x: 1,
					offset_y: 6,
					width: 27
				},
				"Ū": {
					offset_x: 2,
					offset_y: 2,
					width: 30
				},
				"ū": {
					offset_x: 1,
					offset_y: 9,
					width: 27
				},
				"Ŭ": {
					offset_x: 2,
					offset_y: -1,
					width: 30
				},
				"ŭ": {
					offset_x: 1,
					offset_y: 6,
					width: 27
				},
				"Ů": {
					offset_x: 2,
					offset_y: -3,
					width: 30
				},
				"ů": {
					offset_x: 1,
					offset_y: 4,
					width: 27
				},
				"Ű": {
					offset_x: 2,
					offset_y: -1,
					width: 30
				},
				"ű": {
					offset_x: 1,
					offset_y: 6,
					width: 27
				},
				"Ų": {
					offset_x: 2,
					offset_y: 8,
					width: 30
				},
				"ų": {
					offset_x: 1,
					offset_y: 15,
					width: 27
				},
				"Ŵ": {
					offset_x: 2,
					offset_y: -1,
					width: 43
				},
				"ŵ": {
					offset_x: 0,
					offset_y: 6,
					width: 35
				},
				"Ŷ": {
					offset_x: 2,
					offset_y: -1,
					width: 28
				},
				"ŷ": {
					offset_x: -8,
					offset_y: 6,
					width: 23
				},
				"Ÿ": {
					offset_x: 2,
					offset_y: 0,
					width: 28
				},
				"Ź": {
					offset_x: -2,
					offset_y: -1,
					width: 27
				},
				"ź": {
					offset_x: -1,
					offset_y: 6,
					width: 22
				},
				"Ż": {
					offset_x: -2,
					offset_y: -1,
					width: 27
				},
				"ż": {
					offset_x: -1,
					offset_y: 6,
					width: 22
				},
				"Ž": {
					offset_x: -2,
					offset_y: -1,
					width: 27
				},
				"ž": {
					offset_x: -1,
					offset_y: 6,
					width: 22
				},
				"ſ": {
					offset_x: -7,
					offset_y: 6,
					width: 16
				},
				"ƒ": {
					offset_x: -4,
					offset_y: 8,
					width: 22
				},
				"Ơ": {
					offset_x: 1,
					offset_y: 6,
					width: 34
				},
				"ơ": {
					offset_x: 0,
					offset_y: 11,
					width: 27
				},
				"Ư": {
					offset_x: 2,
					offset_y: 6,
					width: 34
				},
				"ư": {
					offset_x: 1,
					offset_y: 11,
					width: 31
				},
				"ǰ": {
					offset_x: -7,
					offset_y: 6,
					width: 14
				},
				"Ǻ": {
					offset_x: -3,
					offset_y: -3,
					width: 30
				},
				"ǻ": {
					offset_x: 0,
					offset_y: -3,
					width: 27
				},
				"Ǽ": {
					offset_x: -3,
					offset_y: -1,
					width: 40
				},
				"ǽ": {
					offset_x: 0,
					offset_y: 6,
					width: 35
				},
				"Ǿ": {
					offset_x: 1,
					offset_y: -1,
					width: 32
				},
				"ǿ": {
					offset_x: -1,
					offset_y: 6,
					width: 25
				},
				"Ș": {
					offset_x: -1,
					offset_y: 8,
					width: 23
				},
				"ș": {
					offset_x: -1,
					offset_y: 15,
					width: 21
				},
				"Ț": {
					offset_x: 1,
					offset_y: 8,
					width: 26
				},
				"ț": {
					offset_x: 1,
					offset_y: 10,
					width: 17
				},
				"Ѐ": {
					offset_x: -2,
					offset_y: -1,
					width: 25
				},
				"Ё": {
					offset_x: -2,
					offset_y: 0,
					width: 25
				},
				"Ђ": {
					offset_x: 1,
					offset_y: 8,
					width: 35
				},
				"Ѓ": {
					offset_x: -2,
					offset_y: -1,
					width: 24
				},
				"Є": {
					offset_x: 1,
					offset_y: 8,
					width: 27
				},
				"Ѕ": {
					offset_x: -1,
					offset_y: 8,
					width: 23
				},
				"І": {
					offset_x: -2,
					offset_y: 8,
					width: 16
				},
				"Ї": {
					offset_x: -2,
					offset_y: 0,
					width: 16
				},
				"Ј": {
					offset_x: -8,
					offset_y: 8,
					width: 16
				},
				"Љ": {
					offset_x: -3,
					offset_y: 8,
					width: 39
				},
				"Њ": {
					offset_x: -2,
					offset_y: 8,
					width: 41
				},
				"Ћ": {
					offset_x: 1,
					offset_y: 8,
					width: 35
				},
				"Ќ": {
					offset_x: -2,
					offset_y: -1,
					width: 30
				},
				"Ѝ": {
					offset_x: -2,
					offset_y: -1,
					width: 33
				},
				"Ў": {
					offset_x: 1,
					offset_y: -2,
					width: 28
				},
				"Џ": {
					offset_x: -2,
					offset_y: 8,
					width: 32
				},
				"А": {
					offset_x: -3,
					offset_y: 8,
					width: 30
				},
				"Б": {
					offset_x: -2,
					offset_y: 8,
					width: 27
				},
				"В": {
					offset_x: -2,
					offset_y: 8,
					width: 27
				},
				"Г": {
					offset_x: -2,
					offset_y: 8,
					width: 24
				},
				"Д": {
					offset_x: -5,
					offset_y: 8,
					width: 28
				},
				"Е": {
					offset_x: -2,
					offset_y: 8,
					width: 25
				},
				"Ж": {
					offset_x: -4,
					offset_y: 8,
					width: 42
				},
				"З": {
					offset_x: -1,
					offset_y: 8,
					width: 25
				},
				"И": {
					offset_x: -2,
					offset_y: 8,
					width: 33
				},
				"Й": {
					offset_x: -2,
					offset_y: -2,
					width: 33
				},
				"К": {
					offset_x: -2,
					offset_y: 8,
					width: 30
				},
				"Л": {
					offset_x: -3,
					offset_y: 8,
					width: 29
				},
				"М": {
					offset_x: -2,
					offset_y: 8,
					width: 38
				},
				"Н": {
					offset_x: -2,
					offset_y: 8,
					width: 33
				},
				"О": {
					offset_x: 1,
					offset_y: 8,
					width: 32
				},
				"П": {
					offset_x: -2,
					offset_y: 8,
					width: 32
				},
				"Р": {
					offset_x: -2,
					offset_y: 8,
					width: 27
				},
				"С": {
					offset_x: 1,
					offset_y: 8,
					width: 27
				},
				"Т": {
					offset_x: 1,
					offset_y: 8,
					width: 26
				},
				"У": {
					offset_x: 1,
					offset_y: 8,
					width: 28
				},
				"Ф": {
					offset_x: 0,
					offset_y: 8,
					width: 34
				},
				"Х": {
					offset_x: -3,
					offset_y: 8,
					width: 29
				},
				"Ц": {
					offset_x: -2,
					offset_y: 8,
					width: 32
				},
				"Ч": {
					offset_x: 2,
					offset_y: 8,
					width: 30
				},
				"Ш": {
					offset_x: -2,
					offset_y: 8,
					width: 45
				},
				"Щ": {
					offset_x: -2,
					offset_y: 8,
					width: 45
				},
				"Ъ": {
					offset_x: 1,
					offset_y: 8,
					width: 31
				},
				"Ы": {
					offset_x: -2,
					offset_y: 8,
					width: 39
				},
				"Ь": {
					offset_x: -2,
					offset_y: 8,
					width: 27
				},
				"Э": {
					offset_x: -1,
					offset_y: 8,
					width: 27
				},
				"Ю": {
					offset_x: -2,
					offset_y: 8,
					width: 45
				},
				"Я": {
					offset_x: -3,
					offset_y: 8,
					width: 28
				},
				"а": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"б": {
					offset_x: 0,
					offset_y: 6,
					width: 24
				},
				"в": {
					offset_x: 0,
					offset_y: 15,
					width: 22
				},
				"г": {
					offset_x: -1,
					offset_y: 15,
					width: 21
				},
				"д": {
					offset_x: 0,
					offset_y: 6,
					width: 25
				},
				"е": {
					offset_x: 0,
					offset_y: 15,
					width: 21
				},
				"ж": {
					offset_x: -1,
					offset_y: 15,
					width: 47
				},
				"з": {
					offset_x: -1,
					offset_y: 15,
					width: 21
				},
				"и": {
					offset_x: 1,
					offset_y: 15,
					width: 27
				},
				"й": {
					offset_x: 1,
					offset_y: 5,
					width: 27
				},
				"к": {
					offset_x: -1,
					offset_y: 15,
					width: 24
				},
				"л": {
					offset_x: -1,
					offset_y: 15,
					width: 27
				},
				"м": {
					offset_x: -1,
					offset_y: 15,
					width: 38
				},
				"н": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"о": {
					offset_x: 0,
					offset_y: 15,
					width: 25
				},
				"п": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"р": {
					offset_x: -3,
					offset_y: 15,
					width: 25
				},
				"с": {
					offset_x: 0,
					offset_y: 15,
					width: 21
				},
				"т": {
					offset_x: 0,
					offset_y: 15,
					width: 39
				},
				"у": {
					offset_x: -8,
					offset_y: 15,
					width: 23
				},
				"ф": {
					offset_x: 0,
					offset_y: 6,
					width: 34
				},
				"х": {
					offset_x: -2,
					offset_y: 15,
					width: 24
				},
				"ц": {
					offset_x: 1,
					offset_y: 15,
					width: 27
				},
				"ч": {
					offset_x: 0,
					offset_y: 15,
					width: 26
				},
				"ш": {
					offset_x: 1,
					offset_y: 15,
					width: 39
				},
				"щ": {
					offset_x: 1,
					offset_y: 15,
					width: 39
				},
				"ъ": {
					offset_x: -1,
					offset_y: 15,
					width: 26
				},
				"ы": {
					offset_x: 1,
					offset_y: 15,
					width: 35
				},
				"ь": {
					offset_x: 1,
					offset_y: 15,
					width: 24
				},
				"э": {
					offset_x: -1,
					offset_y: 15,
					width: 21
				},
				"ю": {
					offset_x: 0,
					offset_y: 15,
					width: 36
				},
				"я": {
					offset_x: -1,
					offset_y: 15,
					width: 26
				},
				"ѐ": {
					offset_x: 0,
					offset_y: 6,
					width: 21
				},
				"ё": {
					offset_x: 0,
					offset_y: 7,
					width: 21
				},
				"ђ": {
					offset_x: -1,
					offset_y: 6,
					width: 25
				},
				"ѓ": {
					offset_x: -1,
					offset_y: 6,
					width: 21
				},
				"є": {
					offset_x: 0,
					offset_y: 15,
					width: 21
				},
				"ѕ": {
					offset_x: -1,
					offset_y: 15,
					width: 21
				},
				"і": {
					offset_x: 1,
					offset_y: 6,
					width: 14
				},
				"ї": {
					offset_x: 1,
					offset_y: 7,
					width: 14
				},
				"ј": {
					offset_x: -7,
					offset_y: 6,
					width: 14
				},
				"љ": {
					offset_x: -1,
					offset_y: 15,
					width: 36
				},
				"њ": {
					offset_x: 0,
					offset_y: 15,
					width: 35
				},
				"ћ": {
					offset_x: -1,
					offset_y: 6,
					width: 26
				},
				"ќ": {
					offset_x: -1,
					offset_y: 6,
					width: 24
				},
				"ѝ": {
					offset_x: 1,
					offset_y: 6,
					width: 27
				},
				"ў": {
					offset_x: -8,
					offset_y: 5,
					width: 23
				},
				"џ": {
					offset_x: 1,
					offset_y: 15,
					width: 27
				},
				"Ѡ": {
					offset_x: 1,
					offset_y: 8,
					width: 46
				},
				"ѡ": {
					offset_x: -1,
					offset_y: 15,
					width: 33
				},
				"Ѣ": {
					offset_x: 0,
					offset_y: 8,
					width: 28
				},
				"ѣ": {
					offset_x: 0,
					offset_y: 6,
					width: 24
				},
				"Ѥ": {
					offset_x: -2,
					offset_y: 8,
					width: 41
				},
				"ѥ": {
					offset_x: 0,
					offset_y: 15,
					width: 34
				},
				"Ѧ": {
					offset_x: -3,
					offset_y: 8,
					width: 32
				},
				"ѧ": {
					offset_x: -4,
					offset_y: 15,
					width: 26
				},
				"Ѩ": {
					offset_x: -2,
					offset_y: 8,
					width: 47
				},
				"ѩ": {
					offset_x: 0,
					offset_y: 15,
					width: 38
				},
				"Ѫ": {
					offset_x: -3,
					offset_y: 8,
					width: 36
				},
				"ѫ": {
					offset_x: -4,
					offset_y: 15,
					width: 31
				},
				"Ѭ": {
					offset_x: -2,
					offset_y: 8,
					width: 51
				},
				"ѭ": {
					offset_x: 0,
					offset_y: 15,
					width: 43
				},
				"Ѯ": {
					offset_x: -2,
					offset_y: 3,
					width: 24
				},
				"ѯ": {
					offset_x: -3,
					offset_y: 10,
					width: 21
				},
				"Ѱ": {
					offset_x: 3,
					offset_y: 8,
					width: 39
				},
				"ѱ": {
					offset_x: 1,
					offset_y: 6,
					width: 29
				},
				"Ѳ": {
					offset_x: 1,
					offset_y: 8,
					width: 32
				},
				"ѳ": {
					offset_x: 0,
					offset_y: 15,
					width: 25
				},
				"Ѵ": {
					offset_x: 2,
					offset_y: 8,
					width: 30
				},
				"ѵ": {
					offset_x: -1,
					offset_y: 15,
					width: 25
				},
				"Ѷ": {
					offset_x: 2,
					offset_y: 0,
					width: 30
				},
				"ѷ": {
					offset_x: -1,
					offset_y: 6,
					width: 25
				},
				"Ѹ": {
					offset_x: 1,
					offset_y: 8,
					width: 52
				},
				"ѹ": {
					offset_x: 0,
					offset_y: 15,
					width: 45
				},
				"Ѻ": {
					offset_x: 1,
					offset_y: 6,
					width: 33
				},
				"ѻ": {
					offset_x: 0,
					offset_y: 13,
					width: 26
				},
				"Ѽ": {
					offset_x: 1,
					offset_y: -6,
					width: 46
				},
				"ѽ": {
					offset_x: 0,
					offset_y: 0,
					width: 39
				},
				"Ѿ": {
					offset_x: 1,
					offset_y: 1,
					width: 46
				},
				"ѿ": {
					offset_x: -1,
					offset_y: 8,
					width: 33
				},
				"Ҁ": {
					offset_x: 1,
					offset_y: 8,
					width: 27
				},
				"ҁ": {
					offset_x: 0,
					offset_y: 15,
					width: 21
				},
				"҂": {
					offset_x: 1,
					offset_y: 11,
					width: 24
				},
				"҃": {
					offset_x: 4,
					offset_y: 8,
					width: 22
				},
				"҄": {
					offset_x: 2,
					offset_y: 6,
					width: 23
				},
				"҅": {
					offset_x: 8,
					offset_y: 6,
					width: 23
				},
				"҆": {
					offset_x: 7,
					offset_y: 6,
					width: 23
				},
				"҈": {
					offset_x: -1,
					offset_y: 10,
					width: 40
				},
				"҉": {
					offset_x: -1,
					offset_y: 8,
					width: 38
				},
				"Ҋ": {
					offset_x: -2,
					offset_y: -2,
					width: 34
				},
				"ҋ": {
					offset_x: 1,
					offset_y: 5,
					width: 27
				},
				"Ҍ": {
					offset_x: -2,
					offset_y: 6,
					width: 27
				},
				"ҍ": {
					offset_x: -1,
					offset_y: 10,
					width: 24
				},
				"Ҏ": {
					offset_x: -2,
					offset_y: 8,
					width: 27
				},
				"ҏ": {
					offset_x: -3,
					offset_y: 15,
					width: 25
				},
				"Ґ": {
					offset_x: -2,
					offset_y: 3,
					width: 22
				},
				"ґ": {
					offset_x: 0,
					offset_y: 10,
					width: 19
				},
				"Ғ": {
					offset_x: -2,
					offset_y: 8,
					width: 24
				},
				"ғ": {
					offset_x: -1,
					offset_y: 15,
					width: 20
				},
				"Ҕ": {
					offset_x: -2,
					offset_y: 8,
					width: 29
				},
				"ҕ": {
					offset_x: 0,
					offset_y: 15,
					width: 24
				},
				"Җ": {
					offset_x: -4,
					offset_y: 8,
					width: 42
				},
				"җ": {
					offset_x: -1,
					offset_y: 15,
					width: 47
				},
				"Ҙ": {
					offset_x: -1,
					offset_y: 8,
					width: 25
				},
				"ҙ": {
					offset_x: -1,
					offset_y: 15,
					width: 21
				},
				"Қ": {
					offset_x: -2,
					offset_y: 8,
					width: 30
				},
				"қ": {
					offset_x: -1,
					offset_y: 15,
					width: 24
				},
				"Ҝ": {
					offset_x: -2,
					offset_y: 8,
					width: 31
				},
				"ҝ": {
					offset_x: -1,
					offset_y: 15,
					width: 26
				},
				"Ҟ": {
					offset_x: -2,
					offset_y: 8,
					width: 30
				},
				"ҟ": {
					offset_x: -1,
					offset_y: 6,
					width: 24
				},
				"Ҡ": {
					offset_x: 1,
					offset_y: 8,
					width: 34
				},
				"ҡ": {
					offset_x: -1,
					offset_y: 15,
					width: 29
				},
				"Ң": {
					offset_x: -2,
					offset_y: 8,
					width: 33
				},
				"ң": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"Ҥ": {
					offset_x: -2,
					offset_y: 8,
					width: 37
				},
				"ҥ": {
					offset_x: 0,
					offset_y: 15,
					width: 33
				},
				"Ҧ": {
					offset_x: -2,
					offset_y: 8,
					width: 45
				},
				"ҧ": {
					offset_x: 0,
					offset_y: 15,
					width: 37
				},
				"Ҩ": {
					offset_x: 1,
					offset_y: 8,
					width: 34
				},
				"ҩ": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"Ҫ": {
					offset_x: 1,
					offset_y: 8,
					width: 27
				},
				"ҫ": {
					offset_x: 0,
					offset_y: 15,
					width: 21
				},
				"Ҭ": {
					offset_x: 1,
					offset_y: 8,
					width: 26
				},
				"ҭ": {
					offset_x: 0,
					offset_y: 15,
					width: 39
				},
				"Ү": {
					offset_x: 2,
					offset_y: 8,
					width: 28
				},
				"ү": {
					offset_x: -1,
					offset_y: 15,
					width: 23
				},
				"Ұ": {
					offset_x: 2,
					offset_y: 8,
					width: 28
				},
				"ұ": {
					offset_x: -1,
					offset_y: 15,
					width: 23
				},
				"Ҳ": {
					offset_x: -3,
					offset_y: 8,
					width: 30
				},
				"ҳ": {
					offset_x: -2,
					offset_y: 15,
					width: 24
				},
				"Ҵ": {
					offset_x: 1,
					offset_y: 8,
					width: 39
				},
				"ҵ": {
					offset_x: -1,
					offset_y: 15,
					width: 32
				},
				"Ҷ": {
					offset_x: 2,
					offset_y: 8,
					width: 30
				},
				"ҷ": {
					offset_x: 0,
					offset_y: 15,
					width: 26
				},
				"Ҹ": {
					offset_x: 2,
					offset_y: 8,
					width: 30
				},
				"ҹ": {
					offset_x: 0,
					offset_y: 15,
					width: 26
				},
				"Һ": {
					offset_x: -2,
					offset_y: 8,
					width: 31
				},
				"һ": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"Ҽ": {
					offset_x: 0,
					offset_y: 8,
					width: 33
				},
				"ҽ": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"Ҿ": {
					offset_x: 0,
					offset_y: 8,
					width: 33
				},
				"ҿ": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"Ӏ": {
					offset_x: -2,
					offset_y: 8,
					width: 16
				},
				"Ӂ": {
					offset_x: -4,
					offset_y: -2,
					width: 42
				},
				"ӂ": {
					offset_x: -1,
					offset_y: 5,
					width: 47
				},
				"Ӄ": {
					offset_x: -2,
					offset_y: 8,
					width: 29
				},
				"ӄ": {
					offset_x: -1,
					offset_y: 15,
					width: 25
				},
				"Ӆ": {
					offset_x: -3,
					offset_y: 8,
					width: 30
				},
				"ӆ": {
					offset_x: -1,
					offset_y: 15,
					width: 27
				},
				"Ӈ": {
					offset_x: -2,
					offset_y: 8,
					width: 33
				},
				"ӈ": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"Ӊ": {
					offset_x: -2,
					offset_y: 8,
					width: 34
				},
				"ӊ": {
					offset_x: 0,
					offset_y: 15,
					width: 27
				},
				"Ӌ": {
					offset_x: 2,
					offset_y: 8,
					width: 30
				},
				"ӌ": {
					offset_x: 0,
					offset_y: 15,
					width: 26
				},
				"Ӎ": {
					offset_x: -2,
					offset_y: 8,
					width: 39
				},
				"ӎ": {
					offset_x: -1,
					offset_y: 15,
					width: 38
				},
				"ӏ": {
					offset_x: -2,
					offset_y: 8,
					width: 16
				},
				"Ӑ": {
					offset_x: -3,
					offset_y: -2,
					width: 30
				},
				"ӑ": {
					offset_x: 0,
					offset_y: 5,
					width: 27
				},
				"Ӓ": {
					offset_x: -3,
					offset_y: 0,
					width: 30
				},
				"ӓ": {
					offset_x: 0,
					offset_y: 7,
					width: 27
				},
				"Ӕ": {
					offset_x: -3,
					offset_y: 8,
					width: 40
				},
				"ӕ": {
					offset_x: 0,
					offset_y: 15,
					width: 35
				},
				"Ӗ": {
					offset_x: -2,
					offset_y: -2,
					width: 25
				},
				"ӗ": {
					offset_x: 0,
					offset_y: 5,
					width: 21
				},
				"Ә": {
					offset_x: 0,
					offset_y: 8,
					width: 28
				},
				"ә": {
					offset_x: -1,
					offset_y: 15,
					width: 21
				},
				"Ӛ": {
					offset_x: 0,
					offset_y: 0,
					width: 28
				},
				"ӛ": {
					offset_x: -1,
					offset_y: 7,
					width: 21
				},
				"Ӝ": {
					offset_x: -4,
					offset_y: 0,
					width: 42
				},
				"ӝ": {
					offset_x: -1,
					offset_y: 7,
					width: 47
				},
				"Ӟ": {
					offset_x: -1,
					offset_y: 0,
					width: 25
				},
				"ӟ": {
					offset_x: -1,
					offset_y: 7,
					width: 21
				},
				"Ӡ": {
					offset_x: -1,
					offset_y: 8,
					width: 24
				},
				"ӡ": {
					offset_x: -3,
					offset_y: 15,
					width: 22
				},
				"Ӣ": {
					offset_x: -2,
					offset_y: 3,
					width: 33
				},
				"ӣ": {
					offset_x: 1,
					offset_y: 9,
					width: 27
				},
				"Ӥ": {
					offset_x: -2,
					offset_y: 0,
					width: 33
				},
				"ӥ": {
					offset_x: 1,
					offset_y: 7,
					width: 27
				},
				"Ӧ": {
					offset_x: 1,
					offset_y: 0,
					width: 32
				},
				"ӧ": {
					offset_x: 0,
					offset_y: 7,
					width: 25
				},
				"Ө": {
					offset_x: 1,
					offset_y: 8,
					width: 32
				},
				"ө": {
					offset_x: 0,
					offset_y: 15,
					width: 25
				},
				"Ӫ": {
					offset_x: 1,
					offset_y: 0,
					width: 32
				},
				"ӫ": {
					offset_x: 0,
					offset_y: 7,
					width: 25
				},
				"Ӭ": {
					offset_x: -1,
					offset_y: 0,
					width: 27
				},
				"ӭ": {
					offset_x: -1,
					offset_y: 7,
					width: 21
				},
				"Ӯ": {
					offset_x: 1,
					offset_y: 3,
					width: 28
				},
				"ӯ": {
					offset_x: -8,
					offset_y: 10,
					width: 23
				},
				"Ӱ": {
					offset_x: 1,
					offset_y: 0,
					width: 28
				},
				"ӱ": {
					offset_x: -8,
					offset_y: 7,
					width: 23
				},
				"Ӳ": {
					offset_x: 1,
					offset_y: 0,
					width: 28
				},
				"ӳ": {
					offset_x: -8,
					offset_y: 6,
					width: 23
				},
				"Ӵ": {
					offset_x: 2,
					offset_y: 0,
					width: 30
				},
				"ӵ": {
					offset_x: 0,
					offset_y: 7,
					width: 26
				},
				"Ӷ": {
					offset_x: -2,
					offset_y: 8,
					width: 24
				},
				"ӷ": {
					offset_x: -2,
					offset_y: 15,
					width: 20
				},
				"Ӹ": {
					offset_x: -2,
					offset_y: 0,
					width: 39
				},
				"ӹ": {
					offset_x: 1,
					offset_y: 7,
					width: 35
				},
				"Ӻ": {
					offset_x: -2,
					offset_y: 8,
					width: 24
				},
				"ӻ": {
					offset_x: -1,
					offset_y: 15,
					width: 20
				},
				"Ӽ": {
					offset_x: -3,
					offset_y: 8,
					width: 30
				},
				"ӽ": {
					offset_x: -2,
					offset_y: 15,
					width: 24
				},
				"Ӿ": {
					offset_x: -3,
					offset_y: 8,
					width: 29
				},
				"ӿ": {
					offset_x: -2,
					offset_y: 15,
					width: 24
				},
				"…": {
					offset_x: 0,
					offset_y: 31,
					width: 37
				}
			}
		}, t
	}(),
	DNFontDef = function() {
		function t() {}
		return t.FLYING_POINTS = {
			name: "",
			letterDist: -10
		}, t.FONT = {
			name: "font_",
			letterDist: -3
		}, t.MAP_FONT = {
			name: "map_font/",
			letterDist: -11
		}, t
	}(),
	CurLayouts = function() {
		function t() {}
		return t.MAIN_MENU_LAYOUT = [{
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: Images.MAIN_MENU_BACK,
			x: Constants.ASSETS_WIDTH / 2,
			y: Constants.ASSETS_HEIGHT / 2
		}, {
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: "shine_1",
			x: Constants.ASSETS_WIDTH / 2,
			y: Constants.ASSETS_HEIGHT / 2 - 200,
			name: "shine"
		}, {
			type: Layouts.TYPE_PLACEHOLDER,
			x: 0,
			y: 0,
			name: "clouds_place"
		}, {
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: "title_candy_1",
			x: Constants.ASSETS_WIDTH / 2,
			y: Constants.ASSETS_HEIGHT / 2 - 200,
			name: "candy_1"
		}, {
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: "title_candy_2",
			x: Constants.ASSETS_WIDTH / 2,
			y: Constants.ASSETS_HEIGHT / 2 - 200,
			name: "candy_2"
		}, {
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: "title_1",
			x: Constants.ASSETS_WIDTH / 2,
			y: Constants.ASSETS_HEIGHT / 2 + 50,
			name: "path"
		}, {
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: Images.CLOUD_LOGO,
			x: Constants.ASSETS_WIDTH / 2,
			y: 1200,
			name: "title_cloud",
			children: [{
				type: Layouts.TYPE_STATIC_PICTURE,
				picture: Images.TITLE,
				x: -10,
				y: 0,
				alpha: 1e-5,
				scale: .5,
				name: "title"
			}, {
				type: Layouts.TYPE_STATIC_PICTURE,
				picture: Images.THREE,
				x: 600,
				y: -25,
				name: "three"
			}]
		}, {
			type: Layouts.TYPE_PLACEHOLDER,
			x: Constants.ASSETS_WIDTH / 2,
			y: 1e3,
			name: "play_holder",
			children: [{
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: Images.BUTTON_PLAY,
				x: 0,
				y: 0,
				scale: 1.3,
				name: Layouts.NAME_BUTTON_PLAY
			}]
		}, {
			type: Layouts.TYPE_PLACEHOLDER,
			name: Layouts.NAME_SOUND_PLACE,
			x: 850,
			y: 750,
			scale: .8
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.BUTTON_MORE_GAMES,
			x: -150,
			y: 750,
			scale: .8,
			name: Layouts.NAME_BUTTON_MORE_GAMES
		}, {
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: Images.MAIN_MENU_WHITE_FRONT,
			x: Constants.ASSETS_WIDTH / 2,
			y: Constants.ASSETS_HEIGHT - 107.5
		}], t.SELECT_LEVEL_LAYOUT = [{
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: "map_top_panel",
			x: Constants.ASSETS_WIDTH / 2,
			y: 73.5,
			children: [{
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: Images.PLUS_ICON,
				x: 268,
				y: -44,
				name: "more_gold",
				scale: .7
			}, {
				type: Layouts.TYPE_TEXT_FIELD,
				x: 106,
				y: -1,
				name: Layouts.NAME_LIFE,
				font: DNFontDef.FLYING_POINTS,
				scale: .7
			}, {
				type: Layouts.TYPE_BITMAP_LABEL,
				x: 210,
				y: -7,
				name: "time_place",
				font: Fonts.font_blue,
				max_scale: .78
			}, {
				type: Layouts.TYPE_BITMAP_LABEL,
				x: -42,
				y: -10,
				name: Layouts.NAME_SCORE,
				font: Fonts.font_blue,
				text: "000000",
				max_scale: .78
			}, {
				type: Layouts.TYPE_BITMAP_LABEL,
				x: -50,
				y: -63,
				name: Layouts.NAME_STARS,
				font: Fonts.font_blue,
				text: "180",
				max_scale: .78
			}, {
				type: Layouts.TYPE_BITMAP_LABEL,
				x: 210,
				y: -63,
				name: Layouts.NAME_GOLD,
				font: Fonts.font_blue,
				text: "",
				max_scale: .78
			}]
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.BUTTON_EXIT,
			x: 75,
			y: 65,
			name: Layouts.NAME_BUTTON_BACK,
			scale: .85
		}], t.PLAYSTATE_LAYOUT = [{
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: "candygui_2",
			x: Constants.ASSETS_WIDTH / 2,
			y: 355,
			children: [{
				type: Layouts.TYPE_STATIC_PICTURE,
				picture: "panel_1",
				x: -140,
				y: -300,
				name: "score_back"
			}, {
				type: Layouts.TYPE_STATIC_PICTURE,
				picture: "panel_2",
				x: 50,
				y: -300,
				name: "moves_back"
			}, {
				type: Layouts.TYPE_STATIC_PICTURE,
				picture: "panel_3",
				x: 230,
				y: -300,
				name: "goal_back"
			}, {
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: Images.BUTTON_PAUSE,
				x: -295,
				y: -305,
				scale: .74,
				name: Layouts.NAME_PAUSE
			}, {
				type: Layouts.TYPE_BITMAP_LABEL,
				x: 260,
				y: -317,
				name: Layouts.NAME_GOAL_LABEL,
				font: Fonts.font_blue,
				max_scale: .78
			}, {
				type: Layouts.TYPE_BITMAP_LABEL,
				x: 65,
				y: -317,
				name: Layouts.NAME_MOVES,
				font: Fonts.font_blue,
				max_scale: .78
			}, {
				type: Layouts.TYPE_BITMAP_LABEL,
				x: -135,
				y: -317,
				name: Layouts.NAME_SCORE,
				font: Fonts.font_blue,
				text: "00000",
				max_scale: .78
			}, {
				type: Layouts.TYPE_PLACEHOLDER,
				x: 180,
				y: -300,
				name: "goal_placeholder"
			}, {
				type: Layouts.TYPE_PLACEHOLDER,
				x: -13,
				y: -300,
				name: "moves_or_time_place"
			}]
		}, {
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: Images.FILL_BOTTOM,
			x: Constants.ASSETS_WIDTH / 2,
			y: Constants.ASSETS_HEIGHT + 5,
			children: [{
				type: Layouts.TYPE_PLACEHOLDER,
				x: -70,
				y: -50,
				scale: .9,
				name: "booster_1"
			}, {
				type: Layouts.TYPE_PLACEHOLDER,
				x: 70,
				y: -50,
				scale: .9,
				name: "booster_2"
			}]
		}], t.MAP_EDITOR_LAYOUT = [{
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: Images.FILL_BOTTOM,
			x: Constants.ASSETS_WIDTH / 2,
			y: 10,
			name: "top_panel"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.MOVES_ICON,
			x: 50,
			y: 50,
			name: "moves"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.TIME_ICON,
			x: 50,
			y: 50,
			name: "time"
		}, {
			type: Layouts.TYPE_TEXT_FIELD,
			x: 100,
			y: 35,
			name: "lose_counter",
			font: DNFontDef.FONT,
			text: "30"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.PLUS_ICON,
			x: 180,
			y: 50,
			name: "plus"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.CHECK_ICON,
			x: 235,
			y: 50,
			name: "minus"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.PLUS_ICON,
			x: 300,
			y: 85,
			scale: .8,
			name: "plus_row"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.CHECK_ICON,
			x: 350,
			y: 85,
			scale: .8,
			name: "minus_row"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.SCORE_ICON,
			x: 420,
			y: 50,
			name: "goal_score"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.STRAWBERRY,
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_strawberry"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.BALOON,
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_baloon"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.CHOCOLATE_1,
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_choco"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.ICE_0,
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_marsh"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.DIRT_1,
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_dirt"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: "cake_1",
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_chip_1"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: "cake_2",
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_chip_2"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: "cake_3",
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_chip_3"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: "cake_4",
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_chip_4"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: "cake_5",
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_chip_5"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: "cake_6",
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_chip_6"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: "cake_7",
			x: 420,
			y: 50,
			scale: .7,
			name: "goal_chip_7"
		}, {
			type: Layouts.TYPE_TEXT_FIELD,
			x: 450,
			y: 35,
			name: "goal_counter",
			font: DNFontDef.FONT,
			text: "30"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.HINT_ARROW,
			x: 540,
			y: 50,
			scale: .8,
			rotation: 90,
			name: "gravity"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.PLUS_ICON,
			x: 610,
			y: 50,
			name: "goal_plus"
		}, {
			type: Layouts.TYPE_JELLY_BUTTON,
			picture: Images.CHECK_ICON,
			x: 670,
			y: 50,
			name: "goal_minus"
		}, {
			type: Layouts.TYPE_STATIC_PICTURE,
			picture: Images.FILL_BOTTOM,
			x: Constants.ASSETS_WIDTH / 2,
			y: Constants.ASSETS_HEIGHT - 10,
			name: "panel",
			children: [{
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: Images.HINT_ARROW,
				x: 330,
				y: -20,
				scale: .8,
				rotation: 90,
				name: "scroll_down"
			}, {
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: Images.HINT_ARROW,
				x: 330,
				y: -70,
				scale: .8,
				rotation: -90,
				name: "scroll_up"
			}, {
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: Images.BUTTON_RESTART,
				x: 270,
				y: -45,
				scale: .74,
				name: Layouts.NAME_BUTTON_RESTART
			}, {
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: Images.BUTTON_PLAY,
				x: -295,
				y: -45,
				scale: .74,
				name: Layouts.NAME_BUTTON_PLAY
			}, {
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: Images.BUTTON_RESTART,
				x: -200,
				y: -45,
				scale: .74,
				name: "shuffle"
			}, {
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: Images.BUTTON_RESTART,
				x: -100,
				y: -45,
				scale: .74,
				name: "colors_count"
			}, {
				type: Layouts.TYPE_TEXT_FIELD,
				x: -105,
				y: -45,
				name: "colors_count_label",
				font: DNFontDef.FONT,
				text: "4"
			}, {
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: "bomb_5",
				x: -10,
				y: -45,
				scale: .85,
				name: "bomb_counter"
			}, {
				type: Layouts.TYPE_TEXT_FIELD,
				x: -30,
				y: -40,
				name: "bomb_counter_label",
				font: DNFontDef.FONT,
				text: "10"
			}, {
				type: Layouts.TYPE_JELLY_BUTTON,
				picture: "bomb_6",
				x: 50,
				y: -45,
				scale: .85,
				name: "bomb_prob"
			}, {
				type: Layouts.TYPE_TEXT_FIELD,
				x: 30,
				y: -40,
				name: "bomb_prob_label",
				font: DNFontDef.FONT,
				text: "0"
			}]
		}], t
	}(),
	ActivateBoosterButton = function(t) {
		function e(e, i) {
			var s = this;
			t.call(this, e, i), this.setHandler(function() {
				return s.onTouch()
			})
		}
		return __extends(e, t), e.prototype.onTouch = function() {
			return PlayState.g_instance.isLolipop() && this.boosterName == GameData.BOOSTER_LOLIPOP ? (this.count++, this.counterCircle.setCount(this.count), PlayState.g_instance.stopLolipop(), GameData.getInstance().addBooster(this.boosterName), void this.updateCaption()) : void(this.count > 0 ? (PlayState.g_instance.activateBooster(this.boosterName), this.updateCaption()) : DNStateManager.g_instance.pushState(new BuyMoreBoostersState(this)))
		}, e
	}(BoosterButtonBase),
	AutoreleaseEffect = function(t) {
		function e() {
			t.call(this), this.frames = new Array, this.frame = 0;
			for (var e = 1; 11 >= e; e++) this.frames.push(DNAssetsManager.g_instance.getCenteredImageWithProxy("boom_" + e));
			this.update(10)
		}
		return __extends(e, t), e.prototype.update = function(e) {
			if (t.prototype.update.call(this, e), this.liveTime > .045) {
				this.liveTime = 0, this.frame++, this.frame >= this.frames.length && (this.frame = this.frames.length - 1, this.kill()), this.removeAllChildren();
				var i = this.frames[this.frame];
				this.addChild(i), i.y = -19, this.scaleX = this.scaleY = 2
			}
		}, e
	}(DNGameObject),
	BonusSplasher = function(t) {
		function e(e) {
			t.call(this), this.bonuses = e
		}
		return __extends(e, t), e.prototype.update = function(e) {
			if (t.prototype.update.call(this, e), this.liveTime >= .8) {
				for (var i = 0; i < this.bonuses.length; i++) PlayState.g_instance.forcedMatchBonus(this.bonuses[i]);
				PlayState.g_instance.setInpunState(PlayState.INPUT_STATE_MATCHING), PlayState.g_instance.setNegateInpunStateTime(), this.kill()
			}
		}, e
	}(DNGameObject),
	BuyMoreBoostersState = function(t) {
		function e(e) {
			var i = this;
			t.call(this), this.notEnouthLabel = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.NOT_ENOUGH_GOLD), DN_TEXT_ALIGN_HOR.CENTER, 430), this.externalBooster = e;
			var s = e.picName,
				n = e.boosterName,
				o = new DNJellyButton(Images.BUTTON_CLOSE, function() {
					return i.hide()
				});
			this.panel.addChild(o), this.addGuiObject(o), o.x = 230, o.y = -190, this.booster = new SelectBoosterButton(s, n), this.panel.addChild(this.booster), this.booster.x = 0, this.booster.y = -80;
			var a = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.GOLD_ICON);
			this.panel.addChild(a), a.x = -180, a.y = -160, this.goldLabel = new DNTextField(GameData.getInstance().getGold().toString(), DNFontDef.FONT), this.panel.addChild(this.goldLabel), this.goldLabel.x = -140, this.goldLabel.y = -180;
			var r = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.PRICE) + ": " + GameData.getInstance().getBoostPrice(n), DN_TEXT_ALIGN_HOR.CENTER, 400);
			r.y = -10, this.panel.addChild(r), this.panel.addChild(this.notEnouthLabel), this.notEnouthLabel.y = 35, this.notEnouthLabel.alpha = 0;
			var h = new DNJellyButton(Images.BUTTON_BUY, function() {
				return i.onBuyTouch()
			});
			this.panel.addChild(h), this.addGuiObject(h), h.y = 140, h.scaleX = h.scaleY = .85
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.goldLabel.setText(GameData.getInstance().getGold().toString())
		}, e.prototype.onBuyTouch = function() {
			var t = GameData.getInstance().getBoostPrice(this.booster.boosterName);
			GameData.getInstance().getGold() >= t ? (GameData.getInstance().addBooster(this.booster.boosterName), GameData.getInstance().addGold(-t), this.booster.updateCaption(), this.goldLabel.setText(GameData.getInstance().getGold().toString()), this.externalBooster.updateCaption()) : DNGameConfig.haveAd && DNStateManager.g_instance.pushState(new GetMoreCoinsState(!0))
		}, e
	}(PopupState),
	Chip = function(t) {
		function e(i, s, n, o, a) {
			t.call(this), this.STATE_NORMAL = "STATE_NORMAL", this.STATE_EXCHANGE = "STATE_EXCHANGE", this.STATE_SHIFT_DOWN = "STATE_SHIFT_DOWN", this.STATE_MATCH = "STATE_MATCH", this.STATE_FLY = "STATE_FLY", this.wasClear = !1, this.chocolate = !1, this.state = null, this.rotationSpeed = 0, this.selected = !1, this.stateTime = 0, this.rotationTimeOffset = Utils.RandomRange(0, 20), this.ice = !1, this.marshStrength = 6, this.stoneHeartStrength = 3, this.isBird = !1, this.bonusType = null, this.jellyAnim = !1, this.doubleMatched = !1, this.canBeMatched = !0, this.matchReason = null, this.birdChoice = !1, this.baloonOffset = Utils.RandomRangeInt(100, 900), this.hole = !1, this.stoneHeart = !1, this.strawberry = !1, this.baloon = !1, this.bomb = !1, this.cage = !1, this.chocoStrength = 2, this.spawnYPos = o, this.setIncexes(s, n);
			var r = !1;
			i > 10 && (r = !0, i -= 10), i > 0 && 8 > i && (this.chipPicture = DNAssetsManager.g_instance.getImage("cake_" + i), this.addChild(this.chipPicture), this.chipPicture.x = -this.chipPicture.getBounds().width / 2, this.chipPicture.y = -Constants.CELL_SIZE), this.colorID = i, this.setState(e.STATE_SPAWN_NEW), this.spawnDelay = a, 10 == i && this.convertToMarsh(), 9 == i && this.convertToStoneHeart(), 8 == i && (PlayState.g_instance.getGoal() == PlayState.GOAL_BALOON ? this.convertToBaloon() : this.convertToStrawberry()), r && this.setCage(), -1 == i && this.convertToChocolate(), -2 == i && this.convertToDoubleChocolate()
		}
		return __extends(e, t), e.prototype.getMatchReason = function() {
			return this.matchReason
		}, e.prototype.isHorizontal = function() {
			return this.horizontal
		}, e.prototype.getBonusType = function() {
			return this.bonusType
		}, e.prototype.getColorID = function() {
			return this.colorID
		}, e.prototype.getIndeces = function() {
			return new createjs.Point(this.indexX, this.indexY)
		}, e.prototype.getIndexX = function() {
			return this.indexX
		}, e.prototype.getIndexY = function() {
			return this.indexY
		}, e.prototype.setIncexes = function(t, e) {
			this.indexX = t, this.indexY = e
		}, e.prototype.isMatching = function() {
			return this.state == this.STATE_MATCH
		}, e.prototype.update = function(t) {
			switch (this.stateTime += t, this.state) {
				case this.STATE_NORMAL:
					if (this.stoneHeart || this.chocolate) {
						this.scaleX = this.scaleY = 1;
						break
					}
					if (this.isBird) break;
					var i = 9 * this.stateTime,
						s = .13 * Math.sin(i);
					this.scaleX = 1 + s, this.scaleY = 1 - s, this.isBaloon() && (this.rotation += .13 * Math.sin(i / 3 + this.baloonOffset), this.x -= .13 * Math.sin(i / 3 + this.baloonOffset)), i >= 1 * Math.PI && (this.scaleX = this.scaleY = 1), this.canBeMatched = !0;
					break;
				case this.STATE_EXCHANGE:
					this.stateTime >= Constants.EXCHANGE_TIME && this.setState(this.STATE_NORMAL);
					break;
				case e.STATE_SPAWN_NEW:
					this.spawnDelay -= t, this.spawnDelay < 0 && (PlayState.g_instance.gravitationNormal ? this.speed.y += this.acceleration.y * t : this.speed.y -= this.acceleration.y * t, this.x += t * this.speed.x, this.y += t * this.speed.y, this.y >= this.spawnYPos && 1 == PlayState.g_instance.gravitationNormal ? (this.y = this.spawnYPos, this.setState(this.STATE_NORMAL), PlayState.g_instance.onShiftEnded(this), this.haveCage() && this.runCageAnimation()) : this.y <= this.spawnYPos && 0 == PlayState.g_instance.gravitationNormal && (this.y = this.spawnYPos, this.setState(this.STATE_NORMAL), PlayState.g_instance.onShiftEnded(this), this.haveCage() && this.runCageAnimation()));
					break;
				case this.STATE_FLY:
					this.y += 20 * Math.sin(12 * PlayState.g_instance.liveTime);
					break;
				case this.STATE_SHIFT_DOWN:
					PlayState.g_instance.gravitationNormal ? this.speed.y += this.acceleration.y * t : PlayState.g_instance.gravitationNormal || (this.speed.y -= this.acceleration.y * t), this.x += t * this.speed.x, this.y += t * this.speed.y, this.y >= this.spawnYPos && 1 == PlayState.g_instance.gravitationNormal ? (this.y = this.spawnYPos, this.setState(this.STATE_NORMAL), PlayState.g_instance.onShiftEnded(this)) : this.y <= this.spawnYPos && 0 == PlayState.g_instance.gravitationNormal && (this.y = this.spawnYPos, this.setState(this.STATE_NORMAL), PlayState.g_instance.onShiftEnded(this));
					break;
				case e.STATE_FALL_DOWN:
					this.speed.y += this.acceleration.y * t, this.x += t * this.speed.x, this.y += t * this.speed.y, this.rotation += this.rotationSpeed * t, this.y >= 1e3 && this.kill();
					break;
				case this.STATE_MATCH:
					this.scaleY = 1 - 1.5 * this.stateTime, this.scaleX = 1 + 1.5 * this.stateTime, this.alpha = 1 - this.stateTime / Constants.MATCH_TIME, this.stateTime >= Constants.MATCH_TIME / 2 && !this.wasClear && (PlayState.g_instance.addPointsAt(this, this.matchReason), PlayState.g_instance.clearCell(this), this.wasClear = !0), this.stateTime >= Constants.MATCH_TIME && this.kill()
			}
			this.shiningCircle && (this.shiningCircle.rotation += 20 * t)
		}, e.prototype.setState = function(t) {
			if (t != this.state) switch (this.stateTime = 0, this.state = t, t) {
				case this.STATE_NORMAL:
					this.jellyAnim = !0;
					break;
				case this.STATE_EXCHANGE:
					break;
				case this.STATE_SHIFT_DOWN:
					createjs.Tween.get(this).to({
						scaleX: 1,
						scaleY: 1
					}, 170, createjs.Ease.linear);
					break;
				case e.STATE_SPAWN_NEW:
					this.speed = new createjs.Point(0, 500), this.acceleration = PlayState.g_instance.gravitationNormal ? new createjs.Point(0, Constants.GRAVITY_ACC) : new createjs.Point(0, 5e3)
			}
		}, e.prototype.exchange = function(t, e) {
			this.deselect(), this.setState(this.STATE_EXCHANGE), this.indexX = t, this.indexY = e
		}, e.prototype.shiftDown = function(t, e) {
			this.speed = PlayState.g_instance.gravitationNormal ? new createjs.Point(0, -250) : new createjs.Point(0, 250), this.deselect(), this.indexY = t, this.spawnYPos = e, this.setState(this.STATE_SHIFT_DOWN)
		}, e.prototype.match = function(t) {
			if (this.stoneHeart) return 0 != this.getStoneWeakness() && this.iterateStoneWeakness(), void(0 == this.getStoneWeakness() && this.fallDown());
			if (this.ice) return 0 != this.getMarshWeakness() && this.iterateMarshWeakness(), void(0 == this.getMarshWeakness() && this.flyAwayMarsh());
			if (!this.isStrawberry() && !this.isBaloon() && !this.isHole() && (this.state == this.STATE_MATCH && (this.doubleMatched = !0), this.canBeMatched)) {
				if (this.cage) return void this.removeCage();
				if (this.isBird) return void this.birdFly();
				this.matchReason = t, this.setState(this.STATE_MATCH)
			}
		}, e.prototype.isDoubleMatched = function() {
			return this.doubleMatched
		}, e.prototype.select = function() {
			this.stateTime = 0, this.jellyAnim = !0, this.isBaloon() && (this.x = PlayState.g_instance.getXPosByXIndex(this.getIndexX()), this.rotation = 0), this.selected = !0
		}, e.prototype.deselect = function() {
			this.selected && (this.scaleX = this.scaleY = 1, this.selected = !1)
		}, e.prototype.isNormal = function() {
			return this.state == this.STATE_NORMAL || this.state == e.STATE_HOLE
		}, e.prototype.getState = function() {
			return this.state
		}, e.prototype.isBonus = function() {
			return null != this.bonusType
		}, e.prototype.convertToBonus = function(t, i) {
			if (this.horizontal = i, this.bonusType = t, this.bomb = !1, this.cage = !1, this.removeAllChildren(), t == e.BONUS_5) {
				var s = DNAssetsManager.g_instance.getImage("donut");
				this.addChild(s), s.x = -s.getBounds().width / 2, s.y = -s.getBounds().height
			}
			if (t == e.BONUS_4) {
				void 0 === this.horizontal && (this.horizontal = Math.random() < .5);
				var s = DNAssetsManager.g_instance.getImage(this.horizontal ? Images.ARROW_BONUS_HOR : Images.ARROW_BONUS_VERT);
				this.addChild(s), s.x = -s.getBounds().width / 2, s.y = -s.getBounds().height
			}
			if (t == e.BONUS_BOMB) {
				var s = DNAssetsManager.g_instance.getImage(Images.BOMB);
				this.addChild(s), s.x = -s.getBounds().width / 2, s.y = -s.getBounds().height
			}
			this.state != e.STATE_SPAWN_NEW && PlayState.g_instance.addConverToBonusEffect(this), this.canBeMatched = !1, PlayState.g_instance.takeStockMatch(this), this.colorID = -1, this.setState(this.STATE_NORMAL), PlayState.g_instance.tryClearDirt(this.indexX, this.indexY), PlayState.g_instance.tryClearStoneHeart(this.indexX, this.indexY)
		}, e.prototype.convertToSplashTimeBonus = function() {
			this.removeAllChildren(), this.colorID = -1, this.bonusType = e.BONUS_BOMB;
			var t = DNAssetsManager.g_instance.getImage(Images.BOMB);
			this.addChild(t), t.x = -t.getBounds().width / 2, t.y = -t.getBounds().height, PlayState.g_instance.addConverToBonusEffect(this)
		}, e.prototype.convertToStartBonus5 = function() {
			this.removeAllChildren(), this.colorID = -1, this.bomb = !1, this.bonusType = e.BONUS_5;
			var t = DNAssetsManager.g_instance.getImage("donut");
			this.addChild(t), t.x = -t.getBounds().width / 2, t.y = -t.getBounds().height, PlayState.g_instance.addConverToBonusEffect(this)
		}, e.prototype.convertToStartBonus4 = function() {
			this.removeAllChildren(), this.colorID = -1, this.bomb = !1, this.horizontal = !0, this.bonusType = e.BONUS_4;
			var t = DNAssetsManager.g_instance.getImage(Images.ARROW_BONUS_HOR);
			this.addChild(t), t.x = -t.getBounds().width / 2, t.y = -t.getBounds().height, PlayState.g_instance.addConverToBonusEffect(this)
		}, e.prototype.convertToBird = function(t) {
			this.removeAllChildren(), this.colorID = t, this.bomb = !1, this.cage = !1, this.isBird = !0;
			var e = DNAssetsManager.g_instance.getImage("candy_bird_" + t);
			this.addChild(e), e.x = -e.getBounds().width / 2, e.y = -e.getBounds().height
		}, e.prototype.flyAway = function() {
			this.chipPicture.y = -this.chipPicture.getBounds().height / 2, this.y -= PlayState.g_instance.fieldIterator * Constants.CELL_SIZE + Constants.CELL_SIZE / 2, PlayState.g_instance.addChild(this), this.wasClear || (PlayState.g_instance.clearCell(this), this.wasClear = !0), PlayState.g_instance.onStrawberrySaveQuick(), createjs.Tween.get(this).to({
				x: 490,
				y: 50,
				rotation: 720
			}, 1200, createjs.Ease.backIn).call(function() {
				return PlayState.g_instance.onStrawberrySave()
			}).to({
				alpha: 0
			}, 300, createjs.Ease.linear)
		}, e.prototype.flyAwayMarsh = function() {
			this.chipPicture.y = 0, this.y -= PlayState.g_instance.fieldIterator * Constants.CELL_SIZE + Constants.CELL_SIZE / 2, PlayState.g_instance.layersContainer.addChild(this), this.wasClear || (PlayState.g_instance.clearCell(this), this.wasClear = !0), PlayState.g_instance.onMarshSaveQuick(), createjs.Tween.get(this).to({
				x: 490,
				y: 50,
				rotation: 720
			}, 1200, createjs.Ease.backIn).call(function() {
				return PlayState.g_instance.onMarshSave()
			}).to({
				alpha: 0
			}, 300, createjs.Ease.linear)
		}, e.prototype.isBirdChoice = function() {
			return this.birdChoice
		}, e.prototype.birdFly = function() {
			var t = this;
			this.wasClear || (PlayState.g_instance.clearCell(this), this.wasClear = !0), PlayState.g_instance.setInpunState(PlayState.INPUT_STATE_FREEZE), PlayState.g_instance.frontChipsLayer.addChild(this);
			for (var e = PlayState.g_instance.getDestoyableChip(); e.birdChoice;) e = PlayState.g_instance.getDestoyableChip();
			e.birdChoice = !0, this.setState(this.STATE_FLY), createjs.Tween.get(this).to({
				scaleX: 1.5,
				scaleY: 1.5
			}, 300, createjs.Ease.linear).to({
				scaleX: 1,
				scaleY: 1
			}, 300, createjs.Ease.linear).to({
				x: -100,
				scaleX: 1.5,
				scaleY: 1.5
			}, 1.2 * (this.x + 100), createjs.Ease.linear).to({
				x: Constants.ASSETS_WIDTH + 100,
				y: e.y
			}, 0, createjs.Ease.linear).to({
				x: e.x,
				scaleX: 1,
				scaleY: 1
			}, 1.2 * (Constants.ASSETS_WIDTH + 100 - e.x), createjs.Ease.linear).to({
				alpha: 0
			}, 300, createjs.Ease.linear).call(e.cage ? function() {
				return t.onBirdCage(e)
			} : e.stoneHeart ? function() {
				return t.onBirdStone(e)
			} : e.isChocolate() ? function() {
				return t.onBirdChoco(e)
			} : e.isMarsh() ? function() {
				return t.onBirdMarsh(e)
			} : PlayState.g_instance.isDirt(e.indexX, e.indexY) ? function() {
				return t.onBirdDirt(e)
			} : e.bomb ? function() {
				return t.onBirdBomb(e)
			} : function() {
				return t.onBirdChip(e)
			})
		}, e.prototype.onBirdChip = function(t) {
			t.fallDown(), t.birdChoice = !1, PlayState.g_instance.setInpunState(PlayState.INPUT_STATE_UNFREEZE), DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_2), PlayState.g_instance.runParticleEffect(t.x, t.y - Constants.CELL_SIZE / 2)
		}, e.prototype.onBirdMarsh = function(t) {
			t.match(e.MATCH_REASON_SIMPLE), t.birdChoice = !1, PlayState.g_instance.setInpunState(PlayState.INPUT_STATE_UNFREEZE), DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_2), PlayState.g_instance.runParticleEffect(t.x, t.y - Constants.CELL_SIZE / 2)
		}, e.prototype.onBirdCage = function(t) {
			t.haveCage() && (t.removeCage(), t.birdChoice = !1, DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_2), PlayState.g_instance.runParticleEffect(t.x, t.y - Constants.CELL_SIZE / 2)), PlayState.g_instance.setInpunState(PlayState.INPUT_STATE_UNFREEZE)
		}, e.prototype.onBirdDirt = function(t) {
			this.y = t.y, t.birdChoice = !1, PlayState.g_instance.setInpunState(PlayState.INPUT_STATE_UNFREEZE), DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_2), PlayState.g_instance.runParticleEffect(t.x, t.y - Constants.CELL_SIZE / 2), null != PlayState.g_instance.field[t.getIndexX()][t.getIndexY()] && PlayState.g_instance.field[t.getIndexX()][t.getIndexY()].fallDown()
		}, e.prototype.onBirdBomb = function(t) {
			t.match(e.MATCH_REASON_SIMPLE), t.birdChoice = !1, PlayState.g_instance.setInpunState(PlayState.INPUT_STATE_UNFREEZE), DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_2), PlayState.g_instance.runParticleEffect(t.x, t.y - Constants.CELL_SIZE / 2)
		}, e.prototype.onBirdChoco = function(t) {
			1 == t.chocoStrength ? (t.fallDown(), PlayState.g_instance.wasChocolateClear = !0) : t && t.isChocolate() && (t.convertToChocolate(), PlayState.g_instance.wasChocolateClear = !0), t.birdChoice = !1, PlayState.g_instance.setInpunState(PlayState.INPUT_STATE_UNFREEZE), DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_2), PlayState.g_instance.runParticleEffect(t.x, t.y - Constants.CELL_SIZE / 2)
		}, e.prototype.onBirdStone = function(t) {
			t && t.isStoneHeart() && 0 != t.getStoneWeakness() && t.iterateStoneWeakness(), t && t.isStoneHeart() && 0 == t.getStoneWeakness() && t.fallDown(), t.birdChoice = !1, PlayState.g_instance.setInpunState(PlayState.INPUT_STATE_UNFREEZE), DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_2), PlayState.g_instance.runParticleEffect(t.x, t.y - Constants.CELL_SIZE / 2)
		}, e.prototype.flyAwayBaloon = function() {
			this.chipPicture.y = -this.chipPicture.getBounds().height / 2, this.y -= this.chipPicture.getBounds().height / 2, this.wasClear || (PlayState.g_instance.clearCell(this), this.wasClear = !0), PlayState.g_instance.onBaloonSaveQuick(), createjs.Tween.get(this).to({
				x: 490,
				y: 50,
				rotation: 720
			}, 1200, createjs.Ease.backIn).call(function() {
				return PlayState.g_instance.onBaloonSave()
			}).to({
				alpha: 0
			}, 300, createjs.Ease.linear)
		}, e.prototype.fallDown = function() {
			this.state != e.STATE_FALL_DOWN && (this.chocolate ? (this.chipPicture.y = -this.chipPicture.getBounds().height / 2, this.y -= PlayState.g_instance.fieldIterator * Constants.CELL_SIZE) : this.y -= PlayState.g_instance.fieldIterator * Constants.CELL_SIZE + Constants.CELL_SIZE / 2, this.setState(e.STATE_FALL_DOWN), this.speed = new createjs.Point(Utils.RandomRange(-100, 100), -250), this.rotationSpeed = Utils.RandomRange(-300, 300), PlayState.g_instance.addChild(this), this.wasClear || (PlayState.g_instance.clearCell(this), this.wasClear = !0))
		}, e.prototype.isHole = function() {
			return this.hole
		}, e.prototype.convertToHole = function() {
			this.removeAllChildren(), this.hole = !0, this.y = this.spawnYPos, this.setState(e.STATE_HOLE), this.colorID = -1
		}, e.prototype.convertToMarsh = function() {
			this.ice = !0, this.removeAllChildren(), this.colorID = 3, this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.ICE_6), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture)
		}, e.prototype.isMarsh = function() {
			return this.ice
		}, e.prototype.getMarshWeakness = function() {
			return this.marshStrength
		}, e.prototype.iterateMarshWeakness = function() {
			--this.marshStrength, 0 == this.marshStrength && this.removeAllChildren(), this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy("ice_" + this.marshStrength), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.chipPicture.alpha = 0, this.addChild(this.chipPicture), createjs.Tween.get(this.chipPicture).to({
				alpha: 1
			}, 400, createjs.Ease.cubicOut)
		}, e.prototype.convertToStoneHeart = function() {
			this.removeAllChildren(), this.stoneHeart = !0, this.colorID = -1, this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.STONE_HEART_TRIPLE), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture)
		}, e.prototype.isStoneHeart = function() {
			return this.stoneHeart
		}, e.prototype.getStoneWeakness = function() {
			return this.stoneHeartStrength
		}, e.prototype.iterateStoneWeakness = function() {
			--this.stoneHeartStrength, 2 == this.stoneHeartStrength && (this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.STONE_HEART_DOUBLE), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.chipPicture.alpha = 0, this.addChild(this.chipPicture), createjs.Tween.get(this.chipPicture).to({
				alpha: 1
			}, 400, createjs.Ease.cubicOut)), 1 == this.stoneHeartStrength && (this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.STONE_HEART), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.chipPicture.alpha = 0, this.addChild(this.chipPicture), createjs.Tween.get(this.chipPicture).to({
				alpha: 1
			}, 400, createjs.Ease.cubicOut))
		}, e.prototype.convertToStrawberry = function() {
			this.removeAllChildren(), this.colorID = -1, this.strawberry = !0, this.chipPicture = DNAssetsManager.g_instance.getImage(Images.STRAWBERRY), this.addChild(this.chipPicture), this.chipPicture.x = -this.chipPicture.getBounds().width / 2, this.chipPicture.y = -83
		}, e.prototype.convertToBaloon = function() {
			this.removeAllChildren(), this.colorID = -1, this.baloon = !0, this.chipPicture = DNAssetsManager.g_instance.getImage(Images.BALOON), this.addChild(this.chipPicture), this.chipPicture.x = -this.chipPicture.getBounds().width / 2, this.chipPicture.y = -83
		}, e.prototype.isStrawberry = function() {
			return this.strawberry
		}, e.prototype.isBaloon = function() {
			return this.baloon
		}, e.prototype.convertToBomb = function(t) {
			this.colorID > 0 && this.colorID < 8 && (this.removeAllChildren(), this.bomb = !0, this.bombTimeLeft = t, this.chipPicture = DNAssetsManager.g_instance.getImage("bomb_" + this.colorID), this.addChild(this.chipPicture), this.chipPicture.x = -this.chipPicture.getBounds().width / 2, this.chipPicture.y = -Constants.CELL_SIZE, this.bombTimer = new CounterCircle(this.bombTimeLeft), this.addChild(this.bombTimer), this.bombTimer.x = -20, this.bombTimer.y = -23)
		}, e.prototype.isBomb = function() {
			return this.bomb
		}, e.prototype.onDecreseMoves = function() {
			this.bombTimeLeft--, this.bombTimeLeft <= 0 && (this.bombTimeLeft = 0, PlayState.g_instance.lose(PlayState.LOSE_REASON_BOMB)), this.bombTimer.setCount(this.bombTimeLeft)
		}, e.prototype.increaseBombCounter = function() {
			this.bombTimeLeft += 5, this.bombTimer.setCount(this.bombTimeLeft)
		}, e.prototype.setCage = function() {
			this.cage = !0
		}, e.prototype.runCageAnimation = function() {
			this.cageImage = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CAGE), this.chipPicture.addChild(this.cageImage), this.cageImage.x = Constants.CELL_SIZE / 2, this.cageImage.y = Constants.CELL_SIZE / 2, this.cageImage.scaleX = this.cageImage.scaleY = 2.5, this.cageImage.alpha = 0, createjs.Tween.get(this.cageImage).wait(500).to({
				scaleX: 1,
				scaleY: 1,
				alpha: 1
			}, 300, createjs.Ease.linear)
		}, e.prototype.haveCage = function() {
			return this.cage
		}, e.prototype.removeCage = function() {
			var t = this;
			this.cage = !1, PlayState.g_instance.frontChipsLayer.addChild(this.cageImage), this.cageImage.x = this.x, this.cageImage.y = this.y - Constants.CELL_SIZE / 2, createjs.Tween.get(this.cageImage).to({
				scaleX: 2,
				scaleY: 2
			}, 400, createjs.Ease.cubicOut), createjs.Tween.get(this.cageImage).wait(150).to({
				alpha: 0
			}, 250, createjs.Ease.linear).call(function() {
				return t.onRemoveCage()
			})
		}, e.prototype.onRemoveCage = function() {
			this.cageImage.parent.removeChild(this.cageImage)
		}, e.prototype.convertToDoubleChocolate = function() {
			this.bomb = !1, this.chocoStrength = 2, this.chocolate = !0, this.colorID = -2, this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CHOCOLATE_1), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture)
		}, e.prototype.convertToChocolate = function() {
			var t = this;
			this.bomb = !1, this.chocoStrength = 1, this.chocolate = !0, this.colorID = -1, null != this.chipPicture ? createjs.Tween.get(this.chipPicture).to({
				scaleX: .7,
				scaleY: .7,
				alpha: .7
			}, 170, createjs.Ease.linear).call(function() {
				return t.onChoco()
			}) : (this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CHOCOLATE_2), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture))
		}, e.prototype.onChoco = function() {
			createjs.Tween.get(this.chipPicture).to({
				scaleX: 1,
				scaleY: 1,
				alpha: 1
			}, 170, createjs.Ease.bounceOut), this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CHOCOLATE_2), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture)
		}, e.prototype.convertToDoubleChocolateWithAnim = function() {
			this.chocolate = !0, this.colorID = -2, this.chocoStrength = 2, createjs.Tween.get(this.chipPicture).wait(150).to({
				alpha: 0
			}, 300, createjs.Ease.linear), this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CHOCOLATE_1), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture), this.chipPicture.alpha = 0, this.chipPicture.scaleX = this.chipPicture.scaleY = 2.5, createjs.Tween.get(this.chipPicture).wait(150).to({
				scaleX: 1,
				scaleY: 1,
				alpha: 1
			}, 300, createjs.Ease.linear)
		}, e.prototype.convertToChocolateWithAnim = function() {
			this.chocolate = !0, this.colorID = -1, createjs.Tween.get(this.chipPicture).wait(150).to({
				alpha: 0
			}, 300, createjs.Ease.linear), this.chocoStrength = 1, this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CHOCOLATE_2), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture), this.chipPicture.alpha = 0, this.chipPicture.scaleX = this.chipPicture.scaleY = 2.5, createjs.Tween.get(this.chipPicture).wait(150).to({
				scaleX: 1,
				scaleY: 1,
				alpha: 1
			}, 300, createjs.Ease.linear)
		}, e.prototype.isChocolate = function() {
			return this.chocolate
		}, e.prototype.isChip = function() {
			return !(this.hole || this.chocolate || this.strawberry || this.stoneHeart || this.isBonus() || this.isBaloon() || this.ice || this.isBird)
		}, e.prototype.movable = function() {
			return !(this.hole || this.chocolate || this.haveCage() || this.ice)
		}, e.BONUS_4 = "BONUS_4", e.BONUS_5 = "BONUS_5", e.BONUS_BIRD = "BONUS_BIRD", e.BONUS_BOMB = "BONUS_BOMB", e.STATE_SPAWN_NEW = "STATE_SPAWN_NEW", e.STATE_FALL_DOWN = "STATE_FALL_DOWN", e.STATE_HOLE = "STATE_HOLE", e.MATCH_REASON_SIMPLE = "MATCH_REASON_SIMPLE", e.MATCH_REASON_EXCHANGE_WIHT_BONUS = "MATCH_REASON_EXCHANGE_WIHT_BONUS", e.MATCH_REASON_BONUS_EFFECT_5 = "MATCH_REASON_BONUS_EFFECT_5", e.MATCH_REASON_BONUS_EFFECT_4_HOR = "MATCH_REASON_BONUS_EFFECT_4_HOR", e.MATCH_REASON_BONUS_EFFECT_4_VERT = "MATCH_REASON_BONUS_EFFECT_4_VERT", e.MATCH_REASON_I_AM_BONUS = "MATCH_REASON_I_AM_BONUS", e
	}(DNGameObject),
	ClaimCoinsState = function(t) {
		function e() {
			var e = this;
			t.call(this), this.thanks = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.THANKS), DN_TEXT_ALIGN_HOR.CENTER, 430), this.youGet = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.YOU_GET), DN_TEXT_ALIGN_HOR.CENTER, 430), this.panel.addChild(this.thanks), this.thanks.y = -50, this.thanks.alpha = 1, this.panel.addChild(this.youGet), this.youGet.y = -5, this.youGet.alpha = 1;
			var i = new DNJellyButton(Images.CHECK_ICON, function() {
				return e.hide()
			});
			this.panel.addChild(i), this.addGuiObject(i), i.y = 140, i.scaleX = i.scaleY = .85
		}
		return __extends(e, t), e
	}(PopupState),
	Cloud = function(t) {
		function e(e) {
			t.call(this), this.speed = Utils.RandomRange(20, 50), e && (this.speed *= .6, this.alpha = .5, this.scaleX = this.scaleY = .6), this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy("cloud_" + Utils.RandomRangeInt(1, 3)))
		}
		return __extends(e, t), e.prototype.forceUpdate = function(e) {
			t.prototype.forceUpdate.call(this, e), this.x += e * this.speed, this.x - this.getBounds().width / 2 >= Constants.ASSETS_WIDTH && (this.x = -this.getBounds().width / 2)
		}, e
	}(DNGameObject),
	ConvertToBonusEffect = function(t) {
		function e(e) {
			t.call(this), this.chip = e, this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.SHINING)), this.scaleX = this.scaleY = 2.5
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.rotation += e * Math.PI * 35, this.scaleX > 1 && (this.scaleX -= 3 * e, this.scaleY -= 3 * e), this.chip.isMatching() && (this.alpha -= 4 * e), this.x = this.chip.x, this.y = this.chip.y - Constants.CELL_SIZE / 2, this.chip.isDead() && this.kill()
		}, e
	}(DNGameObject),
	CoolTransitionInState = function(t) {
		function e(e) {
			var i = this;
			t.call(this), this.pic = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.TRANSITION_BALL), this.nextState = e, this.addChild(this.pic), this.pic.x = -800, this.pic.y = Constants.SCREEN_HEIGHT / 2, this.pic.scaleX = this.pic.scaleY = Constants.SCREEN_HEIGHT / this.pic.getBounds().height * 1.2, createjs.Tween.get(this.pic).to({
				x: Constants.ASSETS_WIDTH / 2,
				rotation: 160
			}, Constants.COOL_TRANSITION_SPEED, createjs.Ease.linear).call(function() {
				return i.onFinishShade()
			})
		}
		return __extends(e, t), e.prototype.onFinishShade = function() {
			DNStateManager.g_instance.changeState(this.nextState), DNStateManager.g_instance.pushState(new CoolTransitionOutState)
		}, e.prototype.setNextState = function(t) {
			this.nextState = t
		}, e.prototype.alignByCenter = function() {}, e
	}(DNGameState),
	CoolTransitionOutState = function(t) {
		function e() {
			t.call(this), this.pic = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.TRANSITION_BALL), this.addChild(this.pic), this.pic.x = Constants.ASSETS_WIDTH / 2, this.pic.y = Constants.SCREEN_HEIGHT / 2, this.pic.scaleX = this.pic.scaleY = Constants.SCREEN_HEIGHT / this.pic.getBounds().height * 1.2, this.pic.rotation = 160, createjs.Tween.get(this.pic).to({
				x: Constants.ASSETS_WIDTH + 800,
				rotation: 320
			}, Constants.COOL_TRANSITION_SPEED, createjs.Ease.linear).call(function() {
				return DNStateManager.g_instance.popState()
			})
		}
		return __extends(e, t), e.prototype.alignByCenter = function() {}, e
	}(DNGameState),
	CounterCircle = function(t) {
		function e(e) {
			t.call(this), this.counterLabel = new DNTextField("", DNFontDef.FONT);
			var i = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.BOMB_TIMER);
			this.addChild(i), i.addChild(this.counterLabel), this.setCount(e)
		}
		return __extends(e, t), e.prototype.setCount = function(t) {
			this.counterLabel.setText(t.toString()), 10 > t ? (this.counterLabel.scaleX = this.counterLabel.scaleY = .7, this.counterLabel.x = -9, this.counterLabel.y = -11) : (this.counterLabel.scaleX = this.counterLabel.scaleY = .5, this.counterLabel.x = -11, this.counterLabel.y = -9)
		}, e
	}(createjs.Container),
	DNAssetsManager = function() {
		function t(e, i, s, n, o) {
			this.imageNameToSpriteSheetName = new Object, t.g_instance = this, this.athlases = s, this.localizableImages = n, this.manifest = e, this.soundManifest = i, this.progressCallBack = o, this.startDownLoad()
		}
		return t.prototype.startDownLoad = function() {
			var t = this;
			this.loader = new createjs.LoadQueue, this.loader.addEventListener("progress", function(e) {
				return t.progressCallBack(e)
			}), this.loader.addEventListener("complete", function(e) {
				return t.handleComplete(e)
			}), createjs.Sound.registerManifest(this.soundManifest, "assets/sound/"), this.loader.installPlugin(createjs.SoundJS), this.loader.loadManifest(this.manifest)
		}, t.prototype.handleComplete = function() {
			try {
				for (var t = 0; t < this.athlases.length; t++) {
					var e = this.athlases[t];
					e.images = [this.getBitmap(e.images[0]).image];
					for (var i = new createjs.SpriteSheet(e), s = i.getAnimations(), n = 0; n < s.length; n++) this.imageNameToSpriteSheetName[s[n]] = i
				}
			} catch (o) {
				console.log(o)
			}
			DNStateManager.g_instance.allAssetsLoaded()
		}, t.prototype.getResult = function(t) {
			return this.loader.getResult(t)
		}, t.prototype.getBitmap = function(t) {
			var e = new createjs.Bitmap(this.loader.getResult(t));
			return e.getBounds() || console.log("bitmap error", t), e
		}, t.prototype.getCenteredBitmap = function(t) {
			var e = new createjs.Bitmap(this.loader.getResult(t));
			return e.image || console.log("ERROR HERE", t), e.x = -e.image.width / 2, e.y = -e.image.height / 2, e
		}, t.prototype.getImage = function(t) {
			-1 != this.localizableImages.indexOf(t) && (t = DNStringManager.getInstance().getLanguagePrefix() + t);
			var e = new createjs.Container;
			return this.imageNameToSpriteSheetName[t] ? (e.addChild(this.getSprite(t)), e) : (e.addChild(this.getBitmap(t)), e)
		}, t.prototype.getCenteredImage = function(t) {
			var e = this.getImage(t);
			return e.x = -e.getBounds().width / 2, e.y = -e.getBounds().height / 2, e
		}, t.prototype.getCenteredImageWithProxy = function(t) {
			var e = new createjs.Container;
			return e.addChild(this.getCenteredImage(t)), e
		}, t.prototype.getSprite = function(t) {
			var e = new createjs.Sprite(this.imageNameToSpriteSheetName[t], t);
			return e.stop(), e
		}, t.prototype.getCenteredSprite = function(t) {
			var e = this.getSprite(t);
			return e.x = -e.getBounds().width / 2, e.y = -e.getBounds().height / 2, e
		}, t
	}(),
	DN_TEXT_ALIGN_HOR;
! function(t) {
	t[t.LEFT = 0] = "LEFT", t[t.RIGHT = 1] = "RIGHT", t[t.CENTER = 2] = "CENTER"
}(DN_TEXT_ALIGN_HOR || (DN_TEXT_ALIGN_HOR = {}));
var DN_TEXT_ALIGN_VERT;
! function(t) {
	t[t.TOP = 0] = "TOP", t[t.MIDDLE = 1] = "MIDDLE", t[t.BOTTOM = 2] = "BOTTOM"
}(DN_TEXT_ALIGN_VERT || (DN_TEXT_ALIGN_VERT = {}));
var DNBitmapLabel = function(t) {
		function e(e, i, s, n, o) {
			t.call(this), this.maxW = 0, this.alignH = DN_TEXT_ALIGN_HOR.CENTER, this.alignW = DN_TEXT_ALIGN_VERT.TOP, this.pic = new createjs.Container, this.symbols = [], this.maxScale = 1e3, void 0 != s && (this.alignH = s), this.maxW = n || 0, this.font = e, this.maxScale = o || 1e3, this.addChild(this.pic), i && this.setText(i)
		}
		return __extends(e, t), e.prototype.setText = function(t) {
			this.text = t, this.pic.removeAllChildren(), this.symbols = [];
			for (var e = 0, i = 0; i < t.length; i++) {
				var s = t.charAt(i),
					n = new createjs.Container,
					o = DNAssetsManager.g_instance.getImage(this.font.name + s);
				o.getBounds() ? this.font.charSet[s] ? (n.addChild(o), this.pic.addChild(n), n.x = e, n.x += this.font.charSet[s].offset_x, n.y += this.font.charSet[s].offset_y, e += this.font.charSet[s].width, this.symbols.push(n)) : console.log("Error. No description data for char:", s) : console.log("Error. Cant find char in font", this.font.name, s)
			}
			this.calcScale(), this.calcAlign()
		}, e.prototype.setMinScale = function(t) {
			this.pic.scaleX = this.pic.scaleY = t, this.calcAlign()
		}, e.prototype.calcScale = function() {
			var t = 1;
			if (0 != this.maxW) {
				if (null == this.pic.getBounds()) return;
				this.pic.getBounds().width > this.maxW && (t = this.maxW / this.pic.getBounds().width)
			}
			this.pic.scaleX = this.pic.scaleY = Math.min(t, this.maxScale)
		}, e.prototype.calcAlign = function() {
			if (!this.getBounds()) return void console.log("text error");
			switch (this.alignH) {
				case DN_TEXT_ALIGN_HOR.CENTER:
					this.pic.x = .5 * -this.pic.getBounds().width * this.pic.scaleX, this.debugShape && (this.debugShape.x = -this.maxW / 2);
					break;
				case DN_TEXT_ALIGN_HOR.LEFT:
					this.pic.x = 0, this.debugShape && (this.debugShape.x = 0);
					break;
				case DN_TEXT_ALIGN_HOR.RIGHT:
					this.pic.x = -this.pic.getBounds().width * this.pic.scaleX, this.debugShape && (this.debugShape.x = -this.maxW)
			}
		}, e.prototype.getText = function() {
			return this.text
		}, e
	}(DNGUIObject),
	DNGameConfig = function() {
		function t() {}
		return t.loadAPI = function() {
			try {
				/*SG_Hooks.start(),*/ gCanvas = document.getElementById("canvas"), gCanvas.width = 700, gCanvas.height = 900;
				var t = 'en'
				// var t = SG.lang;
				DNStringManager.getInstance().setLanguage(t)/*, SG_Hooks.setOrientationHandler(function() {
					DNStateManager.g_instance.onOrientationChanged()
				}), SG_Hooks.setResizeHandler(function() {
					DNStateManager.g_instance.onResize(null)
				})*/
			} catch (e) {}
		}, t.submitHighScore = function() {}, t.showLeaderboards = function() {}, t.showAds = function() {}, t.pauseGame = function() {
			DNStateManager.g_instance.onPause()
		}, t.resumeGame = function() {
			DNStateManager.g_instance.onResume()
		}, t.restartGame = function() {
			DNStateManager.g_instance.onRestart()
		}, t.soundChange = function(t) {
			DNSoundManager.g_instance.setSoundEnabled(t)
		}, t.goMoreGames = function() {}, t.getBrandingPic = function() {
			return null
		}, t.goLogo = function() {}/*, t.haveAd = SG_Hooks.isEnabledIncentiviseButton()*/, t.needShowRotateScreen = !0, t.haveHighScores = !1, t.adsFrequency = 100, t.haveMoreGames = !0, t.haveBranding = !1, t
	}(),
	DNLanguageSelector = function(t) {
		function e(i, s) {
			var n = this;
			t.call(this, "flags/back", null), this.allLanguages = [], this.state = e.STATE_NORMAL, this.setHandler(function() {
				return n.onTap()
			}), this.allLanguagesNames = s;
			for (var o = 0; o < this.allLanguagesNames.length; o++) this.allLanguages.push(new DNFlatButton("flags/" + this.allLanguagesNames[o], function() {
				return n.onFlagTap()
			})), this.addChild(this.allLanguages[o]), i.addGuiObject(this.allLanguages[o]), this.allLanguages[o].visible = !1;
			this.setLanguage(DNStringManager.getInstance().getLanguage())
		}
		return __extends(e, t), e.prototype.setLanguage = function(t) {
			this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy("flags/" + t)), DNStringManager.getInstance().setLanguage(t)
		}, e.prototype.onTap = function() {
			switch (this.state) {
				case e.STATE_NORMAL:
					this.show();
					break;
				case e.STATE_SHOWED:
					this.hide()
			}
		}, e.prototype.show = function() {
			var t = this;
			this.state = e.STATE_SHOW;
			for (var i = 0; i < this.allLanguages.length; i++) {
				this.allLanguages[i].y = 0, this.allLanguages[i].visible = !0, this.allLanguages[i].scaleX = this.allLanguages[i].scaleY = .5;
				var s = createjs.Tween.get(this.allLanguages[i]).wait(50 * i).to({
					y: -100 - 86 * (i % 4),
					x: -86 * Math.floor(i / 4),
					scaleX: 1,
					scaleY: 1
				}, 400, createjs.Ease.cubicOut);
				i == this.allLanguages.length - 1 && s.call(function() {
					return t.onShowEnded()
				})
			}
		}, e.prototype.hide = function() {
			var t = this;
			this.state = e.STATE_SHOW;
			for (var i = 0; i < this.allLanguages.length; i++) {
				var s = createjs.Tween.get(this.allLanguages[i]).wait(70 * i).to({
					x: 0,
					y: 0,
					scaleX: .5,
					scaleY: .5
				}, 300, createjs.Ease.cubicOut);
				i == this.allLanguages.length - 1 && s.call(function() {
					return t.onHideEnded()
				})
			}
		}, e.prototype.onShowEnded = function() {
			this.state = e.STATE_SHOWED
		}, e.prototype.onHideEnded = function() {
			for (var t = 0; t < this.allLanguages.length; t++) this.allLanguages[t].visible = !1;
			this.state = e.STATE_NORMAL
		}, e.prototype.onFlagTap = function() {
			if (this.state == e.STATE_SHOWED)
				for (var t = 0; t < this.allLanguages.length; t++)
					if (this.allLanguages[t].wasHandlerThisFrame) return this.setLanguage(this.allLanguagesNames[t]), void this.hide()
		}, e.STATE_NORMAL = 0, e.STATE_SHOW = 1, e.STATE_SHOWED = 2, e.STATE_HIDE = 3, e
	}(DNFlatButton),
	DNLoadingBar = function(t) {
		function e(e, i, s, n) {
			t.call(this), this.loadingShape = new createjs.Shape, this.loadingShapeBack1 = new createjs.Shape, this.loadingShapeBack2 = new createjs.Shape, this.overrideBar = new createjs.Shape, this.maxWidth = 300, this.deltaY = 40, this.labelPercentDownload = new createjs.Text("Loading: 100%", "bold 35px Verdana", i), this.labelPercentDownload.textAlign = "center", this.loadingShapeBack1.graphics.beginFill(s), this.loadingShapeBack1.graphics.drawRect(-4, -4, this.maxWidth + 8, this.deltaY + 8), this.loadingShapeBack1.graphics.endFill(), this.addChild(this.loadingShapeBack1), this.loadingShape.graphics.beginFill(n), this.loadingShape.graphics.drawRect(0, 0, this.maxWidth, this.deltaY), this.loadingShape.graphics.endFill(), this.addChild(this.loadingShape), this.loadingShape.scaleX = 0, this.labelPercentDownload.y = -10, this.loadingShape.x = -this.maxWidth / 2, this.loadingShape.y = 1.5 * +this.deltaY, this.loadingShapeBack1.x = this.loadingShape.x, this.loadingShapeBack1.y = this.loadingShape.y
		}
		return __extends(e, t), e.prototype.setProgress = function(t) {
			this.labelPercentDownload.text = "Loading: " + (100 * t).toFixed(0) + "%", this.loadingShape.scaleX = t
		}, e
	}(createjs.Container),
	DNLogoPlaceholder = function(t) {
		function e(e, i) {
			if (t.call(this), this.scaleCalculated = !1, this.maxWidth = e, this.maxHeight = i, this.visible = DNGameConfig.haveBranding, Constants.DEBUG_MODE) {
				var s = new createjs.Shape;
				s.graphics.beginFill("#ff0000"), s.graphics.drawRect(0, 0, e, i), s.graphics.endFill(), s.x = -e / 2, s.y = -i / 2, this.addChild(s)
			} else this.picture = DNGameConfig.getBrandingPic(), this.addChild(this.picture);
			this.calcScale()
		}
		return __extends(e, t), e.prototype.calcScale = function() {
			if (!this.scaleCalculated) {
				if (!this.picture || !this.picture.getBounds()) return;
				try {
					var t = Math.min(this.maxWidth / this.picture.getBounds().width, this.maxHeight / this.picture.getBounds().height);
					1 > t && (this.picture.scaleX = this.picture.scaleY = t), this.scaleCalculated = !0
				} catch (e) {
					console.log("error, logo placeholder pic")
				}
			}
		}, e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.calcScale()
		}, e.prototype.onMouseDown = function(t, e) {
			this.hitTestSmart(t, e) && DNGameConfig.goLogo()
		}, e.prototype.hitTestSmart = function(t, e) {
			if (!this.parent || !this.visible) return !1;
			if (!this.picture || !this.picture.getBounds()) return !1;
			var i = this.localToGlobal(0, 0);
			i.x /= Constants.SCREEN_SCALE, i.y /= Constants.SCREEN_SCALE;
			var s = .5 * this.picture.getBounds().width * this.scaleX,
				n = .5 * this.picture.getBounds().height * this.scaleY;
			return i.x < t + s && i.x > t - s && i.y < e + n && i.y > e - n
		}, e
	}(DNGUIObject),
	DNPlaceholder = function(t) {
		function e() {
			t.call(this)
		}
		return __extends(e, t), e
	}(DNGUIObject),
	DNProgressBar = function(t) {
		function e(e, i) {
			t.call(this), this.shape = new createjs.Shape, this.width = 0, e && this.addChild(DNAssetsManager.g_instance.getImage(e));
			var s = DNAssetsManager.g_instance.getImage(i);
			this.addChild(s), this.width = s.getBounds().width, this.shape.graphics.beginFill("#000000"), this.shape.graphics.drawRect(0, 0, s.getBounds().width, s.getBounds().height), this.shape.graphics.endFill(), s.mask = this.shape
		}
		return __extends(e, t), e.prototype.setProgress = function(t) {
			t > 1 && (t = 1), this.shape.x = (t - 1) * this.width
		}, e
	}(DNGUIObject),
	DNSoundManager = function() {
		function t() {
			this.soundEnabled = !0, this.initiliazed = !1, this.focus = !0, this.hidden = !1, this.wasSoundEnabled = !0, this.wasPauseCall = !1, this.soundsOnFrame = [], this.wasMusicPlay = !1
		}
		return t.prototype.onLostFocus = function() {
			this.focus = !1, this.update()
		}, t.prototype.onFocus = function() {
			this.focus = !0, this.update()
		}, t.prototype.init = function() {
			try {
				if (!this.initiliazed) {
					if (!createjs.Sound.initializeDefaultPlugins()) return;
					this.initiliazed = !0
				}
			} catch (t) {}
		}, t.prototype.isSoundEnabled = function() {
			return this.soundEnabled
		}, t.prototype.setSoundEnabled = function(t) {
			this.soundEnabled = t;
			var e = !t || !this.focus || this.hidden;
			try {
				if (createjs.Sound.getMute() == e) return;
				createjs.Sound.setMute(e)
			} catch (i) {}
		}, t.prototype.play = function(t, e) {
			try {
				if (e || (e = 1), this.initiliazed && this.soundEnabled) return createjs.Sound.play(t, createjs.Sound.INTERRUPT_NONE, 0, 0, 0, e)
			} catch (i) {}
			return null
		}, t.prototype.playMusic = function(e) {
			try {
				if (e || (e = 1), this.initiliazed && this.soundEnabled && !this.wasMusicPlay) {
					this.wasMusicPlay = !0;
					var i = createjs.Sound.play(t.SOUND_MUSIC, createjs.Sound.INTERRUPT_NONE, 0, 0, -1, e);
					if ("playFailed" == i.playState) return this.wasMusicPlay = !1, null
				}
			} catch (s) {}
			return null
		}, t.prototype.update = function() {
			this.soundsOnFrame.length = 0, this.initiliazed && (this.hidden = document.hidden || document.webkitHidden || document.msHidden ? !0 : !1, this.setSoundEnabled(this.soundEnabled)), this.setSoundEnabled(this.soundEnabled)
		}, t.prototype.playSinglePerFrame = function(t, e) {
			-1 == this.soundsOnFrame.indexOf(t) && (this.soundsOnFrame.push(t), this.play(t, e))
		}, t.prototype.onPause = function() {
			this.wasPauseCall = !0, this.wasSoundEnabled = this.isSoundEnabled(), this.isSoundEnabled() && this.setSoundEnabled(!1)
		}, t.prototype.onResume = function() {
			this.wasPauseCall && (this.wasSoundEnabled && this.setSoundEnabled(!0), this.wasPauseCall = !1)
		}, t.g_instance = new t, t.SOUND_MUSIC = "music", t.SOUND_CLICK = "click", t.SOUND_MATCH_1 = "match_1", t.SOUND_MATCH_2 = "match_2", t.SOUND_MATCH_3 = "match_3", t.SOUND_MATCH_4 = "match_4", t.SOUND_MATCH_5 = "match_5", t.SOUND_DROP_1 = "drop_1", t.SOUND_DROP_2 = "drop_2", t.SOUND_DROP_3 = "drop_3", t.SOUND_LINE = "line", t.SOUND_KILL_COLOR = "kill_color", t.SOUND_LOSE = "lose", t.SOUND_BOOM = "boom", t.SOUND_AWESOME = "awesome", t.SOUND_EXCHANGE = "exchange", t.SOUND_WIN = "win", t.SOUND_LIGHTING = "lighting", t
	}(),
	DNStaticPicture = function(t) {
		function e(e) {
			t.call(this), this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy(e))
		}
		return __extends(e, t), e
	}(DNGUIObject),
	DNStringManager = function() {
		function t() {
			this.container = new createjs.Container, this.strings = new Object, this.allStrings = null, this.allStrings = g_strings, this.setLanguage("ru")
		}
		return t.getInstance = function() {
			return t.g_instance
		}, t.prototype.getString = function(t) {
			return this.strings ? this.strings[t] || "???" : "!!!"
		}, t.prototype.setLanguage = function(t) {
			this.strings = this.allStrings[t], this.language = t
		}, t.prototype.getLanguagePrefix = function() {
			return "en" == this.language ? "" : this.language + "/"
		}, t.prototype.getLanguage = function() {
			return this.language
		}, t.g_instance = new t, t.SELECT_BOOSTER = "SELECT_BOOSTER", t.PRICE = "PRICE", t.SPLASH_TIME = "SPLASH_TIME", t.TASK_REMOVE_CANDIES = "TASK_REMOVE_CANDIES", t.TASK_MARSH = "TASK_MARSH", t.TASK_CLEAR_DIRT = "TASK_CLEAR_DIRT", t.TASK_SAVE_STRAWBERRY = "TASK_SAVE_STRAWBERRY", t.TASK_SAVE_BALOON = "TASK_SAVE_BALOON", t.TASK_SCORE = "TASK_SCORE", t.POWERUP_CELL = "POWERUP_CELL", t.NOT_ENOUGH_GOLD = "NOT_ENOUGH_GOLD", t.GOAL_CHOCO = "GOAL_CHOCO", t.OUT_OF_LIFES = "OUT_OF_LIFES", t.GOAL = "GOAL", t.THANKS = "THANKS", t.YOU_GET = "YOU_GET", t.WATCH_FOR_MORE = "WATCH_FOR_MORE", t.YOU_WATCH_ALL = "YOU_WATCH_ALL", t.COME_BACK = "COME_BACK", t.FULL = "FULL", t
	}(),
	DNTextBox = function(t) {
		function e(e, i, s, n) {
			t.call(this), this.textScale = 1, this.minScale = .1, this.maxTextWidth = s, this.maxTextHeight = n, this.font = e, this.setText(i)
		}
		return __extends(e, t), e.prototype.setText = function(t) {
			this.removeAllChildren();
			for (var e = 0, i = new DNBitmapLabel(this.font, " "), s = i.getBounds().width, n = t.length, o = "", a = [], r = 0, h = 0; n + 1 > h; h++)
				if (" " == t.charAt(h) || h == n) {
					if (0 != o.length) {
						var i = new DNBitmapLabel(this.font, o);
						if (i.scaleX = i.scaleY = this.textScale, a.push(i), !i.getBounds()) return void console.log("text error");
						var f = i.getBounds().width;
						f > r && (r = f)
					}
					o = ""
				} else o += t.charAt(h);
			for (var _ = 0, l = 0, c = 0, u = 0, h = 0; h < a.length; h++) {
				l += (a[h].getBounds().width + s) * this.textScale, c++;
				var d = h == a.length - 1;
				if (l > this.maxTextWidth || d) {
					c > 1 && l > this.maxTextWidth && (l -= a[h].getBounds().width, c--, h--);
					for (var p = "", g = u; u + c > g; g++) p += a[g].getText(), p += " ";
					var y = new DNBitmapLabel(this.font, p);
					y.scaleX = y.scaleY = this.textScale, this.addChild(y), y.y = _, _ += this.font.height * this.textScale, l = 0, u += c, c = 0, e = _
				}
			}(e > this.maxTextHeight || r > this.maxTextWidth) && this.textScale > this.minScale && (this.textScale -= .05, this.setText(t))
		}, e
	}(DNGUIObject),
	FallingCandy = function(t) {
		function e() {
			t.call(this), this.speedX = 80 * Utils.RandomRange(.2, 1.1) * 1.6, this.speedY = 240 * Utils.RandomRange(.9, 1.1) * 1.6, this.rotSpeed = Utils.RandomRange(-350, 350), this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy("cake_" + Utils.RandomRangeInt(1, 5)))
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.x -= this.speedX * e, this.y += this.speedY * e, this.rotation += this.rotSpeed * e, this.y > 1e3 && this.kill()
		}, e
	}(DNGameObject),
	FlyingPoints = function(t) {
		function e(e) {
			t.call(this), this.delay = .2, this.wasShow = !1;
			var i = new DNTextField("p" + e.toString(), DNFontDef.FLYING_POINTS);
			this.addChild(i), i.x = -i.getBounds().width / 2, i.y = -i.getBounds().height / 2, this.scaleX = this.scaleY = .1, this.visible = !1
		}
		return __extends(e, t), e.prototype.update = function(e) {
			this.delay -= e, this.delay > 0 || (this.wasShow || (this.wasShow = !0, createjs.Tween.get(this).to({
				scaleX: 1,
				scaleY: 1
			}, 400, createjs.Ease.backOut), this.visible = !0), t.prototype.update.call(this, e), this.liveTime > .5 && (this.y -= 70 * e, this.alpha -= 1.5 * e, this.alpha <= 0 && this.kill()))
		}, e
	}(DNGameObject),
	GameData = function() {
		function t() {
			this.STARS_PER_LEVEL = "STARS_PER_LEVEL", this.BOOSTERS_COUNT = "BOOSTERS_COUNT", this.LEVELS_COMPLETED = "LEVELS_COMPLETED", this.TOTAL_SCORE = "TOTAL_SCORE", this.GOLD = "GOLD", this.LOST_LIFE_TIME = "LOST_LIFE_TIME", this.LIFE_COUNT = "LIFE_COUNT", this.levelsCompleted = 0, this.totalScore = 0, this.gold = 0, this.lifeCount = 5, this.lostLifeTime = Date.now(), this.starsPerLevel = [], this.ALL_BOOSTERS_NAMES = [t.BOOSTER_MOVES, t.BOOSTER_TIME, t.BOOSTER_BOMB, t.BOOSTER_LOLIPOP, t.BOOSTER_5, t.BOOSTER_4], this.prices = [200, 200, 200, 100, 250, 200], this.boostersCount = [1, 1, 1, 3, 1, 2], this.mapEditorLevel = {
				form: [
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
					[0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
					[0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
				],
				dirt: null,
				chips: [
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 1, 4, 3, 2, 2, 0, 0, 0],
					[0, 0, 4, 1, 1, 2, 3, 0, 0, 0],
					[0, 0, 4, 1, 1, 3, 3, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
				],
				chip_types: 5,
				moves: 1,
				time: 0,
				chip_goal: 4,
				chip_goal_count: 1,
				goal: PlayState.GOAL_COUNT,
				score_goal_count: 0,
				bombProb: 0,
				bombCounter: 0,
				gravity: !0
			}
		}
		return t.prototype.updateLivesInfo = function() {
			var t = this.timeLeftSinceLostLife();
			t > Constants.TIME_TO_RESTORE_HEART && this.restoreLifeWithTime(Math.ceil(t / Constants.TIME_TO_RESTORE_HEART))
		}, t.prototype.spendLive = function() {
			this.lifeCount--, 5 == this.lifeCount && (this.lostLifeTime = Date.now()), this.lifeCount <= 0 && (this.lifeCount = 0), this.saveLifeInfo()
		}, t.prototype.restoreLifeWithTime = function(t) {
			this.lifeCount += t, this.lifeCount > Constants.MAX_LIFES && (this.lifeCount = Constants.MAX_LIFES), this.lostLifeTime = Date.now(), this.saveLifeInfo()
		}, t.prototype.restoreLifeWithGold = function() {
			this.lifeCount++, this.lifeCount > Constants.MAX_LIFES && (this.lifeCount = Constants.MAX_LIFES), this.saveLifeInfo()
		}, t.prototype.timeLeftSinceLostLife = function() {
			return Date.now() - this.lostLifeTime
		}, t.prototype.getLifeCount = function() {
			return this.lifeCount
		}, t.prototype.spendBooster = function(t) {
			Constants.DEBUG_MODE && this.boostersCount[this.ALL_BOOSTERS_NAMES.indexOf(t)] <= 0 && console.log("BUG HERE"), this.boostersCount[this.ALL_BOOSTERS_NAMES.indexOf(t)]--, this.save()
		}, t.prototype.addBooster = function(t) {
			this.boostersCount[this.ALL_BOOSTERS_NAMES.indexOf(t)]++, this.save()
		}, t.prototype.getBoostersCount = function(t) {
			return this.boostersCount[this.ALL_BOOSTERS_NAMES.indexOf(t)]
		}, t.prototype.getBoostPrice = function(t) {
			return this.prices[this.ALL_BOOSTERS_NAMES.indexOf(t)]
		}, t.prototype.addGold = function(t) {
			this.gold += t
		}, t.prototype.unlockAllLevels = function() {
			this.levelsCompleted = this.getTotalLevels() - 1, this.save()
		}, t.getInstance = function() {
			return null == this.instance && (this.instance = new t), this.instance
		}, t.prototype.save = function() {
			try {
				localStorage.setItem(this.LEVELS_COMPLETED, this.levelsCompleted.toString()), localStorage.setItem(this.TOTAL_SCORE, this.totalScore.toString()), console.log(this.starsPerLevel + "save"), localStorage.setItem(this.STARS_PER_LEVEL, JSON.stringify(this.starsPerLevel)), localStorage.setItem(this.BOOSTERS_COUNT, JSON.stringify(this.boostersCount)), localStorage.setItem(this.GOLD, this.gold.toString())
			} catch (t) {}
		}, t.prototype.saveLifeInfo = function() {
			try {
				localStorage.setItem(this.LOST_LIFE_TIME, this.lostLifeTime.toString()), localStorage.setItem(this.LIFE_COUNT, this.lifeCount.toString())
			} catch (t) {}
		}, t.prototype.loadLifeInfo = function() {
			try {
				localStorage.getItem(this.LIFE_COUNT) && (this.lifeCount = +localStorage.getItem(this.LIFE_COUNT) || 5), localStorage.getItem(this.LOST_LIFE_TIME) && (this.lostLifeTime = +localStorage.getItem(this.LOST_LIFE_TIME) || 0)
			} catch (t) {}
		}, t.prototype.load = function() {
			try {
				this.levelsCompleted = +localStorage.getItem(this.LEVELS_COMPLETED) || 0, this.totalScore = +localStorage.getItem(this.TOTAL_SCORE) || 0;
				for (var t = 0; t < this.getTotalLevels(); t++) this.starsPerLevel.push(0);
				localStorage.getItem(this.STARS_PER_LEVEL) && (this.starsPerLevel = JSON.parse(localStorage.getItem(this.STARS_PER_LEVEL))), console.log(this.starsPerLevel + "load"), localStorage.getItem(this.BOOSTERS_COUNT) && (this.boostersCount = JSON.parse(localStorage.getItem(this.BOOSTERS_COUNT))), localStorage.getItem(this.GOLD) && (this.gold = +localStorage.getItem(this.GOLD) || 0), this.loadLifeInfo()
			} catch (e) {}
		}, t.prototype.onWinLevel = function(t, e, i) {
			this.totalScore += e, this.starsPerLevel[t] = Math.max(this.starsPerLevel[t], i), t == this.levelsCompleted && (this.levelsCompleted = t + 1, this.levelsCompleted > this.getTotalLevels() && (this.levelsCompleted = this.getTotalLevels())), this.save()
		}, t.prototype.getTotalScore = function() {
			return this.totalScore
		}, t.prototype.levelsAvailable = function() {
			return Constants.DEBUG_MODE ? this.getTotalLevels() : this.levelsCompleted + 1
		}, t.prototype.getLevelDef = function(t) {
			return -1 == t ? this.mapEditorLevel : Levels.levels[t]
		}, t.prototype.getTotalLevels = function() {
			return Levels.levels.length
		}, t.prototype.getStarsInLevel = function(t) {
			return this.starsPerLevel[t]
		}, t.prototype.totalStars = function() {
			for (var t = 0, e = 0; e < this.getTotalLevels(); e++) this.starsPerLevel[e] && (t += this.starsPerLevel[e]);
			return t
		}, t.prototype.getGold = function() {
			return this.gold
		}, t.instance = null, t.BOOSTER_MOVES = "MOVES", t.BOOSTER_TIME = "TIME", t.BOOSTER_BOMB = "BOMB", t.BOOSTER_LOLIPOP = "LOLIPOP", t.BOOSTER_5 = "5", t.BOOSTER_4 = "4", t
	}(),
	GameOverState = function(t) {
		function e(e, i, s) {
			var n = this;
			t.call(this), this.loseReason = s, this.level = e + 1, this.score = i;
			var o = new DNJellyButton(Images.BUTTON_RESTART, function() {
				return n.onRestartTouch()
			});
			this.panel.addChild(o), this.addGuiObject(o), o.x = -75, o.y = 130, o.scaleX = o.scaleY = .8;
			var a = new DNJellyButton(Images.BUTTON_EXIT, function() {
				return n.onExitTouch()
			});
			switch (this.panel.addChild(a), this.addGuiObject(a), a.x = 75, a.y = 130, a.scaleX = a.scaleY = .8, this.loseReason) {
				case PlayState.LOSE_REASON_BOMB:
					this.booster = new SaveBoosterButton(Images.BOOSTER_BOMB, GameData.BOOSTER_BOMB, function() {
						return n.onBoosterTouch()
					});
					break;
				case PlayState.LOSE_REASON_MOVES:
					this.booster = new SaveBoosterButton(Images.BOOSTER_MOVES, GameData.BOOSTER_MOVES, function() {
						return n.onBoosterTouch()
					});
					break;
				case PlayState.LOSE_REASON_TIME:
					this.booster = new SaveBoosterButton(Images.BOOSTER_TIME, GameData.BOOSTER_TIME, function() {
						return n.onBoosterTouch()
					})
			}
			this.panel.addChild(this.booster), this.addGuiObject(this.booster), this.booster.x = 0, this.booster.y = -40;
			var r = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.GAMEOVER_CAPTION);
			this.panel.addChild(r), r.y = -220
		}
		return __extends(e, t), e.prototype.onBoosterTouch = function() {
			var t = GameData.getInstance().getBoostersCount(this.booster.boosterName);
			t > 0 ? (PlayState.g_instance.saveByBooster(this.loseReason), this.hide()) : DNStateManager.g_instance.pushState(new BuyMoreBoostersState(this.booster))
		}, e.prototype.onRestartTouch = function() {
			try {
				1 == DNSoundManager.g_instance.soundEnabled ? (DNSoundManager.g_instance.setSoundEnabled(!1), musicFlag = !0) : musicFlag = !1, /*SG_Hooks.levelFinished(this.level, this.score), SG_Hooks.gameOver(this.level, this.score, function() {
					1 == musicFlag && DNSoundManager.g_instance.setSoundEnabled(!0)
				})*/1 == musicFlag && DNSoundManager.g_instance.setSoundEnabled(!0)
			} catch (t) {}
			return 0 == GameData.getInstance().getLifeCount() && DNGameConfig.haveAd ? void DNStateManager.g_instance.pushState(new LoseLifeState) : void DNStateManager.g_instance.pushState(new SelectBoosterState(PlayState.g_curLevel))
		}, e.prototype.onExitTouch = function() {
			try {
				1 == DNSoundManager.g_instance.soundEnabled ? (DNSoundManager.g_instance.setSoundEnabled(!1), musicFlag = !0) : musicFlag = !1,/* SG_Hooks.levelFinished(this.level, this.score), SG_Hooks.gameOver(this.level, this.score, function() {
					1 == musicFlag && DNSoundManager.g_instance.setSoundEnabled(!0)
				})*/1 == musicFlag && DNSoundManager.g_instance.setSoundEnabled(!0)
			} catch (t) {}
			DNStateManager.g_instance.pushState(new CoolTransitionInState(new SelectLevelState))
		}, e
	}(PopupState),
	GetMoreCoinsState = function(t) {
		function e(e) {
			var i = this;
			t.call(this), this.notEnouthLabel = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.NOT_ENOUGH_GOLD), DN_TEXT_ALIGN_HOR.CENTER, 430);
			var s = new DNJellyButton(Images.BUTTON_CLOSE, function() {
				return i.hide()
			});
			this.panel.addChild(s), this.addGuiObject(s), s.x = 230, s.y = -190;
			var n = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.GOLD_ICON);
			if (this.panel.addChild(n), n.x = -180, n.y = -160, this.goldLabel = new DNTextField(GameData.getInstance().getGold().toString(), DNFontDef.FONT), this.panel.addChild(this.goldLabel), this.goldLabel.x = -140, this.goldLabel.y = -180, e) this.panel.addChild(this.notEnouthLabel), this.notEnouthLabel.y = 0, this.notEnouthLabel.alpha = 1;
			else {
				var o = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.WATCH_FOR_MORE), DN_TEXT_ALIGN_HOR.CENTER, 430);
				this.panel.addChild(o), o.y = 0, o.alpha = 1
			}
			var a = new DNJellyButton("button_video", function() {
				return i.onWatchTouch()
			});
			this.panel.addChild(a), this.addGuiObject(a), a.y = 140, a.scaleX = a.scaleY = .85
		}
		return __extends(e, t), e.prototype.onWatchTouch = function() {
			function t(t) {
				1 == t ? (GameData.getInstance().addGold(25), DNStateManager.g_instance.pushState(new ClaimCoinsState)) : (DNStateManager.g_instance.pushState(new NoMoreVideosState), this.goldLabel.setText(GameData.getInstance().getGold().toString())), 1 == musicFlag && DNSoundManager.g_instance.setSoundEnabled(!0)
			}
			1 == DNSoundManager.g_instance.soundEnabled ? (DNSoundManager.g_instance.setSoundEnabled(!1), musicFlag = !0) : musicFlag = !1/*, SG_Hooks.triggerIncentivise(t)*/
		}, e
	}(PopupState),
	HeartParticle = function(t) {
		function e(e, i) {
			t.call(this), this.rotSpeed = Utils.RandomRange(-120, 120), this.speedX = e, this.speedY = i, this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.HEART_PARTICLE)), this.alpha = 0
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.rotation += this.rotSpeed * e, this.x += this.speedX * e, this.y += this.speedY * e, this.liveTime > .3 ? (this.alpha -= 3 * e, this.alpha <= 0 && this.kill()) : this.alpha += 4 * e
		}, e
	}(DNGameObject),
	Jellier = function(t) {
		function e(e, i, s, n) {
			t.call(this), this.jellyScale = .1, this.maxScale = .2, n && (this.maxScale = n), this.origScale = e.scaleX, this.speed = i, this.obj = e, this.delay = s
		}
		return __extends(e, t), e.prototype.update = function(e) {
			if (this.delay > 0) return void(this.delay -= e);
			t.prototype.update.call(this, e);
			var i = this.liveTime * this.speed;
			this.jellyScale = this.maxScale * (3 * Math.PI - i) / (3 * Math.PI);
			var s = Math.sin(i) * this.jellyScale;
			this.obj.scaleX = this.origScale + s, this.obj.scaleY = this.origScale - s, i >= 3 * Math.PI && (this.obj.scaleX = this.obj.scaleY = 1 * this.origScale, this.kill())
		}, e
	}(DNGameObject),
	KillColorEffect = function(t) {
		function e(e, i) {
			t.call(this);
			var s = 2e3;
			this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.DROP));
			var n = new createjs.Point(i.x - e.x, i.y - e.y);
			this.distance = Math.sqrt(n.x * n.x + n.y * n.y), this.maxTime = this.distance / s, n.x / this.distance, this.speed = new createjs.Point(n.x / this.distance * s, n.y / this.distance * s), this.rotation = Utils.RadToGrad(Math.atan2(n.y, n.x))
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.liveTime < this.maxTime ? (this.x += e * this.speed.x, this.y += e * this.speed.y) : (this.alpha -= 3.5 * e, this.alpha <= 0 && this.kill())
		}, e
	}(DNGameObject),
	KillLineEffect = function(t) {
		function e(e) {
			t.call(this), this.speed = e, this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.SICKLE)), e.x < 0 && (this.rotation = 180), e.x > 0 && (this.rotation = 0), e.y < 0 && (this.rotation = -90), e.y > 0 && (this.rotation = 90)
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.x += e * this.speed.x, this.y += e * this.speed.y, this.x > Constants.ASSETS_WIDTH + 86 && this.kill(), this.x < -86 && this.kill(), this.y < 300 && this.speed.y < 0 && (this.alpha -= 6 * e), this.y < -53 && this.kill(), this.y > PlayState.g_instance.fieldHeight * Constants.CELL_SIZE * 1.3 && this.kill()
		}, e
	}(DNGameObject),
	LevelDef = function() {
		function t() {}
		return t
	}(),
	Levels = function() {
		function t() {}
		return t.levels = g_levels, t
	}(),
	LoseLifeState = function(t) {
		function e() {
			var e = this;
			t.call(this);
			var i = new DNJellyButton(Images.BUTTON_CLOSE, function() {
				return e.hide()
			});
			this.panel.addChild(i), this.addGuiObject(i), i.x = 230, i.y = -190;
			var s = new DNJellyButton("button_video", function() {
				return e.onWatchTouch()
			});
			this.panel.addChild(s), this.addGuiObject(s), s.x = 0, s.y = 130;
			var n = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.OUT_OF_LIFES), DN_TEXT_ALIGN_HOR.CENTER, 300);
			n.y = -180, this.panel.addChild(n);
			var o = DNAssetsManager.g_instance.getCenteredImageWithProxy("heart");
			this.panel.addChild(o), o.x = -50, o.y = -20;
			var a = new DNBitmapLabel(Fonts.font_pink, "=0", DN_TEXT_ALIGN_HOR.CENTER, 300);
			a.y = -50, a.x = 30, a.scaleX = a.scaleY = 1.6, this.panel.addChild(a)
		}
		return __extends(e, t), e.prototype.onWatchTouch = function() {
			function t(t) {
				1 == t ? (GameData.getInstance().restoreLifeWithGold(), DNStateManager.g_instance.pushState(new CoolTransitionInState(new SelectLevelState))) : DNStateManager.g_instance.pushState(new NoMoreVideosState), 1 == musicFlag && DNSoundManager.g_instance.setSoundEnabled(!0)
			}
			1 == DNSoundManager.g_instance.soundEnabled ? (DNSoundManager.g_instance.setSoundEnabled(!1), musicFlag = !0) : musicFlag = !1/*, SG_Hooks.triggerIncentivise(t)*/
		}, e
	}(PopupState),
	MapEditorChip = function(t) {
		function e(e, i, s) {
			t.call(this), this.ice = !1, this.bonusType = null, this.chocoStrength = 2, this.hole = !1, this.stoneHeart = !1, this.baloon = !1, this.strawberry = !1, this.cage = !1, this.chocolate = !1, this.setIncexes(i, s);
			var n = !1;
			e > 10 && (n = !0, e -= 10), e > 0 && 8 > e && (this.chipPicture = DNAssetsManager.g_instance.getImage("cake_" + e), this.addChild(this.chipPicture), this.chipPicture.x = -this.chipPicture.getBounds().width / 2, this.chipPicture.y = -Constants.CELL_SIZE), this.colorID = e, 10 == e && this.convertToMarsh(), 9 == e && this.convertToStoneHeart(), 8 == e && (PlayState.g_instance.getGoal() == PlayState.GOAL_BALOON ? this.convertToBaloon() : this.convertToStrawberry()), n && this.setCage(), -1 == e && this.convertToChocolate(), -2 == e && this.convertToDoubleChocolate()
		}
		return __extends(e, t), e.prototype.convertToDoubleChocolate = function() {
			this.chocoStrength = 2, this.chocolate = !0, this.colorID = -2, this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CHOCOLATE_1), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture)
		}, e.prototype.convertToMarsh = function() {
			this.ice = !0, this.removeAllChildren(), this.colorID = 10, this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.ICE_6), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture)
		}, e.prototype.getBonusType = function() {
			return this.bonusType
		}, e.prototype.getColorID = function() {
			return this.colorID
		}, e.prototype.getIndeces = function() {
			return new createjs.Point(this.indexX, this.indexY)
		}, e.prototype.getIndexX = function() {
			return this.indexX
		}, e.prototype.getIndexY = function() {
			return this.indexY
		}, e.prototype.setIncexes = function(t, e) {
			this.indexX = t, this.indexY = e
		}, e.prototype.isHole = function() {
			return this.hole
		}, e.prototype.convertToHole = function() {
			this.dropFlags(), this.removeAllChildren(), this.cage = !1, this.chocolate = !1, this.stoneHeart = !1, this.hole = !0, this.colorID = -1
		}, e.prototype.convertHoleToChip = function() {
			this.dropFlags(), this.removeAllChildren(), this.colorID = 2, this.chipPicture = DNAssetsManager.g_instance.getImage("cake_" + this.colorID), this.addChild(this.chipPicture), this.chipPicture.x = -this.chipPicture.getBounds().width / 2, this.chipPicture.y = -Constants.CELL_SIZE
		}, e.prototype.randomID = function(t) {
			this.isChocolate() || this.isStoneHeart() || this.isStrawberry() || this.isBaloon() || (this.removeAllChildren(), this.colorID = Utils.RandomRangeInt(1, t), this.colorID >= 8 && (this.colorID = 1), this.chipPicture = DNAssetsManager.g_instance.getImage("cake_" + this.colorID), this.addChild(this.chipPicture), this.chipPicture.x = -this.chipPicture.getBounds().width / 2, this.chipPicture.y = -Constants.CELL_SIZE, this.haveCage() && this.setCage())
		}, e.prototype.nextID = function() {
			this.removeAllChildren(), -1 == this.colorID && (this.dropFlags(), this.colorID = 0), this.colorID++, this.colorID >= 8 && (this.colorID = 1), this.chipPicture = DNAssetsManager.g_instance.getImage("cake_" + this.colorID), this.addChild(this.chipPicture), this.chipPicture.x = -this.chipPicture.getBounds().width / 2, this.chipPicture.y = -Constants.CELL_SIZE, this.haveCage() && this.setCage()
		}, e.prototype.convertToStoneHeart = function() {
			this.removeAllChildren(), this.stoneHeart = !0, this.colorID = -1, this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.STONE_HEART_TRIPLE), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture)
		}, e.prototype.isStoneHeart = function() {
			return this.stoneHeart
		}, e.prototype.isBaloon = function() {
			return this.baloon
		}, e.prototype.convertToBaloon = function() {
			this.dropFlags(), this.removeAllChildren(), this.colorID = -1, this.strawberry = !0, this.chipPicture = DNAssetsManager.g_instance.getImage(Images.BALOON), this.addChild(this.chipPicture), this.chipPicture.x = -this.chipPicture.getBounds().width / 2, this.chipPicture.y = -83
		}, e.prototype.convertToStrawberry = function() {
			this.dropFlags(), this.removeAllChildren(), this.colorID = -1, this.strawberry = !0, this.chipPicture = DNAssetsManager.g_instance.getImage(Images.STRAWBERRY), this.addChild(this.chipPicture), this.chipPicture.x = -this.chipPicture.getBounds().width / 2, this.chipPicture.y = -83
		}, e.prototype.isStrawberry = function() {
			return this.strawberry
		}, e.prototype.setCage = function() {
			this.cage = !0, this.cageImage = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CAGE), this.chipPicture.addChild(this.cageImage), this.cageImage.x = Constants.CELL_SIZE / 2, this.cageImage.y = Constants.CELL_SIZE / 2
		}, e.prototype.haveCage = function() {
			return this.cage
		}, e.prototype.removeCage = function() {
			this.cage = !1, this.chipPicture.removeChild(this.cageImage)
		}, e.prototype.convertToChocolate = function() {
			this.chocoStrength = 1, this.chocolate = !0, this.colorID = -1, this.chipPicture = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CHOCOLATE_2), this.chipPicture.y = -Constants.CELL_SIZE / 2, this.addChild(this.chipPicture)
		}, e.prototype.isChocolate = function() {
			return this.chocolate
		}, e.prototype.dropFlags = function() {
			this.chocolate = !1, this.strawberry = !1, this.baloon = !1, this.stoneHeart = !1, this.hole = !1
		}, e
	}(DNGameObject),
	MapEditorState = function(t) {
		function e(i) {
			var s = this;
			t.call(this), this.fieldWidth = 10, this.fieldHeight = 8, this.fieldIterator = 0, this.dirtLayer = new createjs.Container, this.underChipsLayer = new createjs.Container, this.backChipsLayer = new createjs.Container, this.holeLayer = new createjs.Container, this.edgesLayer = new createjs.Container, this.frontChipsLayer = new createjs.Container, this.effectsLayer = new createjs.Container, this.layersContainer = new createjs.Container, this.allModes = [e.INPUT_MODE_FORM, e.INPUT_MODE_CANDY, e.INPUT_MODE_CAGE, e.INPUT_MODE_CHOCOLATE, e.INPUT_MODE_CHOCOLATE_DOUBLE, e.INPUT_MODE_MARSH, e.INPUT_MODE_STONE, e.INPUT_MODE_STRAWBERRY, e.INPUT_MODE_DIRT, e.INPUT_MODE_BALOON], this.inputMode = e.INPUT_MODE_FORM, this.inputModeText = new createjs.Text("FORM", "bold 33px Times New Roman", "#000000"), this.loseTypeMoves = !0, this.loseCounter = 10, this.colorsCount = 4, this.allGoals = ["goal_score", "goal_strawberry", "goal_baloon", "goal_choco", "goal_marsh", "goal_dirt", "goal_chip_1", "goal_chip_2", "goal_chip_3", "goal_chip_4", "goal_chip_5", "goal_chip_6", "goal_chip_7"], this.goal = this.allGoals[0], this.goalCounter = 0, this.bombCounter = 10, this.bombProb = 0, this.isNormalGravity = !0, this.level = i;
			var n = DNAssetsManager.g_instance.getCenteredImageWithProxy("back");
			n.x += Constants.ASSETS_WIDTH / 2, n.y += Constants.ASSETS_HEIGHT / 2, this.addChild(n);
			var o = new createjs.Container;
			this.loadLayout(CurLayouts.MAP_EDITOR_LAYOUT, o), this.findGUIObject("moves").setHandler(function() {
				return s.onMovesTouch()
			}), this.findGUIObject("time").setHandler(function() {
				return s.onTimeTouch()
			}), this.findGUIObject("time").visible = !1, this.findGUIObject("gravity").setHandler(function() {
				return s.onGravityTouch()
			}), this.findGUIObject("panel").addChild(this.inputModeText), this.inputModeText.textAlign = "right", this.inputModeText.x = 210, this.inputModeText.y = -50, this.findGUIObject(Layouts.NAME_BUTTON_RESTART).setHandler(function() {
				return s.onRestartTouch()
			}), this.findGUIObject(Layouts.NAME_BUTTON_PLAY).setHandler(function() {
				return s.onPlayTouch()
			}), this.findGUIObject("scroll_up").setHandler(function() {
				return s.onScrollUp()
			}), this.findGUIObject("scroll_down").setHandler(function() {
				return s.onScrollDown()
			}), this.findGUIObject("shuffle").setHandler(function() {
				return s.onShuffleTouch()
			}), this.findGUIObject("colors_count").setHandler(function() {
				return s.onColorsCountTouch()
			});
			for (var a = 0; a < this.allGoals.length; a++) this.findGUIObject(this.allGoals[a]).setHandler(function() {
				return s.nextGoal()
			});
			this.findGUIObject("plus").setHandler(function() {
				return s.onPlusTouch()
			}), this.findGUIObject("minus").setHandler(function() {
				return s.onMinusTouch()
			}), this.findGUIObject("plus_row").setHandler(function() {
				return s.onRowAdd()
			}), this.findGUIObject("minus_row").setHandler(function() {
				return s.onRowDel()
			}), this.findGUIObject("goal_plus").setHandler(function() {
				return s.onPlusGoalTouch()
			}), this.findGUIObject("goal_minus").setHandler(function() {
				return s.onMinusGoalTouch()
			}), this.findGUIObject("bomb_counter").setHandler(function() {
				return s.nextBombCounter()
			}), this.findGUIObject("bomb_prob").setHandler(function() {
				return s.nextBombProb()
			});
			for (var a = 0; 5 > a; a++) this.addGameObjectAtPos(new Cloud(!0), this, Utils.RandomRange(0, 700), Utils.RandomRange(150, 750));
			e.g_instance = this;
			var r = GameData.getInstance().getLevelDef(i);
			this.field = new Array(this.fieldWidth);
			for (var a = 0; a < this.fieldWidth; a++) this.field[a] = new Array(this.fieldHeight);
			this.layersContainer.addChild(this.holeLayer), this.layersContainer.addChild(this.dirtLayer), this.layersContainer.addChild(this.edgesLayer), this.layersContainer.addChild(this.underChipsLayer), this.layersContainer.addChild(this.backChipsLayer), this.layersContainer.addChild(this.frontChipsLayer), this.layersContainer.addChild(this.effectsLayer), this.addChild(this.layersContainer), this.spawnDefinedChips(r.chips), this.loadFormFieldForm(), this.rebuildEdges(), this.fieldDirt = new Array(this.fieldWidth);
			for (var a = 0; a < this.fieldWidth; a++) this.fieldDirt[a] = new Array(this.fieldHeight);
			for (var h = 0; h < this.fieldWidth; h++)
				for (var f = 0; f < this.fieldHeight; f++) this.fieldDirt[h][f] = 0;
			this.addChild(o), this.updateLoseLabel(), this.updateGoal(), this.updateGoalCounter(), this.update(0)
		}
		return __extends(e, t), e.prototype.onRowAdd = function() {
			var t = new MapEditorChip(2, 0, 0);
			GameData.getInstance().mapEditorLevel.form.push(new Array(this.fieldWidth)), GameData.getInstance().mapEditorLevel.chips.push(new Array(this.fieldWidth)), this.fieldHeight++;
			for (var e = 0; e < this.fieldWidth; e++) GameData.getInstance().mapEditorLevel.form[this.fieldHeight - 1][e] = 1, this.field[e].push(t), this.createChipWithColorID(e, this.fieldHeight - 1, .13, Utils.RandomRangeInt(1, GameData.getInstance().mapEditorLevel.chip_types)), this.resetDirtAt(e, this.fieldHeight - 1);
			this.rebuildEdges(), this.field[0][this.fieldHeight - 1].convertToHole(), this.field[this.fieldWidth - 1][this.fieldHeight - 1].convertToHole(), this.field[1][this.fieldHeight - 1].convertToHole(), this.field[this.fieldWidth - 2][this.fieldHeight - 1].convertToHole()
		}, e.prototype.onRowDel = function() {
			for (var t = (new MapEditorChip(2, 0, 0), 0); t < this.fieldWidth; t++) GameData.getInstance().mapEditorLevel.form[this.fieldHeight - 1][t] = 0, this.field[t][this.fieldHeight - 1].convertToHole(), this.field[t].splice(this.fieldHeight - 1, 1);
			GameData.getInstance().mapEditorLevel.form.splice(this.fieldHeight - 1, 1), GameData.getInstance().mapEditorLevel.chips.splice(this.fieldHeight - 1, 1), this.fieldHeight--
		}, e.prototype.onScrollDown = function() {
			this.fieldIterator + 8 <= this.fieldHeight && (this.layersContainer.y = this.layersContainer.y - Constants.CELL_SIZE, this.fieldIterator++)
		}, e.prototype.onScrollUp = function() {
			0 != this.fieldIterator && (this.layersContainer.y = this.layersContainer.y + Constants.CELL_SIZE, this.fieldIterator--)
		}, e.prototype.updateGoal = function() {
			for (var t = 0; t < this.allGoals.length; t++) this.findGUIObject(this.allGoals[t]).visible = this.goal == this.allGoals[t];
			("goal_baloon" == this.goal || "goal_strawberry" == this.goal) && this.onGravityTouch()
		}, e.prototype.updateGoalCounter = function() {
			this.findGUIObject("goal_counter").setText(this.goalCounter.toString())
		}, e.prototype.onPlusGoalTouch = function() {
			"goal_score" == this.goal ? this.goalCounter += 500 : this.goalCounter++, this.updateGoalCounter()
		}, e.prototype.onMinusGoalTouch = function() {
			"goal_score" == this.goal ? this.goalCounter -= 500 : this.goalCounter--, this.goalCounter <= 0 && (this.goalCounter = 0), this.updateGoalCounter()
		}, e.prototype.nextGoal = function() {
			var t = this.allGoals.indexOf(this.goal);
			t++, t >= this.allGoals.length && (t = 0), this.goal = this.allGoals[t], this.updateGoal()
		}, e.prototype.onMovesTouch = function() {
			this.findGUIObject("moves").visible = !1, this.findGUIObject("time").visible = !0, this.loseTypeMoves = !1, this.updateLoseLabel()
		}, e.prototype.onTimeTouch = function() {
			this.findGUIObject("moves").visible = !0, this.findGUIObject("time").visible = !1, this.loseTypeMoves = !0, this.updateLoseLabel()
		}, e.prototype.onGravityTouch = function() {
			90 == this.findGUIObject("gravity").rotation ? (this.findGUIObject("gravity").rotation = -90, this.isNormalGravity = !1) : (this.findGUIObject("gravity").rotation = 90, this.isNormalGravity = !0), "goal_strawberry" == this.goal && (this.findGUIObject("gravity").rotation = 90, this.isNormalGravity = !0), "goal_baloon" == this.goal && (this.findGUIObject("gravity").rotation = -90, this.isNormalGravity = !1)
		}, e.prototype.onPlusTouch = function() {
			this.loseTypeMoves ? this.loseCounter++ : this.loseCounter += 5, this.updateLoseLabel()
		}, e.prototype.onMinusTouch = function() {
			this.loseTypeMoves ? this.loseCounter-- : this.loseCounter -= 5, this.loseCounter < 0 && (this.loseCounter = 0), this.updateLoseLabel()
		}, e.prototype.updateLoseLabel = function() {
			this.findGUIObject("lose_counter").setText(this.loseTypeMoves ? this.loseCounter.toString() : Utils.IntToTimeString(this.loseCounter))
		}, e.prototype.setDirtAt = function(t, e) {
			++this.fieldDirt[t][e] >= 3 && (this.fieldDirt[t][e] = 0), this.recalcDirt()
		}, e.prototype.resetDirtAt = function(t, e) {
			this.fieldDirt[t][e] = 0, this.recalcDirt()
		}, e.prototype.recalcDirt = function() {
			this.dirtLayer.removeAllChildren();
			for (var t = 0; t < this.fieldWidth; t++)
				for (var e = 0; e < this.fieldHeight; e++)
					if (0 != this.fieldDirt[t][e]) {
						var i = DNAssetsManager.g_instance.getCenteredImageWithProxy(1 == this.fieldDirt[t][e] ? Images.DIRT_1 : Images.DIRT_2);
						i.x = this.getXPosByXIndex(t), i.y = this.getYPosByYIndex(e) - Constants.CELL_SIZE / 2, this.dirtLayer.addChild(i)
					}
		}, e.prototype.onPauseClick = function() {
			DNStateManager.g_instance.pushState(new PauseState)
		}, e.prototype.spawnDefinedChips = function(t) {
			for (var e = 0; e < this.fieldWidth; e++)
				for (var i = 0; i < this.fieldHeight; i++) this.createChipWithColorID(e, i, .13 * (7 - i) + .11 * e, t[i][e])
		}, e.prototype.loadFormFieldForm = function() {
			for (var t = GameData.getInstance().getLevelDef(this.level), e = t.form, i = 0; i < this.fieldWidth; i++)
				for (var s = 0; s < this.fieldHeight; s++) 0 == e[s][i] && this.field[i][s].convertToHole()
		}, e.prototype.rebuildEdges = function() {
			this.edgesLayer.removeAllChildren(), this.holeLayer.removeAllChildren();
			for (var t = 0; t < this.fieldWidth; t++)
				for (var e = 0; e < this.fieldHeight; e++)
					if (this.field[t][e].isHole()) {
						var i = this.getXPosByXIndex(t) - Constants.CELL_SIZE / 2,
							s = this.getYPosByYIndex(e) - Constants.CELL_SIZE;
						if (e > 0 && !this.field[t][e - 1].isHole() && t > 0 && !this.field[t - 1][e].isHole()) {
							var n = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							n.x = i - 4, n.y = s - 4, this.edgesLayer.addChild(n)
						}
						if (e > 0 && !this.field[t][e - 1].isHole() && t < this.fieldWidth - 1 && !this.field[t + 1][e].isHole()) {
							var o = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							o.x = i + Constants.CELL_SIZE + 8 - 4, o.y = s - 4, o.rotation = 90, this.edgesLayer.addChild(o)
						}
						if (e < this.fieldHeight - 1 && !this.field[t][e + 1].isHole() && t > 0 && !this.field[t - 1][e].isHole()) {
							var a = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							a.x = i - 4, a.y = s + Constants.CELL_SIZE + 8 - 4, a.rotation = -90, this.edgesLayer.addChild(a)
						}
						if (e < this.fieldHeight - 1 && !this.field[t][e + 1].isHole() && t < this.fieldWidth - 1 && !this.field[t + 1][e].isHole()) {
							var r = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							r.x = i + Constants.CELL_SIZE + 8 - 4, r.y = s + Constants.CELL_SIZE + 8 - 4, r.rotation = -180, this.edgesLayer.addChild(r)
						}
					} else {
						var h = DNAssetsManager.g_instance.getImage(Images.CELL);
						if (this.holeLayer.addChild(h), h.x = this.getXPosByXIndex(t) - Constants.CELL_SIZE / 2, h.y = this.getYPosByYIndex(e) - Constants.CELL_SIZE, t > 0 && this.field[t - 1][e].isHole()) {
							var f = DNAssetsManager.g_instance.getImage(Images.BORDER_SIDE);
							f.rotation = -90, f.x = h.x - 4, f.y = h.y + Constants.CELL_SIZE, this.edgesLayer.addChildAt(f, 0)
						}
						if (t < this.fieldWidth - 1 && this.field[t + 1][e].isHole()) {
							var _ = DNAssetsManager.g_instance.getImage(Images.BORDER_SIDE);
							_.rotation = -90, _.x = h.x + Constants.CELL_SIZE - 4, _.y = h.y + Constants.CELL_SIZE, this.edgesLayer.addChildAt(_, 0)
						}
						if (e > 0 && this.field[t][e - 1].isHole()) {
							var l = DNAssetsManager.g_instance.getImage(Images.BORDER_SIDE);
							l.x = h.x, l.y = h.y - 4, this.edgesLayer.addChildAt(l, 0)
						}
						if (e < this.fieldHeight - 1 && this.field[t][e + 1].isHole()) {
							var c = DNAssetsManager.g_instance.getImage(Images.BORDER_SIDE);
							c.x = h.x, c.y = h.y + Constants.CELL_SIZE - 4, this.edgesLayer.addChildAt(c, 0)
						}
						if (e > 0 && this.field[t][e - 1].isHole() && t > 0 && this.field[t - 1][e].isHole()) {
							var n = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							n.x = h.x - 4, n.y = h.y - 4, this.edgesLayer.addChild(n)
						}
						if (e > 0 && this.field[t][e - 1].isHole() && t < this.fieldWidth - 1 && this.field[t + 1][e].isHole()) {
							var o = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							o.x = h.x + Constants.CELL_SIZE + 8 - 4, o.y = h.y - 4, o.rotation = 90, this.edgesLayer.addChild(o)
						}
						if (e < this.fieldHeight - 1 && this.field[t][e + 1].isHole() && t > 0 && this.field[t - 1][e].isHole()) {
							var a = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							a.x = h.x - 4, a.y = h.y + Constants.CELL_SIZE + 8 - 4, a.rotation = -90, this.edgesLayer.addChild(a)
						}
						if (e < this.fieldHeight - 1 && this.field[t][e + 1].isHole() && t < this.fieldWidth - 1 && this.field[t + 1][e].isHole()) {
							var r = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							r.x = h.x + Constants.CELL_SIZE + 8 - 4, r.y = h.y + Constants.CELL_SIZE + 8 - 4, r.rotation = -180, this.edgesLayer.addChild(r)
						}
					}
		}, e.prototype.createChipWithColorID = function(t, e, i, s) {
			var n = new MapEditorChip(s, t, e);
			n.setIncexes(t, e), this.addGameObjectAtPos(n, this.backChipsLayer, this.getXPosByXIndex(t), this.getYPosByYIndex(e)), this.field[t][e] = n
		}, e.prototype.getXPosByXIndex = function(t) {
			return t * Constants.CELL_SIZE + Constants.CELL_SIZE / 2 + Constants.FIELD_OFFSET_X
		}, e.prototype.getYPosByYIndex = function(t) {
			return t * Constants.CELL_SIZE + Constants.CELL_SIZE / 2 + Constants.FIELD_OFFSET_Y
		}, e.prototype.onMouseDown = function(i, s) {
			t.prototype.onMouseDown.call(this, i, s), s -= this.y;
			var n = this.findChipAt(i, s);
			if (n) {
				switch (this.inputMode) {
					case e.INPUT_MODE_FORM:
						n.isHole() ? n.convertHoleToChip() : (n.convertToHole(), this.resetDirtAt(n.getIndexX(), n.getIndexY()));
						break;
					case e.INPUT_MODE_CANDY:
						n.isHole() || n.nextID();
						break;
					case e.INPUT_MODE_CAGE:
						n.isHole() || (n.haveCage() ? n.removeCage() : n.setCage());
						break;
					case e.INPUT_MODE_CHOCOLATE:
						n.isHole() || n.convertToChocolate();
						break;
					case e.INPUT_MODE_CHOCOLATE_DOUBLE:
						n.isHole() || n.convertToDoubleChocolate();
						break;
					case e.INPUT_MODE_MARSH:
						n.isHole() || n.convertToMarsh();
						break;
					case e.INPUT_MODE_STONE:
						n.isHole() || n.convertToStoneHeart();
						break;
					case e.INPUT_MODE_STRAWBERRY:
						n.isHole() || n.convertToStrawberry();
						break;
					case e.INPUT_MODE_BALOON:
						n.isHole() || n.convertToBaloon();
						break;
					case e.INPUT_MODE_DIRT:
						n.isHole() || this.setDirtAt(n.getIndexX(), n.getIndexY())
				}
				this.rebuildEdges()
			}
		}, e.prototype.findChipAt = function(t, e) {
			e += this.fieldIterator * Constants.CELL_SIZE;
			for (var i = 0; i < this.fieldWidth; i++)
				for (var s = this.fieldIterator; s < 8 + this.fieldIterator; s++) {
					var n = this.field[i][s];
					if (n && Math.abs(n.x - t) < Constants.CELL_SIZE / 2 && n.y > e && n.y < e + Constants.CELL_SIZE) return n
				}
			return null
		}, e.prototype.onRestartTouch = function() {
			this.inputModeText.text = this.inputMode;
			var t = this.allModes.indexOf(this.inputMode);
			t = (t + 1) % this.allModes.length, this.inputMode = this.allModes[t], this.inputModeText.text = this.inputMode
		}, e.prototype.onPlayTouch = function() {
			this.generageLevel(), DNStateManager.g_instance.pushState(new PlayState(-1, !1, []))/*, SG_Hooks.levelStarted(PlayState.g_curLevel - 1)*/
		}, e.prototype.generageLevel = function() {
			for (var t = GameData.getInstance().mapEditorLevel, e = 0; e < this.fieldWidth; e++)
				for (var i = 0; i < this.fieldHeight; i++) t.form[i][e] = this.field[e][i].isHole() ? 0 : 1, t.chips[i][e] = this.field[e][i].isHole() ? 0 : this.field[e][i].isStoneHeart() ? 9 : this.field[e][i].isStrawberry() ? 8 : this.field[e][i].isChocolate() && 2 == this.field[e][i].chocoStrength ? -2 : this.field[e][i].isChocolate() && 1 == this.field[e][i].chocoStrength ? -1 : this.field[e][i].getColorID() + (this.field[e][i].haveCage() ? 10 : 0);
			for (var s = !1, e = 0; e < this.fieldWidth; e++)
				for (var i = 0; i < this.fieldHeight; i++) 0 != this.fieldDirt[e][i] && (s = !0);
			if (s) {
				for (var n = new Array(this.fieldHeight), o = 0; o < this.fieldHeight; o++) n[o] = new Array(this.fieldWidth);
				for (var e = 0; e < this.fieldWidth; e++)
					for (var i = 0; i < this.fieldHeight; i++) n[i][e] = this.fieldDirt[e][i];
				t.dirt = n
			} else t.dirt = null;
			switch (this.loseTypeMoves ? (t.moves = this.loseCounter, t.time = 0) : (t.moves = 0, t.time = this.loseCounter), t.score_goal_count = 0, t.chip_goal = 0, t.chip_types = this.colorsCount, this.goal) {
				case "goal_score":
					t.goal = PlayState.GOAL_SCORE, t.score_goal_count = this.goalCounter;
					break;
				case "goal_choco":
					t.goal = PlayState.GOAL_CHOCO;
					break;
				case "goal_marsh":
					t.goal = PlayState.GOAL_MARSH;
					break;
				case "goal_strawberry":
					t.goal = PlayState.GOAL_STRAWBERRY;
					break;
				case "goal_baloon":
					t.goal = PlayState.GOAL_BALOON;
					break;
				case "goal_dirt":
					t.goal = PlayState.GOAL_DIRT;
					break;
				case "goal_chip_1":
					t.goal = PlayState.GOAL_COUNT, t.chip_goal = 1, t.chip_goal_count = this.goalCounter;
					break;
				case "goal_chip_2":
					t.goal = PlayState.GOAL_COUNT, t.chip_goal = 2, t.chip_goal_count = this.goalCounter;
					break;
				case "goal_chip_3":
					t.goal = PlayState.GOAL_COUNT, t.chip_goal = 3, t.chip_goal_count = this.goalCounter;
					break;
				case "goal_chip_4":
					t.goal = PlayState.GOAL_COUNT, t.chip_goal = 4, t.chip_goal_count = this.goalCounter;
					break;
				case "goal_chip_5":
					t.goal = PlayState.GOAL_COUNT, t.chip_goal = 5, t.chip_goal_count = this.goalCounter;
					break;
				case "goal_chip_6":
					t.goal = PlayState.GOAL_COUNT, t.chip_goal = 6, t.chip_goal_count = this.goalCounter;
					break;
				case "goal_chip_7":
					t.goal = PlayState.GOAL_COUNT, t.chip_goal = 7, t.chip_goal_count = this.goalCounter
			}
			t.bombCounter = this.bombCounter, t.bombProb = this.bombProb / 100, t.gravity = this.isNormalGravity, console.log(JSON.stringify(t))
		}, e.prototype.nextBombCounter = function() {
			this.bombCounter++, this.bombCounter > 25 && (this.bombCounter = 1), this.findGUIObject("bomb_counter_label").setText(this.bombCounter.toString())
		}, e.prototype.nextBombProb = function() {
			this.bombProb += 2, this.bombProb >= 100 && (this.bombProb = 0), this.findGUIObject("bomb_prob_label").setText(this.bombProb.toString())
		}, e.prototype.onShuffleTouch = function() {
			for (var t = 0; t < this.fieldWidth; t++)
				for (var e = 0; e < this.fieldHeight; e++) this.field[t][e].isHole() || this.field[t][e].randomID(this.colorsCount)
		}, e.prototype.onColorsCountTouch = function() {
			this.colorsCount++, this.colorsCount >= 8 && (this.colorsCount = 3), this.findGUIObject("colors_count_label").setText(this.colorsCount.toString())
		}, e.INPUT_MODE_FORM = "FORM", e.INPUT_MODE_CANDY = "CANDY", e.INPUT_MODE_CAGE = "CAGE", e.INPUT_MODE_CHOCOLATE_DOUBLE = "CHOCOLATE_DOUBLE", e.INPUT_MODE_CHOCOLATE = "CHOCOLATE", e.INPUT_MODE_STONE = "STONE", e.INPUT_MODE_STRAWBERRY = "STRAWBERRY", e.INPUT_MODE_BALOON = "BALOON", e.INPUT_MODE_DIRT = "DIRT", e.INPUT_MODE_MARSH = "MARSH", e
	}(DNGameState),
	MoveHint = function(t) {
		function e(e) {
			t.call(this), this.arrow1 = new createjs.Container, this.arrow2 = new createjs.Container, this.hidding = !1;
			var i = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.HINT_ARROW);
			this.arrow1.addChild(i), this.addChild(this.arrow1), this.arrow1.y -= 18;
			var s = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.HINT_ARROW);
			this.arrow2.addChild(s), this.addChild(this.arrow2), this.arrow2.y += 18, this.arrow2.rotation = 180, e && (this.rotation = 90), this.alpha = 0
		}
		return __extends(e, t), e.prototype.update = function(e) {
			this.liveTime <= .5 && (this.alpha = 2 * this.liveTime), t.prototype.update.call(this, e), this.arrow1.x = 5 * Math.sin(7 * this.liveTime), this.arrow2.x = -this.arrow1.x, this.liveTime > 20 && this.hide(), this.hidding && (this.alpha -= 3 * e, this.alpha <= 0 && this.kill())
		}, e.prototype.hide = function() {
			this.hidding = !0
		}, e.prototype.isHidding = function() {
			return this.hidding
		}, e
	}(DNGameObject),
	NoMoreVideosState = function(t) {
		function e() {
			var e = this;
			t.call(this), this.thanks = new DNBitmapLabel(Fonts.font_blue, DNStringManager.getInstance().getString(DNStringManager.THANKS), DN_TEXT_ALIGN_HOR.CENTER, 430), this.youWatch = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.YOU_WATCH_ALL), DN_TEXT_ALIGN_HOR.CENTER, 430), this.comeBack = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.COME_BACK), DN_TEXT_ALIGN_HOR.CENTER, 430), this.panel.addChild(this.thanks), this.thanks.y = -100, this.thanks.alpha = 1, this.panel.addChild(this.youWatch), this.youWatch.y = -50, this.youWatch.alpha = 1, this.panel.addChild(this.comeBack), this.comeBack.y = 0, this.comeBack.alpha = 1;
			var i = new DNJellyButton(Images.CHECK_ICON, function() {
				return e.hide()
			});
			this.panel.addChild(i), this.addGuiObject(i), i.y = 140, i.scaleX = i.scaleY = .85
		}
		return __extends(e, t), e
	}(PopupState),
	PauseState = function(t) {
		function e() {
			var e = this;
			t.call(this);
			var i = new DNJellyButton(Images.BUTTON_CLOSE, function() {
				return e.hide()
			});
			this.panel.addChild(i), this.addGuiObject(i), i.x = 235, i.y = -190;
			var s = new DNJellyButton(Images.BUTTON_RESTART, function() {
				return e.onRestartTouch()
			});
			this.panel.addChild(s), this.addGuiObject(s), s.x = -150, s.y = 115;
			var n = new DNJellyButton(Images.BUTTON_EXIT, function() {
				return e.onExitTouch()
			});
			this.panel.addChild(n), this.addGuiObject(n), n.x = 0, n.y = 115, this.setSoundButton()
		}
		return __extends(e, t), e.prototype.setSoundButton = function() {
			var t = this;
			this.soundButton && this.soundButton.parent && this.soundButton.parent.removeChild(this.soundButton);
			var e = DNSoundManager.g_instance.isSoundEnabled();
			this.soundButton = new DNJellyButton(e ? Images.BUTTON_SOUND_ON : Images.BUTTON_SOUND_OFF, function() {
				return t.onSoundTouch()
			}), this.panel.addChild(this.soundButton), this.addGuiObject(this.soundButton), this.soundButton.x = 150, this.soundButton.y = 115
		}, e.prototype.update = function(e) {
			t.prototype.update.call(this, e)
		}, e.prototype.onSoundTouch = function() {
			DNSoundManager.g_instance.setSoundEnabled(!DNSoundManager.g_instance.isSoundEnabled()), this.setSoundButton()
		}, e.prototype.onRestartTouch = function() {
			return PlayState.g_instance.checkForWaiting() || GameData.getInstance().spendLive(), 0 == GameData.getInstance().getLifeCount() && DNGameConfig.haveAd ? void DNStateManager.g_instance.pushState(new LoseLifeState) : void DNStateManager.g_instance.pushState(new SelectBoosterState(PlayState.g_curLevel))
		}, e.prototype.onExitTouch = function() {
			PlayState.g_instance.checkForWaiting() || GameData.getInstance().spendLive(), DNStateManager.g_instance.pushState(new CoolTransitionInState(new SelectLevelState))
		}, e
	}(PopupState),
	PlayState = function(t) {
		function e(i, s, n) {
			var o = this;
			t.call(this), this.matchInARow = 0, this.inputState = null, this.loseType = null, this.form = new Array, this.fieldIterator = 0, this.dirtCount = 0, this.fieldWidth = 10, this.bombProb = .1, this.bombCounter = 11, this.spawnPosGravity = 0, this.selectedChip = null, this.swapChip1 = null, this.swapChip2 = null, this.lastMovedChip = null, this.dirtLayer = new createjs.Container, this.underChipsLayer = new createjs.Container, this.backChipsLayer = new createjs.Container, this.holeLayer = new createjs.Container, this.edgesLayer = new createjs.Container, this.frontChipsLayer = new createjs.Container, this.effectsLayer = new createjs.Container, this.inputStateTime = 0, this.score = 0, this.tmpScore = 0, this.moves = 30, this.time = 70, this.findedMatchPos1 = null, this.findedMatchPos2 = null, this.moveHint = null, this.chipTypesCount = 5, this.awesomeEffectTime = 0, this.superbEffectTime = 0, this.waitLose = !1, this.waitLoseTime = 0, this.waitWin = !1, this.stars = 0, this.waitWinTime = 0, this.wasChocolateClear = !0, this.layersContainer = new createjs.Container, this.checkForMatch = !0, this.showHint = !1, this.lastDropSoundTime = -10, this.lastDropID = -1, this.lastSound = null, this.iterated = !1, this.needRunSplashTime = !0, this.lolipop = !1, Constants.DEBUG_MODE && console.log("LEVEL", i + 1), e.g_curLevel = i;
			var a = DNAssetsManager.g_instance.getCenteredImageWithProxy("back");
			a.x += Constants.ASSETS_WIDTH / 2, a.y += Constants.ASSETS_HEIGHT / 2, this.addChild(a);
			var r = new createjs.Container;
			this.loadLayout(CurLayouts.PLAYSTATE_LAYOUT, r), this.findGUIObject(Layouts.NAME_PAUSE).setHandler(function() {
				return o.onPauseClick()
			}), this.goalLabel = this.findGUIObject(Layouts.NAME_GOAL_LABEL);
			for (var h = 0; 5 > h; h++) this.addGameObjectAtPos(new Cloud(!0), this, Utils.RandomRange(0, 700), Utils.RandomRange(150, 750));
			e.g_instance = this;
			var f = GameData.getInstance().getLevelDef(i);
			void 0 === f.gravity && (f.gravity = !0), this.gravitationNormal = f.gravity, this.bombProb = f.bombProb, this.bombCounter = f.bombCounter, this.chipTypesCount = f.chip_types, this.fieldHeight = f.chips.length, this.gravitationNormal ? this.spawnPosGravity -= Constants.CELL_SIZE : this.spawnPosGravity += Constants.CELL_SIZE * this.fieldHeight + 400, this.field = new Array(this.fieldWidth);
			for (var h = 0; h < this.fieldWidth; h++) this.field[h] = new Array(this.fieldHeight);
			this.layersContainer.addChild(this.holeLayer), this.layersContainer.addChild(this.dirtLayer), this.layersContainer.addChild(this.edgesLayer), this.layersContainer.addChild(this.underChipsLayer), this.layersContainer.addChild(this.backChipsLayer), this.layersContainer.addChild(this.frontChipsLayer), this.layersContainer.addChild(this.effectsLayer), this.addChild(this.layersContainer), this.matchInARow = 0, this.goal = f.goal, this.spawnDefinedChips(f.chips), this.form = f.form;
			for (var _ = 0; _ < this.fieldWidth; _++)
				for (var l = 0; l < this.fieldHeight; l++)
					if (0 == this.form[l][_]) {
						this.field[_][l].convertToHole(), this.holeLayer.addChild(this.field[_][l]);
						var c = this.getXPosByXIndex(_) - Constants.CELL_SIZE / 2,
							u = this.getYPosByYIndex(l) - Constants.CELL_SIZE;
						if (l > 0 && 0 != this.form[l - 1][_] && _ > 0 && 0 != this.form[l][_ - 1]) {
							var d = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							d.x = c - 4, d.y = u - 4, this.edgesLayer.addChild(d)
						}
						if (l > 0 && 0 != this.form[l - 1][_] && _ < this.fieldWidth - 1 && 0 != this.form[l][_ + 1]) {
							var p = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							p.x = c + Constants.CELL_SIZE + 8 - 4, p.y = u - 4, p.rotation = 90, this.edgesLayer.addChild(p)
						}
						if (l < this.fieldHeight - 1 && 0 != this.form[l + 1][_] && _ > 0 && 0 != this.form[l][_ - 1]) {
							var g = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							g.x = c - 4, g.y = u + Constants.CELL_SIZE + 8 - 4, g.rotation = -90, this.edgesLayer.addChild(g)
						}
						if (l < this.fieldHeight - 1 && 0 != this.form[l + 1][_] && _ < this.fieldWidth - 1 && 0 != this.form[l][_ + 1]) {
							var y = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							y.x = c + Constants.CELL_SIZE + 8 - 4, y.y = u + Constants.CELL_SIZE + 8 - 4, y.rotation = -180, this.edgesLayer.addChild(y)
						}
					} else {
						var m = DNAssetsManager.g_instance.getImage(Images.CELL);
						if (this.holeLayer.addChild(m), m.x = this.getXPosByXIndex(_) - Constants.CELL_SIZE / 2, m.y = this.getYPosByYIndex(l) - Constants.CELL_SIZE, _ > 0 && 0 == this.form[l][_ - 1]) {
							var S = DNAssetsManager.g_instance.getImage(Images.BORDER_SIDE);
							S.rotation = -90, S.x = m.x - 4, S.y = m.y + Constants.CELL_SIZE, this.edgesLayer.addChildAt(S, 0)
						}
						if (_ < this.fieldWidth - 1 && 0 == this.form[l][_ + 1]) {
							var E = DNAssetsManager.g_instance.getImage(Images.BORDER_SIDE);
							E.rotation = -90, E.x = m.x + Constants.CELL_SIZE - 4, E.y = m.y + Constants.CELL_SIZE, this.edgesLayer.addChildAt(E, 0)
						}
						if (l > 0 && 0 == this.form[l - 1][_]) {
							var w = DNAssetsManager.g_instance.getImage(Images.BORDER_SIDE);
							w.x = m.x, w.y = m.y - 4, this.edgesLayer.addChildAt(w, 0)
						}
						if (l < this.fieldHeight - 1 && 0 == this.form[l + 1][_]) {
							var T = DNAssetsManager.g_instance.getImage(Images.BORDER_SIDE);
							T.x = m.x, T.y = m.y + Constants.CELL_SIZE - 4, this.edgesLayer.addChildAt(T, 0)
						}
						if (l > 0 && 0 == this.form[l - 1][_] && _ > 0 && 0 == this.form[l][_ - 1]) {
							var d = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							d.x = m.x - 4, d.y = m.y - 4, this.edgesLayer.addChild(d)
						}
						if (l > 0 && 0 == this.form[l - 1][_] && _ < this.fieldWidth - 1 && 0 == this.form[l][_ + 1]) {
							var p = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							p.x = m.x + Constants.CELL_SIZE + 8 - 4, p.y = m.y - 4, p.rotation = 90, this.edgesLayer.addChild(p)
						}
						if (l < this.fieldHeight - 1 && 0 == this.form[l + 1][_] && _ > 0 && 0 == this.form[l][_ - 1]) {
							var g = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							g.x = m.x - 4, g.y = m.y + Constants.CELL_SIZE + 8 - 4, g.rotation = -90, this.edgesLayer.addChild(g)
						}
						if (l < this.fieldHeight - 1 && 0 == this.form[l + 1][_] && _ < this.fieldWidth - 1 && 0 == this.form[l][_ + 1]) {
							var y = DNAssetsManager.g_instance.getImage(Images.BORDER_CORNER);
							y.x = m.x + Constants.CELL_SIZE + 8 - 4, y.y = m.y + Constants.CELL_SIZE + 8 - 4, y.rotation = -180, this.edgesLayer.addChild(y)
						}
					}
			this.fieldDirt = new Array(this.fieldWidth);
			for (var h = 0; h < this.fieldWidth; h++) this.fieldDirt[h] = new Array(this.fieldHeight);
			var v = f.dirt;
			if (v)
				for (var _ = 0; _ < this.fieldWidth; _++)
					for (var l = 0; l < this.fieldHeight; l++)
						if (0 != v[l][_]) {
							this.dirtCount++;
							var C = DNAssetsManager.g_instance.getCenteredImageWithProxy(1 == v[l][_] ? Images.DIRT_1 : Images.DIRT_2);
							C.name = 1 == v[l][_] ? Images.DIRT_1 : Images.DIRT_2, C.x = this.getXPosByXIndex(_), C.y = this.getYPosByYIndex(l) - Constants.CELL_SIZE / 2, this.dirtLayer.addChild(C), this.fieldDirt[_][l] = C
						}
			this.addChild(this.scoreLabel), this.scoreLabel = this.findGUIObject(Layouts.NAME_SCORE), this.moves = f.moves, this.time = f.time;
			var x = this.findGUIObject("moves_or_time_place");
			0 != this.moves && (this.loseType = e.LOSE_TYPE_MOVES, this.movesLabel = this.findGUIObject(Layouts.NAME_MOVES), this.movesLabel.setText(this.moves.toString()), this.movesLabel.x = 65, x.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.MOVES_ICON))), 0 != this.time && (this.loseType = e.LOSE_TYPE_TIME, this.timeLabel = this.findGUIObject(Layouts.NAME_MOVES), x.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.TIME_ICON)), x.scaleX = x.scaleY = .7, this.timeLabel.scaleX = this.timeLabel.scaleY = .75, this.timeLabel.y += 4);
			var b = null;
			switch (this.goal) {
				case e.GOAL_DIRT:
					b = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.DIRT_1), this.goalLabel.setText(this.dirtCount.toString());
					break;
				case e.GOAL_COUNT:
					this.goalChipID = f.chip_goal, this.chipGoalCount = f.chip_goal_count, this.goalLabel.setText(this.chipGoalCount.toString()), b = DNAssetsManager.g_instance.getCenteredImageWithProxy("cake_" + this.goalChipID);
					break;
				case e.GOAL_SCORE:
					b = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.SCORE_ICON), this.scoreGoalCount = f.score_goal_count, this.goalLabel.setText(this.scoreGoalCount.toString());
					break;
				case e.GOAL_STRAWBERRY:
					b = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.STRAWBERRY), this.goalLabel.setText(this.calcStrawberryCount().toString());
					break;
				case e.GOAL_MARSH:
					b = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.ICE_0), this.goalLabel.setText(this.calcMarshCount().toString());
					break;
				case e.GOAL_BALOON:
					b = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.BALOON), this.goalLabel.setText(this.calcBaloonCount().toString());
					break;
				case e.GOAL_CHOCO:
					b = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.CHOCOLATE_1), this.goalLabel.setText(this.calcChocoCount().toString())
			}
			var I = Math.max(b.getBounds().width, b.getBounds().height);
			if (b.scaleX = b.scaleY = 50 / I, this.findGUIObject("goal_placeholder").addChild(b), this.addChild(r), s) {
				var L = new TaskEffect(f);
				this.addGameObject(L), this.addChild(L)
			}
			for (var h = 0; h < n.length; h++) this.activateBooster(n[h]);
			this.booster1 = new ActivateBoosterButton(Images.BOOSTER_LOLIPOP, GameData.BOOSTER_LOLIPOP), this.findGUIObject("booster_1").addChild(this.booster1), this.addGuiObject(this.booster1), this.booster2 = this.loseType == e.LOSE_TYPE_MOVES ? new ActivateBoosterButton(Images.BOOSTER_MOVES, GameData.BOOSTER_MOVES) : new ActivateBoosterButton(Images.BOOSTER_TIME, GameData.BOOSTER_TIME), this.findGUIObject("booster_2").addChild(this.booster2), this.addGuiObject(this.booster2), this.goal == e.GOAL_BALOON && this.fieldHeight > 8 && this.scrollVeryBot(), this.haveDoubleChoco(this.field), this.update(0);
			try {
				/*SG_Hooks.start()*/
			} catch (O) {}
		}
		return __extends(e, t), e.prototype.haveDoubleChoco = function(t) {
			for (var e = 0; e < this.fieldWidth; e++)
				for (var i = 0; i < this.fieldHeight; i++) {
					if (-1 == t[e][i].getColorID() && t[e][i].isChocolate()) return void(this.isDoubleChoco = !1);
					if (-2 == t[e][i].getColorID()) return void(this.isDoubleChoco = !0)
				}
		}, e.prototype.onPauseClick = function() {
			-1 != e.g_curLevel ? DNStateManager.g_instance.pushState(new PauseState) : DNStateManager.g_instance.popState()
		}, e.prototype.calcMarshCount = function() {
			for (var t = 0, e = 0; e < this.fieldWidth; e++)
				for (var i = 0; i < this.fieldHeight; i++) this.field[e][i] && this.field[e][i].isMarsh() && this.field[e][i].getState() != Chip.STATE_FALL_DOWN && t++;
			return t
		}, e.prototype.calcStrawberryCount = function() {
			for (var t = 0, e = 0; e < this.fieldWidth; e++)
				for (var i = 0; i < this.fieldHeight; i++) this.field[e][i] && this.field[e][i].isStrawberry() && this.field[e][i].getState() != Chip.STATE_FALL_DOWN && t++;
			return t
		}, e.prototype.calcBaloonCount = function() {
			for (var t = 0, e = 0; e < this.fieldWidth; e++)
				for (var i = 0; i < this.fieldHeight; i++) this.field[e][i] && this.field[e][i].isBaloon() && this.field[e][i].getState() != Chip.STATE_FALL_DOWN && t++;
			return t
		}, e.prototype.calcChocoCount = function() {
			for (var t = 0, e = 0; e < this.fieldWidth; e++)
				for (var i = 0; i < this.fieldHeight; i++) this.field[e][i] && this.field[e][i].isChocolate() && this.field[e][i].getState() != Chip.STATE_FALL_DOWN && t++;
			return t
		}, e.prototype.runSplashTime = function() {
			var t = Math.floor(this.moves / 3 + 1);
			this.loseType == e.LOSE_TYPE_MOVES ? this.addGameObject(new SplashTimeEffect(Math.floor(t) > 7 ? t : 7)) : (t = Math.floor(this.time / 8 + 1), this.addGameObject(new SplashTimeEffect(Math.floor(t) > 7 ? t : 7))), this.addGameObjectAt(new SplashTimeMessage, this)
		}, e.prototype.createChip = function(t, e, i) {
			var s = Utils.RandomRangeInt(1, this.chipTypesCount),
				n = new Chip(s, t, e, this.getYPosByYIndex(e), i);
			n.setIncexes(t, e), this.addGameObjectAtPos(n, this.backChipsLayer, this.getXPosByXIndex(t), -Constants.CELL_SIZE + this.spawnPosGravity), this.field[t][e] = n, Math.random() < this.bombProb && n.convertToBomb(this.bombCounter)
		}, e.prototype.createChipWithColorID = function(t, e, i, s) {
			var n = new Chip(s, t, e, this.getYPosByYIndex(e), i);
			n.setIncexes(t, e), this.addGameObjectAtPos(n, this.backChipsLayer, this.getXPosByXIndex(t), -Constants.CELL_SIZE + this.spawnPosGravity), this.field[t][e] = n
		}, e.prototype.getXPosByXIndex = function(t) {
			return t * Constants.CELL_SIZE + Constants.CELL_SIZE / 2 + Constants.FIELD_OFFSET_X
		}, e.prototype.getYPosByYIndex = function(t) {
			return t * Constants.CELL_SIZE + Constants.CELL_SIZE / 2 + Constants.FIELD_OFFSET_Y
		}, e.prototype.checkForMatches = function() {
			if (this.checkForMatch) {
				if (this.allChipsNormal()) {
					var t = this.findMatches();
					0 != t.length && this.matchMatches(t)
				}
				this.checkForMatch = !1
			}
			clearTimeout(this.timerLink)
		}, e.prototype.update = function(i) {
			if (t.prototype.update.call(this, i), this.inputState != e.INPUT_STATE_FREEZE) {
				if (this.waitWin && this.inputState == e.INPUT_STATE_WAIT_SELECTION && (this.waitWinTime += i, this.waitWinTime > .9)) return void(-1 == e.g_curLevel ? DNStateManager.g_instance.popState() : DNStateManager.g_instance.pushState(new WinState(e.g_curLevel, this.score, this.stars)));
				if (this.waitLose && (this.waitLoseTime += i, this.waitLoseTime > 2.4)) return void(-1 == e.g_curLevel ? DNStateManager.g_instance.popState() : DNStateManager.g_instance.pushState(new GameOverState(e.g_curLevel, this.score, this.loseReason)));
				switch (this.loseType != e.LOSE_TYPE_TIME || this.waitWin || this.waitLose || (this.time -= i, this.time <= 0 && (this.time = 0, this.lose(e.LOSE_REASON_TIME)), this.timeLabel.setText(Utils.IntToTimeString(Math.round(this.time)))), this.inputStateTime += i, this.inputState != e.INPUT_STATE_WAIT_SELECTION && this.moveHint && (this.moveHint.isDead() ? this.moveHint = null : this.moveHint.hide()), this.inputState) {
					case e.INPUT_STATE_WAIT_SELECTION:
						var s = 3;
						this.inputStateTime > s && this.moveHint && !this.moveHint.parent && !this.moveHint.isHidding() && (this.waitWin || this.waitLose || (this.moveHint.y -= Constants.CELL_SIZE * this.fieldIterator, this.addGameObjectAt(this.moveHint, this))), 0 != this.checkForScroll() && 0 == this.iterated && this.scrollLevel(this.checkForScroll()), this.checkForMatch && (this.timerLink = setTimeout(function() {
							var t = e.g_instance.findMatches();
							0 != t.length && e.g_instance.matchMatches(t), clearTimeout(this.timerLink)
						}, 100), this.checkForMatch = !1);
						break;
					case e.INPUT_STATE_WAIT_SPAWN:
						this.allChipsNormal() && (this.findSquare(), this.matchMatches(this.findMatches()));
						break;
					case e.INPUT_STATE_SHIFT:
						this.allChipsNormal() && this.matchMatches(this.findMatches());
						break;
					case e.INPUT_STATE_MATCHING:
						this.inputStateTime > Constants.MATCH_TIME / 2 && this.shiftChips()
				}
				if (this.tmpScore < this.score) {
					this.tmpScore += 17, this.tmpScore > this.score && (this.tmpScore = this.score);
					var n = this.tmpScore.toString();
					switch (n.length) {
						case 1:
							n = "0000" + n;
							break;
						case 2:
							n = "000" + n;
							break;
						case 3:
							n = "00" + n;
							break;
						case 4:
							n = "0" + n
					}
					this.scoreLabel.setText(n)
				}
			}
		}, e.prototype.allChipsNormal = function() {
			for (var t = 0; t < this.fieldWidth; t++)
				for (var e = 0; e < this.fieldHeight; e++)
					if (null != this.field[t][e] && !this.field[t][e].isNormal()) return !1;
			return !0
		}, e.prototype.canExchange = function(t, e) {
			if (t == e) return !1;
			if (t.isHole() || e.isHole()) return !1;
			var i = t.getIndeces().x - e.getIndeces().x,
				s = t.getIndeces().y - e.getIndeces().y;
			return 1 == Math.abs(i) && 0 == s || 1 == Math.abs(s) && 0 == i
		}, e.prototype.exchangeChips = function(t, i) {
			var s = this,
				n = t.x,
				o = t.y,
				a = t.getIndexX(),
				r = t.getIndexY(),
				h = i.x,
				f = i.y,
				_ = i.getIndexX(),
				l = i.getIndexY();
			i.isBaloon() && (i.x = this.getXPosByXIndex(i.getIndexX()), i.rotation = 0), t.isBaloon() && (t.x = this.getXPosByXIndex(t.getIndexX()), t.rotation = 0), this.field[a][r] = i, this.field[_][l] = t, t.exchange(_, l), i.exchange(a, r), this.swapChip1 = t, this.swapChip2 = i, createjs.Tween.get(t).to({
				x: h,
				y: f
			}, 1e3 * Constants.EXCHANGE_TIME, createjs.Ease.linear).call(function() {
				return s.onExchangeEnded()
			}), createjs.Tween.get(i).to({
				x: n,
				y: o
			}, 1e3 * Constants.EXCHANGE_TIME, createjs.Ease.linear), this.selectedChip = null, this.setInpunState(e.INPUT_STATE_LOCK)
		}, e.prototype.addConverToBonusEffect = function(t) {
			this.addGameObjectAtPos(new ConvertToBonusEffect(t), this.underChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2)
		}, e.prototype.birdInArray = function(t) {
			for (var e = 0; e < t.length; e++)
				for (var i = 0; i < t[e].length; i++)
					if (t[e][i].isBird) return !0;
			return !1
		}, e.prototype.collectNormalChips = function() {
			for (var t = new Array, e = 0; e < this.fieldWidth; e++)
				for (var i = this.fieldIterator; i < 8 + this.fieldIterator; i++) this.field[e][i] && null != this.field[e][i] && this.field[e][i].isChip() && !this.field[e][i].isBonus() && this.field[e][i].getState() != Chip.STATE_FALL_DOWN && t.push(this.field[e][i]);
			return t
		}, e.prototype.getDestroyableChipBaloon = function() {
			for (var t = new Array, e = 0; e < this.fieldWidth; e++)
				for (var i = 8 + this.fieldIterator; i >= this.fieldIterator; i--)
					if (null != this.field[e][i] && this.field[e][i].isBaloon()) {
						for (; i >= this.fieldIterator; i--) null != this.field[e][i] && this.field[e][i].isChip() && !this.field[e][i].isBirdChoice() && t.push(this.field[e][i]);
						break
					}
			return t[Utils.RandomRangeInt(0, t.length - 1)]
		}, e.prototype.getDestroyableChipStrawberry = function() {
			for (var t = new Array, e = 0; e < this.fieldWidth; e++)
				for (var i = this.fieldIterator; i < this.fieldIterator + 8; i++)
					if (null != this.field[e][i] && this.field[e][i].isStrawberry()) {
						for (; i < this.fieldIterator + 8; i++) null != this.field[e][i] && this.field[e][i].isChip() && !this.field[e][i].isBirdChoice() && t.push(this.field[e][i]);
						break
					}
			return t[Utils.RandomRangeInt(0, t.length - 1)]
		}, e.prototype.getDestoyableChip = function() {
			for (var t = new Array, i = new Array, s = new Array, n = new Array, o = new Array, a = new Array, r = 0; r < this.fieldWidth; r++)
				for (var h = this.fieldIterator; h < 8 + this.fieldIterator; h++)
					if (null != this.field[r][h]) {
						if (this.field[r][h].cage && !this.field[r][h].birdChoice && t.push(this.field[r][h]), this.field[r][h].stoneHeart && !this.field[r][h].birdChoice && i.push(this.field[r][h]), this.field[r][h].chocolate && !this.field[r][h].birdChoice && s.push(this.field[r][h]), null != this.fieldDirt[r][h] && !this.field[r][h].birdChoice) {
							var f = new Chip(4, r, h, e.g_instance.getYPosByYIndex(h), 0);
							f.x = this.field[r][h].x, f.y = this.field[r][h].y, n.push(f)
						}
						this.field[r][h].isBomb() && !this.field[r][h].birdChoice && o.push(this.field[r][h]), this.field[r][h].isMarsh() && !this.field[r][h].birdChoice && a.push(this.field[r][h])
					}
			var _ = this.collectNormalChips();
			if (0 != t.length) return t[Utils.RandomRangeInt(0, t.length - 1)];
			if (0 != i.length) return i[Utils.RandomRangeInt(0, i.length - 1)];
			if (0 != s.length) return s[Utils.RandomRangeInt(0, s.length - 1)];
			if (0 != a.length) return a[Utils.RandomRangeInt(0, a.length - 1)];
			if (0 != n.length) return n[Utils.RandomRangeInt(0, n.length - 1)];
			if (0 != o.length) return o[Utils.RandomRangeInt(0, o.length - 1)];
			var f = null;
			return this.goal == e.GOAL_BALOON && (f = this.getDestroyableChipBaloon()), this.goal == e.GOAL_STRAWBERRY && (f = this.getDestroyableChipStrawberry()), null == f && (f = _[Utils.RandomRangeInt(0, _.length - 1)]), f
		}, e.prototype.matchMatches = function(t) {
			if (0 != t.length) {
				switch (this.matchInARow) {
					case 0:
						DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_1);
						break;
					case 1:
						DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_2);
						break;
					case 2:
						DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_3);
						break;
					case 3:
						DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_4);
						break;
					default:
						DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_5)
				}
				for (var i = !1, s = 0; s < t.length; s++) {
					for (var n = 0; n < t[s].length; n++) t[s][n].match(Chip.MATCH_REASON_SIMPLE);
					if (!this.checkForAllBirds(t[s])) {
						if (4 == t[s].length) {
							for (var o = !1, a = 0; a < t[s].length; a++)
								if (t[s][a] == this.lastMovedChip) {
									if (o = !0, i = !0, this.checkForAllMarsh(t[s])) break;
									for (; this.lastMovedChip.isBird || this.lastMovedChip.isMarsh();) this.lastMovedChip = t[s][Utils.RandomRangeInt(0, t[s].length - 1)];
									this.lastMovedChip.convertToBonus(Chip.BONUS_4, Math.random() < .5), this.lastMovedChip = null;
									break
								}
							if (!o) {
								i = !0;
								var r = t[s][Utils.RandomRangeInt(1, 2)];
								if (this.checkForAllMarsh(t[s])) break;
								for (; !r.isChip() || r.isBird;) r = t[s][Utils.RandomRangeInt(0, t[s].length - 1)];
								r.convertToBonus(Chip.BONUS_4, Math.random() < .5)
							}
						}
						if (t[s].length >= 5) {
							for (var o = !1, a = 0; a < t[s].length; a++)
								if (t[s][a] == this.lastMovedChip) {
									if (i = !0, o = !0, this.checkForAllMarsh(t[s])) break;
									for (; this.lastMovedChip.isBird || !this.lastMovedChip.isChip();) this.lastMovedChip = t[s][Utils.RandomRangeInt(0, t[s].length - 1)];
									this.lastMovedChip.convertToBonus(Chip.BONUS_5), this.lastMovedChip = null;
									break
								}
							if (!o) {
								i = !0;
								var h = t[s][Utils.RandomRangeInt(0, t[s].length - 1)];
								if (this.checkForAllMarsh(t[s])) break;
								for (; h.isBird || !h.isChip();) h = t[s][Utils.RandomRangeInt(0, t[s].length - 1)];
								h.convertToBonus(Chip.BONUS_5)
							}
						}
					}
				}
				if (!i)
					for (var s = 0; s < t.length; s++)
						for (var n = 0; n < t[s].length; n++)
							if (t[s][n].isDoubleMatched()) {
								t[s][n].convertToBonus(Chip.BONUS_BOMB), s = 100;
								break
							}
				this.setInpunState(e.INPUT_STATE_MATCHING)
			} else this.shiftChips()
		}, e.prototype.checkForAllMarsh = function(t) {
			for (var e = 0; e < t.length; e++)
				if (t[0].isMarsh() != t[e].isMarsh() || 1 != t[0].isMarsh()) return !1;
			return !0
		}, e.prototype.checkForAllBirds = function(t) {
			for (var e = 0; e < t.length; e++)
				if (t[0].isBird != t[e].isBird || 1 != t[0].isBird) return !1;
			return !0
		}, e.prototype.collectChipColors = function() {
			for (var t = new Array, e = 0; e < this.fieldWidth; e++)
				for (var i = this.fieldIterator; i < 8 + this.fieldIterator; i++) this.field[e][i].isChip() && -1 == t.indexOf(this.field[e][i].getColorID()) && t.push(this.field[e][i].getColorID());
			return t
		}, e.prototype.matchBonusesWithoutChip = function(t) {
			if (t.getBonusType() == Chip.BONUS_4) {
				DNSoundManager.g_instance.play(DNSoundManager.SOUND_LINE);
				var i = t.isHorizontal();
				if (i) {
					for (var s = t.getIndexY(), n = 0; n < this.fieldWidth; n++)
						if (null != this.field[n][s]) {
							if (this.field[n][s].isChocolate()) {
								this.tryClearChocolate(this.field[n][s].getIndexX(), this.field[n][s].getIndexY());
								continue
							}
							this.field[n][s].match(Chip.MATCH_REASON_BONUS_EFFECT_4_HOR)
						}
					this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(1200, 0)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2), this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(-1200, 0)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2)
				} else {
					for (var o = t.getIndexX(), n = this.fieldIterator; n < 8 + this.fieldIterator; n++)
						if (null != this.field[o][n]) {
							if (this.field[o][n].isChocolate()) {
								this.tryClearChocolate(this.field[o][n].getIndexX(), this.field[o][n].getIndexY());
								continue
							}
							this.field[o][n].match(Chip.MATCH_REASON_BONUS_EFFECT_4_VERT)
						}
					this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(0, -1200)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2), this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(0, 1200)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2)
				}
			}
			if (t.getBonusType() == Chip.BONUS_5) {
				DNSoundManager.g_instance.play(DNSoundManager.SOUND_KILL_COLOR), t.match(Chip.MATCH_REASON_I_AM_BONUS);
				var a = new createjs.Point(t.x, t.y),
					r = this.collectChipColors(),
					h = r[Utils.RandomRangeInt(0, r.length - 1)];
				if (-1 != h)
					for (var f = 0; f < this.fieldWidth; f++)
						for (var _ = this.fieldIterator; _ < 8 + this.fieldIterator; _++)
							if (null != this.field[f][_] && this.field[f][_].getColorID() == h) {
								var l = new createjs.Point(this.field[f][_].x, this.field[f][_].y - Constants.CELL_SIZE / 2);
								this.addGameObjectAtPos(new KillColorEffect(a, l), this.frontChipsLayer, a.x, a.y), this.field[f][_].match(Chip.MATCH_REASON_BONUS_EFFECT_5)
							}
			}
			t.getBonusType() == Chip.BONUS_BOMB && (this.boom(t), t.match(Chip.MATCH_REASON_I_AM_BONUS)), this.setInpunState(e.INPUT_STATE_MATCHING)
		}, e.prototype.matchBonus = function(t, i) {
			if (t.getBonusType() == Chip.BONUS_4) {
				DNSoundManager.g_instance.play(DNSoundManager.SOUND_LINE);
				var s = t.isHorizontal();
				if (s) {
					for (var n = t.getIndexY(), o = 0; o < this.fieldWidth; o++)
						if (null != this.field[o][n]) {
							if (this.field[o][n].isChocolate()) {
								this.tryClearChocolate(this.field[o][n].getIndexX(), this.field[o][n].getIndexY());
								continue
							}
							this.field[o][n].match(Chip.MATCH_REASON_BONUS_EFFECT_4_HOR)
						}
					this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(1200, 0)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2), this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(-1200, 0)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2)
				} else {
					for (var a = t.getIndexX(), o = this.fieldIterator; o < 8 + this.fieldIterator; o++)
						if (null != this.field[a][o]) {
							if (this.field[a][o].isChocolate()) {
								this.tryClearChocolate(this.field[a][o].getIndexX(), this.field[a][o].getIndexY());
								continue
							}
							this.field[a][o].match(Chip.MATCH_REASON_BONUS_EFFECT_4_VERT)
						}
					this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(0, -1200)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2), this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(0, 1200)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2)
				}
			}
			if (t.getBonusType() == Chip.BONUS_5) {
				DNSoundManager.g_instance.play(DNSoundManager.SOUND_KILL_COLOR), t.match(Chip.MATCH_REASON_I_AM_BONUS);
				var r = new createjs.Point(t.x, t.y),
					h = i.getColorID();
				if (-1 != h)
					for (var f = 0; f < this.fieldWidth; f++)
						for (var _ = this.fieldIterator; _ < 8 + this.fieldIterator; _++)
							if (null != this.field[f][_] && this.field[f][_].getColorID() == h) {
								var l = new createjs.Point(this.field[f][_].x, this.field[f][_].y - Constants.CELL_SIZE / 2);
								this.addGameObjectAtPos(new KillColorEffect(r, l), this.frontChipsLayer, r.x, r.y), this.field[f][_].match(Chip.MATCH_REASON_BONUS_EFFECT_5)
							}
			}
			t.getBonusType() == Chip.BONUS_BOMB && (this.boom(t), t.match(Chip.MATCH_REASON_I_AM_BONUS), i.match(Chip.MATCH_REASON_EXCHANGE_WIHT_BONUS)), this.setInpunState(e.INPUT_STATE_MATCHING)
		}, e.prototype.forcedMatchBonus = function(t) {
			this.splashTimeBoom(t), t.match(Chip.MATCH_REASON_I_AM_BONUS)
		}, e.prototype.boom = function(t) {
			DNSoundManager.g_instance.play(DNSoundManager.SOUND_BOOM);
			for (var e = t.getIndexX(), i = t.getIndexY(), s = 1, n = e - s; e + s >= n; n++)
				for (var o = i - s; i + s >= o; o++) this.validCoords(n, o) && null != this.field[n][o] && this.field[n][o].match(Chip.MATCH_REASON_BONUS_EFFECT_4_HOR);
			this.addGameObjectAtPos(new AutoreleaseEffect, this.frontChipsLayer, t.x, t.y)
		}, e.prototype.bigBoom = function(t) {
			DNSoundManager.g_instance.play(DNSoundManager.SOUND_BOOM);
			for (var e = t.getIndexX(), i = t.getIndexY(), s = 3, n = e - s; e + s >= n; n++)
				for (var o = i - s; i + s >= o; o++) this.validCoords(n, o) && null != this.field[n][o] && this.field[n][o].match(Chip.MATCH_REASON_BONUS_EFFECT_4_HOR);
			this.addGameObjectAtPos(new AutoreleaseEffect, this.frontChipsLayer, t.x, t.y)
		}, e.prototype.splashTimeBoom = function(t) {
			DNSoundManager.g_instance.playSinglePerFrame(DNSoundManager.SOUND_BOOM);
			for (var e = t.getIndexX(), i = t.getIndexY(), s = 1, n = e - s; e + s >= n; n++)
				for (var o = i - s; i + s >= o; o++) this.validCoords(n, o) && null != this.field[n][o] && !this.field[n][o].isBonus() && this.field[n][o].match("");
			this.addGameObjectAtPos(new AutoreleaseEffect, this.frontChipsLayer, t.x, t.y)
		}, e.prototype.validCoords = function(t, e) {
			return t >= 0 && t < this.fieldWidth && e >= this.fieldIterator && e < 8 + this.fieldIterator
		}, e.prototype.onExchangeEnded = function() {
			var t = null != this.swapChip1 || null != this.swapChip2,
				i = !1;
			this.swapChip1 && this.swapChip1.isBaloon() && (this.swapChip1.x = this.getXPosByXIndex(this.swapChip1.getIndexX()), this.swapChip1.rotation = 0), this.swapChip2 && this.swapChip2.isBaloon() && (this.swapChip2.x = this.getXPosByXIndex(this.swapChip2.getIndexX()), this.swapChip2.rotation = 0), t && (this.swapChip1.isBonus() && (i = !0), this.swapChip2.isBonus() && (i = !0));
			var s = this.findMatches(),
				n = this.findSquare(this.swapChip1);
			if (0 == s.length)
				if (i) {
					if (this.swapChip1.getBonusType() == Chip.BONUS_5 && this.swapChip2.isStrawberry() || this.swapChip2.getBonusType() == Chip.BONUS_5 && this.swapChip1.isStrawberry() || this.swapChip1.getBonusType() == Chip.BONUS_5 && this.swapChip2.isBaloon() || this.swapChip2.getBonusType() == Chip.BONUS_5 && this.swapChip1.isBaloon()) return this.exchangeChips(this.swapChip1, this.swapChip2), this.swapChip1 = null, void(this.swapChip2 = null)
				} else t && !n ? (this.exchangeChips(this.swapChip1, this.swapChip2), this.swapChip1 = null, this.swapChip2 = null) : n || this.setInpunState(e.INPUT_STATE_WAIT_SELECTION);
			else this.decreseMoves(), this.matchMatches(s), this.checkStrawberryLand(this.swapChip1), this.checkStrawberryLand(this.swapChip2), this.checkBaloonLand(this.swapChip1), this.checkBaloonLand(this.swapChip2);
			if (t && i) {
				if (this.swapChip1.isBonus() && this.swapChip2.isBonus() || this.swapChip2.isBird && this.swapChip1.getBonusType() == Chip.BONUS_5 || this.swapChip1.isBird && this.swapChip2.getBonusType() == Chip.BONUS_5 && (this.swapChip1.getBonusType() != Chip.BONUS_5 || this.swapChip2.getBonusType() != Chip.BONUS_5)) return this.swapChip1.getBonusType() == Chip.BONUS_5 && this.swapChip2.getBonusType() == Chip.BONUS_4 ? this.randomFiveStriped(this.swapChip1, this.swapChip2) : this.swapChip2.getBonusType() == Chip.BONUS_5 && this.swapChip1.getBonusType() == Chip.BONUS_5 ? this.killAllField() : this.swapChip1.getBonusType() == Chip.BONUS_5 && this.swapChip2.getBonusType() == Chip.BONUS_5 ? this.killAllField() : this.swapChip1.getBonusType() == Chip.BONUS_4 && this.swapChip2.getBonusType() == Chip.BONUS_5 ? this.randomFiveStriped(this.swapChip1, this.swapChip2) : this.swapChip1.getBonusType() == Chip.BONUS_5 && this.swapChip2.getBonusType() == Chip.BONUS_BOMB ? this.randomFiveBomb(this.swapChip1, this.swapChip2) : this.swapChip2.getBonusType() == Chip.BONUS_5 && this.swapChip1.getBonusType() == Chip.BONUS_BOMB ? this.randomFiveBomb(this.swapChip1, this.swapChip2) : this.swapChip1.getBonusType() == Chip.BONUS_4 && this.swapChip2.getBonusType() == Chip.BONUS_4 ? this.matchStriped(this.swapChip1) : this.swapChip1.getBonusType() == Chip.BONUS_4 && this.swapChip2.getBonusType() == Chip.BONUS_BOMB ? this.matchBiggerStriped(this.swapChip1) : this.swapChip2.getBonusType() == Chip.BONUS_4 && this.swapChip1.getBonusType() == Chip.BONUS_BOMB ? this.matchBiggerStriped(this.swapChip2) : this.swapChip1.getBonusType() == Chip.BONUS_BOMB && this.swapChip2.getBonusType() == Chip.BONUS_BOMB ? this.bigBomb(this.swapChip1) : this.swapChip1.getBonusType() == Chip.BONUS_5 && this.swapChip2.isBird ? this.convertToBirds(this.swapChip1, this.swapChip2) : this.swapChip1.isBird && this.swapChip2.getBonusType() == Chip.BONUS_5 && this.convertToBirds(this.swapChip2, this.swapChip1), this.decreseMoves(), this.checkLanding(this.swapChip1), this.checkLanding(this.swapChip2), void this.setInpunState(e.INPUT_STATE_MATCHING);
				this.swapChip1.isBonus() && this.matchBonus(this.swapChip1, this.swapChip2), this.swapChip2.isBonus() && this.matchBonus(this.swapChip2, this.swapChip1), this.decreseMoves(), this.checkLanding(this.swapChip1), this.checkLanding(this.swapChip2)
			}
		}, e.prototype.killAllField = function() {
			for (var t = 0; t < this.fieldWidth; t++)
				for (var e = this.fieldIterator; e < 8 + this.fieldIterator; e++) null != this.field[t][e] && this.field[t][e].match(Chip.MATCH_REASON_BONUS_EFFECT_5)
		}, e.prototype.convertToBirds = function(t, e) {
			DNSoundManager.g_instance.play(DNSoundManager.SOUND_KILL_COLOR), t.match(Chip.MATCH_REASON_I_AM_BONUS), e.match(Chip.MATCH_REASON_EXCHANGE_WIHT_BONUS);
			var i = new createjs.Point(t.x, t.y),
				s = e.getColorID();
			if (-1 != s)
				for (var n = 0; n < this.fieldWidth; n++)
					for (var o = this.fieldIterator; o < 8 + this.fieldIterator; o++)
						if (null != this.field[n][o] && this.field[n][o].getColorID() == s) {
							var a = new createjs.Point(this.field[n][o].x, this.field[n][o].y - Constants.CELL_SIZE / 2);
							this.addGameObjectAtPos(new KillColorEffect(i, a), this.frontChipsLayer, i.x, i.y), this.field[n][o].convertToBird(s), this.field[n][o].match(Chip.MATCH_REASON_SIMPLE)
						}
		}, e.prototype.bigBomb = function(t) {
			this.bigBoom(t), t.match(Chip.MATCH_REASON_I_AM_BONUS), t.match(Chip.MATCH_REASON_EXCHANGE_WIHT_BONUS)
		}, e.prototype.matchBiggerStriped = function(t) {
			DNSoundManager.g_instance.play(DNSoundManager.SOUND_LINE);
			var e = t.isHorizontal();
			if (e) {
				for (var i = t.getIndexY(), s = 0; s < this.fieldWidth; s++) {
					if (null != this.field[s][i]) {
						if (this.field[s][i].isChocolate()) {
							this.tryClearChocolate(this.field[s][i].getIndexX(), this.field[s][i].getIndexY());
							continue
						}
						this.field[s][i].match(Chip.MATCH_REASON_BONUS_EFFECT_4_HOR)
					}
					if (i + 1 < 8 + this.fieldIterator && null != this.field[s][i + 1]) {
						if (this.field[s][i + 1].isChocolate()) {
							this.tryClearChocolate(this.field[s][i + 1].getIndexX(), this.field[s][i + 1].getIndexY());
							continue
						}
						this.field[s][i + 1].match(Chip.MATCH_REASON_BONUS_EFFECT_4_HOR)
					}
					if (i - 1 > this.fieldIterator && null != this.field[s][i - 1]) {
						if (this.field[s][i - 1].isChocolate()) {
							this.tryClearChocolate(this.field[s][i - 1].getIndexX(), this.field[s][i - 1].getIndexY());
							continue
						}
						this.field[s][i - 1].match(Chip.MATCH_REASON_BONUS_EFFECT_4_HOR)
					}
				}
				var n = new KillLineEffect(new createjs.Point(1200, 0)),
					o = new KillLineEffect(new createjs.Point(-1200, 0));
				n.scaleX = n.scaleY = 2, o.scaleX = o.scaleY = 2, this.addGameObjectAtPos(n, this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2), this.addGameObjectAtPos(o, this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2)
			} else {
				for (var a = t.getIndexX(), s = this.fieldIterator; s < 8 + this.fieldIterator; s++) {
					if (null != this.field[a][s]) {
						if (this.field[a][s].isChocolate()) {
							this.tryClearChocolate(this.field[a][s].getIndexX(), this.field[a][s].getIndexY());
							continue
						}
						this.field[a][s].match(Chip.MATCH_REASON_BONUS_EFFECT_4_VERT)
					}
					if (a + 1 < this.fieldWidth) {
						if (null != this.field[a + 1][s] && this.field[a + 1][s].isChocolate()) {
							this.tryClearChocolate(this.field[a + 1][s].getIndexX(), this.field[a + 1][s].getIndexY());
							continue
						}
						this.field[a + 1][s].match(Chip.MATCH_REASON_BONUS_EFFECT_4_VERT)
					}
					if (a - 1 > 0) {
						if (this.field[a - 1][s].isChocolate()) {
							this.tryClearChocolate(this.field[a - 1][s].getIndexX(), this.field[a - 1][s].getIndexY());
							continue
						}
						this.field[a - 1][s].match(Chip.MATCH_REASON_BONUS_EFFECT_4_VERT)
					}
				}
				var n = new KillLineEffect(new createjs.Point(0, 1200)),
					o = new KillLineEffect(new createjs.Point(0, -1200));
				n.scaleX = n.scaleY = 2, o.scaleX = o.scaleY = 2, this.addGameObjectAtPos(n, this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2), this.addGameObjectAtPos(o, this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2)
			}
		}, e.prototype.matchStriped = function(t) {
			DNSoundManager.g_instance.play(DNSoundManager.SOUND_LINE);
			for (var e = t.getIndexY(), i = 0; i < this.fieldWidth; i++)
				if (null != this.field[i][e]) {
					if (this.field[i][e].isChocolate()) {
						this.tryClearChocolate(this.field[i][e].getIndexX(), this.field[i][e].getIndexY());
						continue
					}
					this.field[i][e].match(Chip.MATCH_REASON_BONUS_EFFECT_4_HOR)
				}
			this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(1200, 0)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2), this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(-1200, 0)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2);
			for (var s = t.getIndexX(), i = this.fieldIterator; i < 8 + this.fieldIterator; i++)
				if (null != this.field[s][i]) {
					if (this.field[s][i].isChocolate()) {
						this.tryClearChocolate(this.field[s][i].getIndexX(), this.field[s][i].getIndexY());
						continue
					}
					this.field[s][i].match(Chip.MATCH_REASON_BONUS_EFFECT_4_VERT)
				}
			this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(0, -1200)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2), this.addGameObjectAtPos(new KillLineEffect(new createjs.Point(0, 1200)), this.frontChipsLayer, t.x, t.y - Constants.CELL_SIZE / 2)
		}, e.prototype.randomFiveStriped = function(t, e) {
			t.match(Chip.MATCH_REASON_I_AM_BONUS), e.match(Chip.MATCH_REASON_I_AM_BONUS);
			for (var i = this.collectNormalChips(), s = 0; 5 > s; s++) {
				var n = Utils.RandomRangeInt(0, i.length - 1);
				if (null == i[n]) return;
				i[n].convertToBonus(Chip.BONUS_4, Math.random() < .5), this.matchBonusesWithoutChip(i[n]), this.field[i[n].getIndexX()][i[n].getIndexY()].canBeMatched = !0, this.field[i[n].getIndexX()][i[n].getIndexY()].match(Chip.MATCH_REASON_I_AM_BONUS), i.splice(n, 1)
			}
		}, e.prototype.randomFiveBomb = function(t, e) {
			t.match(Chip.MATCH_REASON_I_AM_BONUS), e.match(Chip.MATCH_REASON_I_AM_BONUS);
			for (var i = this.collectNormalChips(), s = 0; 5 > s; s++) {
				var n = Utils.RandomRangeInt(0, i.length - 1);
				if (null == i[n]) return;
				i[n].convertToBonus(Chip.BONUS_BOMB), this.matchBonusesWithoutChip(i[n]), this.field[i[n].getIndexX()][i[n].getIndexY()].canBeMatched = !0, this.field[i[n].getIndexX()][i[n].getIndexY()].match(Chip.MATCH_REASON_I_AM_BONUS), i.splice(n, 1)
			}
		}, e.prototype.checkLanding = function(t) {
			this.checkStrawberryLand(t), this.checkBaloonLand(t)
		}, e.prototype.decreseMoves = function() {
			this.loseType == e.LOSE_TYPE_MOVES && (this.moves--, this.moves < 0 && (this.moves = 0), this.movesLabel.setText(this.moves.toString()))
		}, e.prototype.findSquare = function(t) {
			for (var t, i = new Array, s = !1, n = new Array, o = 0; o < this.fieldWidth - 1; o++)
				for (var a = this.fieldIterator; a < 8 + this.fieldIterator - 1; a++)
					if (null != this.getChipAt(o, a) && null != this.getChipAt(o + 1, a + 1) && null != this.getChipAt(o + 1, a) && null != this.getChipAt(o, a + 1) && this.getChipAt(o, a).getColorID() == this.getChipAt(o, a + 1).getColorID() && this.getChipAt(o + 1, a).getColorID() == this.getChipAt(o + 1, a + 1).getColorID() && this.getChipAt(o + 1, a).getColorID() == this.getChipAt(o, a).getColorID() && -1 != this.field[o][a].getColorID() && -2 != this.field[o][a].getColorID()) {
						var r = 0,
							h = this.field[o][a].getColorID();
						if (i.push(this.field[o][a]), i.push(this.field[o][a + 1]), i.push(this.field[o + 1][a + 1]), i.push(this.field[o + 1][a]), this.containsMarsh(i)) {
							i.splice(0, i.length);
							continue
						}
						for (n = this.findNormalChip(i), null != this.lastMovedChip && this.lastMovedChip.isChip() && this.lastMovedChip.getColorID() == h && -1 != n.indexOf(this.lastMovedChip) ? (this.lastMovedChip.convertToBird(h), i.splice(i.indexOf(this.lastMovedChip), 1), n.splice(n.indexOf(this.lastMovedChip), 1), this.birdAnim(n, this.lastMovedChip)) : (t = n[Utils.RandomRangeInt(0, n.length - 1)], t.convertToBird(h), i.splice(i.indexOf(t), 1), n.splice(n.indexOf(t), 1), this.birdAnim(n, t)); r <= i.length - 1;) i[r].match(Chip.MATCH_REASON_SIMPLE), r++;
						i.splice(0, i.length), n.splice(0, n.length), s = !0
					}
			return this.setInpunState(e.INPUT_STATE_SHIFT), s
		}, e.prototype.birdAnim = function(t, i) {
			for (var s = this, n = 0; n < t.length; n++) t[n].haveCage() || createjs.Tween.get(t[n].chipPicture).to({
				x: i.x - t[n].x - t[n].chipPicture.getBounds().width / 2,
				y: i.y - t[n].y - t[n].chipPicture.getBounds().height / 2,
				scaleX: .8,
				scaleY: .8
			}, 700, createjs.Ease.circOut);
			createjs.Tween.get(t[0].chipPicture).to({
				x: t[0].chipPicture.x
			}, 800, createjs.Ease.backIn).call(function() {
				return s.setInpunState(e.INPUT_STATE_MATCHING)
			})
		}, e.prototype.containsMarsh = function(t) {
			for (var e = 0; e < t.length;) {
				if (t[e].isMarsh()) return !0;
				e++
			}
			return !1
		}, e.prototype.findNormalChip = function(t) {
			for (var e = new Array, i = 0; i < t.length; i++) null != t[i] && t[i].isChip() && e.push(t[i]);
			return e
		}, e.prototype.findMatches = function() {
			for (var t = Array(), e = this.fieldIterator; e < 8 + this.fieldIterator; e++)
				for (var i = 0; i < this.fieldWidth;) {
					for (var s = -1, n = 0, o = new Array, a = i; a < this.fieldWidth && null != this.field[a][e] && !this.field[a][e].isBonus() && -1 != this.field[a][e].getColorID() && -2 != this.field[a][e].getColorID() && (-1 == s && (s = this.field[a][e].getColorID()), this.field[a][e].getColorID() == s); a++) o.push(this.field[a][e]), n++;
					n >= 3 && !this.checkForAllMarsh(o) && t.push(o), 0 != n ? i += n : i++
				}
			for (var i = 0; i < this.fieldWidth; i++)
				for (var e = this.fieldIterator; e < 8 + this.fieldIterator; e) {
					for (var s = -1, n = 0, o = new Array, a = e; a < 8 + this.fieldIterator && null != this.field[i][a] && !this.field[i][a].isBonus() && -1 != this.field[i][a].getColorID() && -2 != this.field[i][a].getColorID() && (-1 == s && (s = this.field[i][a].getColorID()), this.field[i][a].getColorID() == s); a++) o.push(this.field[i][a]), n++;
					n >= 3 && !this.checkForAllMarsh(o) && t.push(o), 0 != n ? e += n : e++
				}
			return t
		}, e.prototype.onMouseUp = function(e, i) {
			t.prototype.onMouseUp.call(this, e, i), this.selectedChip = null
		}, e.prototype.onMouseDown = function(i, s) {
			if (t.prototype.onMouseDown.call(this, i, s), clearTimeout(this.timerLink), !this.waitLose && !this.waitWin && (s -= this.y, this.inputState == e.INPUT_STATE_WAIT_SELECTION))
				if (this.isLolipop()) {
					var n = this.findChipAt(i, s);
					if (n && !n.isHole() && !n.isStrawberry() && !n.isBaloon()) {
						n.match(Chip.MATCH_REASON_BONUS_EFFECT_5), this.setInpunState(e.INPUT_STATE_MATCHING), this.stopLolipop(), DNSoundManager.g_instance.play(DNSoundManager.SOUND_LIGHTING);
						var o = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.LIGHTING);
						this.addChild(o), o.x = n.x, o.y = n.y - 40 - this.fieldIterator * Constants.CELL_SIZE, o.alpha = 0, createjs.Tween.get(o).to({
							alpha: 1
						}, 300, createjs.Ease.linear).wait(300).to({
							alpha: 0
						}, 300, createjs.Ease.linear), createjs.Tween.get(o).to({
							rotation: 10
						}, 200, createjs.Ease.linear).to({
							rotation: -10
						}, 200, createjs.Ease.linear).to({
							rotation: 10
						}, 200, createjs.Ease.linear).to({
							rotation: -10
						}, 200, createjs.Ease.linear)
					}
				} else {
					var n = this.checkChipSelection(i, s);
					if (n) {
						if (n == this.selectedChip) return;
						this.selectedChip ? this.canExchange(this.selectedChip, n) ? (this.lastMovedChip = this.selectedChip, this.exchangeChips(this.selectedChip, n), DNSoundManager.g_instance.play(DNSoundManager.SOUND_EXCHANGE)) : (this.selectedChip.deselect(), this.selectedChip = n, this.selectedChip.select()) : (this.selectedChip = n, this.selectedChip.select())
					}
				}
		}, e.prototype.onMouseMove = function(i, s) {
			t.prototype.onMouseMove.call(this, i, s), this.inputState == e.INPUT_STATE_WAIT_SELECTION && this.onMouseDown(i, s)
		}, e.prototype.shiftChips = function() {
			this.matchInARow++;
			var t = !1;
			if (this.gravitationNormal)
				for (var i = 0; i < this.fieldWidth; i++)
					for (var s = this.fieldHeight; s >= 0; s--) {
						var n = this.field[i][s];
						if (n && n.movable())
							for (var o = this.fieldHeight - 1; o > s; o--)
								if (null == this.field[i][o]) {
									t = !0;
									var a = o;
									this.field[i][s].shiftDown(a, this.getYPosByYIndex(a)), this.field[i][a] = this.field[i][s], this.field[i][s] = null;
									break
								}
					} else
						for (var i = 0; i < this.fieldWidth; i++)
							for (var s = 0; s < this.fieldHeight; s++) {
								var n = this.field[i][s];
								if (n && n.movable())
									for (var o = this.fieldIterator; s > o; o++)
										if (null == this.field[i][o]) {
											t = !0;
											var a = o;
											this.field[i][s].shiftDown(a, this.getYPosByYIndex(a)), this.field[i][a] = this.field[i][s], this.field[i][s] = null;
											break
										}
							}
			t ? this.setInpunState(e.INPUT_STATE_SHIFT) : this.spawnNewChips()
		}, e.prototype.spawnNewChips = function() {
			var t = 0;
			if (this.gravitationNormal)
				for (var i = 0; i < this.fieldWidth; i++)
					for (var s = -1, n = this.fieldHeight - 1; n >= 0; n--) null == this.field[i][n] && (-1 == s && (s = n), t++, this.createChip(i, n, .13 * (s - n)));
			else
				for (var i = 0; i < this.fieldWidth; i++)
					for (var s = -1, n = 0; n < this.fieldHeight; n++) null == this.field[i][n] && (-1 == s && (s = n), t++, this.createChip(i, n, .04 * n));
			t > 0 ? this.setInpunState(e.INPUT_STATE_WAIT_SPAWN) : (this.setInpunState(e.INPUT_STATE_WAIT_SELECTION), this.onStartNextMove())
		}, e.prototype.spawnDefinedChips = function(t) {
			for (var i = 0; i < this.fieldWidth; i++)
				for (var s = 0; s < this.fieldHeight; s++) this.gravitationNormal ? this.createChipWithColorID(i, s, .13 * (this.fieldHeight - s) + .11 * i, t[s][i]) : this.createChipWithColorID(i, s, .07 * s + .03 * i, t[s][i]);
			this.setInpunState(e.INPUT_STATE_WAIT_SPAWN)
		}, e.prototype.checkChipSelection = function(t, e) {
			e += this.fieldIterator * Constants.CELL_SIZE;
			for (var i = 0; i < this.fieldWidth; i++)
				for (var s = this.fieldIterator; s < 8 + this.fieldIterator; s++) {
					var n = this.field[i][s];
					if (n && n.movable() && Math.abs(n.x - t) < Constants.CELL_SIZE / 2 && n.y > e && n.y < e + Constants.CELL_SIZE) return n
				}
			return null
		}, e.prototype.findChipAt = function(t, e) {
			e += this.fieldIterator * Constants.CELL_SIZE;
			for (var i = 0; i < this.fieldWidth; i++)
				for (var s = this.fieldIterator; s < 8 + this.fieldIterator; s++) {
					var n = this.field[i][s];
					if (n && Math.abs(n.x - t) < Constants.CELL_SIZE / 2 && n.y > e && n.y < e + Constants.CELL_SIZE) return n
				}
			return null
		}, e.prototype.setNegateInpunStateTime = function() {
			this.inputStateTime = -.2
		}, e.prototype.setInpunState = function(t) {
			if ((this.inputState != e.INPUT_STATE_FREEZE || t == e.INPUT_STATE_UNFREEZE) && (this.inputState = t, t == e.INPUT_STATE_UNFREEZE && (this.inputState = e.INPUT_STATE_MATCHING), this.inputStateTime = 0, this.inputState == e.INPUT_STATE_WAIT_SELECTION)) {
				if (this.matchInARow = 0, this.findMoves()) {
					if (this.showHint) {
						var i = this.field[this.findedMatchPos1.x][this.findedMatchPos1.y],
							s = this.field[this.findedMatchPos2.x][this.findedMatchPos2.y];
						this.moveHint = new MoveHint(this.findedMatchPos1.y != this.findedMatchPos2.y), this.moveHint.x = (i.x + s.x) / 2, this.moveHint.y = (i.y + s.y) / 2 - Constants.CELL_SIZE / 2, this.showHint = !1
					}
				} else {
					this.moveHint && (this.moveHint.isDead() ? this.moveHint = null : this.moveHint.hide());
					for (var n = 0; 100 > n; n++) {
						var o = this.field[Utils.RandomRangeInt(0, this.fieldWidth - 1)][Utils.RandomRangeInt(this.fieldIterator, 7 + this.fieldIterator)];
						if (o.isChip() && !o.haveCage() && !o.isBird) {
							o.convertToBonus([Chip.BONUS_BOMB, Chip.BONUS_4, Chip.BONUS_5][Utils.RandomRangeInt(0, 2)]);
							break
						}
					}
				}
				this.loseType == e.LOSE_TYPE_MOVES && this.moves <= 0 && this.lose(e.LOSE_REASON_MOVES)
			}
		}, e.prototype.takeStockMatch = function(t) {
			var i = t.getIndexX(),
				s = t.getIndexY();
			this.field[i][s] == t && this.goal == e.GOAL_COUNT && t.getColorID() == this.goalChipID && (this.chipGoalCount--, this.chipGoalCount <= 0 && (this.chipGoalCount = 0, this.win()), this.goalLabel.setText(this.chipGoalCount.toString()))
		}, e.prototype.clearCell = function(t) {
			var i = t.getIndexX(),
				s = t.getIndexY();
			this.field[i][s] == t && (this.goal == e.GOAL_COUNT && t.getColorID() == this.goalChipID && (this.chipGoalCount--, this.chipGoalCount <= 0 && (this.chipGoalCount = 0, this.win()), this.goalLabel.setText(this.chipGoalCount.toString())), (t.getMatchReason() == Chip.MATCH_REASON_BONUS_EFFECT_5 || t.getMatchReason() == Chip.MATCH_REASON_BONUS_EFFECT_4_HOR || t.getMatchReason() == Chip.MATCH_REASON_BONUS_EFFECT_4_VERT) && this.runParticleEffect(t.x, t.y - Constants.CELL_SIZE / 2), this.field[i][s] = null), this.tryClearDirt(i, s), t.isStoneHeart() || this.tryClearStoneHeart(i, s), t.isChocolate() || this.tryClearChocolate(i, s)
		}, e.prototype.isDirt = function(t, e) {
			return null != this.fieldDirt[t][e]
		}, e.prototype.tryClearDirt = function(t, i) {
			var s = this.fieldDirt[t][i],
				n = !1;
			if (s) {
				if (s.name == Images.DIRT_1) this.fieldDirt[t][i] = null, 0 == --this.dirtCount && this.win(), createjs.Tween.get(s).to({
					alpha: 0
				}, 300, createjs.Ease.linear);
				else {
					s.visible = !1;
					var o = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.DIRT_1);
					o.name = Images.DIRT_1, o.x = this.getXPosByXIndex(t), o.y = this.getYPosByYIndex(i) - Constants.CELL_SIZE / 2, this.dirtLayer.addChild(o), this.fieldDirt[t][i] = o
				}
				n = !0
			}
			return this.goal == e.GOAL_DIRT && this.goalLabel.setText(this.dirtCount.toString()), n
		}, e.prototype.tryClearStoneHeart = function(t, e) {
			var i, s = !1;
			i = this.getChipAt(t + 1, e), i && i.isStoneHeart() && 0 != i.getStoneWeakness() && 0 == s && (i.iterateStoneWeakness(), s = !0), i && i.isStoneHeart() && 0 == i.getStoneWeakness() && i.fallDown(), i = this.getChipAt(t - 1, e), i && i.isStoneHeart() && 0 != i.getStoneWeakness() && 0 == s && (i.iterateStoneWeakness(), s = !0), i && i.isStoneHeart() && 0 == i.getStoneWeakness() && i.fallDown(), i = this.getChipAt(t, e + 1), i && i.isStoneHeart() && 0 != i.getStoneWeakness() && 0 == s && (i.iterateStoneWeakness(), s = !0), i && i.isStoneHeart() && 0 == i.getStoneWeakness() && i.fallDown(), i = this.getChipAt(t, e - 1), i && i.isStoneHeart() && 0 != i.getStoneWeakness() && 0 == s && (i.iterateStoneWeakness(), s = !0), i && i.isStoneHeart() && 0 == i.getStoneWeakness() && i.fallDown()
		}, e.prototype.tryClearChocolate = function(t, e) {
			var i;
			i = this.getChipAt(t, e), i && i.isChocolate() && 1 == i.chocoStrength ? (i.fallDown(), this.wasChocolateClear = !0) : i && i.isChocolate() && (this.wasChocolateClear = !0, i.convertToChocolate()), i = this.getChipAt(t + 1, e), i && i.isChocolate() && 1 == i.chocoStrength ? (i.fallDown(), this.wasChocolateClear = !0) : i && i.isChocolate() && (this.wasChocolateClear = !0, i.convertToChocolate()), i = this.getChipAt(t - 1, e), i && i.isChocolate() && 1 == i.chocoStrength ? (i.fallDown(), this.wasChocolateClear = !0) : i && i.isChocolate() && (this.wasChocolateClear = !0, i.convertToChocolate()), i = this.getChipAt(t, e + 1), i && i.isChocolate() && 1 == i.chocoStrength ? (i.fallDown(), this.wasChocolateClear = !0) : i && i.isChocolate() && (this.wasChocolateClear = !0, i.convertToChocolate()), i = this.getChipAt(t, e - 1), i && i.isChocolate() && 1 == i.chocoStrength ? (i.fallDown(), this.wasChocolateClear = !0) : i && i.isChocolate() && (this.wasChocolateClear = !0, i.convertToChocolate()), this.onChocoSaveQuick(), this.onChocoSave()
		}, e.prototype.finishLevel = function() {
			for (var t = 0; t < this.fieldWidth; t++)
				for (var e = 0; e < this.fieldHeight; e++) null != this.field[t][e] && this.field[t][e].isNormal() && this.field[t][e].fallDown()
		}, e.prototype.lose = function(t) {
			if (!this.waitWin && !this.waitLose) {
				switch (this.loseReason = t, this.waitLose = !0, GameData.getInstance().spendLive(), t) {
					case e.LOSE_REASON_MOVES:
						this.addGameObjectAt(new TimeIsUpEffect(Images.LOSE_MOVES), this);
						break;
					case e.LOSE_REASON_BOMB:
						this.addGameObjectAt(new TimeIsUpEffect(Images.LOSE_BOMB), this);
						break;
					case e.LOSE_REASON_TIME:
						this.addGameObjectAt(new TimeIsUpEffect(Images.LOSE_TIME), this)
				}
				DNSoundManager.g_instance.play(DNSoundManager.SOUND_LOSE)
			}
		}, e.prototype.win = function() {
			this.waitWin || this.waitLose || (this.waitWin = !0, this.stars = this.calcStarsCount(), DNSoundManager.g_instance.play(DNSoundManager.SOUND_WIN))
		}, e.prototype.addPointsAt = function(t, i) {
			if (null == t.getBonusType()) {
				var s = 40;
				switch (i) {
					case Chip.MATCH_REASON_EXCHANGE_WIHT_BONUS:
						s = 40;
						break;
					case Chip.MATCH_REASON_BONUS_EFFECT_5:
						s = 100;
						break;
					case Chip.MATCH_REASON_BONUS_EFFECT_4_HOR:
						s = 90;
						break;
					case Chip.MATCH_REASON_BONUS_EFFECT_4_VERT:
						s = 120;
						break;
					case Chip.MATCH_REASON_I_AM_BONUS:
						s = 150;
						break;
					default:
						s = 40 + 20 * this.matchInARow
				}
				var n = new FlyingPoints(s);
				this.score += s;
				var o = t.x,
					a = t.y - Constants.CELL_SIZE / 2;
				if (this.tryShowAwesome(o, a)) return;
				if (this.tryShowSuperb(o, a)) return;
				this.addGameObjectAtPos(n, this.effectsLayer, o, a), this.goal == e.GOAL_SCORE && this.score >= this.scoreGoalCount && this.win()
			}
		}, e.prototype.getGoal = function() {
			return this.goal
		}, e.prototype.tryShowSuperb = function(t, e) {
			if (this.matchInARow >= 3 && this.superbEffectTime != this.liveTime) {
				this.superbEffectTime = this.liveTime;
				var i = new SuperbEffect;
				return this.addGameObjectAtPos(i, this.frontChipsLayer, t, e), DNSoundManager.g_instance.play(DNSoundManager.SOUND_AWESOME), i.x < 120 && (i.x = 120), i.x > Constants.ASSETS_WIDTH - 120 && (i.x = Constants.ASSETS_WIDTH - 120), this.score += 500, !0
			}
			return !1
		}, e.prototype.tryShowAwesome = function(t, e) {
			if (2 == this.matchInARow && this.awesomeEffectTime != this.liveTime) {
				this.awesomeEffectTime = this.liveTime;
				var i = new ShowAwesomeEffect;
				return this.addGameObjectAtPos(i, this.frontChipsLayer, t, e), DNSoundManager.g_instance.play(DNSoundManager.SOUND_AWESOME), i.x < 120 && (i.x = 120), i.x > Constants.ASSETS_WIDTH - 120 && (i.x = Constants.ASSETS_WIDTH - 120), this.score += 200, !0
			}
			return !1
		}, e.prototype.findMoves = function() {
			for (var t = [
					[2, -1],
					[3, 0],
					[2, 1]
				], e = [
					[-1, -1],
					[-2, 0],
					[-1, 1]
				], i = [
					[1, -1],
					[1, 1]
				], s = this.fieldIterator; s < 8 + this.fieldIterator; s++)
				for (var n = 0; n < this.fieldWidth - 1; n++)
					if (null != this.field[n][s] && null != this.field[n + 1][s] && this.field[n][s].getColorID() == this.field[n + 1][s].getColorID()) {
						if (this.findPattern(n, s, this.field[n][s].getColorID(), t, n + 2, s)) return this.showHint = !0, !0;
						if (this.findPattern(n, s, this.field[n][s].getColorID(), e, n - 1, s)) return this.showHint = !0, !0
					}
			for (var s = this.fieldIterator; s < 8 + this.fieldIterator; s++)
				for (var n = 0; n < this.fieldWidth - 2; n++)
					if (this.field[n][s].getColorID() == this.field[n + 2][s].getColorID() && this.findPattern(n, s, this.field[n][s].getColorID(), i, n + 1, s)) return this.showHint = !0, !0;
			for (var o = [
					[-1, 2],
					[0, 3],
					[1, 2]
				], a = [
					[-1, -1],
					[0, -2],
					[1, -1]
				], r = [
					[-1, 1],
					[1, 1]
				], s = this.fieldIterator; s < 7 + this.fieldIterator; s++)
				for (var n = 0; n < this.fieldWidth; n++)
					if (this.field[n][s].getColorID() == this.field[n][s + 1].getColorID()) {
						if (this.findPattern(n, s, this.field[n][s].getColorID(), o, n, s + 2)) return this.showHint = !0, !0;
						if (this.findPattern(n, s, this.field[n][s].getColorID(), a, n, s - 1)) return this.showHint = !0, !0
					}
			for (var s = this.fieldIterator; s < 6 + this.fieldIterator; s++)
				for (var n = 0; n < this.fieldWidth; n++)
					if (this.field[n][s].getColorID() == this.field[n][s + 2].getColorID() && this.findPattern(n, s, this.field[n][s].getColorID(), r, n, s + 1)) return this.showHint = !0, !0;
			for (var s = this.fieldIterator; s < 8 + this.fieldIterator; s++)
				for (var n = 0; n < this.fieldWidth; n++)
					if (this.field[n][s].isBonus()) {
						if (this.validCoords(n - 1, s) && (this.field[n - 1][s].isChip() || this.field[n - 1][s].isBonus())) return !0;
						if (this.validCoords(n + 1, s) && (this.field[n + 1][s].isChip() || this.field[n + 1][s].isBonus())) return !0;
						if (this.validCoords(n, s + 1) && (this.field[n][s + 1].isChip() || this.field[n][s + 1].isBonus())) return !0;
						if (this.validCoords(n, s - 1) && (this.field[n][s - 1].isChip() || this.field[n][s - 1].isBonus())) return !0
					}
			return !1
		}, e.prototype.findPattern = function(t, e, i, s, n, o) {
			if (0 >= i) return !1;
			if (0 > n || n >= this.fieldWidth || o < this.fieldIterator || o >= 8 + this.fieldIterator) return !1;
			if (this.field[n][o] && !this.field[n][o].movable()) return !1;
			for (var a = 0; a < s.length; a++) {
				var r = this.getColorAt(t + s[a][0], e + s[a][1]);
				if (!(0 >= r) && r == i) {
					if (this.field[n][o].haveCage() || this.field[n][o].isMarsh()) continue;
					if (this.field[t + s[a][0]][e + s[a][1]].haveCage() || this.field[t + s[a][0]][e + s[a][1]].isMarsh()) continue;
					return this.findedMatchPos1 = new createjs.Point(n, o), this.findedMatchPos2 = new createjs.Point(t + s[a][0], e + s[a][1]), !0
				}
			}
			return !1
		}, e.prototype.setHintIndeces = function(t, e, i, s) {
			this.findedMatchPos1 = new createjs.Point(t, e), this.findedMatchPos2 = new createjs.Point(i, s)
		}, e.prototype.getChipAt = function(t, e) {
			return 0 > t || 0 > e || t >= this.fieldWidth || e >= this.fieldHeight || !this.field[t][e] || this.field[t][e].isHole() ? null : this.field[t][e]
		}, e.prototype.getColorAt = function(t, e) {
			return 0 > t || e < this.fieldIterator || t >= this.fieldWidth || e >= 8 + this.fieldIterator || null == !this.field[t][e] || 0 > e ? -1 : this.field[t][e].getColorID()
		}, e.prototype.onShiftEnded = function(t) {
			if (this.liveTime > this.lastDropSoundTime + .06) {
				this.lastDropSoundTime = this.liveTime;
				for (var e = Utils.RandomRangeInt(0, 2), i = 0; e == this.lastDropID && 10 > i; i++) e = Utils.RandomRangeInt(0, 2);
				switch (this.lastDropID = e, e) {
					case 0:
						DNSoundManager.g_instance.play(DNSoundManager.SOUND_DROP_1);
						break;
					case 1:
						DNSoundManager.g_instance.play(DNSoundManager.SOUND_DROP_2);
						break;
					case 2:
						DNSoundManager.g_instance.play(DNSoundManager.SOUND_DROP_3)
				}
			}
			this.checkStrawberryLand(t), this.checkBaloonLand(t)
		}, e.prototype.scrollLevel = function(t) {
			var i = this;
			this.goal == e.GOAL_STRAWBERRY ? (this.setInpunState(e.INPUT_STATE_LOCK), createjs.Tween.get(this.layersContainer).to({
				y: this.layersContainer.y - Constants.CELL_SIZE * t
			}, 700 * t, createjs.Ease.circOut).call(function() {
				return i.onScroll()
			}), this.fieldIterator += t) : (this.setInpunState(e.INPUT_STATE_LOCK), createjs.Tween.get(this.layersContainer).to({
				y: this.layersContainer.y + Constants.CELL_SIZE * t
			}, 700 * t, createjs.Ease.circOut).call(function() {
				return i.onScroll()
			}), this.fieldIterator -= t), this.iterated = !0
		}, e.prototype.onVeryScroll = function() {
			this.iterated = !1, this.setInpunState(e.INPUT_STATE_SHIFT)
		}, e.prototype.onScroll = function() {
			this.iterated = !1, this.setInpunState(e.INPUT_STATE_SHIFT)
		}, e.prototype.scrollVeryBot = function() {
			var t = this;
			if (this.fieldIterator + 8 != this.fieldHeight) {
				var e = this.fieldHeight - this.fieldIterator - 8;
				createjs.Tween.get(this.layersContainer).to({
					y: this.layersContainer.y - Constants.CELL_SIZE * e
				}, 700 * e, createjs.Ease.circOut).call(function() {
					return t.onVeryScroll()
				}), this.fieldIterator += e, this.iterated = !0
			}
		}, e.prototype.checkForScroll = function() {
			if (!(this.fieldHeight > 8)) return 0;
			if (this.fieldIterator + 8 == this.fieldHeight && this.goal == e.GOAL_STRAWBERRY) return 0;
			if (0 == this.fieldIterator && this.goal == e.GOAL_BALOON) return 0;
			for (var t = 999, i = 0; i < this.fieldWidth; i++)
				for (var s = 0; s < this.fieldHeight; s++) this.goal == e.GOAL_STRAWBERRY && this.field[i][s] && this.field[i][s].isStrawberry() && t > this.field[i][s].getIndexY() - (3 + this.fieldIterator) && (t = this.field[i][s].getIndexY() - (3 + this.fieldIterator)), this.goal == e.GOAL_BALOON && this.field[i][s] && this.field[i][s].isBaloon() && t > 5 + this.fieldIterator - this.field[i][s].getIndexY() && (t = 5 + this.fieldIterator - this.field[i][s].getIndexY());
			return 999 == t || 0 > t ? 0 : (this.goal == e.GOAL_BALOON && this.fieldIterator - t < 0 && (t = Math.abs(this.fieldIterator - t)), this.goal == e.GOAL_STRAWBERRY && t + this.fieldIterator + 8 > this.fieldHeight && (t = Math.abs(this.fieldHeight + 1 - t - this.fieldIterator - 8)), t)
		}, e.prototype.checkStrawberryLand = function(t) {
			if (t && t.isStrawberry()) {
				for (var e = t.getIndexX(), i = t.getIndexY() + 1; i < this.fieldHeight; i++) {
					if (null == this.field[e][i]) return;
					if (!this.field[e][i].isHole() || this.field[e][i].chocolate) return
				}
				t.flyAway(), this.addChild(t)
			}
		}, e.prototype.checkBaloonLand = function(t) {
			if (t && t.isBaloon()) {
				for (var e = t.getIndexX(), i = t.getIndexY(); i > 0; i--) {
					if (null == this.field[e][i]) return;
					if (!this.field[e][i].isHole() || this.field[e][i].chocolate) return
				}
				t.flyAwayBaloon(), this.addChild(t)
			}
		}, e.prototype.runParticleEffect = function(t, e) {
			for (var i = 80, s = Utils.RandomRangeInt(3, 4), n = 0; s > n; n++) {
				var o = Utils.RadToGrad(Utils.RandomRange(0, 360)),
					a = new HeartParticle(Math.cos(o) * i, Math.sin(o) * i);
				this.addGameObjectAt(a, this.frontChipsLayer), this.frontChipsLayer.addChild(a), a.x = t + Utils.RandomRange(-Constants.CELL_SIZE / 3, Constants.CELL_SIZE / 3), a.y = e + Utils.RandomRange(-Constants.CELL_SIZE / 3, Constants.CELL_SIZE / 3)
			}
		}, e.prototype.onStrawberrySaveQuick = function() {
			if (this.goal == e.GOAL_STRAWBERRY) {
				var t = this.calcStrawberryCount();
				0 >= t && this.win()
			}
		}, e.prototype.onMarshSaveQuick = function() {
			if (this.goal == e.GOAL_MARSH) {
				var t = this.calcMarshCount();
				0 >= t && this.win()
			}
		}, e.prototype.onBaloonSaveQuick = function() {
			if (this.goal == e.GOAL_BALOON) {
				var t = this.calcBaloonCount();
				0 >= t && this.win()
			}
		}, e.prototype.onBaloonSave = function() {
			this.goal == e.GOAL_BALOON && this.goalLabel.setText(this.calcBaloonCount().toString())
		}, e.prototype.onChocoSave = function() {
			this.goal == e.GOAL_CHOCO && this.goalLabel.setText(this.calcChocoCount().toString())
		}, e.prototype.onChocoSaveQuick = function() {
			if (this.goal == e.GOAL_CHOCO) {
				var t = this.calcChocoCount();
				0 >= t && this.win()
			}
		}, e.prototype.onStrawberrySave = function() {
			this.goal == e.GOAL_STRAWBERRY && this.goalLabel.setText(this.calcStrawberryCount().toString())
		}, e.prototype.onMarshSave = function() {
			this.goal == e.GOAL_MARSH && this.goalLabel.setText(this.calcMarshCount().toString())
		}, e.prototype.getDoubleChoco = function() {
			return this.isDoubleChoco
		}, e.prototype.checkChocolateMultiply = function() {
			if (!this.wasChocolateClear) {
				for (var t = [], i = [{
						x: 0,
						y: 1
					}, {
						x: 0,
						y: -1
					}, {
						x: 1,
						y: 0
					}, {
						x: -1,
						y: 0
					}], s = 0; s < this.fieldWidth; s++)
					for (var n = this.fieldIterator; n < 8 + this.fieldIterator; n++) this.field[s][n] && this.field[s][n].isChocolate() && t.push(this.field[s][n]);
				var o = 0;
				if (0 != t.length) {
					Utils.shuffle(t);
					for (var a = 0; a < t.length; a++) {
						var r = t[a];
						Utils.shuffle(i);
						for (var h = 0; h < i.length; h++) {
							var s = i[h].x,
								n = i[h].y;
							if (this.validCoords(s + r.getIndexX(), n + r.getIndexY())) {
								var f = this.field[s + r.getIndexX()][n + r.getIndexY()];
								if (f.isChip() && !f.haveCage() && !f.isMarsh()) {
									if (this.isDoubleChoco ? f.convertToDoubleChocolateWithAnim() : f.convertToChocolateWithAnim(), this.onChocoSaveQuick(), this.onChocoSave(), o++, this.setInpunState(e.INPUT_STATE_WAIT_SELECTION), 2 == o && this.isDoubleChoco) return;
									if (1 == o && !this.isDoubleChoco) return
								}
							}
						}
					}
				}
			}
		}, e.prototype.onStartNextMove = function() {
			if (this.checkForMatch = !0, this.checkChocolateMultiply(), this.wasChocolateClear = !1, this.waitWin) this.needRunSplashTime ? (this.needRunSplashTime = !1, this.runSplashTime(), this.waitWinTime = -1e7) : this.killAllBonuses() ? this.setInpunState(e.INPUT_STATE_MATCHING) : this.waitWinTime = 0;
			else
				for (var t = 0; t < this.fieldWidth; t++)
					for (var i = 0; i < this.fieldHeight; i++) this.field[t][i] && this.field[t][i].isBomb() && this.field[t][i].onDecreseMoves()
		}, e.prototype.killAllBonuses = function() {
			for (var t = 0, e = 0; e < this.fieldWidth; e++)
				for (var i = 0; i < this.fieldHeight; i++) this.field[e][i] && this.field[e][i].isBonus() && (this.forcedMatchBonus(this.field[e][i]), t++);
			return 0 != t
		}, e.prototype.convertRandomChipToBonus = function() {
			for (var t = 0; 100 > t; t++) {
				var e = Utils.RandomRangeInt(1, this.fieldWidth - 2),
					i = Utils.RandomRangeInt(0, this.fieldHeight - 1),
					s = this.field[e][i];
				if (s && s.isChip() && !s.haveCage() && !s.isMarsh()) {
					s.convertToSplashTimeBonus(), DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_5);
					break
				}
			}
			this.onCreateBonusDuringSplashTime()
		}, e.prototype.runAllBonuses = function() {
			for (var t = [], e = 0; e < this.fieldWidth; e++)
				for (var i = this.fieldHeight - 1; i >= 0; i--) this.field[e][i] && this.field[e][i].isBonus() && t.push(this.field[e][i]);
			this.addGameObject(new BonusSplasher(t))
		}, e.prototype.onCreateBonusDuringSplashTime = function() {
			this.loseType == e.LOSE_TYPE_MOVES && (this.moves -= 3, this.moves <= 0 && (this.moves = 0), this.movesLabel.setText(this.moves.toString()))
		}, e.prototype.saveByBooster = function(t) {
			switch (this.waitLose = !1, this.waitLoseTime = 0, t) {
				case e.LOSE_REASON_MOVES:
					this.activateBooster(GameData.BOOSTER_MOVES);
					break;
				case e.LOSE_REASON_TIME:
					this.activateBooster(GameData.BOOSTER_TIME);
					break;
				case e.LOSE_REASON_BOMB:
					this.activateBooster(GameData.BOOSTER_BOMB)
			}
		}, e.prototype.activateBooster = function(t) {
			switch (GameData.getInstance().spendBooster(t), t) {
				case GameData.BOOSTER_MOVES:
					this.moves += 5, this.movesLabel.setText(this.moves.toString());
					break;
				case GameData.BOOSTER_TIME:
					this.time += 30, this.timeLabel.setText(Utils.IntToTimeString(Math.round(this.time)));
					break;
				case GameData.BOOSTER_BOMB:
					this.increseAllBombsCounters();
					break;
				case GameData.BOOSTER_4:
					this.convertRandomChipToBonus4();
					break;
				case GameData.BOOSTER_5:
					this.convertRandomChipToBonus5(), this.shiftChips;
					break;
				case GameData.BOOSTER_LOLIPOP:
					this.runLolipopBooster()
			}
		}, e.prototype.increseAllBombsCounters = function() {
			for (var t = 0; t < this.fieldWidth; t++)
				for (var e = 0; e < this.fieldHeight; e++) this.field[t][e] && this.field[t][e].isBomb() && this.field[t][e].increaseBombCounter()
		}, e.prototype.convertRandomChipToBonus4 = function() {
			for (var t = 0; 100 > t; t++) {
				var e = Utils.RandomRangeInt(1, this.fieldWidth - 2),
					i = Utils.RandomRangeInt(0, this.fieldHeight - 1),
					s = this.field[e][i];
				if (s && s.isChip() && !s.haveCage() && !s.isMarsh()) {
					s.convertToStartBonus4();
					break
				}
			}
		}, e.prototype.convertRandomChipToBonus5 = function() {
			for (var t = 0; 100 > t; t++) {
				var e = Utils.RandomRangeInt(1, this.fieldWidth - 2),
					i = Utils.RandomRangeInt(0, this.fieldHeight - 1),
					s = this.field[e][i];
				if (s && s.isChip() && !s.haveCage() && !s.isMarsh()) {
					s.convertToStartBonus5();
					break
				}
			}
		}, e.prototype.runLolipopBooster = function() {
			this.lolipop = !0, this.lolipopEffect = new RunLolipopEffect, this.addGameObjectAt(this.lolipopEffect, this.frontChipsLayer)
		}, e.prototype.isLolipop = function() {
			return this.lolipop
		}, e.prototype.stopLolipop = function() {
			this.lolipopEffect && (this.lolipopEffect.hide(), this.lolipopEffect = null), this.lolipop = !1
		}, e.prototype.checkForWaiting = function() {
			return this.waitWin || this.waitLose ? !0 : !1
		}, e.prototype.calcStarsCount = function() {
			if (this.loseType == e.LOSE_TYPE_MOVES) {
				if (this.moves >= 7) return 3;
				if (this.moves >= 4) return 2
			} else {
				if (this.time >= 45) return 3;
				if (this.time >= 30) return 2
			}
			return 1
		}, e.prototype.resume = function() {
			this.booster1.updateCaption(), this.booster2.updateCaption()
		}, e.g_curLevel = -1, e.LOSE_REASON_TIME = "LOSE_REASON_TIME", e.LOSE_REASON_MOVES = "LOSE_REASON_MOVES", e.LOSE_REASON_BOMB = "LOSE_REASON_BOMB", e.INPUT_STATE_WAIT_SELECTION = "INPUT_STATE_WAIT_SELECTION", e.INPUT_STATE_LOCK = "INPUT_STATE_LOCK", e.INPUT_STATE_WAIT_SPAWN = "INPUT_STATE_WAIT_SPAWN", e.INPUT_STATE_SHIFT = "INPUT_STATE_SHIFT", e.INPUT_STATE_MATCHING = "INPUT_STATE_MATCHING", e.INPUT_STATE_SCROLLING = "INPUT_STATE_SCROLLING", e.INPUT_STATE_FREEZE = "INPUT_STATE_FREEZE", e.INPUT_STATE_UNFREEZE = "INPUT_STATE_UNFREEZE", e.GOAL_DIRT = "GOAL_DIRT", e.GOAL_COUNT = "GOAL_COUNT", e.GOAL_STRAWBERRY = "GOAL_STRAWBERRY", e.GOAL_BALOON = "GOAL_BALOON", e.GOAL_SCORE = "GOAL_SCORE", e.GOAL_MARSH = "GOAL_MARSH", e.GOAL_CHOCO = "GOAL_CHOCO", e.LOSE_TYPE_MOVES = "LOSE_TYPE_MOVES", e.LOSE_TYPE_TIME = "LOSE_TYPE_TIME", e
	}(DNGameState),
	PortraitLockState = function(t) {
		function e() {
			t.call(this);
			var e = new createjs.Shape;
			e.graphics.beginFill("#4aa4c2"), e.graphics.drawRect(0, 0, Constants.ASSETS_WIDTH, Constants.ASSETS_HEIGHT), e.graphics.endFill(), this.addChild(e);
			var i = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.ROTATE);
			this.addChild(i), i.x = Constants.ASSETS_WIDTH / 2, i.y = Constants.ASSETS_HEIGHT / 2
		}
		return __extends(e, t), e.prototype.onOrientationChanged = function(t) {
			t || DNStateManager.g_instance.popState()
		}, e
	}(DNGameState),
	PreloaderState = function(t) {
		function e(e, i, s, n) {
			var o = this;
			t.call(this), this.haveLogo = !1, this.loadingBar = new DNLoadingBar("#000000", "#ffffff", "#666666", "#ffffff"), new DNAssetsManager(e, i, s, n, function(t) {
				return o.handleProgress(t)
			}), this.addChild(this.loadingBar), this.loadingBar.x = Constants.ASSETS_WIDTH / 2, this.loadingBar.y = Constants.ASSETS_HEIGHT / 2
		}
		return __extends(e, t), e.prototype.handleProgress = function(t) {
			if (!this.haveLogo) {
				var e = DNAssetsManager.g_instance.getImage("logo_ingame");
				if (!e.getBounds()) return;
				this.haveLogo = !0, e.scaleX = e.scaleY = .7, this.addChild(e), e.x = 20, e.y = Constants.ASSETS_HEIGHT / 2 - 200
			}
			this.loadingBar.setProgress(t.loaded)
		}, e.prototype.onOrientationChanged = function() {}, e
	}(DNGameState),
	RunLolipopEffect = function(t) {
		function e() {
			t.call(this), this.text = new createjs.Text(DNStringManager.getInstance().getString(DNStringManager.POWERUP_CELL), "bold 33px Times New Roman", "#ffffff"), this.shaderShape = new createjs.Shape, this.shaderShape.graphics.beginFill("#000000"), this.shaderShape.graphics.drawRect(0, 0, Constants.ASSETS_WIDTH, 115), this.shaderShape.graphics.endFill(), this.addChild(this.shaderShape), this.shaderShape.alpha = 0, createjs.Tween.get(this.shaderShape).to({
				alpha: .75
			}, 500, createjs.Ease.linear), this.text.textAlign = "center", this.text.lineWidth = 400, this.text.x = Constants.ASSETS_WIDTH / 2, this.text.y = 30, this.addChild(this.text), createjs.Tween.get(this.text).to({
				alpha: 1
			}, 500, createjs.Ease.linear)
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.text.scaleX = this.text.scaleY = 1 + .03 * Math.sin(7 * this.liveTime)
		}, e.prototype.hide = function() {
			var t = this;
			createjs.Tween.get(this.text).to({
				alpha: 0
			}, 300, createjs.Ease.linear), createjs.Tween.get(this.shaderShape).to({
				alpha: 0
			}, 400, createjs.Ease.linear).call(function() {
				return t.kill()
			})
		}, e
	}(DNGameObject),
	SaveBoosterButton = function(t) {
		function e(e, i, s) {
			t.call(this, e, i, s)
		}
		return __extends(e, t), e
	}(BoosterButtonBase),
	SelectBoosterButton = function(t) {
		function e(e, i) {
			var s = this;
			t.call(this, e, i), this.checked = !1, this.setHandler(function() {
				return s.onTouch()
			})
		}
		return __extends(e, t), e.prototype.onTouch = function() {
			this.count > 0 ? (this.checked = !this.checked, this.selectedPic.visible = this.checked) : DNStateManager.g_instance.pushState(new BuyMoreBoostersState(this))
		}, e
	}(BoosterButtonBase),
	SelectBoosterState = function(t) {
		function e(e) {
			var i = this;
			t.call(this), this.level = e;
			var s = new DNJellyButton(Images.BUTTON_CLOSE, function() {
				return i.hide()
			});
			this.panel.addChild(s), this.addGuiObject(s), s.x = 230, s.y = -190;
			var n = new DNJellyButton(Images.BUTTON_PLAY, function() {
				return i.onPlayTouch()
			});
			this.panel.addChild(n), this.addGuiObject(n), n.x = 0, n.y = 130;
			var o = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.SELECT_BOOSTER), DN_TEXT_ALIGN_HOR.CENTER, 300);
			if (o.y = -180, this.panel.addChild(o), 0 != GameData.getInstance().getLevelDef(e).moves) {
				var a = new SelectBoosterButton(Images.BOOSTER_MOVES, GameData.BOOSTER_MOVES);
				this.panel.addChild(a), this.addGuiObject(a), a.x = -130, a.y = -30
			}
			if (0 != GameData.getInstance().getLevelDef(e).time) {
				var a = new SelectBoosterButton(Images.BOOSTER_TIME, GameData.BOOSTER_TIME);
				this.panel.addChild(a), this.addGuiObject(a), a.x = -130, a.y = -30
			}
			var r = new SelectBoosterButton(Images.BOOSTER_4, GameData.BOOSTER_4);
			this.panel.addChild(r), this.addGuiObject(r), r.x = 0, r.y = -30;
			var h = new SelectBoosterButton(Images.BOOSTER_5, GameData.BOOSTER_5);
			this.panel.addChild(h), this.addGuiObject(h), h.x = 130, h.y = -30, this.boosters = [a, r, h]
		}
		return __extends(e, t), e.prototype.onPlayTouch = function() {
			for (var t = [], e = 0; e < this.boosters.length; e++) this.boosters[e].checked && t.push(this.boosters[e].boosterName);
			DNStateManager.g_instance.pushState(new CoolTransitionInState(new PlayState(this.level, !0, t)))/*, SG_Hooks.levelStarted(this.level + 1)*/
		}, e
	}(PopupState),
	SelectLevelButton = function(t) {
		function e(e, i) {
			var s = this;
			if (t.call(this, e, null), this.locked = !1, this.levelNum = i, this.setHandler(function() {
					return s.onTouch()
				}), i < GameData.getInstance().levelsAvailable()) {
				var n = new DNTextField((i + 1).toString(), DNFontDef.MAP_FONT);
				this.getPicture().addChild(n), n.x = -n.getBounds().width / 2, n.y = -n.getBounds().height / 2 - 9;
				var o = GameData.getInstance().getStarsInLevel(i);
				if (0 != o)
					for (var a = [.82, 1, .82], r = 0; 3 > r; r++) {
						var h = DNAssetsManager.g_instance.getCenteredImageWithProxy(o > r ? Images.STAR_MINI_EMPTY : Images.STAR_MINI);
						h.x = -33 + 30 * r, h.y = 26, h.scaleX = h.scaleY = a[r], this.getPicture().addChild(h)
					}
			} else this.visible = !1
		}
		return __extends(e, t), e.prototype.onTouch = function() {
			if (0 == GameData.getInstance().getLifeCount() && DNGameConfig.haveAd) return void DNStateManager.g_instance.pushState(new LoseLifeState);
			var t = new SelectBoosterState(this.levelNum);
			t.shader.visible = !1, DNStateManager.g_instance.pushState(t)
		}, e.prototype.onMouseDown = function(e, i) {
			this.locked || (t.prototype.onMouseDown.call(this, e, i), this.touchY = i)
		}, e.prototype.onMouseUp = function(e, i) {
			return Math.abs(i - this.touchY) > 30 ? void this.deselect() : void t.prototype.onMouseUp.call(this, e, i)
		}, e.prototype.hitTestSmart = function(t, e) {
			if (this.enabled) {
				if (!this.parent || !this.visible) return !1;
				var i = this.picture.localToGlobal(0, 0);
				i.x /= Constants.SCREEN_SCALE, i.y /= Constants.SCREEN_SCALE;
				var s = .5 * this.picture.getBounds().width * this.scaleX,
					n = .5 * this.picture.getBounds().height * this.scaleY;
				return i.x < t + s && i.x > t - s && i.y < e + n && i.y > e - n
			}
		}, e.prototype.shine = function() {
			this.shining = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.LEVEL_SHINING), this.addChildAt(this.shining, 0), this.shining.x = -5, this.shining.y = -2
		}, e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.shining && (this.shining.rotation += 50 * e, this.shining.scaleX = this.shining.scaleY = 1 + .06 * Math.sin(7 * this.liveTime))
		}, e
	}(DNJellyButton),
	SelectLevelState = function(t) {
		function e(e) {
			var i = this;
			void 0 === e && (e = -1), t.call(this), this.touchPointY = 0, this.layer = new createjs.Container, this.ySpeed = 0, this.yAcc = 1e3, this.calcSpeedCache = 0, this.slidePositions = new Array, this.mapH = 0, this.lastLevelY = 0, this.lives = 0, this.time = 0, this.levelsPositions = [128, 3512, 140, 3403, 181, 3305, 296, 3257, 425, 3287, 551, 3305, 632, 3207, 632, 3098, 616, 2993, 543, 2901, 425, 2861, 296, 2872, 175, 2861, 99, 2771, 75, 2631, 88, 2540, 141, 2460, 256, 2432, 377, 2432, 492, 2402, 576, 2331, 616, 2241, 624, 2149, 616, 2050, 543, 1970, 417, 1958, 301, 1953, 181, 1944, 99, 1864, 60, 1730, 75, 1639, 128, 1549, 230, 1509, 348, 1530, 470, 1534, 581, 1485, 640, 1387, 640, 1275, 632, 1172, 536, 1089, 400, 1078, 278, 1102, 152, 1067, 99, 964, 88, 827, 116, 724, 215, 652, 337, 632, 466, 632, 584, 612, 640, 532, 640, 425, 632, 321, 547, 241, 429, 268, 284, 335, 124, 321, 70, 189, 104, 40], this.levelsNum = GameData.getInstance().getTotalLevels(), this.addChild(this.layer);
			for (var s = 0, n = this.levelsNum; n > 0;) s++, n -= 59;
			for (var o = 0; 4 * s > o; o++) {
				var a = DNAssetsManager.g_instance.getImage("map_" + (4 - o % 4));
				this.layer.addChild(a), this.mapH += 900, a.y = 900 * o
			}
			this.layer.y = -5e3;
			var r = 3600 * (s - 1),
				h = 0; - 1 == e && (e = GameData.getInstance().levelsAvailable() - 1), this.loadLayout(CurLayouts.SELECT_LEVEL_LAYOUT, this);
			for (var f, o = 0; o < this.levelsNum; o++) f = new SelectLevelButton(Images.LEVEL_BUTTON, o), this.addGuiObject(f), this.layer.addChild(f), f.x = this.levelsPositions[2 * (o - h)], f.y = this.levelsPositions[2 * (o - h) + 1] + r, o % (this.levelsPositions.length / 2) == 0 && 0 != o && (h += 59, r -= 3600, f = new SelectLevelButton(Images.LEVEL_BUTTON, o), this.addGuiObject(f), this.layer.addChild(f), f.x = this.levelsPositions[2 * (o - h)], f.y = this.levelsPositions[2 * (o - h) + 1] + r), o == e && (f.shine(), this.layer.y = +Constants.ASSETS_HEIGHT / 2 - f.y);
			this.lastLevelY = f.y, this.checkConstrains(), this.findGUIObject(Layouts.NAME_STARS).setText(GameData.getInstance().totalStars().toString()), this.findGUIObject(Layouts.NAME_SCORE).setText(Utils.GetScoreString(GameData.getInstance().getTotalScore())), this.lifeLabel = this.findGUIObject(Layouts.NAME_LIFE), this.lifePic = this.findGUIObject("life_1"), this.lifeLabel.setText(GameData.getInstance().getLifeCount().toString()), this.lives = GameData.getInstance().getLifeCount(), this.timeLabel = this.findGUIObject("time_place"), this.timeLabel.maxW = 138, 5 == GameData.getInstance().getLifeCount() ? this.timeLabel.setText(DNStringManager.getInstance().getString(DNStringManager.FULL)) : (this.time = (Constants.TIME_TO_RESTORE_HEART - GameData.getInstance().timeLeftSinceLostLife()) / 1e3, this.timeLabel.setText(Utils.IntToTimeString(Math.round(this.time)))), this.findGUIObject(Layouts.NAME_BUTTON_BACK).setHandler(function() {
				return i.onExitTouch()
			}), this.findGUIObject("more_gold").visible = DNGameConfig.haveAd ? !0 : !1, this.findGUIObject("more_gold").setHandler(function() {
				return i.onMoreGold()
			}), this.findGUIObject(Layouts.NAME_GOLD).setText(GameData.getInstance().getGold().toString())
		}
		return __extends(e, t), e.prototype.onMoreGold = function() {
			DNStateManager.g_instance.pushState(new GetMoreCoinsState(!1))
		}, e.prototype.resume = function() {
			this.findGUIObject(Layouts.NAME_GOLD).setText(GameData.getInstance().getGold().toString())
		}, e.prototype.onExitTouch = function() {
			DNStateManager.g_instance.pushState(new CoolTransitionInState(new MainMenuState))
		}, e.prototype.onMouseDown = function(e, i) {
			t.prototype.onMouseDown.call(this, e, i), this.touchPointY = this.layer.y - i, this.slidePositions.length = 0, this.slidePositions.push({
				liveTime: this.liveTime,
				y: i
			})
		}, e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.lives < 5 && (this.time > 0 ? (this.time -= e, this.timeLabel.setText(Utils.IntToTimeString(Math.round(this.time)))) : (this.lives++, this.time = 300, this.timeLabel.setText(Utils.IntToTimeString(Math.round(this.time))), this.lifeLabel.setText(this.lives.toString())), 5 == this.lives && this.timeLabel.setText(DNStringManager.getInstance().getString(DNStringManager.FULL))), DNStateManager.g_instance.isMouseDownNow() || 0 != this.ySpeed && (this.layer.y += this.ySpeed * e, this.ySpeed > 0 ? (this.ySpeed -= e * this.yAcc, this.ySpeed < 0 && (this.ySpeed = 0)) : (this.ySpeed += e * this.yAcc, this.ySpeed > 0 && (this.ySpeed = 0))), this.checkConstrains()
		}, e.prototype.onMouseMove = function(e, i) {
			t.prototype.onMouseMove.call(this, e, i), this.layer.y = i + this.touchPointY, this.checkConstrains(), this.slidePositions.push({
				liveTime: this.liveTime,
				y: i
			}), this.slidePositions.length > 100 && (this.calcSpeedCache = this.calcYSpeed(), this.slidePositions.length = 0)
		}, e.prototype.checkConstrains = function() {
			var t = 130;
			this.layer.y > t && (this.layer.y = t, this.ySpeed = 0), Constants.g_isPC ? (this.layer.y < Constants.ASSETS_HEIGHT - this.mapH && (this.layer.y = Constants.ASSETS_HEIGHT - this.mapH, this.ySpeed = 0), this.layer.y > -this.lastLevelY + t + 100 && (this.layer.y = -this.lastLevelY + t + 100, this.ySpeed = 0)) : (this.layer.y < Constants.SCREEN_HEIGHT - this.mapH && (this.layer.y = Constants.SCREEN_HEIGHT - this.mapH, this.ySpeed = 0), this.layer.y > -1450 && (this.layer.y = -1450, this.ySpeed = 0))
		}, e.prototype.onMouseUp = function(e, i) {
			t.prototype.onMouseUp.call(this, e, i), this.slidePositions.push({
				liveTime: this.liveTime,
				y: i
			}), this.ySpeed = this.calcYSpeed()
		}, e.prototype.calcYSpeed = function() {
			if (this.slidePositions.length < 2) return this.calcSpeedCache;
			var t, e = .2;
			for (t = this.slidePositions.length - 2; t > 0 && !(this.liveTime - this.slidePositions[t].liveTime >= e); --t);
			var i = this.liveTime - this.slidePositions[t].liveTime;
			return 1e-5 > i ? 0 : (this.slidePositions[this.slidePositions.length - 1].y - this.slidePositions[t].y) / i
		}, e.prototype.alignByCenter = function() {}, e
	}(DNGameState),
	ShadeInState = function(t) {
		function e(e) {
			var i = this;
			t.call(this), this.nextState = null, this.nextState = e, this.shader = new createjs.Shape, this.shader.graphics.beginFill("#ffffff"), this.shader.graphics.drawRect(0, 0, Constants.ASSETS_WIDTH, Constants.SCREEN_HEIGHT), this.shader.graphics.endFill(), this.addChild(this.shader), this.shader.alpha = 0, createjs.Tween.get(this.shader, {
				loop: !1
			}).to({
				alpha: 1
			}, 400, createjs.Ease.linear).call(function() {
				return i.onFinishShade()
			})
		}
		return __extends(e, t), e.prototype.onFinishShade = function() {
			DNStateManager.g_instance.changeState(this.nextState), DNStateManager.g_instance.pushState(new ShadeOutState)
		}, e.prototype.setNextState = function(t) {
			this.nextState = t
		}, e
	}(DNGameState),
	ShadeOutState = function(t) {
		function e() {
			var e = this;
			t.call(this), this.shader = new createjs.Shape, this.shader.graphics.beginFill("#ffffff"), this.shader.graphics.drawRect(0, 0, Constants.ASSETS_WIDTH, Constants.SCREEN_HEIGHT), this.shader.graphics.endFill(), this.addChild(this.shader), createjs.Tween.get(this.shader, {
				loop: !1
			}).to({
				alpha: 0
			}, 400, createjs.Ease.linear).call(function() {
				return e.onFinishShade()
			})
		}
		return __extends(e, t), e.prototype.onFinishShade = function() {
			DNStateManager.g_instance.popState()
		}, e
	}(DNGameState),
	ShowAwesomeEffect = function(t) {
		function e() {
			t.call(this), this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.AWESOME)), this.alpha = 0, createjs.Tween.get(this, {
				loop: !1
			}).to({
				alpha: 1
			}, 300, createjs.Ease.linear), this.scaleX = this.scaleY = .5, createjs.Tween.get(this, {
				loop: !1
			}).to({
				scaleX: 1,
				scaleY: 1
			}, 500, createjs.Ease.backOut)
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.liveTime > .7 && (this.alpha -= 3 * e, this.scaleX += e, this.scaleY += e, this.alpha <= 0 && this.kill())
		}, e
	}(DNGameObject),
	Skewer = function(t) {
		function e(e) {
			t.call(this), this.proxy = new createjs.Container, this.addChild(this.proxy);
			var i = DNAssetsManager.g_instance.getImage(e);
			i.x = -i.getBounds().width / 2, i.y = -i.getBounds().height, this.proxy.addChild(i), this.proxy.y = .5 * i.getBounds().height
		}
		return __extends(e, t), e.prototype.forceUpdate = function(e) {
			t.prototype.forceUpdate.call(this, e), this.proxy.skewX = 6 * Math.sin(4 * this.forceLiveTime) / 4, this.proxy.scaleY = 1 + .05 * Math.sin(8 * this.forceLiveTime) / 4
		}, e
	}(DNGUIObject),
	SplashTimeEffect = function(t) {
		function e(e) {
			t.call(this), this.counter = e, this.liveTime = -2
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.liveTime > .3 && (PlayState.g_instance.convertRandomChipToBonus(), this.liveTime = 0, --this.counter <= 0 && (this.kill(), PlayState.g_instance.runAllBonuses()))
		}, e
	}(DNGameObject),
	SplashTimeMessage = function(t) {
		function e() {
			var e = this;
			t.call(this);
			var i = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.TASK_PANEL);
			this.addChild(i), this.addChild(i);
			var s = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.SPLASH_TIME), DN_TEXT_ALIGN_HOR.CENTER);
			s.y = -23, i.addChild(s), this.y = -200, this.x = .5 * Constants.ASSETS_WIDTH, this.alpha = 0, createjs.Tween.get(this).wait(200).to({
				y: .5 * Constants.ASSETS_HEIGHT,
				alpha: 1
			}, 650, createjs.Ease.backOut).wait(800).to({
				y: Constants.ASSETS_HEIGHT + 200,
				alpha: 0
			}, 550, createjs.Ease.backIn).call(function() {
				return e.kill()
			})
		}
		return __extends(e, t), e
	}(DNGameObject),
	SuperbEffect = function(t) {
		function e() {
			t.call(this), this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.SUPERB)), this.alpha = 0, createjs.Tween.get(this, {
				loop: !1
			}).to({
				alpha: 1
			}, 300, createjs.Ease.linear), this.scaleX = this.scaleY = .5, createjs.Tween.get(this, {
				loop: !1
			}).to({
				scaleX: 1,
				scaleY: 1
			}, 500, createjs.Ease.backOut)
		}
		return __extends(e, t), e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.liveTime > .7 && (this.alpha -= 3 * e, this.scaleX += e, this.scaleY += e, this.alpha <= 0 && this.kill())
		}, e
	}(DNGameObject),
	TaskEffect = function(t) {
		function e(e) {
			var i = this;
			t.call(this);
			var s = DNAssetsManager.g_instance.getCenteredImageWithProxy(Images.TASK_PANEL);
			this.addChild(s);
			var n, o;
			switch (e.goal) {
				case PlayState.GOAL_DIRT:
					n = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.TASK_CLEAR_DIRT), DN_TEXT_ALIGN_HOR.CENTER, 550), o = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.GOAL) + PlayState.g_instance.dirtCount, DN_TEXT_ALIGN_HOR.CENTER, 550);
					break;
				case PlayState.GOAL_STRAWBERRY:
					n = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.TASK_SAVE_STRAWBERRY), DN_TEXT_ALIGN_HOR.CENTER, 550), o = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.GOAL) + PlayState.g_instance.calcStrawberryCount(), DN_TEXT_ALIGN_HOR.CENTER, 550);
					break;
				case PlayState.GOAL_BALOON:
					n = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.TASK_SAVE_BALOON), DN_TEXT_ALIGN_HOR.CENTER, 550), o = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.GOAL) + PlayState.g_instance.calcBaloonCount(), DN_TEXT_ALIGN_HOR.CENTER, 550);
					break;
				case PlayState.GOAL_SCORE:
					n = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.TASK_SCORE), DN_TEXT_ALIGN_HOR.CENTER, 550), o = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.GOAL) + e.score_goal_count, DN_TEXT_ALIGN_HOR.CENTER, 550);
					break;
				case PlayState.GOAL_COUNT:
					n = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.TASK_REMOVE_CANDIES), DN_TEXT_ALIGN_HOR.CENTER, 550), o = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.GOAL) + e.chip_goal_count, DN_TEXT_ALIGN_HOR.CENTER, 550);
					break;
				case PlayState.GOAL_MARSH:
					n = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.TASK_MARSH), DN_TEXT_ALIGN_HOR.CENTER, 550), o = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.GOAL) + PlayState.g_instance.calcMarshCount(), DN_TEXT_ALIGN_HOR.CENTER, 550);
					break;
				case PlayState.GOAL_CHOCO:
					n = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.GOAL_CHOCO), DN_TEXT_ALIGN_HOR.CENTER, 550), o = new DNBitmapLabel(Fonts.font_pink, DNStringManager.getInstance().getString(DNStringManager.GOAL) + PlayState.g_instance.calcChocoCount(), DN_TEXT_ALIGN_HOR.CENTER, 550)
			}
			n.y = -23, s.addChild(n), o.y = 0, s.addChild(o), n.getBounds().width > 550 && (n.scaleX = n.scaleY = 550 / n.getBounds().width), this.y = -200, this.x = .5 * Constants.ASSETS_WIDTH, this.alpha = 0, createjs.Tween.get(this).wait(1300).to({
				y: .5 * Constants.ASSETS_HEIGHT,
				alpha: 1
			}, 650, createjs.Ease.backOut).wait(2200).to({
				y: Constants.ASSETS_HEIGHT + 200,
				alpha: 0
			}, 400, createjs.Ease.backIn).call(function() {
				return i.kill()
			})
		}
		return __extends(e, t), e
	}(DNGameObject),
	TimeIsUpEffect = function(t) {
		function e(e) {
			t.call(this), this.stage = 0, this.addChild(DNAssetsManager.g_instance.getCenteredImageWithProxy(e)), this.x = 350, this.y = 400, this.setScale(0), this.alpha = -1
		}
		return __extends(e, t), e.prototype.update = function(e) {
			switch (t.prototype.update.call(this, e), this.stage) {
				case 0:
					this.alpha += 4 * e, this.setScale(this.scaleX + 2 * e), this.scaleX > 1 && (this.setScale(1), this.alpha = 1, this.liveTime = 0, this.stage = 1, createjs.Tween.get(this, {
						loop: !1
					}).wait(1400).to({
						alpha: 0
					}, 500, createjs.Ease.linear));
					break;
				case 1:
					this.setScale(1 + .07 * Math.sin(5 * this.liveTime))
			}
		}, e.prototype.setScale = function(t) {
			this.scaleX = this.scaleY = t
		}, e
	}(DNGameObject),
	Utils = function() {
		function t() {}
		return t.RandomRange = function(t, e) {
			return t + (e - t) * Math.random()
		}, t.RandomRangeInt = function(t, e) {
			return Math.floor(Math.random() * (e - t + 1)) + t
		}, t.IntToTimeString = function(t) {
			var e, i = Math.floor(t / 60),
				s = i.toString(),
				n = t % 60;
			return e = 10 > n ? "0" + n : n.toString(), s + ":" + e
		}, t.RadToGrad = function(t) {
			return 180 * t / Math.PI
		}, t.GradToRad = function(t) {
			return t * Math.PI / 180
		}, t.IsMobileBrowser = function() {
			if (void 0 != window.orientation) return !0;
			var t = !1;
			return function(e) {
				(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(e) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0, 4))) && (t = !0)
			}(navigator.userAgent || navigator.vendor || window.opera), t
		}, t.ScaledOffset = function(t) {
			return (window.devicePixelRatio ? window.devicePixelRatio : 1) * t / Constants.SCREEN_SCALE
		}, t.GetScoreString = function(t) {
			var e = t.toString();
			switch (e.length) {
				case 1:
					e = "00000" + e;
					break;
				case 2:
					e = "0000" + e;
					break;
				case 3:
					e = "000" + e;
					break;
				case 4:
					e = "00" + e;
					break;
				case 5:
					e = "0" + e
			}
			return e
		}, t.shuffle = function(t) {
			for (var e, i, s = t.length; s; e = Math.floor(Math.random() * s), i = t[--s], t[s] = t[e], t[e] = i);
		}, t.DrawRect = function(t, e, i, s) {
			var n = new createjs.Shape;
			return n.graphics.beginFill(i), n.graphics.drawRect(0, 0, t, e), n.graphics.endFill(), s && s.addChild(n), n
		}, t
	}(),
	WinState = function(t) {
		function e(e, i, s) {
			hello2gameAPI('7^');
			var n = this;
			t.call(this), this.needAddGold = !1, GameData.getInstance().onWinLevel(e, i, s), this.removeAllChildren(), this.shader = new createjs.Shape, this.shader.graphics.beginFill("#000000"), this.shader.graphics.drawRect(0, 0, Constants.ASSETS_WIDTH, Constants.ASSETS_HEIGHT), this.shader.graphics.endFill(), this.addChild(this.shader), this.shader.alpha = 0, createjs.Tween.get(this.shader).wait(400).to({
				alpha: .4
			}, 800, createjs.Ease.linear), this.panel = DNAssetsManager.g_instance.getCenteredImageWithProxy("window_2"), this.addChild(this.panel), this.panel.x = .5 * Constants.ASSETS_WIDTH, this.panel.y = .5 * Constants.ASSETS_HEIGHT, this.panel.alpha = 0, createjs.Tween.get(this.panel).to({
				alpha: 1
			}, 200, createjs.Ease.linear), this.panel.scaleX = .7, this.panel.scaleY = .7, createjs.Tween.get(this.panel).to({
				scaleX: 1,
				scaleY: 1
			}, 400, createjs.Ease.backOut), this.addChild(this.panel);
			var o = new DNButton(Images.BUTTON_RESTART, function() {
				return n.onRestartTouch()
			});
			this.panel.addChild(o), this.addGuiObject(o), o.x = 160, o.y = 140, o.scaleX = o.scaleY = .85;
			var a = new DNButton(Images.BUTTON_EXIT, function() {
				return n.onExitTouch()
			});
			this.panel.addChild(a), this.addGuiObject(a), a.x = -160, a.y = 140, a.scaleX = a.scaleY = .85;
			var r = new DNJellyButton(Images.BUTTON_PLAY, function() {
				return 1 == DNSoundManager.g_instance.soundEnabled ? (DNSoundManager.g_instance.setSoundEnabled(!1), musicFlag = !0) : musicFlag = !1, /*SG_Hooks.levelUp(e + 1, i, function() {
					1 == musicFlag && DNSoundManager.g_instance.setSoundEnabled(!0)
				})*/1 == musicFlag && DNSoundManager.g_instance.setSoundEnabled(!0) ,n.onNextTouch();

			});
			this.panel.addChild(r), this.addGuiObject(r), r.x = 0, r.y = 130;
			var h = DNAssetsManager.g_instance.getImage(Images.GOLD_ICON);
			this.panel.addChild(h), h.x = -100, h.y = -20, this.goldLabel = new DNBitmapLabel(Fonts.font_blue, GameData.getInstance().getGold().toString()), this.panel.addChild(this.goldLabel), this.goldLabel.x = 0, this.goldLabel.y = -10;
			var f = DNAssetsManager.g_instance.getImage(Images.SCORE_ICON);
			this.panel.addChild(f), f.x = -100, f.y = -90;
			var _ = new DNBitmapLabel(Fonts.font_blue, i.toString());
			this.panel.addChild(_), _.x = 30, _.y = -80;
			var l = 15 * s,
				c = new DNTextField("p" + l, DNFontDef.FLYING_POINTS);
			this.panel.addChild(c), c.x = this.goldLabel.x + this.goldLabel.getBounds().width + 10, c.y = -12, c.alpha = 0, c.scaleX = c.scaleY = .5, createjs.Tween.get(c).wait(1200).to({
				scaleX: 1,
				scaleY: 1,
				alpha: 1
			}, 350, createjs.Ease.backOut).wait(800).call(function() {
				return n.runAddGold()
			}).to({
				alpha: 0
			}, 350, createjs.Ease.linear), this.oldGold = GameData.getInstance().getGold(), GameData.getInstance().addGold(l), this.newGold = GameData.getInstance().getGold();
			for (var u = [.8, 1.1, .8], d = 0; 3 > d; d++) {
				var p = DNAssetsManager.g_instance.getCenteredImageWithProxy(s > d ? Images.PERFECT_STAR_ON : Images.PERFECT_STAR_OFF);
				this.panel.addChild(p), p.x = -95 + 95 * d, p.y = -210;
				var g = 200 * d + 600;
				p.scaleX = p.scaleY = .1, createjs.Tween.get(p).wait(g).to({
					scaleX: u[d],
					scaleY: u[d]
				}, 350, createjs.Ease.backOut), p.alpha = 0, createjs.Tween.get(p).wait(g).to({
					alpha: 1
				}, 300, createjs.Ease.linear).call(function() {
					return DNSoundManager.g_instance.play(DNSoundManager.SOUND_MATCH_5)
				})
			}
		}
		return __extends(e, t), e.prototype.runAddGold = function() {
			this.needAddGold = !0
		}, e.prototype.update = function(e) {
			t.prototype.update.call(this, e), this.needAddGold && (this.oldGold += 16 * e, this.oldGold >= this.newGold && (this.oldGold = this.newGold), this.goldLabel.setText(Math.round(this.oldGold).toString()))
		}, e.prototype.onNextTouch = function() {
			DNStateManager.g_instance.pushState(PlayState.g_curLevel + 1 < GameData.getInstance().levelsAvailable() ? new SelectBoosterState(PlayState.g_curLevel + 1) : new CoolTransitionInState(new SelectLevelState))
		}, e
	}(PopupState);